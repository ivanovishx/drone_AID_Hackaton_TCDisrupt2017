var search_data = {
    "index": {
        "searchIndex": [
             "getflightcontroller",
             "returns an instance of the aircraft's flight controller.  @return djiflightcontroller component.",
             "getcameras",
             "retrieves instances of the product's cameras. this is used when the aircraft has multiple dji cameras, e.g. m210 and  m210 rtk. note, when two cameras do exist, camera order within the array will not always the same. for example: on the m210, the port side (left) camera will have property `getindex` to be 0 and the starboard side (right)  camera will have `getindex` to be 1. however, the first object of `getcameras` will not  necessarily always be the camera with `getindex` of 0.  @return a list of the aircraft's cameras.",
             "getgimbals",
             "retrieves instances of the product's gimbals. this is used when the aircraft has multiple dji gimbals, e.g. m210  and m210 rtk. note, when two gimbals do exist, gimbal order within the array will not always the same. for example:  on the m210, the port side (left) gimbal will have property `getindex` to be 0 and the starboard  side (right) gimbal will have `getindex` to be 1. however, the first object of `getgimbals`  will not necessarily always be the gimbal with `getindex` of 0.  @return a list of the aircraft's gimbals.",
             "getremotecontroller",
             "returns an instance of the aircraft's remote controller.  @return djiremotecontroller component.",
             "getmobileremotecontroller",
             "a simulated remote controller on the mobile device. it is supported by mavic pro and spark using wifi.  @return djimobileremotecontroller component.",
             "unknown_aircraft",
             "the aircraft's model name is unknown.",
             "inspire_1",
             "the aircraft's model name is inspire 1.",
             "inspire_1_pro",
             "the aircraft's model name is inspire 1 pro.",
             "inspire_1_raw",
             "the aircraft's model name is inspire 1 raw.",
             "inspire_2",
             "the aircraft's model name is inspire 2.",
             "phantom_3_professional",
             "the aircraft's model name is phantom 3 professional.",
             "phantom_3_advanced",
             "the aircraft's model name is phantom 3 advanced.",
             "phantom_3_standard",
             "the aircraft's model name is phantom 3 standard.",
             "phantom_3_4k",
             "the aircraft's model name is phantom 3 4k.",
             "phantom_4",
             "the aircraft's model name is phantom 4.",
             "phantom_4_pro",
             "the aircraft's model name is phantom 4 pro.",
             "matrice_100",
             "the aircraft's model name is matrice 100.",
             "matrice_200",
             "the aircraft's model name is matrice 200.",
             "phantom_4_advanced",
             "the aircraft's model name is phantom 4 advanced.",
             "matrice_600",
             "the aircraft's model name is matrice 600.",
             "matrice_600_pro",
             "the aircraft's model name is matrice 600 pro.",
             "a3",
             "the aircraft flight controller's model name is a3.",
             "mavic_pro",
             "the aircraft's model name is mavic pro.",
             "spark",
             "the aircraft's model name is spark.",
             "matrice_210",
             "the aircraft's model name is matrice 210.",
             "matrice_210_rtk",
             "the aircraft's model name is matrice 210 rtk.",
             "n3",
             "the aircraft flight controller's model name is n3.",
             "getappactivationstate",
             "current app activation state.  @return an enum value of `appactivationstate`.",
             "getaircraftbindingstate",
             "current aircraft binding state. users in china need to bind additional account details with  the aircraft one-time through dji go. these details need to be bound and the application  needs to be activated by logging into their dji go account to lift the flight restrictions.  @return an enum value of `aircraftbindingstate`.",
             "addaircraftbindingstatelistener",
             "add the aircraft binding state listener.  @param listener a listener of `aircraftbindingstatelistener`.",
             "addappactivationstatelistener",
             "add listener for the app activation state update.  @param listener a listener of `appactivationstatelistener`.",
             "removeaircraftbindingstatelistener",
             "remove the aircraft binding state listener.  @param listener a listener of `aircraftbindingstatelistener`.",
             "removeappactivationstatelistener",
             "remove activation state listener.  @param listener a listener of `appactivationstatelistener`.",
             "aircraftbindingstate",
             "the aircraft's binding state.",
             "initial",
             "the binding state of the aircraft is not yet determined. the aircraft will only be in this  state until dji go or a dji mobile sdk based application rights the binding information to  the aircraft. binding is only required if the user is in china. if the user is not in china,  then this state will become `not_required` after the  country code check is complete. if country code check has been disabled, the user will need  to use dji go to move to the `not_required` state. in  this state, the aircraft will have the 30m height and 50m radius limitation.",
             "unbound",
             "the aircraft is not currently bound, and needs to be (as it is in china). in this state, the  aircraft will have 30m max flight height and 50m max flight distance limitation. user should  finish the one-off binding process with dji go to remove the flight limitation.",
             "unbound_but_cannot_sync",
             "the aircraft is flying inside china and is unbound. the aircraft can be bound using dji go.  if dji go is connected to the aircraft, then the binding will be stored in the aircraft. if  dji go is not connected to the aircraft during the binding process, then the binding result  will be stored on a server. the sdk can query this server to see if the binding has already  happened, and if it has, download the binding to the aircraft. however, if the aircraft is  unbound, and the server is not reachable, then this state will be presented. the user should  connect the mobile device to the internet to refresh this state.",
             "bound",
             "the aircraft is bound.",
             "not_required",
             "the aircraft is not bound but it is not currently located in china. therefore, binding the aircraft is not required.",
             "not_supported",
             "the aircraft's firmware does not support the app activation system.",
             "unknown",
             "either the aircraft is disconnected or the connected product is not a dji aircraft.",
             "appactivationstate",
             "the app activation state.",
             "not_supported",
             "the aircraft's firmware does not support the app activation system.",
             "login_required",
             "the application needs to be activated by the user through their dji account. use `useraccountmanager` to enable the user to log in. log in is only required if the  aircraft is located in china.",
             "activated",
             "the application is activated and flight restrictions turned off.",
             "unknown",
             "either the aircraft is disconnected or the connected product is not a dji aircraft.",
             "aircraftbindingstatelistener",
             "an interface for obtaining `aircraftbindingstate`.",
             "appactivationstatelistener",
             "an interface for obtaining `appactivationstate`.",
             "onupdate",
             "called when the app activation state changes.  @param state the app activation state. use this state to check if login is required to  unrestrict the flight limitation.",
             "onupdate",
             "called when the app activation manager updates the aircraft binding state.  @param state the aircraft binding state. use this state to check if it is required to use  dji go to bind the aircraft.",
             "setcomponentlistener",
             "sets the listener for the dji component.  @param listener the callback of `componentlistener`.",
             "onconnectivitychange",
             "called when the connectivity status has changes for the component. this callback will be called when the component disconnects from the product. if the product itself gets disconnected,  this callback method will be called by all of the product component.  @param isconnected `true` if the component is connected.",
             "getindex",
             "returns the component index. index is zero based. a component will have an index greater than zero when there  are multiple components of the same type on the dji product, and one of the components already has the index 0.  for instance, m210 can have two gimbal mounted cameras, and will therefore have two gimbal components with indeces  0 and 1, and two camera components with indeces 0 and 1. for matrice 600, there are printed numbers on the battery  boxes. the `battery` component instance with index 0 corresponds to battery compartment number 1. for inspire 2  and m200 series, `battery` with index 0 corresponds to the battery on the port (left hand) side of the aircraft.  for m210 and m210 rtk, `camera` and `gimbal` with index 0 corresponds to the camera and gimbal on the port  (left hand) side of the aircraft.  @return an int value of index.",
             "isconnected",
             "`true` if the component is connected.  @return `true` if the component is connected.",
             "getserialnumber",
             "gets the serial number of the component. depending on the component, this serial number might not match the serial number found  on the physical component.  @param callback the execution callback with the value returned.",
             "getfirmwareversion",
             "returns the firmware version of the component. each component will  have a different firmware version, the combination of which will  form the package firmware version `getfirmwarepackageversion` found in `baseproduct`.  @param callback the execution callback with the value(s) returned.",
             "componentlistener",
             "receives notifications of component connectivity changes.",
             "setbaseproductlistener",
             "sets the listener for the dji base product.  @param listener the callback of `baseproductlistener`.",
             "setdiagnosticsinformationcallback",
             "sets up the diagnostics list update callback.  @param callback the callback of `diagnosticsinformationcallback`.",
             "getfirmwarepackageversion",
             "gets the product's firmware package version. products other than  phantom 4, phantom 4 pro, mavic pro, and inspire 2, require internet connection. the execution time for this method  depends on the speed of internet connectivity.  @return the product's firmware package version string.",
             "setname",
             "retrieves the model of the product.  @param name name to be set to the aircraft. @param callback asynchronous execution result.",
             "getname",
             "retrieves the model of the product.  @param callback the execution callback with the returned value.",
             "getmodel",
             "retrieves the model of the product. see `aircraft` and  `handheld` for the possible strings that can be returned.  @return the model of the product.",
             "isconnected",
             "`true` if the device is connected.  @return `true` if the device is connected.",
             "getcamera",
             "retrieves an instance of the device's camera.  @return an instance of the aircraft's camera.",
             "getbattery",
             "retrieves an instance of the product's smart battery. when using products with multiple batteries, such as the m600 or inspire 2, use `getbatteries`, as this method will only return a single battery.  @return an instance of the aircraft's smart battery.",
             "getbatteries",
             "returns an array of aircraft's batteries. it is used when the aircraft has multiple  batteries, e.g. matrice 600.  @return a list of `battery` objects.",
             "getgimbal",
             "retrieves an instance of the device's gimbal.  @return an instance of the aircraft's gimbal.",
             "getairlink",
             "retrieves an instance of the device's airlink.  @return an instance of the aircraft's airlink.",
             "componentkey",
             "specifies all the components.",
             "camera",
             "camera component.",
             "gimbal",
             "gimbal component.",
             "remote_controller",
             "remote controller component.",
             "flight_controller",
             "flight controller component.",
             "battery",
             "battery component.",
             "hand_held_controller",
             "handheld controller component.",
             "air_link",
             "airlink component.",
             "mobile_remote_controller",
             "mobile remote controller component.",
             "baseproductlistener",
             "receives notifications of component and product connectivity changes.",
             "model",
             "class containing all product strings.",
             "videofeeder",
             "class that manages live video feed from dji products to the mobile device.",
             "onconnectivitychange",
             "called when the connectivity between mobile device and product  changes.  @param isconnected `true` if the product is connected to the mobile device.",
             "oncomponentchange",
             "called when a component object changes.  @param key an enum value of the `componentkey`. @param oldcomponent an instance of `basecomponent`. @param newcomponent an instance of `basecomponent`.",
             "setbluetoothdeviceslistcallback",
             "set djibluetoothproductconnector listener.  @param callback the callback of `bluetoothdeviceslistcallback`.",
             "searchbluetoothproducts",
             "used to start searching for dji products that are near the mobile device and can be controlled with the mobile  sdk using bluetooth. use `onupdate` to receive the product list.  @param callback completion block returns the command execution result. it is called once the searching is started.",
             "connect",
             "connects to the dji product using bluetooth. once it is connected, `djisdkmanager` can be used to access the product.  @param product the bluetooth product to connect to. @param callback the completion block returns the command execution result.",
             "disconnect",
             "disconnects connected bluetooth product.  @param callback the completion block returns the command execution result.",
             "bluetoothdeviceslistcallback",
             "delegate that receives the product list found by the connector.",
             "bluetoothdevice",
             "this class contains information for a dji bluetooth device.",
             "getname",
             "returns the name of the bluetooth device.  @return a string representing the name.",
             "getstatus",
             "returns connection status for the bluetooth device.  @return the enum value of `bluetoothdevicestatus`.",
             "getrssi",
             "returns the signal quality.  @return an integer representing the signal quality.",
             "bluetoothdevicestatus",
             "dji bluetooth device status enum.",
             "connected",
             "bluetooth device connected.",
             "disconnected",
             "bluetooth device disconnected.",
             "connecting",
             "bluetooth device connecting.",
             "onupdate",
             "provides the list of dji products that can be connected with the mobile device over bluetooth. delegate will  continue to receive an updated list after `searchbluetoothproducts` is called  until the searching is finished (either product is connected or after 10s).  @param devices a list of dji products found by the connector.",
             "destroycodec",
             "destroys the media codec.",
             "djicodecmanager",
             "constructor for the class.  @param context the context. @param surfacetexture the surface texture view. @param width the width of surface texture view. @param height the height of surface texture view.",
             "cleansurface",
             "cleans the surface from the codec manager.",
             "senddatatodecoder",
             "sends h264 raw video data to the decoder.  @param videobuffer the video buffer data. @param size the data size.",
             "senddatatodecoder",
             "sends h264 raw video data to the decoder with source id.  @param videobuffer the video buffer data. @param size the data size. @param source source id.",
             "getvideowidth",
             "get the video width.  @return video width integer value.",
             "getvideoheight",
             "get the video height.  @return video height integer value.",
             "onupdate",
             "callback interface that updates the product's current diagnostics information.  @param diagnosticslist the list of `djidiagnostics` instance.",
             "getcode",
             "get diagnostics error code.  @return diagnostics error code.  see also: `djidiagnosticserror`",
             "getreason",
             "the reason of the error.  @return reason of the error.",
             "getsolution",
             "the suggested solution for the error.  @return the suggest solution for the error.",
             "camera_upgrade_error",
             "aircraft upgrade error.",
             "camera_sensor_error",
             "camera sensor error.",
             "camera_over_heat",
             "camera has overheated.",
             "camera_encryption_error",
             "camera encryption error.",
             "camera_no_sd_card",
             "no sd card.",
             "camera_sd_card_error",
             "sd card error.",
             "camera_sd_card_no_space",
             "remaining sd card capacity is not enough.",
             "camera_sd_card_full",
             "sd card is full.",
             "camera_sd_card_read_only",
             "sd card is readonly.",
             "camera_sd_card_not_formatted",
             "sd card not formatted.",
             "gimbal_gyroscope_error",
             "gimbal gyroscope error.",
             "gimbal_pitch_error",
             "gimbal pitch error.",
             "gimbal_roll_error",
             "gimbal roll error.",
             "gimbal_yaw_error",
             "gimbal yaw error.",
             "gimbal_connect_to_fc_error",
             "gimbal cannot receive flight controller data.",
             "battery_discharge_over_current",
             "battery current too high during discharge.",
             "battery_discharge_over_heat",
             "battery too hot during discharge.",
             "battery_low_temperature",
             "low temperature environment: battery not suitable for flight.",
             "battery_cell_broken",
             "battery cell is broken.",
             "battery_need_study",
             "battery needs a complete charge and discharge cycle.",
             "battery_illegal",
             "battery is not a dji battery.",
             "single_battery_mode",
             "battery is in single battery mode.",
             "fake_battery_mode",
             "battery is in fake battery mode.",
             "remote_controller_fpga_error",
             "rc fpga error.",
             "remote_controller_transmitter_error",
             "rc transmitter error.",
             "remote_controller_battery_error",
             "rc battery error.",
             "remote_controller_gps_error",
             "rc gps error.",
             "remote_controller_encryption_error",
             "rc encryption error.",
             "remote_controller_need_calibration",
             "rc is not calibrated.",
             "remote_controller_battery_low",
             "rc battery low.",
             "remote_controller_idle_too_long",
             "rc idle for too long.",
             "remote_controller_reset",
             "rc is reset, please check rc settings",
             "remote_controller_over_heat",
             "rc overheated.",
             "central_board_connect_to_battery_error",
             "battery connection to the center board has failed.",
             "central_board_connect_to_gps_error",
             "gps connection to the center board has failed.",
             "central_board_connect_to_fc_error",
             "flight controller connection to the center board has failed.",
             "video_decoder_encryption_error",
             "video decoder encryption error.",
             "video_decoder_connect_to_deserializer_error",
             "deserializer disconnected.",
             "air_encoder_error",
             "aircraft encoder error.",
             "air_encoder_upgrade",
             "aircraft updating.",
             "flight_controller_imu_need_calibration",
             "imu calibration required.",
             "flight_controller_imu_calibration_incomplete",
             "imu calibration incomplete.",
             "flight_controller_imu_data_error",
             "imu data error.",
             "flight_controller_imu_error",
             "general imu error.",
             "flight_controller_imu_init_failed",
             "imu initialization failed.",
             "flight_controller_barometer_init_failed",
             "barometer initialization failed.",
             "flight_controller_barometer_error",
             "barometer error.",
             "flight_controller_accelerometer_init_failed",
             "accelerometer failed.",
             "flight_controller_gyroscope_error",
             "gyroscope error.",
             "flight_controller_attitude_error",
             "aircraft attitude angle is too large.",
             "flight_controller_data_record_error",
             "data recorder errors.",
             "flight_controller_takeoff_failed",
             "take-off failure.",
             "flight_controller_system_error",
             "unknown flight controller error.",
             "flight_controller_imu_heating",
             "imu is heating.",
             "flight_controller_compass_need_restart",
             "compass needs restart.",
             "flight_controller_compass_abnormal",
             "compass abnormal.",
             "flight_controller_using_wrong_propellers",
             "using the wrong propellers. inspire 2 has propellers for high  altitudes and low altitudes. this error will be present when the  wrong propellers are being used at the wrong altitude.",
             "vision_propeller_guard",
             "propeller guard mounted.",
             "vision_sensor_error",
             "vision sensor error.",
             "vision_sensor_calibration_error",
             "vision sensor calibration error.",
             "vision_sensor_communication_error",
             "vision sensor communication error.",
             "vision_system_error",
             "vision system error.",
             "djidiagnosticserror",
             "djidiagnosticserror.",
             "diagnosticsinformationcallback",
             "callback interface that updates the product's current diagnostics information.",
             "getdescription",
             "returns the description of the error code.  @return the description of the error code.",
             "setdescription",
             "sets the description for the error code.  @param desc description string.",
             "getdjierror",
             "returns the specific error in djigeoerror according to the error code.  @param ccode error code.  @return the djierror object.",
             "could_not_connect_to_internet_for_pulling_data",
             "could not connect to the internet while sdk try to pull the latest cached data from server.",
             "could_not_find_unlocked_record_in_the_server",
             "could not find unlocked record in the server.",
             "no_data_in_database",
             "no data in database.",
             "account_not_logged_in_or_not_authorized",
             "no logged in account or account did not get authorization.",
             "flight_controller_serial_number_is_not_ready",
             "the flight controller sn is not ready.",
             "could_not_enable_or_disable_geo_system_while_aircraft_is_in_the_sky",
             "could not enable or disable the geo system while the aircraft is flying.",
             "not_logged_in",
             "no user account recorded.",
             "invalid_simulated_location",
             "the simulated aircraft location is not valid. during the simulation, a location is valid if it is within  50km of (37.460484, -122.115312).",
             "max_flight_speed_not_valid",
             "max flight speed value provided is invalid",
             "auto_flight_speed_not_valid",
             "auto flight speed value provided is invalid",
             "repeat_time_not_valid",
             "repeat time value provided is invalid",
             "waypoint_count_not_valid",
             "waypoint count is invalid",
             "waypoint_list_size_not_valid",
             "waypoint list size is invalid",
             "waypoint_coordinate_not_valid",
             "waypoint coordinate provided is invalid",
             "altitude_not_valid",
             "waypoint altitude provided is invalid",
             "heading_not_valid",
             "waypoint heading provided is invalid",
             "action_repeat_time_not_valid",
             "waypoint repeat time provided is invalid",
             "action_timeout_not_valid",
             "waypoint action timeout provided is invalid",
             "corner_radius_not_valid",
             "waypoint corner radius provided is invalid",
             "gimbal_pitch_not_valid",
             "waypoint gimbal pitch provided is invalid",
             "waypoint_speed_not_valid",
             "waypoint speed provided is invalid",
             "shoot_photo_not_valid",
             "waypoint shoot photo distance provided is invalid",
             "stay_action_not_valid",
             "waypoint stay action param provided is invalid",
             "rotate_gimbal_action_not_valid",
             "waypoint rotate gimbal action param provided is invalid",
             "rotate_aircraft_action_not_valid",
             "waypoint rotate aircraft action param provided is invalid",
             "getdjierror",
             "returns the specific error in djimissionmanagererror according to the error code.  @param ccode error code.  @return the djierror object.",
             "common_unsupported",
             "unsupported feature error. where possible:  this error will be returned by the function for a special  feature interface when the feature is not supported by the device.",
             "common_disconnected",
             "disconnected.",
             "began",
             "mission began (phantom 2 series).",
             "canceled",
             "mission canceled.",
             "failed",
             "mission failed.",
             "no_mission_running",
             "mission not existed.",
             "timeout",
             "mission timeout.",
             "gps_not_ready",
             "the gps of the aircraft is not ready.  maybe the aircraft haven't got the home point location.",
             "motors_did_not_start",
             "the aircraft's motor has not started.",
             "take_off",
             "the aircraft is taking off.",
             "is_flying",
             "the aircraft is flying.",
             "not_auto_mode",
             "the aircraft is not in auto mode.",
             "max_number_of_waypoints_upload_limit_reached",
             "waypoint mission has reached the maximum points limit.  1. phantom 2 vision/vision+: the max points limit  is 16.  2. inspire1/ phantom 3 series: the max points limit is 99.",
             "uploading_waypoint",
             "waypoint is uploading.",
             "key_level_low",
             "the api key provided to you is not at the correct permission level.  check whether your key is a level 2  application key in your androidmanifest.xml.",
             "navigation_mode_disabled",
             "navigation is not open.",
             "ioc_type_unknown",
             "the type of ioc is unknown.",
             "home_point_value_invalid",
             "the homepoint is not a valid float value.",
             "home_point_location_invalid",
             "the latitude and longitude of the homepoint are invalid.",
             "home_point_direction_unknown",
             "the direction of the homepoint is unknown.",
             "home_point_mission_paused",
             "homepoint is paused.",
             "home_point_mission_not_paused",
             "the homepoint is not paused.",
             "follow_me_distance_too_large",
             "the distance between the aircraft and mobile phone is too large (must be lower than 20000m). this error will  be returned when initializing the follow me task.",
             "follow_me_disconnect_time_too_long",
             "the disconnect time of the follow me mission is too long.",
             "follow_me_gimbal_pitch_error",
             "the initial pitch angle of the gimbal is too large.",
             "altitude_too_high",
             "the altitude is too high.",
             "altitude_too_low",
             "the altitude is too low.",
             "mission_radius_invalid",
             "the radius of mission is invalid.",
             "mission_speed_too_high",
             "the speed of the mission is too high.",
             "mission_entry_point_invalid",
             "the entry point of the mission is invalid.",
             "mission_heading_mode_invalid",
             "the heading mode of the mission is invalid.",
             "mission_radius_over_limit",
             "the radius of the mission is over the acceptable limit.",
             "navigation_mode_not_supported",
             "navigation in the product is unsupported.",
             "distance_from_mission_target_too_long",
             "the distance from the mission target is too long.  for example, the distance from hotpoint target position  is too long,  or the distance from the first waypoint target position is too long",
             "rc_mode_error",
             "remote controller mode error.  you should put the remote controller's mode selection bar to f position.",
             "ioc_working",
             "the ioc mode is working.",
             "mission_not_initialized",
             "the mission is not initialized.",
             "mission_not_exist",
             "the mission does not exist.",
             "mission_conflict",
             "there is a conflicting setting in the mission.",
             "mission_estimate_time_too_long",
             "the estimated time for the mission is too long.",
             "high_priority_mission_executing",
             "a higher priority mission is executing.",
             "mission_condition_not_satisfied",
             "the condition of the mission is not satisfied.",
             "mission_across_no_fly_zone",
             "the mission is across a no fly zone.",
             "mission_info_invalid",
             "the information for the mission is invalid.",
             "waypoint_info_invalid",
             "the information for the waypoint is invalid.",
             "waypoint_trace_too_long",
             "the waypoint trace is too long. the maximum waypoint trace is 30km. the waypoint trace is the sum of all distances between waypoints in a mission.",
             "waypoint_total_trace_too_long",
             "the total waypoint mission distance is too long. the maximum total distance is 40km.  the total distance includes the sum of:   - distance from current aircraft location to first waypoint   - sum of all distances between waypoints   - distance from last waypoint to the homepoint.",
             "waypoint_index_over_range",
             "the index of the waypoint is out of range.",
             "waypoint_distance_too_close",
             "the waypoint distance is too close.",
             "waypoint_distance_too_long",
             "the waypoint distance is too long. a valid distance between two adjacent waypoints  is less than 2km and greater than 0.5m. in addition, the first and last waypoint of  the mission must also have a separation of less than 2km and greater than 0.5m. if  the separation of any consecutive waypoints or the separation of the first and  last waypoint is larger than 2km, then this error will be raised.",
             "waypoint_damping_check_failed",
             "the damping check failed.",
             "waypoint_action_parameter_invalid",
             "the parameter of the waypoint action is invalid.",
             "waypoints_uploading",
             "the waypoints are still uploading.",
             "waypoint_mission_info_not_uploaded",
             "the information for the waypoint mission is not completely uploaded.",
             "waypoint_upload_not_complete",
             "the waypoint uploading is not complete.",
             "waypoint_request_is_running",
             "the waypoint mission is running.",
             "waypoint_not_running",
             "the waypoint mission is not running.",
             "waypoint_idle_velocity_invalid",
             "the idle velocity is invalid.",
             "aircraft_starting_motor",
             "the aircraft is starting the motor.",
             "wrong_cmd",
             "the command is wrong.",
             "pointing_aircraft_not_in_the_air",
             "the aircraft is not in the air. please take off first.",
             "vision_sensor_low_quality",
             "the quality of vision sensor is low.",
             "unknown",
             "unknown result.",
             "mode_error",
             "cannot execute in the current mode. for products and flight controller firmware versions that support 'f'  mode (e.g. phantom 3 professional, inspire 1, a3 with flight controller firmware version lower than  3.2.10.0, etc), please make sure the remote controller's mode switch is in 'f' mode. for the others,  please make sure the remote controller's mode switch is in 'p' mode.",
             "gps_signal_weak",
             "the gps signal of the aircraft is weak.",
             "low_battery",
             "low battery level warning.",
             "aircraft_not_in_the_air",
             "the aircraft is not in the air.",
             "aircraft_altitude_too_high",
             "the aircraft's altitude is too high.",
             "aircraft_altitude_too_low",
             "the aircraft's altitude is too low.",
             "aircraft_taking_off",
             "aircraft is taking off.",
             "aircraft_landing",
             "aircraft is landing.",
             "aircraft_going_home",
             "aircraft is going home.",
             "home_point_not_recorded",
             "the home point of the aircraft is not recorded.",
             "in_novice_mode",
             "aircraft is in novice mode.",
             "aircraft_in_no_fly_zone",
             "aircraft is in a no fly zone.",
             "reach_flight_limitation",
             "the aircraft has reached the flight limitation.",
             "running_mission",
             "the aircraft is running a mission.",
             "too_close_to_home_point",
             "aircraft is too close to the home point.",
             "mission_parameters_invalid",
             "the parameters of the mission are invalid.",
             "mission_resume_failed",
             "mission resume failed.",
             "tracking_target_lost",
             "the tracking target is lost.",
             "no_video_feed",
             "no live video feed is captured for the activetrack mission.",
             "video_frame_rate_too_low",
             "the frame rate of the live video feed is too low.",
             "vision_system_not_authorized",
             "the vision system cannot get the authorization to control the aircraft.",
             "vision_system_error",
             "the vision system encounters system error.",
             "cannot_bypass_obstacle",
             "the aircraft cannot bypass the obstacle.",
             "stopped_by_user",
             "mission was stopped by the user.",
             "vision_system_needs_calibration",
             "the vision system requires calibration.",
             "vision_sensor_overexposed",
             "the vision sensors are overexposed.",
             "vision_sensor_underexposed",
             "the vision sensors are underexposed.",
             "vision_data_abnormal",
             "the data from the vision system is abnormal.",
             "feature_point_cannot_match",
             "the feature points found by both vision sensors cannot match.",
             "tracking_rect_too_small",
             "the tracking rectangle is too small.",
             "tracking_rect_too_large",
             "the tracking rectangle is too large.",
             "tracking_target_not_enough_features",
             "the tracking target doesn't have enough features to lock onto.",
             "tracking_target_too_close",
             "the tracking target is too close to the aircraft.",
             "tracking_target_too_far",
             "the tracking target is too far away from the aircraft.",
             "tracking_target_too_high",
             "the tracking target is too high.",
             "tracking_target_shaking",
             "the tracking target is shaking too much.",
             "tracking_target_low_confidence",
             "the activetrack mission is too unsure the tracking object and confirmation is required.",
             "tracking_paused_by_user",
             "mission is paused by user.",
             "tracking_gimbal_pitch_too_low",
             "gimbal pitch is too low.",
             "tracking_obstacle_detected",
             "encounter an obstacle.",
             "reach_altitude_lower_bound",
             "the aircraft reaches the altitude lower bound of the tapfly mission.",
             "getdjierror",
             "returns the specific error in djiflightcontrollererror according to the error code.  @param ccode error code.  @return the djierror object.",
             "fail_to_enter_transport_mode_when_motors_on",
             "when the motors are on, the aircraft could not get into transport mode.",
             "imu_calibration_error_in_the_air_or_motors_on",
             "imu calibration is not allowed if the aircraft's motors are on or the aircraft is in the air.",
             "invalid_parameter",
             "the parameter is not a valid value.",
             "object_empty_or_not_available",
             "value request is not ready for empty or null.",
             "unsupported",
             "product does not support this command.",
             "mission_result_began",
             "mission began.",
             "mission_result_canceled",
             "mission canceled.",
             "mission_result_failed",
             "mission failed.",
             "mission_result_timeout",
             "mission timeout.",
             "mission_result_mode_error",
             "aircraft's control mode is in error.  it may be that the control mode is set to manual or attitude (manual or atti).",
             "mission_result_gps_not_ready",
             "the aircraft gps is not ready.  it may be that the aircraft does not have the home point location.",
             "mission_result_motor_not_start",
             "the aircraft motor is not started.",
             "mission_result_takeoff",
             "the aircraft is taking off.",
             "mission_result_is_flying",
             "the aircraft is flying.",
             "mission_result_not_auto_mode",
             "the aircraft is not in auto mode.",
             "mission_result_upload_waypoint_num_max_limit",
             "the number of uploaded waypoints has reached the maximum limit.  for the inspire 1 and phantom 3 series the maximum number is 99.",
             "mission_result_waypoint_uploading",
             "the waypoint is uploading.",
             "mission_result_key_level_low",
             "the key level is low.  check that your key is a level 2 application key in your androidmanifest.xml.",
             "mission_result_navigation_is_not_open",
             "navigation is not open.",
             "mission_result_too_close_to_homepoint",
             "too close to the home point.",
             "mission_result_ioc_type_unknown",
             "the type of ioc is unknown.",
             "mission_result_homepoint_value_invalid",
             "the homepoint is not a valid float value.",
             "mission_result_homepoint_location_invalid",
             "the latitude and longitude of the home point are invalid.",
             "mission_result_homepoint_direction_unknown",
             "the direction of the home point is unknown.",
             "mission_result_homepoint_paused",
             "the homepoint is paused.",
             "mission_result_homepoint_not_paused",
             "the homepoint is not paused.",
             "mission_result_followme_distance_too_large",
             "the distance between the aircraft and mobile phone is too large (must be lower than 20000m). this error is returned when initializing the follow me task.",
             "mission_result_followme_disconnect_time_too_long",
             "the disconnect time of the follow me mission is too long.",
             "mission_result_followme_gimbal_pitch_error",
             "the initial pitch angle of the gimbal is too large.",
             "mission_result_altitude_too_high",
             "the altitude is too high.",
             "mission_result_altitude_too_low",
             "the altitude is too low.",
             "mission_result_mission_radius_invalid",
             "the radius of the mission is invalid.",
             "mission_result_mission_speed_too_large",
             "the speed of the mission is too large.",
             "mission_result_mission_entrypoint_invalid",
             "the entry point of mission is invalid.",
             "mission_result_mission_heading_mode_invalid",
             "the heading mode of the mission is invalid.",
             "mission_result_mission_resume_failed",
             "the mission resume failed.",
             "mission_result_mission_radius_overlimited",
             "the radius of the mission is over the acceptable limit.",
             "mission_result_unsupported_navigation_for_the_product",
             "the navigation in the product is unsupported.",
             "mission_result_distance_from_mission_target_too_long",
             "the navigation in the product is unsupported. for example, the distance from hotpoint target position is too long,  or the distance from the first waypoint target position is too long.",
             "mission_result_rc_mode_error",
             "remote controller mode error.  you should put the remote controller's mode selection bar to f position.",
             "mission_result_mc_mode_error",
             "the mode of the main controller is error.",
             "mission_result_ioc_working",
             "the ioc mode is working.",
             "mission_result_mission_not_init",
             "the mission is not initialized.",
             "mission_result_mission_not_exist",
             "the mission does not exist.",
             "mission_result_mission_conflict",
             "there is a conflicting setting in the mission.",
             "mission_result_mission_estimate_time_too_long",
             "the mission estimate time is too long.",
             "mission_result_in_novice_mode",
             "the aircraft is in novice mode.",
             "mission_result_high_priority_mission_executing",
             "the higher priority mission is executing.",
             "mission_result_gps_signal_weak",
             "the gps signal of the aircraft is weak.",
             "mission_result_low_battery",
             "low battery level warning.",
             "mission_result_aircraft_not_in_the_air",
             "the aircraft is not in the air.",
             "mission_result_mission_param_invalid",
             "the parameters of the mission are invalid.",
             "mission_result_mission_condition_not_satisfied",
             "the condition of the mission is not satisfied.",
             "mission_result_mission_across_noflyzone",
             "the mission is across a no fly zone.",
             "mission_result_homepoint_not_recorded",
             "the home point of aircraft is not recorded.",
             "mission_result_aircraft_in_noflyzone",
             "the aircraft is in a no fly zone.",
             "mission_result_mission_info_invalid",
             "the information of the mission is invalid.",
             "mission_result_waypoint_info_invalid",
             "the information of the waypoint is invalid.",
             "mission_result_waypoint_trace_too_long",
             "the trace of the waypoint is too long. the maximum waypoint trace is 30km.",
             "mission_result_waypoint_total_trace_too_long",
             "the total trace of the waypoint is too long. the maximum total trace is 40km.",
             "mission_result_waypoint_index_overrange",
             "the index of the waypoint is over range.",
             "mission_result_waypoint_distance_too_close",
             "the waypoint distance is too close.",
             "mission_result_waypoint_distance_too_long",
             "the waypoint distance is too long. the maximum distance between two adjacent waypoints is 2km.",
             "mission_result_waypoint_damping_check_failed",
             "the damping check failed.",
             "mission_result_waypoint_action_param_invalid",
             "the parameter of the waypoint action is invalid.",
             "mission_result_waypoints_uploading",
             "the waypoints is still uploading.",
             "mission_result_waypoint_mission_info_not_uploaded",
             "the information of the waypoint mission is not completely uploaded.",
             "mission_result_waypoint_upload_not_complete",
             "the waypoint uploading is not complete.",
             "mission_result_waypoint_request_is_running",
             "the waypoint request is running.",
             "mission_result_waypoint_not_running",
             "the waypoint mission is not running.",
             "mission_result_waypoint_idle_velocity_invalid",
             "the idle velocity is invalid.",
             "mission_result_aircraft_takingoff",
             "the aircraft is taking off.",
             "mission_result_aircraft_landing",
             "the aircraft is landing.",
             "mission_result_aircraft_goinghome",
             "the aircraft is going home.",
             "mission_result_aircraft_starting_motor",
             "the aircraft is starting the motor.",
             "mission_result_wrong_cmd",
             "the command is wrong.",
             "already_in_the_air",
             "if the motors are already turned on or the aircraft is already flying, the takeoff did not execute.",
             "mission_result_unknown",
             "unknown result.",
             "gps_signal_weak",
             "gps level is not high enough to allow flight controller to obtain accurate location.",
             "could_not_enter_transport_mode",
             "aircraft could not enter transport mode, since the gimbal is still connected.",
             "cannot_turn_off_motors_while_aircraft_flying",
             "the aircraft is flying. for safety consideration, the motors could not be shut down.",
             "home_point_too_far",
             "the new home point is too far.",
             "go_home_altitude_too_low",
             "the new home altitude is too low. (lower than 20m).",
             "go_home_altitude_too_high",
             "the new home altitude is too high. (higher than 500m).",
             "go_home_altitude_higher_than_max_flight_height",
             "the go home altitude is too high (higher than max flight height).",
             "rtk_cannot_start",
             "rtk cannot start properly. please reboot.",
             "rtk_connection_broken",
             "connection between base station and mobile station is broken.",
             "rtk_bs_antenna_error",
             "rtk base station antenna error. check if the antenna is connected to the correct port.",
             "rtk_bs_coordinate_reset",
             "rtk base station's coordinate resets.",
             "feature_not_supported",
             "feature not supported error.",
             "application_not_activated",
             "application not activated error.",
             "system_busy",
             "system busy error.",
             "invalid_parameters",
             "parameters invalid error.",
             "parameter_get_failed",
             "get parameter failed error.",
             "parameter_set_failed",
             "setting parameters operation failed.",
             "command_execution_failed",
             "command execute failed error.",
             "send_data_failed",
             "send data failed error.",
             "connection_to_sdk_failed",
             "connection to sdk failed error.",
             "device_not_found",
             "device not found.",
             "not_defined",
             "not defined error.",
             "could_not_connect_to_internet",
             "the application is not able to connect to the internet the first time it tries to register the api key.",
             "invalid_app_key",
             "the application key you provided is incorrect.",
             "http_timeout",
             "the network you are trying to reach is busy, or the server is unreachable.",
             "device_not_match",
             "the attempt to copy metadata from another registered device to a device that is currently connected is not  permitted. for example, if a developer has two devices and the application is activated with the app key on  one of the devices and if the other device is plugged in and tries to register the application, this error  will occur.",
             "bundle_not_match",
             "the bundle identifier of your application does not match the bundle identifier you registered on the  developer website when you applied to obtain an application key.",
             "app_key_prohibited",
             "the application key is prohibited. this occurs when an application key that has already been released by dji  is revoked. please contact dji for assistance.",
             "max_activation_count_reached",
             "there is a maximum number of devices one application key can be used to activate. the maximum number of  devices is given when an application is registered on the dji developer website. this error will occur  if the maximum number of activations has been reached.",
             "app_key_invalid_platform",
             "this error occurs when an application key was given for a specific platform and is trying to be used to  activate an application for another platform. for instance, if an application key was given for an ios  application and is used to activate an android application, this error will occur.",
             "app_key_not_exist",
             "the application key does not exist. please make sure the application key you are entering is correct.",
             "app_key_level_not_permitted",
             "there are two levels for the sdk framework, level 1 and level 2. if an application key was given under one  level and is trying to be used to active an application using another level sdk framework, this error will occur.",
             "server_parse_failure",
             "there is a server error. please contact dji for assistance.",
             "server_write_failure",
             "there is a server error. please contact dji for assistance.",
             "server_data_abnormal",
             "there is a server error. please contact dji for assistance.",
             "invalid_metadata",
             "the activation data received from server is invalid. please reconnect to the internet and try again.",
             "empty_app_key",
             "no application key was provided.",
             "unknown",
             "an unknown error occurred when the application was trying to register. please contact dji for assistance.",
             "key_unsupported",
             "the key is not supported.",
             "invalid_value",
             "invalid parameters.  this error will be returned when the sent parameters are invalid.",
             "invalid_key_format",
             "the key does not match the format: component/index/key with index being a number or *.",
             "invalid_key_for_component",
             "the key does not exist in component abstraction.",
             "no_get_for_key",
             "the key is not gettable.",
             "no_set_for_key",
             "the key is not settable.",
             "unknown_access_type",
             "the access type requested for the key is unknown. this is an implementation error in the cache as only valid  types should be exposed to the public interface.",
             "disconnected",
             "the abstraction is no longer connected to real hardware.",
             "no_storage_access",
             "can not access to component storage.",
             "no_action_for_key",
             "the key is not actionable.",
             "setter_value_type_mismatch",
             "the key does not match the format: component/index/key with index being a number of *.",
             "getdjierror",
             "constructor method 1.  @param ccode error code.  @return the djierror object.",
             "unknown_error",
             "unknown.",
             "check_permission_level1_is_invalid",
             "level 1 api permission is invalid. this error indicates that the api key's level 1 permission is invalid.",
             "media_invalid_request_type",
             "result of media downloading request type is invalid.",
             "media_no_submedia_files",
             "no sub media files.",
             "media_request_client_abort",
             "result of media downloading: the client aborted the download.",
             "media_request_server_abort",
             "result of media downloading: the server aborted the download.",
             "media_request_disconnect",
             "result of media downloading: the download link disconnected.",
             "could_not_delete_all_files",
             "could not delete all files.",
             "cannot_set_parameters_in_this_state",
             "cannot set the parameters in this state.",
             "get_remote_media_failed",
             "failed to get remote media data.",
             "get_thumbnail_failed",
             "get thumbnail picture failed.",
             "not_connected",
             "camera connection isn't ok.",
             "exec_timeout",
             "the camera action executed a timeout.",
             "invalid_parameters",
             "camera invalid parameters.  this error will be returned when the sent parameters are invalid.",
             "unsupported_cmd_state",
             "the camera does not support the command in the current state.  this error is returned when the camera  is busy and the camera is unsupported for the command in the current state.",
             "parameters_set_failed",
             "failed to set the parameters.  this error will be returned when setting the camera parameters fails.",
             "parameters_get_failed",
             "failed to get the parameters.  this error will be returned when getting the camera parameters fails.",
             "parameters_not_available",
             "the parameters are not available.  this error will be returned when there are some errors with the  parameters submitted to the camera.",
             "media_file_reset",
             "media file is reset. the operation can be executed.",
             "sd_card_not_inserted",
             "no sd card.",
             "sd_card_full",
             "sd card full.",
             "sd_card_error",
             "sd card error.",
             "sensor_error",
             "camera sensor error.",
             "system_error",
             "camera system error.",
             "no_such_media_file",
             "the media file is not found in sd card.",
             "getdjierror",
             "returns the specific error in djiairlinkerror according to the error code.  @param ccode error code.  @return the djierror object.",
             "image_transmitter_cannot_set_parameters_in_this_state",
             "cannot set the parameters in this state.",
             "get_smart_battery_info_failed",
             "get smart battery failure information. this error is returned by functions when retrieving failure information  for the djiphantombattery and djiaircraftbattery, including:  public void  getsmartbatteryresttimeforall(djismartbatteryexecuteresultcallback mcallback)  public void getsmartbatteryneedtimeforgohome(djismartbatteryexecuteresultcallback mcallback)  public void getsmartbatteryneedtimeforland(djismartbatteryexecuteresultcallback mcallback)  public void getsmartbatterygohomebatterylevel(djismartbatteryexecuteresultcallback mcallback)  public void getsmartbatterylandbatterylevel(djismartbatteryexecuteresultcallback mcallback)  public void getsmartbatteryradiusforgohome(djismartbatteryexecuteresultcallback mcallback)  public void getsmartbatteryrequestgohomeflag(djismartbatteryexecuteresultcallback mcallback)",
             "update_wrong",
             "the update process is wrong.",
             "getdjierror",
             "returns the specific error in djiremotecontrollererror according to the error code.  @param ccode error code.  @return a djierror instance of the specific error.",
             "firmware_non_sequence",
             "the sequence number of the firmware is not continuous.",
             "firmware_length_wrong",
             "the file size of the firmware is wrong.",
             "firmware_crc_wrong",
             "the check number of the firmware is wrong.",
             "flash_clear_wrong",
             "the clear action of the flash is wrong.",
             "flash_write_wrong",
             "the write action of the flash is wrong.",
             "update_wrong",
             "the update process is wrong.",
             "firmware_match_error",
             "the firmware does not matched.",
             "flash_flushing",
             "the flash is flushing.",
             "getdjierror",
             "returns the specific error in djigimbalerror according to the error code.  @param ccode error code.  @return a djierror instance of the specific error.",
             "djigimbalerror",
             "defines all gimbal related errors.",
             "result_failed",
             "gimbal result failed.",
             "cannot_set_parameters_in_this_state",
             "cannot set the parameters in this state.",
             "registration_success",
             "api key successfully registered.",
             "djisdkerror",
             "dji sdk error.",
             "djisdkcacheerror",
             "class that handles all errors about sdk cache.",
             "cannot_pause_stabilization",
             "the execution could not be executed.",
             "common_system_busy",
             "the system is too busy to execute the action.",
             "common_unknown",
             "catch all for various errors.",
             "common_undefined",
             "undefined error.  this error will be returned when the error is undefined.  public void  setmulticontrolmode(boolean value,final djiexecuteresultcallback mcallback)",
             "common_timeout",
             "execution timeout.  this error will be returned when the execution times out.  public void  senddatatoexternaldevice(byte[] data,final djiexecuteresultcallback mcallback)  public void  setmulticontrolmode(boolean value,final djiexecuteresultcallback mcallback)",
             "common_param_illegal",
             "illegal parameters.  this error will be returned by the function for setting camera parameters in djiphantomcamera and djiinspirecamera, when illegal parameters are used.",
             "common_param_invalid",
             "invalid parameters.  this error will be returned by the function for setting camera parameters when invalid parameters are used.",
             "common_unsupported",
             "unsupported feature.  this error will be returned by the function for some special feature interface when the feature isn't supported by the device.",
             "common_disconnected",
             "disconnected error.  this error will be returned by the function for some special interface when the dji product is not connected to the mobile device.",
             "firmware_non_sequence",
             "inspire only.  the sequence number of firmware is not continuous.",
             "firmware_length_wrong",
             "the file size of the firmware is invalid.",
             "firmware_crc_wrong",
             "inspire only.  the check number of the firmware is invalid.",
             "flash_clear_wrong",
             "the clear action of the flash is invalid.",
             "flash_write_wrong",
             "the write action of the flash is invalid.",
             "update_wrong",
             "the update process is invalid.",
             "firmware_match_wrong",
             "there is a firmware match error.",
             "flash_flushing",
             "the flash is flushing.",
             "media_invalid_request_type",
             "the media download request type is invalid.",
             "media_no_such_file",
             "media download error: no such file.",
             "media_request_client_abort",
             "media download error: the client aborted the downloading.",
             "media_request_disconnect",
             "result of media downloading: the downloading link disconnects.",
             "image_transmitter_invalid_parameter",
             "the input parameters is out of bound or invalid.",
             "command_not_supported_by_firmware",
             "the command is not supported by the current firmware version.",
             "unable_to_get_firmware_version",
             "unable to get the firmware version. note: the sdk gets the firmware version table from the server.  ensure internet connectivity before you invoke getversion().",
             "unable_to_get_flags",
             "unable to get the analytics flags from server. note: ensure internet connectivity before you invoke this method.",
             "unable_to_get_flag_but_retry",
             "unable to get the analytics flags from server, but retrying.",
             "battery_pair_failed",
             "unable to pair the batteries.",
             "battery_get_smart_battery_info_failed",
             "get smart battery information failed.  this error will be returned by the functions for getting information in djiphantombattery and djiaircraftbattery when the request to get information failed.  public void  getsmartbatteryresttimeforall(djismartbatteryexecuteresultcallback mcallback)  public void getsmartbatteryneedtimeforgohome(djismartbatteryexecuteresultcallback mcallback)  public void getsmartbatteryneedtimeforland(djismartbatteryexecuteresultcallback mcallback)  public void getsmartbatterygohomebatterylevel(djismartbatteryexecuteresultcallback mcallback)  public void getsmartbatterylandbatterylevel(djismartbatteryexecuteresultcallback mcallback)  public void getsmartbatteryradiusforgohome(djismartbatteryexecuteresultcallback mcallback)  public void getsmartbatteryrequestgohomeflag(djismartbatteryexecuteresultcallback mcallback)",
             "no_network",
             "no network access.",
             "database_is_not_ready",
             "database is not ready.",
             "djicameraerror",
             "defines all camera-related errors.",
             "djiflightcontrollererror",
             "defines all flight controller errors.",
             "mission_not_started",
             "mission is not started yet.",
             "djimissionerror",
             "defines all mission manager related errors.",
             "djiairlinkerror",
             "defines all airlink related errors.",
             "djibatteryerror",
             "defines all battery related errors.",
             "djigeoerror",
             "this class contains the error type for geo feature.",
             "djiremotecontrollererror",
             "defines all remote controller related errors.",
             "registration_aesencrypt_failed",
             "server error, please contact <dev@dji.com> for help.",
             "registration_aesencrypt_error",
             "server error, please contact <dev@dji.com> for help.",
             "registration_invalid_uuid",
             "server error, please contact <dev@dji.com> for help.",
             "media_request_server_abort",
             "media download error: the server aborted the downloading.",
             "setstatecallback",
             "sets up the gimbal state update callback.  @param callback the execution callback.",
             "setmovementsettingscallback",
             "sets up the gimbal advanced setting state update callback.  @param callback the execution callback.",
             "setbatterychargeremainingcallback",
             "sets the gimbal remaining energy callback. the unit is percentage.  @param callback the execution callback.",
             "onupdate",
             "updates the gimbal's current state.  @param gimbalstate the gimbal state.",
             "onupdate",
             "update the gimbal's user configuration data. this method is only supported by osmo series.  @param settings an instance of `movementsettings`.",
             "onupdate",
             "update the gimbal's remaining energy in percentage.  @param remainingchargeinpercent an int value.",
             "getcapabilities",
             "returns the gimbal's features and possible range of settings. each key is a possible gimbal feature and is in `capabilitykey` enum. the value for  each key is an instance of `djiparamcapability` or its sub-classes.  the `issupported` property can be used to query if a feature is  supported by the gimbal and the `getmin`  and `getmax` properties of `djiparamminmaxcapability`  can be used to query the valid range for the setting. when a feature is not supported, the values for `getmin`  and `getmax` are undefined.  @return a map<capabilitykey, djiparamcapability> instance.",
             "getyawrelativetoaircraftheading",
             "this function will return the angle between gimbal and the drone heading.  @return a float value of yaw angle.",
             "setmode",
             "sets the gimbal's work mode.  @param mode gimbal work mode to be set. @param callback the execution callback with the returned execution result.",
             "reset",
             "resets the gimbal. the behaviors are product-dependent. osmo series (e.g. osmo, osmo pro):  the gimbal's pitch and yaw will be set to the origin, which is the standard position for  the gimbal. phantom series (e.g. phantom 3 professional, phantom 4 series): the first call  sets gimbal to point down vertically to the earth. the second call sets gimbal to the  standard position. other products (e.g. inspire 1): only the gimbal's pitch will the set  to the origin.  @param callback the execution callback with the returned execution result.",
             "rotate",
             "rotate gimbal's pitch, roll, and yaw with `rotation`.  @param rotation an instance of `rotation`. @param callback the callback of `completioncallback`.",
             "startcalibration",
             "starts calibrating the gimbal. the product should be stationary (not flying, or being held)  and horizontal during calibration. for gimbal's with adjustable payloads, the payload should  be present and balanced before doing a calibration.  @param callback the execution callback with the returned execution result.",
             "finetunerollindegrees",
             "the gimbal roll can be fine tuned with a custom offset. the range for the custom offset  is [-2.0, 2.0] degrees. if the offset is negative, the gimbal will be fine tuned the  specified number of degrees in the counterclockwise direction.  @param offset fine-tuned offset, in degrees, to be tuned. @param callback the execution callback with the returned execution result.",
             "finetunepitchindegrees",
             "the gimbal pitch can be fine tuned with a custom offset. the range for the custom offset  is [-2.0, 2.0] degrees. if the offset is negative, the gimbal will be fine tuned the specified  number of degrees in the counterclockwise direction. it is only supported by spark.  @param offset fine-tuned offset, in degrees, to be tuned. @param callback the execution callback with the returned execution result.",
             "startbalancetest",
             "starts testing the balance of the gimbal payload. for gimbals that allow payloads to be  changed, a balance test should be performed to ensure the camera is mounted correctly.  the product should be stationary (not flying, or being held) and horizontal during testing.  see `gimbalstate` for the test result.  @param callback the execution callback with the returned value(s). the callback will execute when the  balance test is successfully started.",
             "setmovementsettingsprofile",
             "sets the movement settings profile. the movement settings profile has options for both  preset and custom profiles for smoothtrack and controller settings. settings for  smoothtrack and controller can only be set manually when using a custom profile.  @param profile profile to set. @param callback the execution callback with the returned value(s).",
             "getmovementsettingsprofile",
             "gets the advanced settings profile. use `movementsettingsprofile` to check if it is supported by the gimbal.  @param callback callback that receives the execution result.",
             "restorefactorysettings",
             "restores the gimbal's settings to factory settings.  @param callback the completion callback that receives execution result.",
             "setpitchrangeextensionenabled",
             "extends the pitch range of gimbal. if extended, the gimbal's pitch control range can  be [-30, 90], otherwise, it's [0, 90]. use `pitch_range_extension`  to check if it is supported by the gimbal.  @param isenabled whether the pitch range should be extended. @param callback the completion callback that receives execution result.",
             "getpitchrangeextensionenabled",
             "get the extend gimbal pitch range state. use `pitch_range_extension`  to check if it is supported by the gimbal.  @param callback the completion callback that receives execution result.",
             "applymotorcontrolpreset",
             "configures gimbal's motor control with a preset configuration applicable for most popular  cameras. in order to the optimize the performance, motor control tuning is still required.  @param preset the preset configuration to set. @param callback the completion callback that receives execution result.",
             "setmotorcontrolstiffness",
             "sets the coefficient of speed error control. it can be seen as the coefficient for the  proportional term in the pid controller. use `pitch_motor_control_stiffness`, `yaw_motor_control_stiffness`  and `roll_motor_control_stiffness` with `getcapabilities`  to check if the gimbal supports this feature and the range of possible values (unitless).  @param axis the axis that the setting is applied to. @param stiffness the stiffness value to set. @param callback the completion callback that receives execution result.",
             "getmotorcontrolstiffness",
             "gets the coefficient of speed error control. it can be seen as the coefficient for the proportional term in  the pid controller. use `pitch_motor_control_stiffness`, `yaw_motor_control_stiffness`  and `roll_motor_control_stiffness` with `getcapabilities` to check if the gimbal supports this feature and the range of possible values (unitless).  @param axis the axis to query. @param callback the completion callback that receives execution result.",
             "setmotorcontrolstrength",
             "sets the coefficient of attitude accuracy control. it can be seen as the coefficient for the integral term  in the pid controller. use `pitch_motor_control_strength`, `yaw_motor_control_strength`  and `roll_motor_control_strength` with `getcapabilities` to check if the gimbal supports  this feature and the range of possible values (unitless).  @param axis the axis that the setting is applied to. @param strength the strength value to set. @param callback the completion callback that receives execution result.",
             "getmotorcontrolstrength",
             "gets the coefficient of attitude accuracy control. it can be seen as the coefficient for the integral term  in the pid controller. use `pitch_motor_control_strength`, `yaw_motor_control_strength`  and `roll_motor_control_strength` with `getcapabilities` to check if the gimbal supports  this feature and the range of possible values (unitless).  @param axis the axis to query. @param callback the completion callback that receives execution result.",
             "setmotorcontrolgyrofilteringfactor",
             "sets the coefficient of denoising the output.  use `pitch_motor_control_gyro_filtering_factor`, `yaw_motor_control_gyro_filtering_factor`  and `roll_motor_control_gyro_filtering_factor` with `getcapabilities` to check  if the gimbal supports this feature and the range of possible values (unitless).  @param filteringfactor the gyro filtering value to set. @param axis the axis that the setting is applied to. @param callback asynchronous execution result.",
             "getmotorcontrolgyrofilteringfactor",
             "gets the coefficient of denoising the output.  use `pitch_motor_control_gyro_filtering_factor`, `yaw_motor_control_gyro_filtering_factor`  and `roll_motor_control_gyro_filtering_factor` with `getcapabilities` to check  if the gimbal supports this feature and the range of possible values (unitless).  @param axis the axis to query. @param callback the completion callback that receives execution result.",
             "setmotorcontrolprecontrol",
             "sets the value for pre-adjust. it can be seen as the coefficient for the derivative term in the pid controller. use `pitch_motor_control_pre_control`, `yaw_motor_control_pre_control` and `roll_motor_control_pre_control` with `getcapabilities` to check if the gimbal supports this feature and the range of possible values (unitless).  @param axis the axis that the setting is applied to. @param precontrol the precontrol value to set. @param callback asynchronous execution result.",
             "getmotorcontrolprecontrol",
             "gets the value for pre-adjust. it can be seen as the coefficient for the derivative term in the  pid controller. only supported by ronin-mx. use `pitch_motor_control_pre_control`, `yaw_motor_control_pre_control`  and `roll_motor_control_pre_control` with `getcapabilities` to check if the  gimbal supports this feature and the range of possible values (unitless).  @param axis the axis to query. @param callback the completion callback that receives execution result.",
             "setcontrollerdeadband",
             "sets physical controller (e.g. the joystick on osmo or the remote controller of the aircraft)  deadband on an axis. a larger deadband requires more controller movement to start gimbal motion.  use `yaw_controller_deadband` and `pitch_controller_deadband`  with `getcapabilities` to check if the gimbal supports this feature and the range  of possible values (unitless).  @param deadband the deadband value to be set. @param axis the axis that the setting will be applied to. @param callback the completion callback that receives execution result.",
             "getcontrollerdeadband",
             "gets physical controller deadband value on an axis. a larger deadband requires more controller  movement to start gimbal motion. use `yaw_controller_deadband` and `pitch_controller_deadband` with `getcapabilities` to  check if the gimbal supports this feature and the range of possible values (unitless).  @param direction the axis to query. @param callback the completion callback that receives execution result.",
             "setcontrollerspeedcoefficient",
             "sets physical controller (e.g. the joystick on osmo or the remote controller of the aircraft)  speed on an axis. speed setting controls the mapping between the movement of the controller and  the gimbal speed. use `yaw_controller_speed_coefficient`  and `pitch_controller_speed_coefficient` with `getcapabilities` to check if  the gimbal supports this feature and the range of possible values (unitless).  @param speedcoefficient the speed value to be set. @param axis the axis that the setting will be applied to. @param callback asynchronous execution result.",
             "getcontrollerspeedcoefficient",
             "gets physical controller speed value on an axis. speed setting controls the mapping between the  movement of the controller and the gimbal speed. use `yaw_controller_speed_coefficient`  and `pitch_controller_speed_coefficient` with `getcapabilities` to check if  the gimbal supports this feature and the range of possible values (unitless).  @param axis the axis to query. @param callback the completion block that receives execution result.",
             "setcontrollersmoothingfactor",
             "sets physical controller (e.g. the joystick on osmo or the remote controller of the aircraft)  smoothing on an axis. smoothing controls the deceleration of the gimbal.  use `yaw_controller_smoothing_factor` and `pitch_controller_smoothing_factor`  with `getcapabilities` to check if the gimbal supports this feature and the  range of possible values (unitless).  @param smoothingfactor the smoothing value to be set. @param axis the axis that the setting will be applied to. @param callback the completion block that receives execution result.",
             "getcontrollersmoothingfactor",
             "gets physical controller smoothing value on an axis. smoothing controls the deceleration of the  gimbal. use `yaw_controller_smoothing_factor`  and `pitch_controller_smoothing_factor` with `getcapabilities`  to check if the gimbal supports this feature and the range of possible values (unitless).  @param axis the axis to query. @param callback the completion block that receives execution result.",
             "setsmoothtrackenabled",
             "enables smoothtrack for the axis. only supported by osmo. ronin-mx supports smoothtrack but it  is always enabled for both pitch axis and yaw axis.  use `pitch_smooth_track_enabled` and `yaw_smooth_track_enabled`  with `getcapabilities` to check if the gimbal supports this feature.  @param enabled `true` to enable smoothtrack on the axis. @param axis the axis that the setting will be applied to. @param callback the completion callback that receives execution result.",
             "getsmoothtrackenabled",
             "gets whether an axis has smoothtrack enabled. only supported by osmo. ronin-mx supports  smoothtrack but it is always enabled for both pitch axis and yaw axis. use `pitch_smooth_track_enabled` and `yaw_smooth_track_enabled`  with `getcapabilities` to check if the gimbal supports this feature.  @param axis the axis to query. @param callback the completion callback that receives execution result.",
             "setsmoothtrackspeed",
             "sets gimbal smoothtrack catch up speed on an axis. smoothtrack speed determines how fast the  gimbal will catch up with a large, translated handle movement. use `pitch_smooth_track_speed` and `yaw_smooth_track_speed`  with `getcapabilities` to check if the gimbal supports this feature and the  range of possible values (unitless).  @param axis gimbal axis. @param speed smoothtrack speed. @param callback the execution callback with the returned execution result.",
             "getsmoothtrackspeed",
             "gets gimbal smoothtrack speed on an axis. smoothtrack speed determines how fast the gimbal will  catch up with a large, translated handle movement. use `pitch_smooth_track_speed`  and `yaw_smooth_track_speed` with `getcapabilities` to check if the  gimbal supports this feature and the range of possible values (unitless).  @param axis gimbal axis. @param callback the execution callback with the returned value(s).",
             "setsmoothtrackdeadband",
             "sets smoothtrack deadband on an axis. a larger deadband requires more handle movement to  translate into gimbal motion. use `pitch_smooth_track_deadband` and `yaw_smooth_track_deadband` with `getcapabilities` to check  if the gimbal supports this feature and the range of possible values in degrees.  @param axis gimbal axis. @param deadband smoothtrack deadband [0,90]. @param callback the execution callback with the returned execution result.",
             "getsmoothtrackdeadband",
             "gets smoothtrack deadband on an axis. a larger deadband requires more handle movement to  translate into gimbal motion. use `pitch_smooth_track_deadband` and `yaw_smooth_track_deadband` with `getcapabilities` to check  if the gimbal supports this feature and the range of possible values in degrees.  @param axis gimbal axis. @param callback the execution callback with the returned execution result.",
             "setsmoothtrackacceleration",
             "sets smoothtrack acceleration on an axis. acceleration determines how closely the camera will  follow the translated yaw handle movement. use `pitch_smooth_track_acceleration`  and `yaw_smooth_track_acceleration` with `getcapabilities` to  check if the gimbal supports this feature and the range of possible values (unitless).  @param axis gimbal axis. @param acceleration smoothtrack acceleration [0,30]. @param callback the execution callback with the returned execution result.",
             "getsmoothtrackacceleration",
             "gets smoothtrack acceleration on an axis. acceleration determines how closely the camera will  follow the translated yaw handle movement. use `pitch_smooth_track_acceleration`  and `yaw_smooth_track_acceleration` with `getcapabilities` to check  if the gimbal supports this feature and the range of possible values (unitless).  @param axis gimbal axis. @param callback the execution callback with the returned execution result.",
             "setendpoint",
             "endpoint settings determine the farthest points to which the gimbal will rotate during manual controller  input. only supported by ronin-mx. use `pitch_up_endpoint`, `pitch_down_endpoint`, `yaw_left_endpoint`  and `yaw_right_endpoint` in `getcapabilities` to check if the gimbal supports this feature and what the valid range of endpoints are.  @param endpoint the endpoint value to set. @param direction the direction that the setting will be applied to. @param callback the completion callback that receives execution result.",
             "getendpoint",
             "gets the farthest points to which the gimbal will rotate during manual controller input.  use `pitch_up_endpoint`, `pitch_down_endpoint`, `yaw_left_endpoint`  and `yaw_right_endpoint` with `getcapabilities` to check if the gimbal supports  this feature.  @param direction the endpoint direction. @param callback the completion callback that receives execution result.",
             "setmotorenabled",
             "turns on and off the gimbal motors. `false` means the gimbal power remains on, however the motors will not work.  @param enabled `true` to enable the motor. @param callback the execution callback with the returned execution result.",
             "getmotorenabled",
             "gets if the gimbal motors are enabled to work or not.  @param callback the execution callback with the returned value(s).",
             "toggleselfie",
             "resets gimbal position to selfie setup. if the gimbal yaw is not at 180 degrees, then calling this method will rotate the gimbal yaw to 180 degrees (effectively pointing the camera to the person holding the gimbal). if the gimbal yaw is at 180 degrees, then the gimbal will rotate in yaw to 0 degrees.  @param callback the execution callback with the returned execution result.",
             "setcontrollermode",
             "sets the gimbal's controller mode. the control mode for the gimbal controller (joystick for osmo). the total  controller deflection is a combination of horizontal and vertical deflection. this translates to gimbal movement  around the yaw and pitch axes. the gimbal can be set to either move in both yaw and pitch simultaneously based on  horizontal and vertical deflection of the controller, or move in only yaw or pitch exclusively based on whether horizontal or vertical deflection is larger.  @param mode see enum named `controllermode` in djigimbal to find details on different gimbal stick control modes. @param callback the execution callback with the returned execution result.",
             "getcontrollermode",
             "gets the gimbal's controller mode.  @param callback the execution callback with the returned value(s).",
             "setinvertedcontrolenabled",
             "inverts the physical control for gimbal movement on an axis. the setting can only be applied  to the pitch or yaw axis.  @param enabled `true` to enable inverted control. @param axis the axis that the setting will be applied to. @param callback the execution callback with the returned execution result.",
             "getinvertedcontrolenabled",
             "gets if the physical control is inverted for gimbal movement on an axis.  the setting can only be applied to the pitch or yaw axis.  @param axis the axis to query. @param callback the execution callback with the returned value(s).",
             "gimbalstate",
             "this class provides the current state of the gimbal.",
             "getattitudeindegrees",
             "the current gimbal attitude in degrees. roll, pitch and yaw are 0 if the gimbal is level with the  aircraft and points in the forward direction of north pole.  @return an `attitude` instance.",
             "getrollfinetuneindegrees",
             "returns the gimbal's roll fine-tune value. the range for the fine-tuned value is [-10, 10] degrees.  if the fine-tune value is negative, the gimbal will be fine- tuned to the specified number of degrees in  the counterclockwise direction.  @return a float value.",
             "getpitchfinetuneindegrees",
             "returns the gimbal's pitch fine-tune value. the range for the fine-tuned value is [-10, 10] degrees.  if the fine-tune value is negative, the gimbal will be fine- tuned to the specified number of degrees  in the downward direction. it is only supported by spark.  @return a float value.",
             "getmode",
             "returns the gimbal's current work mode.  @return a `gimbalmode` enum value.",
             "ismobiledevicemounted",
             "`true` if the mobile device is mounted on the gimbal.  @return a boolean value.",
             "ismotoroverloaded",
             "`true` if one of the gimbal motors is overloaded.  @return a boolean value.",
             "iscalibrationsuccessful",
             "`true` if the gimbal calibration succeeded.  @return a boolean value.",
             "iscalibrating",
             "`true` if the gimbal is calibrating.  @return a boolean value.",
             "getcalibrationprogress",
             "current progress (percentage) for calibration.  @return an int value.",
             "ispitchatstop",
             "`true` if the gimbal's pitch value is at its limit.  @return a boolean value.",
             "isrollatstop",
             "`true` if the gimbal's roll value is at its limit.  @return a boolean value.",
             "isyawatstop",
             "`true` if the gimbal's yaw value is at its limit.  @return a boolean value.",
             "isbalancetesting",
             "`true` if the gimbal is currently testing payload balance.  @return a boolean value.",
             "getpitchbalancetestresult",
             "returns the pitch axis balance test result.  @return a `balancetestresult` enum value.",
             "getrollbalancetestresult",
             "returns the roll axis balance test result.  @return a `balancetestresult` enum value.",
             "getbalancestate",
             "returns the balance status of the gimbal.  @return a `balancestate` enum value.",
             "ismountedupwards",
             "`true` if the gimbal is mounted upwards on the aircraft. it is only supported by m210 and m210 rtk.  @return a boolean value.",
             "movementsettings",
             "the current movement settings of the gimbal. these include settings for smoothtrack and the controller.",
             "getprofile",
             "advanced settings profile.  @return a `movementsettingsprofile` enum value.",
             "isyawsmoothtrackenabled",
             "`true` if gimbal smoothtrack is enabled for the yaw axis.  @return a boolean value.",
             "ispitchsmoothtrackenabled",
             "`true` if gimbal smoothtrack is enabled for the pitch axis.  @return a boolean value.",
             "getyawsmoothtrackspeed",
             "smoothtrack yaw axis speed determines how fast the gimbal will catch up with the translated yaw  handle movement. range is [0,100].  @return an int value.",
             "getpitchsmoothtrackspeed",
             "smoothtrack pitch axis speed determines how fast the gimbal will catch up with the translated  pitch handle movement. range is [0,100].  @return an int value.",
             "getyawsmoothtrackdeadband",
             "a larger smoothtrack yaw axis deadband requires more yaw handle movement to translate into gimbal  motion. range is [0,90] degrees.  @return an int value.",
             "getpitchsmoothtrackdeadband",
             "a larger smoothtrack pitch axis deadband requires more pitch handle movement to translate into  gimbal motion. range is [0,90] degrees.  @return an int value.",
             "getyawsmoothtrackacceleration",
             "smoothtrack yaw axis acceleration determines how closely the gimbal's yaw axis will follow the  translated controller movement. range is [0,30].  @return an int value.",
             "getpitchsmoothtrackacceleration",
             "smoothtrack pitch axis acceleration determines how closely the camera will follow the translated  pitch handle movement. range is [0,30].  @return an int value.",
             "getyawcontrollersmoothingfactor",
             "controller yaw axis smoothing controls the deceleration of the gimbal. a small value will cause the  gimbal to stop abruptly. range is [0,30].  @return an int value.",
             "getpitchcontrollersmoothingfactor",
             "controller pitch axis smoothing controls the deceleration of the gimbal. a small value will cause the  gimbal to stop abruptly. range is [0,30].  @return an int value.",
             "getyawcontrollerspeedcoefficient",
             "controller yaw axis speed determines how sensitively the gimbal's yaw axis will follow the controller  movement. range is [0,100].  @return an int value.",
             "getpitchcontrollerspeedcoefficient",
             "controller pitch axis speed determines how sensitively the gimbal's pitch axis will follow the  controller movement. range is [0,100].  @return an int value.",
             "attitude",
             "the gimbal's attitude in degrees relative to the aircraft.          if you don't want a specific axis to get rotated, invoke the `gimbalattitudeaction` method and set the value of the axis to `no_rotation` in the `attitude` object. by default, the values of pitch, roll, and yaw in the `attitude` are set to `no_rotation`.",
             "getpitch",
             "pitch value in degrees.  @return a float value.",
             "getroll",
             "roll value in degrees.  @return <<android:a float value.>",
             "getyaw",
             "yaw value in degrees.  @return <<android:a float value.>",
             "axis",
             "gimbal axis.",
             "yaw",
             "gimbal's yaw axis.",
             "pitch",
             "gimbal's pitch axis.",
             "roll",
             "gimbal's roll axis.",
             "gimbalmode",
             "gimbal work modes.",
             "free",
             "the gimbal can move independently of the aircraft's yaw. in this mode, even if the aircraft yaw  changes, the camera will continue pointing in the same world direction. this mode is only available  for the ronin-mx when the m600 or m600 pro landing gear is retracted.",
             "fpv",
             "the gimbal's work mode is fpv mode. in this mode, the gimbal yaw will follow the aircraft's heading,  and the gimbal roll will follow the rc's roll channel value. the pitch will be available to move. this  mode is only available for the ronin-mx when the m600 landing gear is retracted.",
             "yaw_follow",
             "the gimbal's work mode is such that it will follow the yaw. in this mode, the gimbal yaw will be  fixed, while pitch and roll will be available to move.",
             "unknown",
             "the gimbal's work mode is unknown.",
             "balancetestresult",
             "for gimbals that allow payloads to be changed, a balance test should be performed to ensure the  camera is mounted correctly.",
             "pass",
             "the balance test result is great.",
             "marginal",
             "the balance test result is good. when this result is returned, it is possible there was some noise in the balance measurement. for best results, it is recommended to run the balance test again and adjust the payload position until the result becomes great.",
             "fail",
             "the balance test result is bad. the payload should be adjusted when this result is returned.",
             "unknown",
             "the balance test result is unknown.",
             "movementsettingsprofile",
             "the movement settings profile contains presets for smoothtrack and the physical controller  sensitivity. smoothtrack and controller settings can only be manually changed if custom1 or custom2  profiles are selected.",
             "fast",
             "the gimbal's smoothtrack and controller sensitivity is high. when the gimbal is using this profile,  user cannot change the movement settings manually.",
             "medium",
             "the gimbal's smoothtrack and controller sensitivity is medium. when the gimbal is using this profile,  user cannot change the movement settings manually.",
             "slow",
             "the gimbal's smoothtrack and controller sensitivity is slow. when the gimbal is using this profile,  user cannot change the movement settings manually.",
             "custom_1",
             "the gimbal uses a custom configuration in memory slot 1 where the yaw and pitch speed, deadband, and  acceleration can be defined.",
             "custom_2",
             "the gimbal uses a custom configuration in memory slot 2 where the yaw and pitch speed, deadband, and  acceleration can be defined.",
             "unknown",
             "the gimbal's user config type is unknown.",
             "motorcontrolpreset",
             "different cameras have different preset parameters for gimbal motor stiffness, strength, gyro  filtering and pre-control.",
             "red",
             "the gimbal's motor control configuration is optimized for red cameras.",
             "dslr",
             "the gimbal's motor control configuration is optimized for most dslr cameras.",
             "mirrorless",
             "the gimbal's motor control configuration is optimized for most mirrorless cameras.",
             "endpointdirection",
             "gimbal endpoint setting.",
             "pitch_up",
             "pitch (also called tilt) endpoint setting in the upwards direction.",
             "pitch_down",
             "pitch (also called tilt) endpoint setting in the downwards direction.",
             "yaw_left",
             "yaw (also called pan) endpoint setting in the left direction.",
             "yaw_right",
             "yaw (also called pan) endpoint setting in the right direction.",
             "controllermode",
             "the control mode for the gimbal physical controller (joystick for osmo). the total controller  deflection is a combination of horizontal and vertical deflection. this translates to gimbal  movement around the yaw and pitch axes. the gimbal can be set to either move in both yaw and  pitch simultaneously based on horizontal and vertical deflection of the controller, or move in  only yaw or pitch exclusively based on whether horizontal or vertical deflection is larger.",
             "one_axis",
             "gimbal movement will be exclusively in yaw or pitch depending on whether the controller  horizontal or vertical deflection is greater respectively.",
             "two_axis",
             "gimbal movement will be in both yaw and pitch simultaneously relative to the horizontal and  vertical deflection of the controller respectively.",
             "unknown",
             "the gimbal controller control mode is unknown.",
             "balancestate",
             "the loading balance status of the gimbal. the gimbal loading is changeable for osmo mobile.  when the mounted mobile device is changed, in order to  optimize the gimbal performance, user can  adjust the gimbal physically based on the status.",
             "balanced",
             "the gimbal is balanced.",
             "tilting_left",
             "the gimbal is tilting left. adjust the photo to the right hand side to balance the gimbal.",
             "tilting_right",
             "the gimbal is tilting right. adjust the photo to the left hand side to balance the gimbal.",
             "unknown",
             "the balance status is unknown.",
             "callback",
             "callback for updating the gimbal's current state.",
             "callback",
             "this interface provides the method to receive the updated state and user configuration.",
             "batterychargeremainingcallback",
             "gimbal energy remaining of ronin mx in percent.",
             "capabilitykey",
             "these enums are keys for gimbal capability map.",
             "adjust_pitch",
             "key enum in the `getcapabilities` dictionary that holds  the complete capability of the gimbal. a negative value in the valid range represents  counter-clockwise rotation. a positive value in the valid range represents clockwise rotation.",
             "adjust_yaw",
             "key enum in `getcapabilities` associated with whether the  gimbal supports yaw axis adjustment. the corresponding value in `getcapabilities` is  an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible  range in degrees is returned. a negative value in the valid range represents counter-clockwise rotation.  a positive value in the valid range represents clockwise rotation. for gimbal's that allow a pitch range  extension (see `pitch_range_extension`, the range will be representative of the  extended range whether it is enabled or not.",
             "adjust_roll",
             "key enum in `getcapabilities` associated with whether the  gimbal supports roll axis adjustment. the corresponding value in `getcapabilities`  is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range in degrees is returned. a negative value in the valid range represents  counter-clockwise rotation. a positive value in the valid range represents clockwise rotation.",
             "movement_settings",
             "key enum string in `getcapabilities` associated with whether the gimbal supports advanced settings profiles. the corresponding value in `getcapabilities` is an instance of `djiparamcapability`.",
             "pitch_range_extension",
             "key enum in `getcapabilities` associated with whether the  gimbal supports a range extension in pitch. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the  feature's existence as well as its possible range in degrees is returned.",
             "pitch_controller_speed_coefficient",
             "key enum in `getcapabilities` associated with whether the  gimbal's pitch axis response speed to manual control can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "yaw_controller_speed_coefficient",
             "key enum in `getcapabilities` associated with whether the  gimbal's yaw axis response speed to manual control can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "pitch_controller_smoothing_factor",
             "key enum in `getcapabilities` associated with whether the  gimbal's pitch axis smoothing can be adjusted when using manual control. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "yaw_controller_smoothing_factor",
             "key enum in `getcapabilities` associated with whether the  gimbal's yaw axis smoothing can be adjusted when using manual control. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "pitch_controller_deadband",
             "key enum in `getcapabilities` associated with whether the  gimbal's manual control pitch axis deadband can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "yaw_controller_deadband",
             "key enum in `getcapabilities` associated with whether the  gimbal's manual control yaw axis deadband can be adjusted. the corresponding value  in `getcapabilities` is an instance  of `djiparamminmaxcapability` meaning both the feature's existence as well as  its possible range (unitless) is returned.",
             "pitch_smooth_track_enabled",
             "key enum in `getcapabilities` associated with whether the  gimbal's pitch axis smoothtrack can be toggled. the corresponding value  in `getcapabilities` is an instance of `djiparamcapability`. ronin-mx cannot toggle  the smoothtrack functionality and it is always enabled.",
             "yaw_smooth_track_enabled",
             "key enum in `getcapabilities` associated with whether the  gimbal's yaw axis smoothtrack can be toggled. the corresponding value  in `getcapabilities` is an instance of `djiparamcapability`. ronin-mx cannot toggle the  smoothtrack functionality and it is always enabled.",
             "pitch_smooth_track_acceleration",
             "key enum in `getcapabilities` associated with whether the  gimbal's pitch axis smoothtrack acceleration can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "yaw_smooth_track_acceleration",
             "key enum in `getcapabilities` associated with whether the  gimbal's yaw axis smoothtrack acceleration can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "pitch_smooth_track_speed",
             "key enum in `getcapabilities` associated with whether the  gimbal's pitch axis smoothtrack speed can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the  feature's existence as well as its possible range (unitless) is returned.",
             "yaw_smooth_track_speed",
             "key enum in `getcapabilities` associated with whether the  gimbal's yaw axis smoothtrack speed can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the  feature's existence as well as its possible range (unitless) is returned.",
             "pitch_smooth_track_deadband",
             "key enum in `getcapabilities` associated with whether the  gimbal's pitch axis smoothtrack deadband can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "yaw_smooth_track_deadband",
             "key enum in `getcapabilities` associated with whether the  gimbal's yaw axis smoothtrack deadband can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "pitch_up_endpoint",
             "key enum in `getcapabilities` associated with whether the  gimbal's pitch up endpoint can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the  feature's existence as well as its possible range (unitless) is returned.",
             "pitch_down_endpoint",
             "key enum in `getcapabilities` associated with whether the  gimbal's pitch down endpoint can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the  feature's existence as well as its possible range (unitless) is returned.",
             "yaw_left_endpoint",
             "key enum in `getcapabilities` associated with whether the  gimbal's yaw left endpoint can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the  feature's existence as well as its possible range (unitless) is returned.",
             "yaw_right_endpoint",
             "key enum in `getcapabilities` associated with whether the  gimbal's yaw right endpoint can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the  feature's existence as well as its possible range (unitless) is returned.",
             "pitch_motor_control_stiffness",
             "key enum in `getcapabilities` associated with whether the  gimbal's pitch axis motor control stiffness can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "yaw_motor_control_stiffness",
             "key enum in `getcapabilities` associated with whether the  gimbal's yaw axis motor control stiffness can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "roll_motor_control_stiffness",
             "key enum in `getcapabilities` associated with whether the  gimbal's roll axis motor control stiffness can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "pitch_motor_control_strength",
             "key enum in `getcapabilities` associated with whether the  gimbal's pitch axis motor control strength can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "yaw_motor_control_strength",
             "key enum in `getcapabilities` associated with whether the  gimbal's yaw axis motor control strength can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "roll_motor_control_strength",
             "key enum in `getcapabilities` associated with whether the  gimbal's roll axis motor control strength can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "pitch_motor_control_gyro_filtering_factor",
             "key enum in `getcapabilities` associated with whether the  gimbal's pitch axis motor control gyro filtering can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "yaw_motor_control_gyro_filtering_factor",
             "key enum in `getcapabilities` associated with whether the  gimbal's yaw axis motor control gyro filtering can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "roll_motor_control_gyro_filtering_factor",
             "key enum in `getcapabilities` associated with whether the  gimbal's roll axis motor control gyro filtering can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "pitch_motor_control_pre_control",
             "key enum in `getcapabilities` associated with whether the  gimbal's pitch axis motor control precontrol can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "yaw_motor_control_pre_control",
             "key enum in `getcapabilities` associated with whether the  gimbal's yaw axis motor control precontrol can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "roll_motor_control_pre_control",
             "key enum in `getcapabilities` associated with whether the  gimbal's roll axis motor control precontrol can be adjusted. the corresponding value  in `getcapabilities` is an instance of `djiparamminmaxcapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
             "rotation",
             "represents a gimbal speed or angular rotation operation. if you don't want a specific axis to get rotated, invoke the `rotate` method and set the value of the axis to `no_rotation` in the `rotation` object. by default, the values of pitch, roll, and yaw in the `rotation` are set to `no_rotation`.",
             "getmode",
             "type of gimbal rotation operation mode.  @return a `rotationmode` enum value.",
             "getpitch",
             "the pitch property of a gimbal rotation operation, how much the gimbal rotates on the pitch axis.  @return a float value.",
             "getroll",
             "the roll property of a gimbal rotation operation, how much the gimbal rotates on the roll axis.  @return a float value.",
             "getyaw",
             "the yaw property of a gimbal rotation operation, how much the gimbal rotates on the yaw axis.  @return a float value.",
             "gettime",
             "the time of the gimbal speed rotation operation.  @return a double value.",
             "builder",
             "object builder.",
             "builder",
             "default rotation constructor method.",
             "builder",
             "constructor method that clones a rotation object.  @param rotation an instance of `rotation`.",
             "mode",
             "constructor method.  @param mode an enum value of `rotationmode`.  @return builder object for mode",
             "pitch",
             "constructor method.  @param pitch a float value of pitch.  @return builder object for pitch",
             "roll",
             "constructor method.  @param roll a float value of roll.  @return builder object for roll",
             "yaw",
             "constructor method.  @param yaw a float value of yaw.  @return builder object for yaw",
             "time",
             "sets the completion time in seconds to complete an action to control the gimbal. if the the rotation mode is `absolute_angle` then the time determines the duration of time the gimbal should rotate to its new position. for example, if a value of 2.0 is used, then the gimbal will rotate to its target position in 2.0 seconds. range is [0.1,25.5] seconds.  @param time a double value of time.  @return builder object for time",
             "build",
             "build the object.  @return instance of `rotation`.",
             "rotationmode",
             "the mode of the gimbal rotation operation.",
             "relative_angle",
             "the angle value, when the gimbal is rotating, relative to the current angle.",
             "absolute_angle",
             "the angle value, when the gimbal is rotating, relative to 0 degrees (aircraft heading).",
             "speed",
             "rotate the gimbal's pitch, roll, and yaw in speed mode. the direction can either be set to clockwise or  counter-clockwise.  for phantom 3 professional, phantom 3 advanced and phantom 3 standard, roll and yaw rotations are not available.  for inspire 1, inspire pro and m100, pitch, roll and yaw rotations  are available.  for osmo, roll rotation is not available. the yaw anglevelocity of djigimbalspeedrotation range is (-120, 120).",
             "gethandheldcontroller",
             "returns an instance of the handheld device's handheld controller.  @return an instance of the `handheldcontroller`",
             "unknown_handheld",
             "handheld device model name unknown.",
             "osmo",
             "handheld device model name osmo.",
             "osmo_pro",
             "handheld device model name osmo pro.",
             "osmo_raw",
             "handheld device model name osmo raw.",
             "osmo_mobile",
             "handheld device model name osmo mobile.",
             "osmo_plus",
             "handheld device model name osmo+.",
             "setpowermodecallback",
             "setup the callback that returns changed power mode state information.  @param callback the callback for the power mode state.",
             "sethardwarestatecallback",
             "set up the callback for the handheld's hardware state.  @param callback callback for the handheld controller's current hardware state (e.g. the state of the physical  buttons and joysticks).",
             "setpowermode",
             "set the power mode for the handheld controller.  @param mode the power mode to set. caution! when the mode  is `off`,  the handheld product will be shut down and the connection will  be broken. the user must then power on the device manually. @param callback the execution callback with the execution result returned.",
             "controlledwithcommand",
             "controls the led of the handheld controller.  @param command the command to control the led. @param callback the execution callback with the execution result returned.",
             "setstickgimbalcontrolenabled",
             "enables/disables the gimbal control with the joystick. by default, it is enabled. the handheld  will be reset to the default value  when it reboots or sdk reinitializes. when gimbal control is  disabled, the joystick can be used for other purposes in an sdk application by reading its position  values with `stickverticaldirection`  and `stickhorizontaldirection`.  only supported in firmware version 1.2.0.40 or above.  @param enabled `true` to enable the gimbal control. @param callback the execution callback with the execution result returned.",
             "getstickgimbalcontrolenabled",
             "`true` if gimbal control with the joystick is enabled. only supported in firmware  version 1.2.0.40 or above.  @param callback the execution callback with the returned value(s).",
             "onupdate",
             "called when the handheld controller's power mode has been updated.  @param powermode handheld controller's current power mode.",
             "onupdate",
             "called when the handheld controller's current hardware state (e.g. the state of the physical  buttons and joysticks) has been updated.  @param state an object of `hardwarestate`.",
             "on",
             "the handheld product is awake. for osmo, when it is in this mode, all the components  in `handheld` are accessible.",
             "sleeping",
             "the handheld product is sleeping. the handheld controller keeps  the wireless connection to the mobile device alive but most other  components are off. the power consumption is low in this mode.  for osmo in this mode, only the `handheldcontroller`,  `airlink`, and `battery` are accessible.",
             "off",
             "the handheld product is powered off. once this mode is set the  callback will receive this mode until  the handheld device is shut down completely.  it is not supported by osmo mobile.",
             "unknown",
             "the handheld power mode in unknown.",
             "getrecordandshutterbuttons",
             "status of the shutter button and record button.  @return a `recordandshutterbuttons` enum value.",
             "gettriggerbutton",
             "status of the trigger button.  @return a `triggerbutton` enum value.",
             "istriggerbeingpressed",
             "`true` when the trigger is being pressed. it is only supported in firmware version 1.2.0.40 or above.  @return a boolean value.",
             "getstickverticaldirection",
             "status of the joystick in vertical direction.  @return a `stickverticaldirection` enum value.",
             "getstickhorizontaldirection",
             "status of the joystick in horizontal direction.  @return a `stickhorizontaldirection` enum value.",
             "getstick",
             "position of the stick in both vertical and horizontal direction. only supported in firmware version 1.2.0.40 or above.  @return an object of `stick`.",
             "idle",
             "no buttons have been pressed.",
             "shutter_click",
             "only the shutter button was pressed and released.",
             "record_click",
             "only the record button was pressed and released.",
             "shutter_long_click",
             "the shutter button is being pressed without release.",
             "unknown",
             "the button status is unknown.",
             "idle",
             "trigger button status is idle.",
             "single_click",
             "trigger button is pressed and released.",
             "double_click",
             "trigger button is pressed twice quickly.",
             "triple_click",
             "trigger button is pressed three times quickly.",
             "unknown",
             "trigger button status is unknown.",
             "center",
             "joystick has no movement in the vertical direction.",
             "up",
             "joystick is moved up in the vertical direction.",
             "down",
             "joystick is moved down in the vertical direction.",
             "unknown",
             "joystick status in the vertical direction is unknown.",
             "center",
             "joystick has no movement in the horizontal direction.",
             "left",
             "joystick is moved left in the horizontal direction.",
             "right",
             "joystick is moved right in the horizontal direction.",
             "unknown",
             "joystick status in the horizontal direction is unknown.",
             "red",
             "pattern to control the red color.",
             "green",
             "pattern to control the green color.",
             "blue",
             "pattern to control the blue color.",
             "pattern",
             "pattern to control the time varying behaviour of the led color. each element of pattern</code> is a boolean  representing the led on/off state for 0.125 seconds where  `true` means the led is on. the length of the pattern cannot exceed 32. by default, the array is empty,  which will turn the led color off.",
             "repeattimes",
             "the number of times to repeat the sequence with range [1, 255]. a value of 255 will repeat the  sequence indefinitely until a new  command is sent. the default value is 255.",
             "callback",
             "callback to receive the updated power mode of the handheld controller.",
             "callback",
             "callback for the handheld controller's current hardware state (e.g. the state of the physical  buttons and joysticks).",
             "powermode",
             "handheld power mode.",
             "hardwarestate",
             "the status of the shutter button and record button on the handheld controller. used by osmo mobile only.",
             "recordandshutterbuttons",
             "the status of the shutter button and record button on the handheld controller.",
             "triggerbutton",
             "the status of the shutter button and record button on the handheld controller.",
             "stickverticaldirection",
             "status of the handheld joystick in vertical direction.",
             "stickhorizontaldirection",
             "status of the handheld joystick in horizontal direction.",
             "ledcommand",
             "command used to control different colors (red, green and blue) of the handheld controller's led.",
             "ledcolorpattern",
             "pattern used to control a single color (red, green or blue) of the handheld controller's led.",
             "setleftstickvertical",
             "simulates the vertical movement of the left stick, which changes the aircraft's thrust causing it to raise or  lower in elevation. the valid range is [-1, 1].  @param data a float value of the left stick vertical movement.",
             "setleftstickhorizontal",
             "simulates the horizontal movement of the left stick, which changes the yaw of the aircraft causing it to rotate  horizontally. the valid range is [-1, 1].  @param data a float value of the left stick horizontal movement.",
             "setrightstickvertical",
             "simulates the vertical movement of the right stick, which changes the the aircraft's pitch causing it to fly  forward or backward. the valid range is [-1, 1].  @param data a float value of the right stick vertical movement.",
             "setrightstickhorizontal",
             "simulates the horizontal movement of the right stick, which changes the the aircraft's roll causing it to fly  left or right. the valid range is  [-1, 1].  @param data a float value of the left stick horizontal movement.",
             "getleftstickvertical",
             "gets the vertical movement value of the left stick.  @return a float value.",
             "getleftstickhorizontal",
             "gets the horizontal movement value of the left stick.  @return a float value.",
             "getrightstickvertical",
             "gets the vertical movement value of the right stick.  @return a float value.",
             "getrightstickhorizontal",
             "gets the horizontal movement value of the right stick.  @return a float value.",
             "issupported",
             "`true` if the component or product supports the parameter.  @return a boolean value.",
             "djiparamminmaxcapability",
             "adds the maximum and minimum possible values of the parameter to  the `djiparamcapability` base class.",
             "getmin",
             "return the valid minimum value of the  parameter for the product. if `issupported`  returns `false`, the value is undefined.  @return a number object.",
             "getmax",
             "return the valid maximum value of the  parameter for the product. if `issupported`  returns `false`, the value is undefined.  @return a number object.",
             "getsdkversion",
             "gets the dji mobile sdk version. returns sdk version as a string.  @return a sdk version string instance.",
             "registerapp",
             "the first time the app is initialized after installation, the app connects to a dji server through the  internet to verify the application key. subsequent app starts will use locally cached verification  information to register the app.  @param context android context. @param callback callback used for both the registration result, and when the products changes.",
             "hassdkregistered",
             "registration state.  @return `true` if sdk is registered.",
             "getinstance",
             "accessor for `djisdkmanager` object.  @return an instance of `djisdkmanager` object.",
             "destroy",
             "releases the resources held by the djisdkmanager.",
             "setcallbackruninuithread",
             "determines whether ansynchronous getter and setter method callbacks  should be invoked in uithread or backgroundthread. this method is only  for setters and getters, as push data callbacks (typically state data)  always return in the backgroundthread.  @param enable a boolean value.",
             "closeaoaconnection",
             "this method is used to close the aoa connection during development and should not be used in the final application. when using as or eclipse to build and run the application, the aoa  connection is not properly closed if the application is terminated. as a result, the next time the application is run, the sdk will not  be able to connect to the product without first disconnecting and reconnecting the usb cable. as and eclipse can be configured to  invoke this method before compiling the application, closing the link before the application is run, and overcoming this problem.",
             "setdisablecountrycodecheck",
             "the sdk will automatically try to determine the country in which the product is operating and decide  the behaviour accordingly. the process of determining in which country the product is flying uses  location information. this method can be used to disable this check, but must be called before `registerappwithdelegate` to take effect. influenced features includes:  - some products (e.g.  mavic pro, inspire 2, phantom 4 pro) make use of both 2.4 ghz and 5 ghz spectrums for wireless  communication. while 5 ghz will not necessarily have the same range as 2.4 ghz, it can be useful  if the 2.4 ghz band has a lot of existing interference. however, as some countries do not permit  the use of the 5 ghz spectrum. if country code check is disabled, only 2.4 ghz will be available  as an option.  - `getappactivationmanager` uses country information to  determine whether the user needs to log into their dji account to activate the application. if  the country code check is disabled, the user will need to log into their dji account by default.",
             "getappactivationmanager",
             "used to check the states related to the app activation.  @return a instance of `appactivationmanager`.",
             "getproduct",
             "the dji product which is connected to the mobile device, only available after successful registration of the app.  @return a instance of `baseproduct`.",
             "getbluetoothproductconnector",
             "used to establish the bluetooth connection between the mobile device and the dji product. the bluetooth connection needs to be established before a connection between the sdk and the dji product can be made using `startconnectiontoproduct`.  @return a `bluetoothproductconnector` instance.",
             "startconnectiontoproduct",
             "starts a connection between the sdk and the dji product. this method should be called  after successful registration of the app and once there is a data connection between the mobile device and dji product. this data connection is either a usb cable connection, a wifi connection (that needs to be established outside of the sdk) or a bluetooth connection (that needs to be established with `getbluetoothproductconnector`). if the connection succeeds, `onproductchange` will be called if the connection succeeded. returns `true` if the connection is started successfully. for products which connect to the mobile device using bluetooth, `getbluetoothproductconnector` should be used to get a `bluetoothproductconnector` object which can handle bluetooth device connection.  @return `true` if the connection is started successfully.",
             "stopconnectiontoproduct",
             "disconnect from the connected dji product.",
             "setsupportonlyforbluetoothdevice",
             "if only bluetooth devices will be connected, then this should be set to `true`.  @param isbluetoothdevice `true` if only bluetooth devices will be connected.",
             "enablebridgemodewithbridgeappip",
             "enter debug mode with debug ip.  @param bridgeappip debug ip of the dji bridge app.",
             "archivelogs",
             "the dji mobile sdk collects logs that are related to flight. these logs can be used to help diagnose the cause  of a product's flight failure at the sdk and mobile application layers. they are predominantly used by a dji  service facility, who will combine them with the product's flight logs (stored on the product) to better  understand the root cause of a crash and determine whether the incident is covered under warranty. they can  also be used by developers to debug their application. sdk logs record commands from the application to the sdk, and information from the sdk to the application that are related to flight. logs are cached to the mobile  device, and will overwrite themselves to limit storage footprint. `archivelogs` will move the logs to an archive  folder. logs in the archive, will only be overwritten by newer archives that go beyond the storage limit and not  normal log generation. the storage limit for normal log generation is 400 mb (about 500 minutes of flight). the  storage limit for the archive is an additional 400 mb. the logs have an encrypted and unencrypted portion. the  unencrypted portion can be used by developers to see all commands and information sent to and received from the  sdk by the mobile application that is related to flight. the encrypted portion can only be used by a dji service  facility as it includes proprietary hardware protocols and is used to tie the sdk logs and product flight logs  together. logs can be transferred to the dji service facility either by manually downloading from the mobile  device using itunes, or the application can send archived logs to a dji endpoint using `uploadarchivedlogs`.  developers should be careful to upload logs directly when the user is on a cellular connection as the archive  can be up to 400 mb. return path of archived logs, nil if a problem occurred.  @param callback the execution callback.  @return a string instance for the archive logs.",
             "uploadarchivedlogs",
             "upload the archive to dji. the archive will not be deleted when calling this method.  @param callback the execution callback with the execution result returned.",
             "getflyzonemanager",
             "provide access to `flyzonemanager` used to manage dji's geo system for no fly zones.  @return an instance of `flyzonemanager`.",
             "getkeymanager",
             "provide access to the sdk key interface.  @return an instance of `keymanager`.",
             "getmissioncontrol",
             "provide access to `missioncontrol` used to manage missions.  @return an instance of `missioncontrol`.",
             "sdkmanagercallback",
             "callback interface for sdk manager.",
             "bluetoothproductconnector",
             "some dji products can be controlled using the mobile sdk over a bluetooth wireless  connection. this class contains methods to search for, connect to, and disconnect from such products.",
             "onregister",
             "callback method after the application attempts to register.  @param error `registration_success` if registration is successful.",
             "onproductchange",
             "called when the connected product changes, or connectivity changes.  @param oldproduct old product object. `null` if starting up. @param newproduct new product object. `null` if the usb link or wifi link between the product and mobile device is disconnected.",
             "djisdkmanager",
             "this class is the entry point for using the sdk with a dji product.  most importantly, this class is used to register the sdk, and to connect  to and access the product. this class also provides access to important feature managers (such as `getkeymanager`), debugging tools, and threading control of asynchronous callbacks. sdk registration using `registerapp` must be successful before the sdk can be used with a dji product.",
             "keymanager",
             "`keymanager` provides access to the keyed interface using  `djikey` and corresponding subclass objects. `keymanager` is accessed from `getkeymanager` in `djisdkmanager`.",
             "flyzonemanager",
             "fly zone manager gives information about nearby fly zones, and apis to unlock zones that can be unlocked. depending on location, there are three types of fly zones possible:  - nfz: cylinder or truncated cone volume where flight is restricted  - poly: fly zone that consists of one or more sub fly zones that are cylinders or complex volumes with different height limitations. a height limitation of 0 means flight is completely restricted. this is used by mavic, phantom 4 pro, inspire 2 and phantom 4  - geo: cylinder volume with four levels of restriction:     - warning zones - no restriction     - enhanced warning zones - flight restricted, can be unlocked for         flight when the user logs into their dji account     - authorization zones - flight restricted, can be unlocked for         flight when the user logs into their dji account and the account         has been authorized to unlock authorization zones.     - restricted zones - flight restricted  on the phantom 3, inspire 1, m100, m600, a3/n3 series of products there can also be  a 4km buffer around an nfz fly zone where flight height is limited to 120m. if the  aircraft is in such a buffer area, `flyzonestate` will be `in_warning_zone_with_height_limitation`.",
             "appactivationmanager",
             "dji aircraft firmware require mobile applications that control dji aircraft to be activated  with the user's dji account, if that application is being used in china. this will ensure  operators use the correct set of geospatial information and flight functions for their  aircraft, as determined by their geographical location and user profile.  a summary  of the activation system is:  - users in china are required to activate their application  by logging into their dji account at least once every three months within the application  - activation will be persistent in the application until the user logs out  - a data  connection will be required to log into a dji account  - outside of china, the sdk will  automatically activate the application without requiring the user to log in  - additionally, users in china are required to bind their aircraft to their user account  in dji go. this is required only once.  if an application is not activated, the aircraft  not bound (if required), or a legacy version of the sdk (<4.1) is being used, all camera live  streams will be disabled, and flight will be limited to a cylinder of 100m diameter and 30m height to ensure the aircraft stays within line of sight.  this class is used to check the  state of application activation and aircraft binding.",
             "useraccountmanager",
             "class used to manage the dji account.",
             "baseproduct",
             "abstract class for all dji products. `aircraft` and `handheld` objects  are subclasses of `baseproduct` and can be accessed from `getproduct` in `djisdkmanager`. additional components can be found in `aircraft` and `handheld` that are unique to those products only.",
             "basecomponent",
             "abstract class for components in a dji product. a component can be a camera, gimbal, remote controller, etc.  a dji product consists of several components. all components of a product are subclasses of `basecomponent` and can be accessed directly from the product objects (`aircraft` or `handheld`).",
             "aircraft",
             "aircraft product class, which includes basic product information and access to all components (such as flight controller, battery etc.). this object is accessed  from `getproduct` in `djisdkmanager`.",
             "handheld",
             "handheld product class, which includes basic product information and access to all components (such as camera, battery etc.). this object is accessed  from `getproduct` in `djisdkmanager`.",
             "flightcontroller",
             "this class contains components of the flight controller and provides methods to send different commands to the flight controller. this object is available from the `aircraft` object which is a subclass of `baseproduct`.",
             "battery",
             "this class manages information and real-time status of the connected product's batteries. this object is available from the `aircraft` or `handheld` object which is a subclass of `baseproduct`.",
             "camera",
             "this class contains the media manager and playback manager, which manage the camera's media content. it provides  methods to change camera settings and perform camera actions. this object is available from the `aircraft` or `handheld` object, which is a subclass of `baseproduct`.",
             "gimbal",
             "this class provides multiple methods to control the gimbal. these include setting the gimbal work mode,  rotating the gimbal with angle, starting the gimbal auto calibration, etc. this object is available from the `aircraft` or `handheld` object which is a subclass of `baseproduct`.",
             "airlink",
             "this class contains information about the wireless link between the aircraft and the remote controller, the aircraft and the mobile device or the handheld product and the mobile device. to determine whether a particular wireless link is supported, check the issupported flag. this object is available from the `aircraft` or `handheld` object which is a subclass of `baseproduct`.",
             "remotecontroller",
             "this class represents the remote controller of the aircraft. it provides methods to change the settings of the  physical remote controller. for some products (e.g. inspire 1 and matrice 100), the class provides methods to  manager the slave/master mode of the remote controllers. a remote controller is a device that can have a gps,  battery, radio, buttons, sticks, wheels, and output ports for video. the mobile device is connected to the  remote controller, which is always sending out information about what everything is doing. the normal remote controller is called the master. a slave wirelessly connects to the master remote controller at 5 ghz, and  the aircraft can also download information to the slave. the slave can send gimbal control commands to the  master. this configuration allows one person to fly the aircraft while another person controls the gimbal. this object is available from the `aircraft` subclass off `baseproduct`.",
             "handheldcontroller",
             "this class contains interfaces related to the hand controller of a  handheld device (such as osmo). this object is available from the  `handheld` subclass off `baseproduct`.",
             "mobileremotecontroller",
             "a simulated remote controller on the mobile device to control the aircraft when the physical remote controller  is absent. the mobile remote controller only supports mode 2 control style and flight mode p. it is supported  by mavic pro using wifi. this object is available from the `aircraft` subclass off `baseproduct`.",
             "missioncontrol",
             "mission control handles execution of missions. either single missions can be run through dedicated mission operators, or a series of missions and actions can be run serially using the timeline.  mission operators look after execution of a single mission. a mission operator has apis to control the mission (e.g. start, stop, pause etc.) and provides mission state through listeners.  mission control's timeline is made up of a series of timeline elements which can be waypoint missions,  hotpoint missions (through the hotpoint action `hotpointaction`) or objects that follow the  `timelineelement` protocol. `missionaction` is a timeline element, with  `aircraftyawaction` and `gimbalattitudeaction` subclasses being examples of specific actions.  if a mission is being executed in a timeline, the mission operator can still be used to get state  information of the mission as well as change mission execution parameters.  timeline elements can also have triggers (`trigger`) associated with them. triggers are separate objects that are run in parallel with a timeline element. the trigger object is used to initiate actions if a set of criteria are met. for example, a trigger could be used to monitor battery level, and then initiate an action once a threshold is passed.  > mission control is accessed from `getmissioncontrol` in `djisdkmanager`.",
             "missionaction",
             "base class for all mission control timeline based actions.",
             "trigger",
             "mission triggers can be used to trigger an action during the execution of a timeline element if a set of criteria is met. the subclass of `trigger` should implement the logic for collecting and judging the criteria, and then executing the action. mission triggers are  used in the timeline element `timelineelement`.  trigger actions can be listened to, so when subclassing this class, `notifylistenersofevent` should be used to notify listeners of trigger events.  see also: djimissioncontrol",
             "waypointmissionoperator",
             "the waypoint operator is the only object that controls, runs and monitors waypoint missions. it can be accessed from `missioncontrol`.",
             "followmemissionoperator",
             "the follow me mission operator is the only object that controls, runs and monitors followme missions. it can be accessed from `missioncontrol`.",
             "panoramamissionoperator",
             "the panorama mission operator is the only object that controls, runs and monitors panorama missions. it can be accessed from `missioncontrol`.",
             "hotpointmissionoperator",
             "the hotpoint mission operator is the only object that controls, runs and monitors hotpoint missions. it can be accessed from `missioncontrol`.",
             "tapflymissionoperator",
             "the operator for tapfly mission. it is used to execute a tapfly mission.",
             "activetrackoperator",
             "the active track mission operator is the only object that controls, runs and monitors activetrack missions. it can be accessed from `missioncontrol`.  an activetrack mission allows an aircraft to track a moving subject using the vision system and without a gps tracker on the subject. to use an activetrack mission:  - prepare a mission with the rectangle that best represents the  target to track  - start the mission to initiate tracking of the object and  begin the state updates (djimissionprogressstatus)  - at this point, the  aircraft will track the target while hovering in place.  - give confirmation that the tracked target is correct  with `acceptconfirmation` and the aircraft will begin flying  relative to the target.  - if the tracking algorithm looses sufficient  confidence in tracking the target, then the aircraft will stop flying relative  to the object and either notify the user (through execution state) that the  target is lost or it needs another confirmation that the target is correct.  - if the mission is paused, the aircraft will hover in place, but continue tracking the target by adjusting gimbal pitch and aircraft yaw.  - if mission is resumed, confirmation of tracking rectangle will need to be sent through to  start flying relative to target.  - the mission can be canceled with `stoptracking`  at any time.  - `stoptracking` should also be used to reject tracking confirmation if the camera is tracking the wrong target. after stopping the mission, the mission needs to be recreated with a new rectangle and loaded into the operator.  - the main camera is used to track the target, so gimbal cannot be adjusted during an  activetrack mission.  - during the mission  the aircraft can be manually flown with pitch, roll and throttle. yaw and gimbal are  automatically controlled to continue tracking the target.  - if the mission is  executing, and after confirmation of the tracking rectangle has been sent, the  aircraft can be manually controlled horizontally similar to a  `home_lock` where the home is the tracked target. if aircraft  is manually controlled upward, the aircraft will lift and retreat, and if it is controlled downward, it will go down and get closer to the target.",
             "commoncallbacks",
             "interfaces of common callbacks used to return results of  asynchronous operations.",
             "djiparamcapability",
             "represents the capability of a parameter of a component or product. this class can be sub-classed to include  additional information on the parameter. `djiparamminmaxcapability` includes the maximum  and minimum possible values of the parameter.",
             "djierror",
             "class that handles all errors that are not handled by individual components.",
             "djidiagnostics",
             "product diagnostics.",
             "djicodecmanager",
             "class that handles encoding and decoding of media.",
             "stick",
             "constructor of the stick object.  @param horizontalposition stick's horizontal position value, the value it's in the range of [-660, 660]. @param verticalposition stick's vertical position value, the value it's in the range of [-660, 660].",
             "gethorizontalposition",
             "get the stick's horizontal position value, the value it's in the range of [-660, 660].  @return an int value.",
             "getverticalposition",
             "get the stick's vertical position value, the value it's in the range of [-660, 660].  @return an int value.",
             "getloggedindjiuseraccountname",
             "the name of the currently logged in user account.  @param callback the execution callback with the returned execution result.",
             "getuseraccountstate",
             "gets the dji user account state.  @return an enum value of `useraccountstate`.",
             "logintodjiuseraccount",
             "after invoking this method, a dialog redirecting users to log into their dji account  will be shown. for users outside of china, authorization is required to unlock  authorization zones. after the login process, if `authorizationrequired` is `true`,  and the user is currently out of china and the account has not been authorized to  unlock authorization zones, the dialog will then redirect users to authorize their account.  @param context the android activity's or view's context. @param callback the execution callback with the returned execution result.",
             "logoutofdjiuseraccount",
             "logs out the dji user that is logged in.  @param callback the `completion callback` with the returned execution result.",
             "useraccountstate",
             "user account status. users need to be logged in.",
             "not_logged_in",
             "user is not logged in. user needs to be logged in to retrieve currently unlocked,  and unlock authorization zones.",
             "not_authorized",
             "user is logged in but has not been authorized to unlock authorization zones.",
             "authorized",
             "user is logged in and has been authorized to unlock authorization zones.",
             "token_out_of_date",
             "the token of the user account is out of date.",
             "invalid_token",
             "the token of the signed in account is invalid.",
             "unknown",
             "unknown.",
             "getinstance",
             "the instance of `videofeeder`.  @return an object of `videofeeder`.",
             "addphysicalsourcelistener",
             "add physical source listener.  @param listener an interface of `physicalsourcelistener`.",
             "removephysicalsourcelistener",
             "remove physical source listener.  @param listener an interface of `physicalsourcelistener`.",
             "getprimaryvideofeed",
             "the primary video feed.  the possible physical sources for the primary video feed include:  - `main_cam`  -  `lb`  -  `hdmi`  -  `left_cam`  -  `right_cam` for m210 and m210 rtk, the  physical sources are controlled by the bandwidth allocation between the port (left) and starboard  (right) main cameras (`setbandwidthallocationforleftcamera`):  - when bandwidth  is 100% on the left camera, the primary source is  `left_cam` and the secondary source is  `fpv_cam`.  - when bandwidth is 0%  on the left camera, the primary source is `right_cam` and the secondary source is `fpv_cam`.  - when  bandwidth is neither 0% nor 100% on the left camera, the primary source is  `left_cam` and the secondary source is  `right_cam`.  @return an object of `videofeed`.",
             "getsecondaryvideofeed",
             "the secondary video feed.  the possible physical sources for the secondary video feed include:  - `fpv_cam`  -  `ext`  -  `av`  - `right_cam`. for m210 and m210 rtk, the physical  sources are controlled by the bandwidth allocation between the port (left) and starboard (right) main cameras  (`setbandwidthallocationforleftcamera`):  - when bandwidth is 100% on the left camera, the primary  source is `left_cam` and the secondary source is  `fpv_cam`.  - when bandwidth is 0% on the left camera,  the primary source is `right_cam` and the secondary source is  `fpv_cam`.  - when bandwidth is neither 0% nor 100% on  the left camera, the primary source is `left_cam` and the  secondary source is `right_cam`.  @return a `videofeed` object.",
             "videofeed",
             "video feed. use it to receive video data from a physical source.",
             "physicalsource",
             "the physical source of a video feed.",
             "main_cam",
             "the video feed is from the main camera. it is the physical source used by most of dji products.  for m210 and m210 rtk, `left_cam`  and `right_cam` are used instead.",
             "fpv_cam",
             "the video feed is from the fpv camera on inspire 2 or m200 series.",
             "ext",
             "the video feed is from ext port while ext port is enabled. it is only used for lightbridge 2 or aircrafts with lightbridge 2 (e.g. m600).",
             "lb",
             "the video feed is from one of the lb ports (av or hdmi) while ext port is enabled.  it is only used for stand-alone lightbridge 2 or aircraft with stand- alone lightbridge 2 modules (e.g. m600).",
             "hdmi",
             "the video feed is from the hdmi port while ext port is disabled.  it is only used for stand-alone lightbridge 2 or aircraft with stand-alone lightbridge 2 modules.",
             "av",
             "the video feed is from av port while ext port is disabled. it is only used for stand-alone lightbridge 2 or aircraft with stand-alone lightbridge 2 modules.",
             "left_cam",
             "the video feed is from the port (left) main camera. it is only used for m210 and m210 rtk.",
             "right_cam",
             "the video feed is from the starboard (right) main camera. it is only used for m210 and m210 rtk.",
             "unknown",
             "unknown video physical source.",
             "physicalsourcelistener",
             "physical source listener.",
             "onchange",
             "called when the physical source changes.  @param videofeed an interface of `videofeed`. @param newphysicalsource an int value.",
             "videodatacallback",
             "video data callback.",
             "onreceive",
             "callback that is called when video data is received  @param videobuffer an array containing video buffer @param size the size of the buffer that contains valid data",
             "setcallback",
             "start listening to video data.  @param callback the execution callback with the returned value.",
             "setcallback",
             "get the callback object.",
             "getvideosource",
             "gets the physical sources of the video data.  @return an int value.",
             "setuplinksignalqualitycallback",
             "define a callback to listen for updates on the uplink signal  @param callback the `signalqualitycallback` interface.",
             "setdownlinksignalqualitycallback",
             "define a callback to listen for updates on the downlink signal  @param callback the `signalqualitycallback` interface.",
             "islightbridgelinksupported",
             "`true` if lightbridge air link is supported.  @return a boolean value.",
             "getlightbridgelink",
             "returns the lightbridge air link if it is available.  @return an instance of `lightbridgelink`.",
             "isocusynclinksupported",
             "`true` if the ocusync link is supported. ocusync link is only supported by mavic pro.  @return a boolean value.",
             "getocusynclink",
             "returns the ocusync link if it is available.  @return an instance of `ocusynclink`.",
             "iswifilinksupported",
             "`true` if wifi air link is supported.  @return a boolean value.",
             "getwifilink",
             "returns the wifi air link if it is available.  @return an instance of `wifilink`.",
             "signalqualitycallback",
             "updated signal quality in percent for the wireless link. signal quality is a function of signal strength, interference and data rate. signal  quality will be more susceptible to weak signal strengths or high  interference when the data rate is high.",
             "lightbridgelink",
             "this class contains methods to change settings of the lightbridge air link.",
             "ocusynclink",
             "this class contains methods to change ocusync link settings.",
             "wifilink",
             "this class provides methods to change the setting of the product's wifi. rebooting wifi is required in order to make new settings take effect.",
             "onupdate",
             "update signal quality.  @param quality the signal quality in percent with range [0, 100], where 100 is the best quality.",
             "setchannelselectionmode",
             "sets the downlink channel selection mode (automatic or manual).  @param mode channel selection mode for the air link. @param callback the execution callback with the execution result returned.",
             "getchannelselectionmode",
             "gets the downlink channel selection mode.  @param callback the execution callback with the value(s) returned.",
             "getchannelrange",
             "gets the channels available for the current frequency band.  @param callback the execution callback with the value(s) returned.",
             "setchannelnumber",
             "sets the fixed downlink channel. channel selection mode should be set  to `manual`. the valid range  of channel can be obtained from `getchannelrange`.  @param channelnumber specific channel for the air link. @param callback the execution callback with the execution result returned.",
             "getchannelnumber",
             "gets current downlink channel of air link.  @param callback the execution callback with the value(s) returned.",
             "setdatarate",
             "sets the downlink data rate (throughput). higher data rates increase the quality of video transmission, but can  only be used at shorter ranges.  @param rate fixed rate (throughput). @param callback the execution callback with the execution result returned.",
             "getdatarate",
             "gets the current downlink data rate (throughput).  @param callback the execution callback with the value(s) returned.",
             "settransmissionmode",
             "sets fpv video quality vs latency preference. this mode only effects the fpv camera and not the camera on the hd gimbal.  @param mode quality vs latency tradeoff for the fpv video @param callback the execution callback with the execution result returned.",
             "gettransmissionmode",
             "gets fpv video quality vs latency preference. this mode only effects the fpv camera and not the camera on the hd gimbal.  @param callback the execution callback with the value(s) returned.",
             "setbandwidthallocationforlbvideoinputport",
             "sets the percentage downlink video bandwidth dedicated to the video  feed from one of the lb input ports. the remaining percentage is dedicated  to the video feed from ext input port. setting 100% dedicates all the video bandwidth to lb.  @param percent percentage downlink bandwidth for video feed from lb port. @param callback the execution callback with the execution result returned.",
             "getbandwidthallocationforlbvideoinputport",
             "gets the percentage downlink video bandwidth dedicated to the video feed from one of  the lb input ports. the remaining percentage is dedicated to the video feed from ext input port.  @param callback the execution callback with the value(s) returned.",
             "setbandwidthallocationformaincamera",
             "sets the percentage downlink video bandwidth dedicated to the main camera or main cameras (for  m210 and m210 rtk). the remaining percentage is dedicated to the fpv camera. for m210 and m210  rtk, the bandwidth for main cameras can be further divided by calling  `setbandwidthallocationforleftcamera`. it is only supported by inspire 2  and m200 series.  @param percent percentage downlink bandwidth for main camera(s). @param callback the execution callback with the value(s) returned.",
             "getbandwidthallocationformaincamera",
             "gets the percentage downlink video bandwidth dedicated to the main camera or main cameras  (for m210 and m210 rtk). the remaining percentage is dedicated to the fpv camera. it is  only supported by inspire 2 and m200 series.  @param callback the execution callback with the value(s) returned.",
             "setbandwidthallocationforleftcamera",
             "sets the percentage of the main cameras' bandwidth dedicated to the left camera. the remaining percentage  is dedicated to the right camera. the main cameras' bandwidth is determined by  `setbandwidthallocationformaincamera`.  this setting will influnce the physical sources  of video feeds (`getprimaryvideofeed` and `getsecondaryvideofeed`):  - when  bandwidth is 100% on the left camera, the primary source is `left_cam` and the secondary source is `fpv_cam`.  - when bandwidth 0% on  the left camera, the primary source is `right_cam` and the secondary  source is `fpv_cam`.  - when bandwidth is neither 0% nor 100% on  the left camera, the primary source is `left_cam` and the secondary  source is `right_cam`. it is only supported by m210 and m210 rtk.  @param percent percentage downlink bandwidth for fpv camera. @param callback the execution callback with the value(s) returned.",
             "getbandwidthallocationforleftcamera",
             "when a product has multiple main cameras, this method gets the percentage bandwidth allocation  dedicated to the port (left) camera. the remaining percentage is dedicated to the starboard  (right) camera. the total bandwidth allocated to both main cameras (vs the fpv camera) is  determined by `setbandwidthallocationformaincamera`.  this setting will  influence the physical sources of video feeds (`getprimaryvideofeed`  and `getsecondaryvideofeed`):  - when bandwidth is 100% on the left camera,  the primary source is `left_cam` and the secondary source is `fpv_cam`.  - when bandwidth is 0% on the left camera, the primary source is  `right_cam` and the secondary source  is `fpv_cam`.  - when bandwidth is  neither 0% nor 100% on the left camera, the primary source is  `left_cam` and the secondary source is  `right_cam`.  it is only supported  by m210 and m210 rtk.  @param callback the execution callback with the value(s) returned.",
             "issecondaryvideooutputsupported",
             "return whether secondary video output supported.  @return a boolean value.",
             "setsecondaryvideooutputenabled",
             "enable secondary video output on remote controller. the remote controller outputs video to the mobile device by  default. this will enable a secondary video stream to one of the remote controller's physical hdmi and sdi ports.  @param enabled enables secondary video output. @param callback the execution callback with the execution result returned.",
             "getsecondaryvideooutputenabled",
             "gets whether secondary video output on remote controller is enabled. the remote controller outputs video to the  mobile device by default, but a secondary video can be routed to its hdmi or sdi port.  use `setsecondaryvideooutputenabled` to enable or disable,  and `setsecondaryvideooutputport` to choose the port.  @param callback the execution callback with the value(s) returned.",
             "setsecondaryvideooutputport",
             "sets secondary video output port on remote controller. hdmi or sdi are possible. only one port can be active at once.  @param port secondary video output port. @param callback the execution callback with the execution result returned.",
             "getsecondaryvideooutputport",
             "gets the secondary video output port on remote controller. hdmi or sdi are possible. only one port can be active at once.  @param callback the execution callback with the value(s) returned.",
             "setsecondaryvideodisplay",
             "sets the secondary video output picture in picture (pip) display mode. the air link module can connect to both  an fpv camera (through the hdmi and av ports) and a camera mounted on the hd gimbal (through the gimbal port).  the output video can then be a combination of the two video sources. either a single video source can be  displayed, or one can be displayed within the other (as a picture in picture, or pip). if the mode is set  incorrectly,  then no output video will be displayed.  @param mode picture in picture (pip) display mode. @param callback the execution callback with the execution result returned.",
             "getsecondaryvideodisplay",
             "gets the secondary video output picture in picture (pip) display mode. the air link module can connect to both an  fpv camera (through the hdmi and av ports) and a camera mounted on the hd gimbal (through the gimbal port). the  output video can then be a combination of the two video sources. either a single video source can be displayed, or  one can be displayed within the other (as a picture in picture, or pip).  @param callback the execution callback with the value(s) returned.",
             "setsecondaryvideoosdenabled",
             "enables and disables on screen display (osd) overlay on the secondary video. osd is flight data like altitude,  attitude etc. and can be overlayed on the pip video.  @param enabled determines whether to display osd on screen. @param callback the execution callback with the execution result returned.",
             "getsecondaryvideoosdenabled",
             "determines whether on screen display (osd) is overlayed on the video feed.  @param callback the execution callback with the value(s) returned.",
             "setsecondaryvideoosdtopmargin",
             "sets the osd top margin in video pixels.  @param margin top margin of osd. the range is [0, 50]. @param callback the execution callback with the execution result returned.",
             "getsecondaryvideoosdtopmargin",
             "gets the osd top margin in video pixels.  @param callback the execution callback with the value(s) returned.",
             "setsecondaryvideoosdleftmargin",
             "sets the osd left margin in video pixels.  @param margin left margin of osd. the range is [0, 50]. @param callback the execution callback with the execution result returned.",
             "getsecondaryvideoosdleftmargin",
             "gets the osd left margin in video pixels.  @param callback the execution callback with the value(s) returned.",
             "setsecondaryvideoosdbottommargin",
             "sets the osd bottom margin in video pixels.  @param margin bottom margin of osd. the range is [0, 50]. @param callback the execution callback with the execution result returned.",
             "getsecondaryvideoosdbottommargin",
             "gets the osd bottom margin in video pixels.  @param callback the execution callback with the value(s) returned.",
             "setsecondaryvideoosdrightmargin",
             "sets the osd right margin in video pixels.  @param margin right margin of osd. the range is [0, 50]. @param callback the execution callback with the execution result returned.",
             "getsecondaryvideoosdrightmargin",
             "gets the osd right margin in video pixels.  @param callback the execution callback with the value(s) returned.",
             "setsecondaryvideoosdunit",
             "sets the osd units to either metric or imperial.  @param unit osd units. @param callback the execution callback with the execution result returned.",
             "getsecondaryvideoosdunit",
             "gets the osd units (metric or imperial).  @param callback the execution callback with the value(s) returned.",
             "setsecondaryvideooutputformat",
             "sets the remote controller hdmi video port output video format.  @param port the value of the `lightbridgesecondaryvideooutputport` enum. @param format the value of the `lightbridgesecondaryvideoformat` enum. @param callback the execution callback with the execution result returned.",
             "getsecondaryvideooutputformatforport",
             "gets the remote controller hdmi video port output video format.  @param port the value of the `lightbridgesecondaryvideooutputport` enum. @param callback the execution callback with the execution result returned.",
             "setsecondaryvideopipposition",
             "sets the pip (picture in picture) position relative to the top left corner of the main subject video feed.  @param position position of the pip on the screen. @param callback the execution callback with the execution result returned.",
             "getsecondaryvideopipposition",
             "gets the pip (picture in picture) position relative to the top left corner of the main subject video feed.  @param callback the execution callback with the value(s) returned.",
             "isdualencodemodesupported",
             "`true` if lightbridge 2 device supports dual encode mode. dual encode mode allows the  lightbridge module to encode and transmit both it's av and hdmi inputs simultaneously.  @return a boolean value.",
             "setextvideoinputportenabled",
             "sets lightbridge 2 encode mode. it is only available when `isdualencodemodesupported` returns  `true`. for lightbridge 2 modules that don't support dual encode mode, the encode mode is  always single.  @param enabled the encode mode to set. @param callback the execution callback with the execution result returned.",
             "getextvideoinputportenabled",
             "gets lightbridge 2 encode mode. it is only available when `isdualencodemodesupported` returns  `true`. for lightbridge 2 modules that don't support dual encode mode, the encode mode is  always single.  @param callback the execution callback with the value(s) returned.",
             "setbandwidthallocationforhdmivideoinputport",
             "sets the computational power and bandwidth balance between av and hdmi inputs on the lightbridge 2 module when  dual encode mode is enabled. balance is in percent [0.0,  1.0]. it is only available  when `isdualencodemodesupported` returns `true`. when percent</code> is 0.0,  all resources are allocated for video data from av port. when percent</code> is 1.0, all resources are allocated for video data from hdmi port.  @param percent percentage resources dedicated to hdmi encoding and transmission. @param callback the execution callback with the execution result returned.",
             "getbandwidthallocationforhdmivideoinputport",
             "gets the computational power and bandwidth balance between av and hdmi inputs on the lightbridge 2 module when  dual encode mode is enabled. it is only available when `isdualencodemodesupported` returns  `true`. when percent</code> is 0.0, all resources are allocated for video data from av  port. when percent</code> is 1.0, all resources are allocated for video data from hdmi port.  @param callback the execution callback with the value(s) returned.",
             "getsupportedfrequencybands",
             "gets the frequency bands supported by the product in the current area. it is only supported by inspire 2 and  phantom 4 pro. for the other products with lb air link, the frequency band is always 2.4 ghz.  @param callback the execution callback with the value(s) returned.",
             "setfrequencyband",
             "sets the lb air link frequency band. it is only supported by inspire 2 and phantom 4 pro. for the other products  with lb air link, the frequency band is always 2.4 ghz.  @param frequencyband lbairlink frequency band to change to. @param callback the execution callback with the value(s) returned.",
             "getfrequencyband",
             "gets the lb air link frequency band. it is only supported by inspire 2 and phantom 4 pro. for the other products  with lb air link, the frequency band is always 2.4 ghz.  @param callback the execution callback with the value(s) returned.",
             "channelinterference",
             "the interference power of a lbairlink channel.",
             "getpower",
             "the interference power with range from [-60, -100] dbm. a smaller, more negative value represents less  interference and better communication quality.  @return an int value.",
             "getchannel",
             "the channel number. different frequency bands have different channel index ranges.  @return an int value.",
             "lightbridgefrequencyband",
             "lbairlink frequency band. supported only by phantom 4 professional.",
             "frequency_band_2_dot_4_ghz",
             "the lbairlink frequency band is 2.4 ghz.",
             "frequency_band_5_dot_7_ghz",
             "the lbairlink frequency band is 5.7 ghz.",
             "frequency_band_5_dot_8_ghz",
             "the lbairlink frequency band is 5.8 ghz.",
             "unknown",
             "the lbairlink frequency is unknown.",
             "channelselectionmode",
             "downlink channel selection mode (manual or automatic) for the wireless link.",
             "auto",
             "air link will automatically select the best physical channel based on the signal environment.",
             "manual",
             "manually select the physical channel.",
             "unknown",
             "unknown physical channel selection mode.",
             "lightbridgeunit",
             "osd data units.",
             "imperial",
             "imperial.",
             "metric",
             "metric.",
             "unknown",
             "unknown.",
             "lightbridgesecondaryvideooutputport",
             "remote controller port to which to send secondary video (in addition to usb video sent to the mobile device).",
             "hdmi",
             "hdmi port.",
             "sdi",
             "sdi port.",
             "unknown",
             "unknown.",
             "lightbridgesecondaryvideodisplaymode",
             "defines the combination of video sources to form the secondary output video. the secondary output can display  video streams from one or two input sources. when the encode mode is single:</br> source 1 represents video from  one of the source1only input ports (hdmi or av).</br> source 2 represents video from ext input port  (hd gimbal camera).</br> when the encode mode is dual:</br> source 1 represents video from hdmi input port.</br>  source 2 represents video from av input port.",
             "source_1_only",
             "displays video from source 1 only. when the current encode mode is single, the secondary output will display  video from hdmi or av input. when the current encode mode is dual, the secondary output will display video from  hdmi input.",
             "source_2_only",
             "displays video from source 2 only. when the current encode mode is single, the secondary output will display  video from hd gimbal camera. when the current encode mode is dual, the secondary output will display video from  av input.",
             "source_1_main",
             "displays the video from source 1 as the main subject, and the video from source 2 in a mini window (picture in  picture, or pip).",
             "source_2_main",
             "displays the video from source 2 as the main subject, and the video from source 1 in a mini window (picture in  picture, or pip).",
             "unknown",
             "unknown output mode.",
             "lightbridgesecondaryvideoformat",
             "secondary output video resolution and frame rate.",
             "resolution_1080i_60fps",
             "1080i 60fps.",
             "resolution_1080i_50fps",
             "1080i 50fps.",
             "resolution_1080p_60fps",
             "1080p 60fps.",
             "resolution_1080p_50fps",
             "1080p 50fps.",
             "resolution_1080p_30fps",
             "1080p 30fps.",
             "resolution_1080p_25fps",
             "1080p 25fps.",
             "resolution_1080p_24fps",
             "1080p 24fps.",
             "resolution_720p_60fps",
             "720p 60fps.",
             "resolution_720p_50fps",
             "720p 50fps.",
             "resolution_720p_30fps",
             "720p 30fps.",
             "resolution_720p_25fps",
             "720p 25fps.",
             "resolution_720p_24fps",
             "720p 24fps.",
             "unknown",
             "unknown.",
             "lightbridgepipposition",
             "pip (picture in picture) position on the screen relative to the main subject video.",
             "top_left",
             "pip is on the screen's top left.",
             "top_right",
             "pip is on the screen's top right.",
             "bottom_left",
             "pip is on the screen's bottom left.",
             "bottom_right",
             "pip is on the screen's bottom right.",
             "unknown",
             "unknown pip position.",
             "lightbridgetransmissionmode",
             "fpv(first-person view) video can prioritize either quality or latency.",
             "high_quality",
             "high quality priority.",
             "low_latency",
             "low latency priority.",
             "unknown",
             "unknown.",
             "lightbridgedatarate",
             "wireless downlink data rate. lower rates are used for longer ranges, but will have lower video quality.",
             "bandwidth_4_mbps",
             "4 mbps (potential range up to 3 km)",
             "bandwidth_6_mbps",
             "6 mbps (potential range up to 2 km)",
             "bandwidth_8_mbps",
             "8 mbps (potential range up to 1.5 km)",
             "bandwidth_10_mbps",
             "10 mbps (potential range up to 0.7 km)",
             "unknown",
             "unknown.",
             "lightbridgeantennarssi",
             "rssi object (received signal strength indicator).",
             "getantenna1",
             "antenna1 rssi value  @return an int value of antenna rssi.",
             "getantenna2",
             "antenna2 rssi value  @return an int value of antenna rssi.",
             "setaircraftantennarssicallback",
             "set callback to receive rssi information on each antenna of aircraft.  @param callback the interface of `antennarssicallback`.",
             "setremotecontrollerantennarssicallback",
             "set callback to receive rssi information on each antenna of remote controller.  @param callback the interface of `antennarssicallback`.",
             "onupdate",
             "method called when antenna rssi information has updated.  @param antennarssi an instance of `lightbridgeantennarssi`.",
             "setchannelinterferencecallback",
             "sets up the djilbairlinkupdatedallchannelinterferencecallback.  @param callback the `channelinterferencecallback`.",
             "onresult",
             "signal strength of all signals present on all available downlink channels. signals  that are not the communication signal are considered interference.  @param channelinterferences the updated interference information. the elements in the array  of `channelinterference` objects each hold the  interference signal strength of a channel. elements are sorted by increasing  channel number.",
             "antennarssicallback",
             "callback of antenna rssi information for each antenna.",
             "channelinterferencecallback",
             "callback of signal strength of all signals present on all available downlink channels. signals that are not the  communication signal are considered interference.",
             "setvideodataratecallback",
             "sets the callback for videodatarateupdatedcallback.  @param videodataratecallback an interface of `videodataratecallback`.",
             "setwarningmessagescallback",
             "sets the callback for receivedwarningmessagecallback.  @param warningmessagescallback your implementation of `warningmessagescallback`.",
             "setchannelinterferencecallback",
             "sets the frequencyinterferenceupdatedcallback.  @param callback your implementation of `channelinterferencecallback`.",
             "setchannelselectionmode",
             "sets the channel selection mode. both channel number and bandwidth can be changed. if the 5 ghz band is available,  then channels from that band can also be used.  @param mode selection mode to set. @param callback the execution callback with the returned execution result.",
             "getchannelselectionmode",
             "gets the channel selection mode.  @param callback the execution callback with the value(s) returned.",
             "setchannelbandwidth",
             "sets the channel bandwidth of the ocusync link. it can be set only when the selection mode is  `manual`.  @param bandwidth bandwidth to set. @param callback the execution callback with the returned execution result.",
             "getchannelbandwidth",
             "gets the channel bandwidth of the ocusync link.  @param callback the execution callback with the returned value(s).",
             "setchannelnumber",
             "selects the channel number. the ocusync link operates on a  10 mhz or 20 mhz channel between 2400.5 mhz and 2482.5 mhz. the channel can be centered at 1 mhz steps within the  band. therefore for a 10 mhz bandwidth, the ocusync channel can be centered at 2405.5 mhz, 2406.5 mhz and every 1  mhz to 2477.5 mhz. for a 20 mhz bandwidth, channel center can be at 2410.5 mhz to 2472.5 mhz in 1 mhz steps. the  channel location within the band is specified using the channel number. channel number is defined as the integer  of 0.5 mhz less than the channel center frequency. e.g. channel number 2406 represents the 10 mhz channel centered  at 2406.5 mhz (this is only for the 10 mhz bandwidth as 20 mhz bandwidth channels start at 2410.5 mhz). channel  number 2450 represents the channel centered at 2450.5 mhz (of any bandwidth).  use `getchannelnumbervalidrange` to check the valid channel numbers for a given bandwidth. channel  number can only be set when the channel selection mode is `manual`.  @param channelnumber channel number to set ocusync channel to. @param callback completion block that receives the setter result.",
             "getchannelnumber",
             "gets the current ocusync link channel number. the ocusync link operates on a 10 mhz or 20 mhz channel between  2400.5 mhz and 2482.5 mhz. the channel can be centered at 1 mhz steps within the band. therefore for a 10 mhz  bandwidth, the ocusync channel can be centered at 2405.5 mhz, 2406.5 mhz and every 1 mhz to 2477.5 mhz. for a  20 mhz bandwidth, channel center can be at 2410.5 mhz to 2472.5 mhz in 1 mhz steps. the channel location within  the band is specified using the channel number. channel number is defined as the integer of 0.5 mhz less than the  channel center frequency. e.g. channel number 2406 represents the 10 mhz channel centered at 2406.5 mhz (this is  only for the 10 mhz bandwidth as 20 mhz bandwidth channels start at 2410.5 mhz). channel number 2450 represents the channel centered at 2450.5 mhz (of any bandwidth).  @param callback completion block that receives the getter result.",
             "getchannelnumbervalidrange",
             "gets the valid range of channel numbers. the ocusync link operates on a 10 mhz or 20 mhz channel between  2400.5 mhz and 2482.5 mhz. the channel can be centered at 1 mhz steps within the band. therefore for a 10 mhz  bandwidth, the ocusync channel can be centered at 2405.5 mhz, 2406.5 mhz and every 1 mhz to 2477.5 mhz. for a  20 mhz bandwidth, channel center can be at 2410.5 mhz to 2472.5 mhz in 1 mhz steps. the channel location within  the band is specified using the channel number. channel number is defined as the integer of 0.5 mhz less than the  channel center frequency. e.g. channel number 2406 represents the 10 mhz channel centered at 2406.5 mhz (this is  only for the 10 mhz bandwidth as 20 mhz bandwidth channels start at 2410.5 mhz). channel number 2450 represents the channel centered at 2450.5 mhz (of any bandwidth). this method should be used to confirm the channel number  to be set with `setchannelnumber` is valid.  @param callback the execution callback with the returned value(s).",
             "videodataratecallback",
             "updated data rate in mbps for the wireless downlink (from aircraft to remote controller). this link transfers all information from aircraft to remote controller, which is predominantly video information.",
             "warningmessagescallback",
             "updated ocusync link warning messages. this delegate method is called only when there are new warning messages on  the ocusync link (either uplink or downlink). if the array has no elements, then all previous warning messages are  no longer in effect.",
             "channelinterferencecallback",
             "updated power for interference signals with frequencies in the 2.4 ghz (2400mhz to 2482 mhz) frequency band incident  on the remote controller. note, measuring the interference reduces effective data rate as the radio is spending time listening to frequencies outside of the communication channel. interference measurements will only be made if  the `setchannelinterferencecallback` property in ocusynclink is assigned to a method that  implements this callback.",
             "frequencyinterference",
             "this class represents the power spectral density of a frequency slice. only supported by mavic pro.",
             "ocusyncwarningmessage",
             "ocusync link warning messages.",
             "frequencyfrom",
             "start frequency.",
             "frequencyto",
             "stop frequency.",
             "rssi",
             "signal strength within the band defined by the start and stop frequencies.",
             "ocusyncbandwidth",
             "the channel bandwidth for the ocusync downlink (from the aircraft to the remote controller). setting a smaller  bandwidth will reduce the data rate, but make the connection more robust.",
             "bandwidth20mhz",
             "the frequency band of the ocusync link is 20 mhz (up to 46 mbps).",
             "bandwidth10mhz",
             "the frequency band of the ocusync link is 10 mhz (up to 23 mbps).",
             "unknown",
             "unknown frequency band.",
             "strong_take_off_interference",
             "warning that interference is high for take-off. when the signal gets weaker as separation between remote  controller and aircraft get larger, there is a change the link will fail.",
             "strong_down_link_interference",
             "there is strong interference on the downlink signal incident on the remote controller. if the channel selection  mode  `manual` is being used, consider changing to   `auto` as the ocusync link can automatically select  channel numbers and bandwidth to mitigate interference on the fly.",
             "strong_up_link_interference",
             "there is strong interference on the uplink signal incident on the aircraft.",
             "weak_signal",
             "weak ocusync signal strength. be aware of anything blocking the signal between the remote controller and aircraft,  adjust the orientation of the antennas on the remote controller, or reduce the distance between remote controller  and aircraft to increase signal strength.",
             "aircraft_link_reboot",
             "the ocusync link on the aircraft is rebooting.",
             "up_link_broken",
             "the uplink from the remote controller to the aircraft is broken. usually if only the uplink disconnects, it is due  to interference on the aircraft's ocusync antennas. try changing the channel number if the interference source  cannot be removed.",
             "down_link_broken",
             "the downlink from the aircraft to the remote controller is broken. usually if only the downlink disconnects, it is  due to interference on the remote controller's ocusync antennas. try changing channel number, or reducing the bandwidth of the channel to make it more robust.",
             "link_unusable",
             "the link between the remote controller and the aircraft is unusable. it is determined to be unusable if signal is  too weak. check to see if the antennas are setup correctly and the path from remote controller to aircraft is unobstructed.",
             "onupdate",
             "updated data rate in mbps for the wireless downlink (from aircraft to remote controller). this link transfers  all information from aircraft to remote controller, which is predominantly video information.  @param newvalue the data rate of the downlink in mbps.",
             "onreceive",
             "updated ocusync link warning messages. this delegate method is called only when there are new warning messages  on the ocusync link (either uplink or downlink). if the array has no elements, then all previous warning  messages are no longer in effect.  @param messages the array of `ocusyncwarningmessage` representation of the current warning messages.",
             "onupdate",
             "updated power for interference signals with frequencies in the 2.4 ghz (2400mhz to 2482 mhz) frequency band  incident on the remote controller. note, measuring the interference reduces effective data rate as the radio  is spending time listening to frequencies outside of the communication channel.  @param rssis the updated interference information. the elements in the array  of `frequencyinterference` objects each hold interference information about a small  part of the frequency band. elements are sorted by increasing frequency.",
             "setmagneticinterferencecallback",
             "sets up the callback for wifi magnetic inteference level.  @param callback the execution callback with the value(s) returned.",
             "setchannelinterferencecallback",
             "setter for rssi callback  @param channelinterferencecallback your implementation of `channelinterferencecallback`.",
             "reboot",
             "reboot wifi to enable new settings to take effect.  @param callback the execution callback with the value(s) returned.",
             "setssid",
             "sets the wifi ssid. the setting will take effect only after the product reboots.  @param ssid the wifi ssid to change. it should only include alphabetic characters, numbers, spaces, '-' and should not be  more than 30 characters. @param callback remote execution result error callback.",
             "getssid",
             "gets the wifi ssid.  @param callback the execution callback with the returned value(s).",
             "setpassword",
             "sets the wifi password.  @param password the new wifi password. it must be at least 8 characters and can only includes alphabetic characters and numbers. @param callback remote execution result error callback.",
             "getpassword",
             "get the wifi password.  @param callback the execution callback with the returned value(s).",
             "setfrequencyband",
             "sets the wifi frequency band.  @param frequencyband wifi frequency band to change to. @param callback the execution callback with the value(s) returned.",
             "getfrequencyband",
             "gets the current wifi frequency band.  @param callback the execution callback with the returned value(s).",
             "setchannelnumber",
             "sets the wifi channel. `getavailablechannelnumbers` must be used to determine which channels are possible  to set. when a new channel is set, the wifi on the product will reboot. the channel can only be changed when the  product is not flying. supported only by mavic pro.  @param channelnumber index of the channel to select. @param callback the execution callback with the returned execution result.",
             "getchannelnumber",
             "gets the wifi channel. channels 1-13 are in the 2.4 ghz band. other channels are in the 5 ghz band.  @param callback the execution callback with the returned value(s).",
             "getavailablechannelnumbers",
             "gets the channels available for the current frequency band. when `frequency_band_dual` is  selected, channels for both 2.4ghz and 5ghz are available. supported only by mavic pro.  @param callback the completion block with the returned execution result.",
             "setdatarate",
             "sets the wifi data rate (throughput). higher data rates increase the quality of video transmission, but can only be  used at shorter ranges.  @param rate data rate (throughput). @param callback the execution callback with the value(s) returned.",
             "getdatarate",
             "gets the current data rate (throughput).  @param callback the execution callback with the returned value(s).",
             "magneticinterferencecallback",
             "this interface provides a method to receive the updated wifi signal quality.",
             "channelinterferencecallback",
             "callback to listen to any changes in interference levels for channels that are not being used for communication.",
             "wififrequencyband",
             "wifi frequency band.",
             "wifichannelinterference",
             "the interference power of a wifi channel.",
             "frequency_band_only_2_dot_4",
             "the wifi frequency band is 2.4 ghz.",
             "frequency_band_5_ghz",
             "the wifi frequency band is 5 ghz.",
             "frequency_band_dual",
             "dual frequency band mode. the wifi frequency band can be either 2.4 ghz or 5 ghz.",
             "unknown",
             "the wifi frequency is unknown.",
             "wifimagneticinterferencelevel",
             "wifi magnetic interference - as measured by osmo, phantom 3 4k and phantom 3 standard.",
             "low",
             "wifi magnetic interference is low.",
             "medium",
             "wifi magnetic interference is medium. at this level, the video quality will be degraded compared to when the signal quality is low.",
             "high",
             "wifi magnetic interference is high. at this level, the video quality will be degraded compared to when the signal quality is medium.",
             "unknown",
             "wifi magnetic interference is unknown.",
             "wifidatarate",
             "wifi data rate. lower rates are used for longer ranges, but will have lower video quality.",
             "rate_1_mbps",
             "1 mbps.",
             "rate_2_mbps",
             "2 mbps.",
             "rate_4_mbps",
             "4 mbps.",
             "unknown",
             "unknown.",
             "getpower",
             "the interference power with range from [-60, -100] dbm. a smaller, more negative value represents less interference and better communication quality.  @return an int value of the interference power.",
             "getchannel",
             "the channel index.  @return an int value of the channel index.",
             "getband",
             "the frequency band that the channel belongs to.  @return a value of `wififrequencyband` enum.",
             "onresult",
             "updates the wifi signal quality.  @param level the wifi magnetic interference level.",
             "onupdate",
             "this will be invoked when there is a change in rssi. interference power of the available channels.  @param channelinterferences an array of all the current rssis.",
             "setstatecallback",
             "sets the callback that updates battery state.  @param callback callback method.",
             "setaggregationstatecallback",
             "sets the callback that updates aggregated battery state.  @param callback callback method.",
             "getcellvoltages",
             "gets the battery's cell voltages. there will be a voltage for each cell in the battery.  @param callback asynchronous execution result callback.",
             "getnumberofcells",
             "returns the number of battery cells.  @return an int value.",
             "setnumberofcells",
             "when the connected battery is not a smart battery, the number of cells needs to be set manually. the flight controller uses the number of cells and the cell voltage threshold to determine if the aircraft should go home or land. the valid range is [3, 12] cells.  @param numberofcells number of cells inside the battery. @param callback asynchronous execution result callback.",
             "issmartbattery",
             "`true` if the battery is a smart battery. when the connected battery is a dji smart battery, more information can be obtained by communicating with the battery.  @return >true</code> if battery is smart battery.",
             "pairbatteries",
             "a battery's full charge capacity reduces a little every time it goes through a discharge and recharge cycle. therefore, older batteries that have gone through many cycles will have lower full charge capacity than newer batteries. when multiple batteries are used simultaneously in a product, the aggregate full charge capacity will be limited by the battery with the lowest full charge capacity.  to optimize the amount of energy delivered by a battery over its lifetime to a product, batteries should be matched or paired with other batteries of similar full charge capacity. the operational challenges of always using paired batteries can be alleviated using the battery pairing interfaces. this method will pair two batteries by recording the aggregate of their serial numbers in each of their firmwares. `getpairingstate` can then be used to determine if the installed battery combination is a previously assigned pair or not. batteries can be repaired.  @param callback completion block that receives the execution result.",
             "getpairingstate",
             "a battery's full charge capacity reduces a little every time it goes through a discharge and recharge cycle. therefore, older batteries that have gone through many cycles will have lower full charge capacity than newer batteries. when multiple batteries are used simultaneously in a product, the aggregate full charge capacity will be limited by the battery with lowest full charge capacity.  to optimize the amount of energy delivered by a battery over its lifetime to a product, batteries should be matched or paired with other batteries of similar full charge capacity. the operational challenges of always using paired batteries can be alleviated using the battery pairing interfaces. this method can then be used to determine if the installed battery combination is a previously assigned pair or not.  @param callback callback that receives the pairing state.",
             "setlevel1cellvoltagethreshold",
             "sets the level 1 cell voltage threshold in mv. when the cell voltage of the battery crosses below the threshold, level 1 behavior will be executed. the valid range is [3600, 4000] mv. when the new value is not 100 mv higher than the level 2 cell voltage threshold, the level 2 threshold will be set to (new value - 100) mv.  @param voltage level 1 cell voltage threshold to set in mv. @param callback completion block that receives the setter execution result.",
             "getlevel1cellvoltagethreshold",
             "gets the level 1 cell voltage threshold in mv. when the cell voltage of the battery crosses below the threshold, level 1 behavior will be executed. the valid range is [3600, 4000] mv.  @param callback asynchronous execution result callback that contains the voltage threshold.",
             "setlevel2cellvoltagethreshold",
             "sets the level 2 cell voltage threshold in mv. when the cell voltage of the battery crosses below the threshold, level 2 behavior will be executed. the valid range is [3500, 3800] mv and must be at least 100 mv lower than the level 1 voltage threshold.  @param voltage level 2 cell voltage threshold to set in mv. @param callback asynchronous execution result callback.",
             "getlevel2cellvoltagethreshold",
             "gets the level 2 cell voltage threshold in mv. when the cell voltage of the battery crosses below the threshold, level 2 behavior will be executed.  @param callback asynchronous execution result callback that contains the voltage threshold.",
             "setlevel1cellvoltagebehavior",
             "sets the behavior that will be executed when the cell voltage crosses under the level 1 threshold. it can only be set when the motors are off.  @param behavior level 1 behavior. @param callback completion block that receives the setter execution result.",
             "getlevel1cellvoltagebehavior",
             "gets the behavior that will be executed when the cell voltage crosses under the level 1 threshold.  @param callback asynchronous execution result callback that contains the voltage threshold behavior.",
             "setlevel2cellvoltagebehavior",
             "sets the operation that will be executed when the cell voltage crosses under level 2 threshold. it can only be set when motors are off.  @param behavior level 2 behavior. @param callback asynchronous execution result callback.",
             "getlevel2cellvoltagebehavior",
             "sets the behavior that will be executed when the cell voltage crosses under the level 2 threshold.  @param callback asynchronous execution result callback that contains the voltage threshold behavior.",
             "getlatestwarningrecord",
             "gets the battery's most recent warning record. anytime the battery experiences a significant exception, it will get recorded as a warning record.  @param callback asynchronous execution result callback that contains the latest warning record.",
             "getwarningrecords",
             "gets the battery's warning records, which are kept for 30 days using objects of type warningrecord</code>. call the issmartbattery()</code> method before using this method. not supported by osmo and non-smart batteries.  @param callback asynchronous execution result callback that contains the batteries warning records.",
             "setselfdischargeindays",
             "smart batteries can be setup to automatically discharge over a custom period of time. this method sets the battery's self discharge period in days with range [1, 10]. for inspire 2 and m200 series products, the max range value  can be 20. not supported by non-smart batteries and the osmo series.  @param days day for self-discharge @param callback asynchronous execution result callback.",
             "getselfdischargeindays",
             "smart batteries can be setup to automatically discharge over a custom period of time. this method gets the battery's self discharge period in days with range [1, 10]. not supported by non-smart batteries and the osmo series.  @param callback asynchronous execution result callback that contains the number of days to discharge over.",
             "batterystate",
             "supported by both smart and non-smart batteries, this class keeps track of the real-time state of the battery. non-smart batteries only support the following properties:  - when the connected product is a3 and n3, only `getvoltage` and `getcellvoltagelevel` are valid.  - when the connected product is a2, only `getvoltage` is valid.",
             "aggregationstate",
             "provides a real time summary of the aggregated battery system.",
             "warningrecord",
             "used to keep a record of any unusual battery statues in the past 30 discharges. for all the properties below, monitor these values frequently to ensure the battery's state is normal. if any of the properties below indicate there is an issue with the battery, notifying the user is recommended. </br></br> note: no automatic action will be taken if any of the properties below return `true`, which is why it is imperative that the user is notified of the issue.",
             "lowvoltagebehavior",
             "defines aircraft's behavior when the cell voltage is low.",
             "pairingstate",
             "battery pairing state for batteries that can be paired.",
             "flash_led",
             "led lights go into warning mode.",
             "go_home",
             "return-to-home.",
             "land",
             "land aircraft immediately.",
             "unknown",
             "unknown.",
             "unpaired",
             "the batteries didn't match; they're not paired.",
             "paired",
             "batteries are paired.",
             "unknown",
             "can't get the pair state or the batteries.",
             "onupdate",
             "callback to update battery state.  @param batterystate the battery's state.",
             "onupdate",
             "callback to update aggregated battery state.  @param aggregationstate the aggregated battery state.",
             "getnumberofconnectedbatteries",
             "the number of currently connected batteries.  @return an int value.",
             "getbatteryoverviews",
             "returns the overview of batteries in the battery group. when a battery is not connected, the `isconnected` property is `false` and the `getchargeremaininginpercent` is zero. for matrice 600, there are 6 elements in this array.  @return the `batteryoverview` instance.",
             "isanybatterydisconnected",
             "`true` if one of the batteries in the group is disconnected. when `true`, the aircraft is not allowed to take off.  @return a boolean value.",
             "getcurrent",
             "returns the real time current draw through the batteries. a negative value means the batteries are being discharged.  @return an int value.",
             "getvoltage",
             "returns the current voltage (mv) provided by the battery group.  @return an int value.",
             "isvoltagedifferencedetected",
             "`true` if there is significant difference between the voltage (above 1.5v) of two batteries. when  `true`, the aircraft is not allowed to take off.  @return a boolean value.",
             "islowcellvoltagedetected",
             "`true` if one of the batteries in the group has cells with low voltage. when `true`, the aircraft is not allowed to take off.  @return a boolean value.",
             "iscelldamaged",
             "`true` if one of the batteries in the group has damaged cells. when `true`, the aircraft is not allowed to take off.  @return a boolean value.",
             "getfullchargecapacity",
             "returns the the total amount of energy, in mah (milliamp hours), stored in the batteries when the batteries are fully charged.  @return an int value.",
             "getchargeremaining",
             "returns the remaining energy stored in the batteries in mah (milliamp hours).  @return an int value.",
             "getchargeremaininginpercent",
             "returns the percentage of energy left in the battery group with range [0,100].  @return an int value.",
             "gethighesttemperature",
             "returns the highest temperature (in celsius) among the batteries in the group, with range [-128, 127] degrees.  @return an int value.",
             "isfirmwaredifferencedetected",
             "`true` if one of the batteries in the group has a firmware version different from the others. when it is `true`, the aircraft is not allowed to take off.  @return a boolean value.",
             "callback",
             "this interface provides a callback to update the current aggregated battery state.",
             "batteryoverview",
             "provides an overview of a battery when aircraft is using multiple batteries.",
             "batteryconnectionstate",
             "battery connection status. 0 means normal, 1 means invalid, and 2 means exception in communication.",
             "normal",
             "normal.",
             "invalid",
             "invalid.",
             "exception",
             "exception.",
             "unknown",
             "unknown.",
             "getindex",
             "index of the battery. index starts from 0. for matrice 600, the number 1 battery compartment relates to index 0.  @return an int value.",
             "isconnected",
             "`true` if the battery is currently connected to the aircraft.  @return a boolean value.",
             "getchargeremaininginpercent",
             "the remaining percentage energy of the battery with range [0, 100].  @return an int value.",
             "getfullchargecapacity",
             "returns the total amount of energy, in mah (milliamp hours), stored in the battery when the battery is fully charged. the energy of the battery at full charge changes over time as the battery continues to get used. over time, as the battery continues to be recharged, the value of `getfullchargecapacity` will decrease.  @return an int value.",
             "getchargeremaining",
             "returns the remaining energy stored in the battery in mah (milliamp hours).  @return an int value.",
             "getchargeremaininginpercent",
             "returns the percentage of battery energy left with range [0, 100].  @return an int value.",
             "getvoltage",
             "returns the current battery voltage (mv).  @return an int value.",
             "getcurrent",
             "returns the real time current draw of the battery (ma). a negative value means the battery is being discharged, and a positive value means it is being charged.  @return an int value.",
             "getlifetimeremaining",
             "returns the battery's remaining lifetime as a percentage, with range [0, 100]. a new battery will be close to 100%. as a battery experiences charge/discharge cycles, the value will go down.  @return an int value.",
             "gettemperature",
             "returns the battery's temperature, in celsius, with range [-128, 127] degrees.  @return a float value.",
             "getnumberofdischarges",
             "returns the total number of discharges the battery has gone through over its lifetime. the total number of discharges includes discharges that happen through normal use and discharges that are manually set.  @return an int value.",
             "getcellvoltagelevel",
             "current cell voltage level of the battery. it is only supported when the connected product is stand-alone a3 or n3.  @return an enum value of the `batterycellvoltagelevel`.",
             "isbeingcharged",
             "`true` if the battery is being charged.  @return the boolean value.",
             "isinsinglebatterymode",
             "`true` if only one battery is inserted on the the right or starboard side of the aircraft. the aircraft can still take off but the flight time will be shorter. it is only supported by inspire 2: inspire 2 must always have a battery in the right/starboard slot.  @return a boolean value.",
             "callback",
             "this interface provides a callback to update the battery's current state.",
             "batterycellvoltagelevel",
             "battery cell voltage level threshold. different thresholds will initiate different aircraft behaviors or operations. level 3 is the lowest level. it is only supported when the connected product is stand-alone a3 and n3.",
             "level_0",
             "the cell voltage is at a safe level; the aircraft can fly normally.",
             "level_1",
             "the cell voltage is equal to or lower than threshold level 1. at this level the level 1 operation will be executed. the threshold value and operation for level 1 can be configured by the user.",
             "level_2",
             "the cell voltage is equal to or lower than threshold level 2. at this level the level 2 operation will be executed. the threshold value and operation for level 2 can be configured by the user.",
             "level_3",
             "the cell voltage is equal to or lower than level 3. at this level, the aircraft will start landing. the threshold for level 3 cannot be configured by the user and is fixed at 3400mv.",
             "unknown",
             "the cell voltage level is unknown.",
             "iscurrentoverloaded",
             "`true` if the battery should be discharged due to a current overload.  @return a boolean value.",
             "isoverheated",
             "`true` if the battery has overheated.  @return a boolean value.",
             "islowtemperature",
             "`true` if the battery has experienced a temperature that is too low.  @return a boolean value.",
             "isshortcircuited",
             "`true` if the battery has been or is short circuited.  @return a boolean value.",
             "iscustomdischargeenabled",
             "`true` if the battery has been configured to be discharged over a specific number of days. once the battery is fully recharged, the battery will again discharge over the number of days set here. this process is cyclical.  @return a boolean value.",
             "getlowvoltagecellindex",
             "returns the index at which one of the cells in the battery is below the normal voltage. the first cell has an index of 0.  -1 represents no battery cells under voltage. phantom series aircraft have four cell batteries. inspire series aircraft and the m100 have 6 cell batteries.  @return an int value.",
             "getdamagedcellindex",
             "returns the index at which one of the cells in the battery is damaged. the first cell has an index of 0. -1 represents no damaged battery cells. phantom 3 aircraft have 4 cell batteries. inspire series aircraft and the m100 have 6 cell batteries.  @return an int value.",
             "setsystemstatecallback",
             "sets the camera's system state callback. the onupdate function has a camerasystemstate object as  its parameter.  precondition:  a callback object must be implemented and passed  in as a parameter.  postcondition:  the callback object that was passed in as a  parameter will call its onupdate function at regular intervals.  @param updatedsystemstatecallback the callback object to set as the callback. <br> callback  implements an `onupdate` method.</br>  the camerasdcardstate object contains information about the sd card  inserted into the aircraft's camera.",
             "setexposuresettingscallback",
             "sets the callback for updated exposure parameters. the callback's  `onupdate` method will be called  each time the exposure parameters (iso, exposure compensation, shutter speed and aperture) are updated.  @param callback the execution callback.",
             "setmediafilecallback",
             "sets the camera's new generated media file callback.  @param callback the callback object to set as the callback. the callback's method `onnewfile` has a `mediafile` object as it's parameter from which information about  the media type, index, file size and the created time can be obtained.",
             "settimelapsepreviewcallback",
             "sets the generated preview image callback. the callback's `ongenerate` method will be called each time a photo  has been taken.  @param generatedtimelapsecallback the execution callback.",
             "setfocusstatecallback",
             "callback for updating the lens state.  @param updatedlensstatecallback the callback.",
             "setsdcardstatecallback",
             "sets the camera's sd card information callback.  @param updatedsdcardstatecallback the callback object to set as the callback.",
             "setssdstatecallback",
             "callback for updating the ssd state.  @param updatedssdstatecallback the callback.",
             "setthermaltemperaturecallback",
             "sets the thermal camera's temperature update callback. callback is used when there is a new temperature value available for the set spot metering target point.  supported only by thermal imaging cameras with installed firmware version of 1.20.0.00 or higher.  @param updatecentertemperaturecallback the callback object to set as the callback. <br>  callback implements an `onupdate` method.</br>  the float object contains information about the updated temperature value.",
             "setthermalareatemperatureaggregationscallback",
             "sets the thermal camera's temperature aggregation update callback.   callback will be called when there are new min,  max, and average values available for the set spot metering area.  supported only by thermal imaging  cameras with installed firmware version of 1.20.0.00 or higher.  @param areatemperatureaggregationsupdatedcallback the callback object to set as the callback.",
             "setthermalexternalscenesettingscallback",
             "sets the thermal camera's external scene settings update callback.  callback will get called when updated external scene settings are available.  supported only by thermal imaging cameras with installed firmware version of 1.20.0.00 or higher.  @param thermalexternalscenesettingsupdatedcallback the callback object to set as the callback.",
             "getdisplayname",
             "return string that represents name of the camera.  @return an instance of display name string.",
             "getcapabilities",
             "camera capabilities.  @return an object of `capabilities`.",
             "setmode",
             "sets the camera's work mode to taking pictures, video, playback or download. please note that you cannot  change the mode when a certain task is executing, such as taking photo(s), recording video, or downloading  and saving files. also supported by thermal imaging camera.  @param mode camera work mode. see enum named cameramode in settingsdefinitions to find details on camera work modes. @param callback the execution callback with the returned execution result.",
             "getmode",
             "gets the camera's current work mode. also supported by thermal imaging camera.  @param callback the execution callback with the returned value(s).",
             "startrecordvideo",
             "starts recording video.  precondition:  camera must be in `record_video` mode. for thermal imaging camera, user can take single photo when recording video.  @param callback the execution callback with the returned value(s).",
             "stoprecordvideo",
             "stops recording video.  precondition:  the camera is recording currently.  @param callback the execution callback with the returned execution result.",
             "startshootphoto",
             "camera starts to take photo with one of the camera capture modes (shoot photo modes).also,   precondition:  1. camera must be in shootphoto mode. check the enum named camerashootphotomode in  djicamerasettingsdef to find all possible camera capture modes. for thermal imaging camera,  single photo can be taken while recording video. 2. the sd card state should be checked before this  method is used to ensure sufficient space exists.  post condition:  if the capture mode is either  burst or interval, calling stopshootphoto will be required for the camera to stop taking photos.  @param callback the execution callback with the returned execution result.",
             "stopshootphoto",
             "camera stops taking photos.  precondition:  1. `startshootphoto` has been invoked  and the shoot mode is either interval or time-lapse.  2. if the capture mode is set to single, the  camera will automatically stop taking the photo once the individual photo is taken.  @param callback the execution callback with the returned execution result.",
             "setshootphotomode",
             "sets the photo shooting mode for the camera.  @param mode `shootphotomode` enum value. @param callback asynchronous execution result.",
             "getshootphotomode",
             "returns the current photo shooting mode of the camera.  @param callback asynchronous execution result.",
             "istimelapsesupported",
             "check if the current device supports time-lapse shoot mode. supported only on the osmo camera.  @return `true` if timelapse is supported.",
             "ismediadownloadmodesupported",
             "check if the current device supports media download mode.  @return `true` if the current device supports media download mode, `false` otherwise.",
             "getmediamanager",
             "media manager is used for interaction when camera is in `media_download`.  the user can only access the manager when `ismediadownloadmodesupported` returns `true`. @return the `mediamanager` object if the aircraft supports media list feature.  otherwise, returns `null`.  @return an instance of `mediamanager`.",
             "isplaybacksupported",
             "check if the current device supports playback mode.  @return a boolean value.",
             "getplaybackmanager",
             "gets the playback manager object. playback manager is used for interaction when camera is in  `playback`. user can only access to the manager when `isplaybacksupported`  returns `true`.  @return an instance of `playbackmanager`.",
             "setexposuremode",
             "sets the camera's exposure mode. check `exposuremode` to view all possible camera exposure  modes. please note that in different exposure mode, it will have different values for the same setting.  @param mode camera exposure mode to set. @param callback the execution callback with the returned execution result.",
             "getexposuremode",
             "gets the camera's exposure mode.  @param callback the execution callback with the returned value(s).",
             "setiso",
             "sets the camera's iso value. see `iso` to view all possible iso settings  for the camera. for the x5, x5r, phantom 4 pro camera, x4s and x5s, the iso value can be set for all modes.  for the other cameras, the iso value can only be set when the camera exposure mode is in manual mode.  see the `setexposuremode` method for how to set exposure mode.  @param iso the iso value to set the camera to use. please check the enum cameraisoe in  djicamerasettingsdef to find all possible iso values that the camera can be set to. @param callback the execution callback with the returned execution result.",
             "getiso",
             "gets the camera's iso value.  @param callback the execution callback with the returned value(s).",
             "setshutterspeed",
             "sets the camera shutter speed. to see all available shutterspeed</code> value settings,  see `shutterspeed`. the shutter speed should not be set slower than the video frame rate  when the camera's mode is `record_video`. for example, if the video  frame rate is 30fps, the shutterspeed</code> must be <= 1/30. precondition: the shutter speed can be  set only when the camera exposure mode is shutter mode or manual mode.  @param shutterspeed the iso value to set the camera to use. please check the enum cameraisoe in djicamerasettingsdef to find  all possible iso values that the camera can be set to. @param callback the execution callback with the returned execution result.",
             "getshutterspeed",
             "gets the camera's shutter speed.  @param callback the execution callback with the returned value(s).",
             "isadjustableaperturesupported",
             "gets whether the camera supports an adjustable aperture. currently adjustable aperture is supported only by the x5, x5r, x4s and x5s cameras.  @return a boolean value.",
             "setaperture",
             "sets the aperture value. this feature is available only when `isadjustableaperturesupported` returns  `true`.  precondition:  the exposure mode `exposuremode` must be in  `manual` or  `aperture_priority`. </br> supported only by the x5, x5r, x4s and x5s camera.  @param aperture the aperture to set. check enum cameralensfocusmode in djicamerasettingsdef. @param callback the execution callback with the returned execution result.",
             "getaperture",
             "gets the lens aperture. this feature is available only when `isadjustableaperturesupported` returns `true`.  @param callback the execution callback with the returned value(s).",
             "setmeteringmode",
             "sets the camera's exposure metering. see `meteringmode` to view all possible exposure  metering settings for the camera.  @param mode exposure metering to be set. check the enum `meteringmode` to find all possible  exposure metering the camera can be set to. @param callback the execution callback with the execution result",
             "getmeteringmode",
             "gets the camera's exposure metering.  @param callback the execution callback with the returned value(s).",
             "setspotmeteringtarget",
             "sets the spot metering area index. the camera image is divided into 96 spots defined by 12 columns and 8 rows.  the row index range is [0,7], where the values increase top to bottom across the image. the column index range  is [0, 11], where the values increase left to right. in order to make the method work, the camera exposure mode  should be program</code>, shutter</code> or aperture</code>, the exposure metering mode must  be `spot`, and `setaelock` must be  `false`.  @param spotindex spot metering point coordinate (x, y).  x is column index to be set. the value should falls in [0, 11], where the values increase left to right.  y is row index to be set. the value should falls in [0, 7], where the values increase top to bottom across the image. @param callback the execution callback with the returned execution result.",
             "getspotmeteringtarget",
             "gets the spot metering area row index and column index. in order to make the method work, the camera exposure  mode should be `program`, `shutter_priority` or `aperture_priority`, the exposure metering mode must be `spot`,  and `getaelock` must be `false`.  @param callback the execution callback with the returned value(s).",
             "setexposurecompensation",
             "sets the camera's exposure compensation. see `exposurecompensation` to view all possible  exposure compensations to which the camera can be set. in order to use this function, set the camera exposure  mode to shutter</code>, program</code> or aperture</code>.  @param compensation exposure compensation value to be set for the camera. @param callback the execution callback with the returned execution result.",
             "getexposurecompensation",
             "gets the camera's exposure compensation.  @param callback the execution callback with the returned value(s).",
             "setaelock",
             "locks or unlocks the camera's ae (auto exposure).  post condition:  if the ae lock is enabled, the  spot metering area cannot be set.  @param islocked `true` if the camera ae is locked, `false` if it is unlocked. @param callback the execution callback with the returned execution result.",
             "getaelock",
             "determines if the camera's ae (auto exposure) is locked.  @param callback the execution callback with the returned value(s).",
             "setautoaeunlockenabled",
             "enables/disables auto-unlocking of ae lock after shooting a photo. if it is enabled,  the auto exposure will unlock after each shot. if disabled,  auto exposure will change when calling `setaelock`.  only supported by x4s, x5s and phantom 4 pro cameras.  for the other products, auto-unlocking is always enabled.  @param enabled `true` if the camera ae will automatically unlock. @param callback the execution callback with the returned execution result.",
             "getautoaeunlockenabled",
             "gets if auto-unlocking of ae lock is enabled. it is only supported by x4s, x5s and phantom 4 pro cameras.  @param callback the execution callback with the returned value(s).",
             "setphotoaebcount",
             "sets the camera's auto exposure bracketing (aeb) capture parameters.  @param count aeb capture count to be set for the camera. @param callback the execution callback with the returned execution result.",
             "getphotoaebcount",
             "gets the camera's aeb capture parameters.  @param callback the execution callback with the returned value(s).",
             "setwhitebalance",
             "sets the camera's white balance (color temperature). when white balance is `custom`,  the colortemperature argument is used. for all other values, the colortemperature argument is ignored.  @param whitebalance white balance value to be set. @param callback the execution callback with the returned execution result.  see also: `whitebalancepreset` to view all possible white balance setting options for the camera.",
             "getwhitebalance",
             "gets the camera's white balance and color temperature.  @param callback the execution callback with the returned value(s).",
             "isinterchangeablelenssupported",
             "`true` if the changeable lens is supported by the camera. currently a changeable lens is supported  only by the x5, x5r and x5s cameras.  @return a boolean value.",
             "getlensinformation",
             "gets details of the installed lens. supported only by the x5, x5r  and x5s cameras. this is available only when  `isinterchangeablelenssupported` returns `true`.  @param callback the execution callback with the returned value(s).",
             "isdigitalzoomsupported",
             "check if the current device supports digital zoom scale. it is supported by osmo with x3 camera, phantom 4  camera, z3 camera, mavic pro camera and z30 camera.  @return a boolean value.",
             "setdigitalzoomfactor",
             "adjusts the digital zoom. it is supported by osmo with x3 camera, phantom 4 camera, z3 camera and mavic pro camera.  @param factor the valid range is from 1.0 to 2.0. @param callback the execution callback with the returned execution result.",
             "getdigitalzoomfactor",
             "gets current digital zoom. it is supported by osmo with x3 camera, phantom 4 camera,  z3 camera, mavic pro camera and z30 camera. note z30 cannot set the digital zoom scale,  but will use digital zoom when using `startcontinuousopticalzoom` and the optical zoom has reached its limit.  @param callback the execution callback with the returned value(s).",
             "isopticalzoomsupported",
             "check if camera supports optical zoom. it is only supported by x5, x5r and x5s camera with the olympus m.zuiko ed 14-42mm f/3.5-5.6 ez lens, z3 camera and z30 camera. @return `true` if camera supports optical zoom.  @return a boolean value.",
             "getopticalzoomspec",
             "gets the specification of the zoom lens. it is only supported by x5, x5r and x5s camera with lens olympus m.zuiko ed 14-42mm f/3.5-5.6 ez, z3 camera and z30 camera.  @param callback the execution callback with the returned value(s).",
             "setopticalzoomfocallength",
             "sets focal length of the zoom lens. it is only supported by x5, x5r and x5s camera with lens olympus m.zuiko ed  14-42mm f/3.5-5.6 ez, z3 camera and z30 camera.  @param focallength focal length of zoom lens. valid range is [`getminfocallength`, `getmaxfocallength`] and must be a multiple of `getfocallengthstep`. @param callback the execution callback with the returned execution result.",
             "getopticalzoomfocallength",
             "gets zoom lens focal length in units of 0.1mm. it is only supported by x5, x5r and x5s camera with lens olympus  m.zuiko ed 14-42mm f/3.5-5.6 ez, z3 camera and z30 camera.  @param callback the execution callback with the returned value(s).",
             "getopticalzoomfactor",
             "gets current optical zoom factor with range [1, 30]. only supported by z30 camera. the z30 zoom factor can be changed with `setopticalzoomfocallength` and `startcontinuousopticalzoom`. the zoom factor is then calculated and given through this method.  @param callback the execution callback with the returned value(s).",
             "startcontinuousopticalzoom",
             "start changing the focal length of the lens in specified direction with specified speed. focal length change  (zooming) will halt when maximum or minimum focal lengths are reached,  or `stopcontinuousopticalzoom` is called. it is only supported by x5, x5r and x5s camera on osmo with lens olympus m.zuiko ed 14-42mm f/3.5-5.6 ez, z3 camera and z30 camera.  @param direction direction to zoom. @param speed zoom speed. @param callback the execution callback with the returned execution result.",
             "stopcontinuousopticalzoom",
             "called to stop focal length changing, when it currently is from calling `startcontinuousopticalzoom`.  it is only supported by x5, x5r and x5s camera on osmo with lens olympus m.zuiko ed 14-42mm f/3.5-5.6 ez, z3 camera and  z30 camera.  @param callback the execution callback with the returned execution result.",
             "istapzoomsupported",
             "determines whether the current camera supports tapzoom feature. tapzoom is only supported by z30 camera.  @return `true` if the camera supports tapzoom.  @return a boolean value.",
             "settapzoomenabled",
             "enable/disable tapzoom. `tapzoomattarget` can only be called when tapzoom is enabled.  only supported by z30 camera.  @param enabled the execution callback with the returned execution result. @param callback the execution callback with the returned execution result.",
             "gettapzoomenabled",
             "gets if tapzoom is enabled. it is only supported by z30 camera.  @param callback the execution callback with the returned value(s).",
             "settapzoommultiplier",
             "tapzoom uses a multiplier to change the zoom scale when called. the final zoom scale for a tapzoom will be:  current zoom scale x multiplier. the multiplier range is [1,5]. a multiplier of 1 will not change the zoom.  when the multiplier is 1, the zoom scale will not change during tapzoom. it is only supported by z30 camera.  @param multiplier multiplier of tapzoom. @param callback the execution callback with the returned execution result.",
             "gettapzoommultiplier",
             "gets the multiplier for tapzoom. it is only supported by z30 camera.  @param callback the execution callback with the returned value(s).",
             "tapzoomattarget",
             "tapzoom at the target. it can be called only when tapzoom is enabled.  when a new target is set, the gimbal  will rotate and locate the target in the center of the screen. at the same time, the camera will zoom by  multiplying the tapzoom multiplier. only supported by z30 camera.  @param target the cameratapzoomtargetpoint to zoom. the range for x and y is from 0.0 to 1.0.  the point [0.0, 0.0] represents the top-left corner of the screen. @param callback the execution callback with the returned execution result.",
             "isadjustablefocalpointsupported",
             "determines whether the camera supports an adjustable focal point. currently, the adjustable focal point is  supported by the x5, x5r, z3, mavic pro camera, z30, phantom 4 pro camera, x4s and x5s.  @return a boolean value.",
             "setfocusmode",
             "sets the lens focus mode. see `focusmode`. it is available only  when `isadjustablefocalpointsupported` returns `true`.  supported by the x5, x5r, z3 cameras (z3 camera can only support `auto`),  the mavic pro camera, z30, phantom 4 pro camera, x4s and x5s.  @param focusmode focus mode to set. check `focusmode` for more detail. @param callback the execution callback with the returned execution result.",
             "getfocusmode",
             "gets the lens focus mode. please check `focusmode`. it is available only  when `isadjustablefocalpointsupported` returns `true`.  supported only by the x5, x5r, z3 cameras, mavic pro camera, z30, phantom 4 pro camera, x4s, x5s.  @param callback the execution callback with the returned value(s).",
             "setfocustarget",
             "sets the lens focus target point. when the focus mode is auto, the target point is the focal point. when the  focus mode is manual, the target point is the zoom out area if the focus assistant is enabled for the manual  mode. it is available only when `isadjustablefocalpointsupported` returns  `true`. supported only by the x5, x5r, z3 cameras, mavic pro camera and phantom 4 pro  camera, x4s and x5s.  @param focustarget the focus target to set. the range for x and y is from 0.0 to 1.0. the point [0.0, 0.0] represents the top-left angle of the screen. @param callback the execution callback with the returned execution result.",
             "getfocustarget",
             "gets the lens focus target point. it is available only when `isadjustablefocalpointsupported`  returns `true`. supported only by the x5, x5r, z3 cameras, mavic pro camera and phantom 4 pro camera,  x4s and x5s.  @param callback the execution callback with the returned value(s).",
             "setfocusassistantsettings",
             "used to enable/disable the lens focus assistant. when the focus assistant is enabled,  the camera live view will digitally zoom into the focus target area so the user can see the quality of focus. focus assistant can be used for both manual focus (mf) and auto focus (af). it is available only when `isadjustablefocalpointsupported` returns  `true`. supported only by the x5, x5r, z3, phantom 4 pro camera, x4s and x5s.  because z3 only supports af mode, `isenabledmf` will be ignored.  @param settings sets whether the lens focus assistant for af and mf mode is enabled. @param callback the execution callback with the returned execution result.",
             "getfocusassistantsettings",
             "determines whether the lens focus assistant is enabled.  when the focus assistant is enabled,  the camera live view will digitally zoom into the focus target area so the user can see the quality of focus. focus assistant can be used for both manual focus (mf) and auto focus (af). it is available only when `isadjustablefocalpointsupported`  returns `true`. supported only by the x5, x5r, z3 cameras, phantom 4 pro. x4s and x5s.  @param callback the execution callback with the returned value(s).",
             "getfocusringvalueupperbound",
             "gets the lens focusing ring value's max value. it is available only when `isadjustablefocalpointsupported`  returns `true`. supported only by the x5, x5r, z3 cameras, phantom 4 pro, x4s and x5s.  @param callback the execution callback with the returned value(s).",
             "setfocusringvalue",
             "set the focal distance by simulating the focus ring adjustment. value  can have a range of  0, `getfocusringvalueupperbound`],  which represents infinity and the closest possible focal distance. it is available only when `isadjustablefocalpointsupported` returns `true`.  for some lenses, the minimum focus  ring value is larger than 0. for example the minimum of dji mft 15mm f/1.7 asph is 270.  to retrieve the minimum value, perform the  following steps: - call `setfocusmode`  with `auto`.  - call `setfocustarget` with the  furthest target (>30m).  - call `getfocusringvalue` to get the  current focus ring value. this is the minimum value.  the maximum value can be retrieved using `getfocusringvalueupperbound`. supported only by x5, x5r, z3 cameras, phantom 4 pro. x4s and x5s.  @param value value to adjust focus ring to. the minimum value is 0, the maximum value depends on the installed lens. please use  method `getfocusringvalueupperbound` to ensure the input argument is valid. @param callback the execution callback with the returned execution result.",
             "getfocusringvalue",
             "gets the lens focus ring value. it is available only when `isadjustablefocalpointsupported`  returns `true`. supported only by the x5, x5r, z3 cameras, phantom 4 pro, x4s and x5s.  @param callback the execution callback with the returned value(s).",
             "restorefactorysettings",
             "load the camera's factory settings.  post condition: the camera will reboot itself.  @param callback the execution callback with the returned value(s).",
             "savesettingstoprofile",
             "saves the current camera settings permanently to the specified profile. see `customsettingsprofile`  to view all possible camera users.  @param profile camera profile for which to store camera settings. @param callback the execution callback with the returned execution result.",
             "loadsettingsfromprofile",
             "load camera settings from the specified user.  post condition:  the camera will reboot itself.  @param profile camera profile to load camera settings from. @param callback the execution callback with the returned execution result.",
             "setphotoaspectratio",
             "sets the camera's aspect ratio for photos. see `photoaspectratio` to view all possible ratios. not supported by z30 camera as the aspect ratio of z30 is always `ratio_16_9`.  @param aspectratio aspect ratio for photos to be taken by camera. @param callback the execution callback with the returned execution result.",
             "getphotoaspectratio",
             "gets the camera's aspect ratio for photos.  @param callback the execution callback with the returned value(s).",
             "setphotofileformat",
             "sets the camera's photo file format. see `photofileformat`  to view all possible photo formats to which the camera can be set. also supported by thermal imaging camera.  not supported by z30 camera as the photo file format for z30 is always `jpeg`.  @param format photo file format used when the camera takes a photo. check the enum `photofileformat`  to find all possible photo formats the camera can be set to. @param callback the execution callback with the returned execution result.",
             "getphotofileformat",
             "gets the camera's photo file format.  @param callback the execution callback with the returned value(s).",
             "setphotoburstcount",
             "sets the burst shoot count for the camera when the user wants to use that feature.  check `photoburstcount` to view all possible burst count values to which the  camera can be set.  @param count the number of photos to take in one  burst shot. please check the  enum `photoburstcount` to find all possible burst count values the camera can be set to. @param callback the execution callback with the returned execution result.",
             "getphotoburstcount",
             "gets the burst count type.  @param callback the execution callback with the returned value(s).",
             "setphotorawburstcount",
             "sets the raw image burst shoot count for the camera when the user wants to use that feature.  see `photoburstcount` to view all possible burst count values to which the camera  can be set. only supported by inspire 2.  @param count the number of photos to take in one raw burst shoot. @param callback the execution callback with the returned value(s).",
             "getphotorawburstcount",
             "gets the raw image burst count. only supported by inspire 2.  @param callback the execution callback with the returned value(s).",
             "setphototimeintervalsettings",
             "sets the interval shoot parameters. the camera will capture a photo, wait a specified interval of time,  take another photo, and continue in this manner until it has taken the required number of photos.  also supported by thermal imaging camera.  @param settings an instance of `phototimeintervalsettings`. @param callback the execution callback with the returned execution result.",
             "getphototimeintervalsettings",
             "gets the camera's interval shoot parameters. </br></br>also supported by thermal imaging camera.  @param callback the execution callback with the returned value(s).",
             "setphototimelapsesettings",
             "sets the timelapse parameters, including interval, duration and file format when saving. precondition: camera  should be in `time_lapse` mode of `shootphotomode`.  @param settings the time between image captures. an integer falls in the  range, [10, 1000]. the unit is 100ms. please note that when the format is  jpeg+video, the minimum interval is 20(2 seconds). @param callback the execution block with the returned execution result.",
             "getphototimelapsesettings",
             "gets the timelapse parameters including interval, duration and file format when saving. precondition: the  camera must be in `time_lapse` mode of `shootphotomode`.  @param callback the execution callback with the returned value(s).",
             "setphotopanoramamode",
             "sets the panorama mode. it is used when `setshootphotomode` is called with `panorama`.  it is only  supported by spark.  @param mode the panorama mode to set. @param callback `completion callback` to receive the result.",
             "getphotopanoramamode",
             "gets the panorama mode. it is only supported by spark.  @param callback `completion callback` to receive the result.",
             "setvideoresolutionandframerate",
             "sets the camera's video resolution and frame rate. @warning the supported resolutions and frame rates for the  two different analog television standards pal and ntsc are below:   <b>ntsc:</b>  resolution_4096x2160, framerate_24fps  resolution_3840x2160, framerate_30fps  resolution_3840x2160, framerate_24fps  resolution_2704x1520, framerate_30fps  resolution_2704x1520, framerate_24fps  resolution_1920x1080, framerate_120fps (slow motion)  resolution_1920x1080, framerate_60fps  resolution_1920x1080, framerate_48fps  resolution_1920x1080, framerate_30fps  resolution_1920x1080, framerate_24fps  resolution_1280x720,  framerate_60fps  resolution_1280x720,  framerate_48fps  resolution_1280x720,  framerate_30fps  resolution_1280x720,  framerate_24fps  <b>pal:</b>  resolution_4096x2160, framerate_25fps  resolution_4096x2160, framerate_24fps  resolution_3840x2160, framerate_25fps  resolution_3840x2160, framerate_24fps  resolution_2704x1520, framerate_25fps  resolution_2704x1520, framerate_24fps  resolution_1920x1080, framerate_120fps (slow motion)  resolution_1920x1080, framerate_50fps  resolution_1920x1080, framerate_48fps  resolution_1920x1080, framerate_25fps  resolution_1920x1080, framerate_24fps  resolution_1280x720, framerate_50fps  resolution_1280x720, framerate_48fps  resolution_1280x720, framerate_25fps  resolution_1280x720, framerate_24fps  @param resolutionandframerate resolution to be set for the video. @param callback the execution callback with the returned execution result.",
             "getvideoresolutionandframerate",
             "gets the camera's video resolution and frame rate values.  @param callback the execution callback with the returned value(s).",
             "setvideofileformat",
             "sets the camera's video file format. the default value is `mov`.  @param format video file format to be set for videos. @param callback the execution callback with the returned execution result.",
             "getvideofileformat",
             "gets the camera's video file format.  @param callback the execution callback with the returned value(s).",
             "setvideostandard",
             "sets the camera's analog video standard. setting the video standard to pal or ntsc will limit the  available resolutions and frame rates to those compatible with the chosen video standard.  @param videostandard video standard value to be set for the camera. @param callback the execution callback with the returned execution result.",
             "getvideostandard",
             "gets the camera's video standard value.  @param callback the execution callback with the returned value(s).",
             "setvideocaptionenabled",
             "enables recording position, time and camera information into a video caption file (.srt) saved on the  sd card. the information is updated at 1hz. currently the .srt file can only be downloaded directly  from the sd card.  @param enabled `true` to enable video caption. @param callback the execution callback with the returned execution result.",
             "getvideocaptionenabled",
             "gets whether the video caption is enabled.  @param callback the execution callback with the returned value(s).",
             "setvideofilecompressionstandard",
             "sets the video file compression standard. only supported by x4s camera, x5s camera and phantom 4 pro.  for all other products, h.264 is used.  @param standard the compression standard to use. @param callback the execution callback with the returned value(s).",
             "getvideofilecompressionstandard",
             "gets the video file compression standard. only supported by x4s camera, x5s camera and phantom 4 pro.  @param callback the execution callback with the returned value(s).",
             "setssdvideorecordingenabled",
             "enables/disables the recording of raw video. it is supported by x5s. user can use the other ssd  interfaces only when it is enabled. for x5r, raw recording is always enabled if there is ssd inserted.  @param enabled `true` to enable the raw video recording. @param callback the execution callback with the returned execution result.",
             "getssdvideorecordingenabled",
             "gets if the recording of raw video is enabled. it is supported by x5s.  @param callback the execution callback with the returned value(s).",
             "setssdvideoresolutionandframerate",
             "set raw video resolution and frame rate of the ssd. note, only raw video is saved to the ssd.  compressed video, compressed pictures and raw pictures are all saved to the sd card. during  video capture, raw video and compressed video are saved simultaneously to the ssd and sd card  respectively. @warning the supported resolutions and frame rates for ssd raw videos are shown  below:  <b>ntsc:</b>  resolution_4096x2160, framerate_24fps  resolution_3840x2160,  framerate_24fps  resolution_3840x2160, framerate_30fps  resolution_2704x1520, framerate_24fps   resolution_2704x1520, framerate_30fps  resolution_1920x1080, framerate_60fps  resolution_1920x1080,  framerate_48fps  resolution_1920x1080, framerate_30fps  resolution_1920x1080, framerate_24fps  <b>pal:</b>  resolution_4096x2160, framerate_25fps  resolution_4096x2160, framerate_24fps  resolution_3840x2160, framerate_25fps  resolution_3840x2160, framerate_24fps  resolution_2704x1520,  framerate_25fps  resolution_2704x1520, framerate_24fps  resolution_1920x1080, framerate_50fps   resolution_1920x1080, framerate_48fps  resolution_1920x1080, framerate_25fps  resolution_1920x1080, framerate_24fps  for x5s, the frame rate of ssd has to be the same as the video to be stored in sd card, so framerate</code> is ignored. the possible resolutions are determined by sd card video's frame rate and the ssd video license (`camerassdvideolicense`) being used. the supported resolutions in  the current configuration can be queried by using `ssdvideoresolutionrange` in `capabilities`.  @param resolutionandframerate resolution and frame rate to be set for the video. @param callback the execution callback with the returned execution result.",
             "getssdvideoresolutionandframerate",
             "get raw video format and frame rate of the ssd.  @param callback the execution callback with the returned value(s).",
             "setssdvideodigitalfilter",
             "sets the digital filter for video that will be stored in ssd. it is only applied when the selected license key is either `licensekeytypeprores422hq`  or `licensekeytypeprores4444xq`. only supported by inspire 2.  @param filter ssd digital filter to set. @param callback the execution callback with the returned value(s).",
             "getssdvideodigitalfilter",
             "gets the digital filter for video that will store in ssd. only supported by inspire 2.  @param callback the execution callback with the returned value(s).",
             "getssdvideolicenses",
             "gets purchased license key(s). an inspire 2 license key activates the usage permission of  cinemadng or apple prores inside cinecore 2.0. user can purchase a license key on dji's  website. it is supported by inspire 2. the digital filter for video that will store in ssd.  only supported by inspire 2.  @param callback the execution callback with the returned value(s).",
             "activatessdvideolicense",
             "sets the ssd video license to be used. if an unpurchased license is selected then only sd video will be recorded.  @param license license to used. @param callback the execution callback with the returned value(s).",
             "getssdvideolicense",
             "gets the license key being used. it is supported by inspire 2.  @param callback the execution callback with the returned value(s).",
             "setfileindexmode",
             "sets the camera's file index mode for the sd card. the default value of `fileindexmode`  is set to `reset`.  @param mode file index mode to be set for the camera's sd card. the default value of camerafileindexmode is set to reset. @param callback the execution callback with the returned execution result.",
             "getfileindexmode",
             "gets the camera's file index mode.  @param callback the execution callback with the returned value(s).",
             "formatsdcard",
             "formats the sd card by deleting all the data on the sd card. this does not change any settings the user may have  set on the sd card.  @param callback the execution callback with the returned execution result.",
             "isssdsupported",
             "determines whether the ssd is supported by the camera. currently, the ssd is supported only by x5r, x4s and x5s  camera. @return `true` if ssd is supported, otherwise `false`.  @return a boolean value.",
             "formatssd",
             "formats the ssd by deleting all the data on the ssd. this does not change any settings the user may have set on the ssd.  @param callback the execution callback with the returned execution result.",
             "setantiflickerfrequency",
             "sets the camera's anti-flicker frequency for video recording. precondition: the exposure mode must be program.  note: for the z30 camera, changing anti-flicker will reboot the camera before the setting takes effect.  @param antiflickerfrequency anti-flicker value to set for the camera. see `antiflickerfrequency` to view all the possible anti-flicker type settings for the camera. @param callback the execution callback with the returned execution result.",
             "getantiflickerfrequency",
             "gets the camera's anti-flicker.  @param callback the execution callback with the returned value(s).",
             "setsharpness",
             "sets the camera's sharpness. the default value is 0.  @param sharpness sharpness value to be set in the range of [-3, 3]. @param callback asynchronous execution result.",
             "getsharpness",
             "gets the camera's sharpness.  @param callback the execution callback with the returned value of sharpness with range [-3, 3].",
             "setcontrast",
             "sets the camera's contrast. the default saturation value is 0.  @param contrast contrast value to be set in the range of [-3, 3]. @param callback the execution callback with the returned execution result.",
             "getcontrast",
             "gets the camera's contrast.  @param callback the execution callback with the returned value of contrast with range [-3, 3].",
             "setdefogenabled",
             "enable/disable defog feature. when defog feature is enabled, the contrast will be enhanced extraordinarily. only supported by z30.  @param enabled `true` to enable defog feature. @param callback the execution callback with the returned value(s).",
             "getdefogenabled",
             "gets if defog feature is enabled. it is only supported by z30 camera.  @param callback the execution callback with the returned value(s).",
             "setirfilterenabled",
             "enables/disables the ir filter (infared filter). disabling the ir filter can enhance the image in low light  environments. enabling the ir filter can reduce the color distortion caused by the infared light. it is only  supported by z30 camera.  @param enabled `true` to enable ir-cut filter. @param callback completion block that receives the setter result.",
             "getirfilterenabled",
             "gets if ir filter (infared filter) is enabled. disabling the ir filter can enhance the image in low light  environments. enabling the ir filter can reduce the color distortion caused by the infared light. it is  only supported by z30 camera.  @param callback the execution callback with the returned value(s).",
             "setsaturation",
             "sets the camera's saturation. the default saturation value is 0.  @param saturation saturation value to be set in the range of [-3, 3]. the default value of the saturation value is 0. @param callback the execution callback with the returned execution result.",
             "getsaturation",
             "gets the camera's saturation.  @param callback the execution callback with the returned value(s).",
             "setdigitalfilter",
             "sets the camera's digital filter. the default value is `none`. for a list of all possible camera digital filters, see `digitalfilter`.  @param filter digital filter to be set to the camera. the default value for cameradigitalfilter is none. check the enum  named cameradigitalfilter in djicamerasettingsdef.h to find all possible digital filter the camera can be  set to. @param callback the execution callback with the returned execution result.",
             "getdigitalfilter",
             "gets the camera's digital filter value.  @param callback the execution callback with the returned value(s).",
             "setorientation",
             "sets the camera's orientation. the gimbal will rotate the roll axis based on the orientation. supported only by mavic pro.  @param orientation camera's orientation. @param callback the execution callback with the returned execution result.",
             "getorientation",
             "gets the camera's orientation. supported only by mavic pro.  @param callback the execution callback with the returned value(s).",
             "setvisionstabilizationenabled",
             "enables vision stabilization for z30 camera on m200 series. the vision system in the m200  series of aircraft can be used to compensate for any drift in the gimbal by analyzing the  live view when there is no gimbal movement. drift in the gimbal will be most noticeable at  higher zoom factors. only supported by z30 on m200 series.  @param enable `true` to enable the vision stabilization. @param callback `completion callback` to receive the result.",
             "getvisionstabilizationenabled",
             "gets if vision stabilization is enabled. only supported by z30 on m200 series.  @param callback `completion callback` to receive the result.",
             "setmediafilecustominformation",
             "custom information can be stored in media file's xmp meta data. the custom information is written to the media file automatically after the media file  is created. this method defines the information to write. the same information will be written to all media files until the information is changed again by this  method. custom information written to each file can be retrieved through `fetchcustominformation`  or from the image itself  when processed on a separate system. only supported by phantom 4 pro, phantom 4  advanced and inspire 2 with firmware released after may 23 2017.  @param information custom information to set. use utf-8 encoding with a length equal to or less  than 31 characters. @param callback completion block to receive the result.",
             "getmediafilecustominformation",
             "custom information can be stored in media file's xmp meta data. this method retrieves  the information that will be written to future media files. the information written  to individual files can be retrieved through `fetchcustominformation`. only supported by phantom 4 pro,  phantom 4 advanced and inspire 2 with firmware released after may 23 2017.  @param callback completion block to receive the result.",
             "isphotoquickviewsupported",
             "determines whether the device supports the quick view. quick view is  the period of time a photo is shown as a preview after it is taken and before the camera returns to the live  camera view.  @return a boolean value.",
             "setphotoquickviewduration",
             "sets the camera's quick view duration. the valid range is [0, 10] seconds. when duration is 0, it means that  the quick view is disabled. the default value is 0 second. call `isphotoquickviewsupported`  before using this method.  @param duration quick view duration to be set for the camera. this value defines the amount of time a photo is shown as a preview after it is taken before the camera returns back to the live camera view. this value must be set in the range of [0, 10] seconds. when the value is 0, quick view is disabled. the default value is 0 second. @param callback the execution callback with the returned execution result.",
             "getphotoquickviewduration",
             "gets the camera's quick view duration.  @param callback the execution callback with the returned value(s).",
             "sethdliveviewenabled",
             "enables hd (high-definition) live view. when it is enabled, the live view resolution is 1080p with frame rate  30 fps. the settings will only take effect when the camera is in record-video mode and the video resolution is  either 1080p or 2.7k without slow-motion enabled. if recording video in 4k, then the live stream will be limited  to 720p. supported only by mavic pro.  @param enabled enable or disable hd live view. @param callback the execution callback with the returned execution result.",
             "gethdliveviewenabled",
             "`true` if 1080p live view is enabled. this will return the value of the setter, and not  necessarily the actual live view resolution. for example, if recording in 4k and hd live view has previously  been set, then this will return `true` but the actual live view resolution will be 720p.  supported only by mavic pro.  @param callback the execution callback with the returned value(s).",
             "setledautoturnoffenabled",
             "enables the automatic control of the front-arm leds. the camera can turn off the front-arm leds automatically  when it shoots photos or records videos. the leds will be turned on after the shooting or recording is finished.  supported only by mavic pro.  @param enabled enable the automatic control of the front-arm leds. @param callback the execution callback with the returned execution result.",
             "getledautoturnoffenabled",
             "determines whether the automatic control of the front-arm leds is enabled. supported only by mavic pro.  @param callback the execution callback with the returned value(s).",
             "isaudiorecordingsupported",
             "determines whether the current device supports audio recording. currently audio recording is supported only by the osmo camera.  @return the boolean value.",
             "setaudiorecordingenabled",
             "enables audio recording when capturing video. supported only by osmo camera.  @param enabled enable or disable audio recording. @param callback the execution callback with the returned execution result.",
             "getaudiorecordingenabled",
             "determines whether the audio record is enabled.  @param callback the execution callback with the returned value(s).",
             "setaudiogain",
             "sets the microphone recording gain.  @param value recording gain with range [0, 100]. @param callback the execution callback with the returned execution result.",
             "getaudiogain",
             "gets the microphone recording gain.  @param callback the execution callback with the returned value(s).",
             "setturnofffanwhenpossible",
             "this method will turn off the camera's cooling fan whenever the camera is cool enough to do so. this allows  better audio recording from the internal microphone in the camera.  @param turnoffwhenpossible `true` to turn fan off whenever possible. @param callback the execution callback with the returned execution result.",
             "getturnofffanwhenpossible",
             "gets if the fan will turn off whenever it is cool enough to do so to enable better audio recordings from the  camera's internal microphone.  @param callback the execution callback with the returned value(s).",
             "isthermalcamera",
             "`true` if the current connected device is a thermal imaging camera.  @return bool `true` if current connected device is thermal imaging camera.  @return a boolean value.",
             "setthermalroi",
             "sets the region of interest (roi). used to manage color range distribution across the screen to maximize  contrast for regions of highest interest. supported only by thermal imaging cameras.  @param roi an enum type of the region of interest to be used. please refer to `thermalroi`. @param callback the execution callback with the returned execution result.",
             "getthermalroi",
             "gets the region of interest.  @param callback the execution callback with the returned value(s).",
             "setthermalpalette",
             "sets the palette. each palette is a unique look-up table that maps 8-bit temperature values to different colors.  different palettes can be used to help the user better visualize temperature contrast or specific temperature bands. supported only by thermal imaging cameras.  @param palette an enum type of the camerathermalpalette to be used. please refer to camerathermalpalette. @param callback the execution callback with the returned execution result.",
             "getthermalpalette",
             "gets the palette.  @param callback the execution callback with the returned value(s).",
             "setthermalscene",
             "sets the scene to instantly enhance your image. in all modes except manual and user modes, the  dde, ace, sso,  brightness and contrast are set automatically to obtain the best result. in  user modes, the contrast and brightness are set automatically to obtain the best results. any  settings that are made in these modes are retained if the scene is changed. in manual mode,  dde, contrast and brightness are set manually. supported only by thermal imaging cameras.  @param scene an enum type for the `thermalscene` to be used. @param callback the execution callback with the returned execution result.",
             "getthermalscene",
             "gets current scene.  @param callback the execution callback with the returned value(s).",
             "setthermaldde",
             "sets the digital data enhancement index (for dde dynamic mode). dde can be used to enhance image details (sharpen,  higher index) and/or suppress fixed pattern noise (soften, lower index). it can be set manually only when the scene  mode is manual, user1, user2 or user3. supported only by thermal imaging cameras.  @param value integer in range [-20, 100]. values less than 0 soften the image and filter fixed pattern noise. values greater  than 0 sharpen the details in the image. value of 0 results in no enhancement. @param callback the execution callback with the returned execution result.",
             "getthermaldde",
             "gets the value of digital data enhancement. the value is available only when the scene mode is manual, user1,  user2 or user3. supported only by thermal imaging cameras.  @param callback the execution callback with the returned value(s).",
             "setthermalace",
             "set the value of active contrast enhancement. active contrast enhancement allows for a contrast trade-off  between hotter and colder scenes when using 8-bit pixel data. it can be set manually only when the scene  mode is user1, user2 or user3. supported only by thermal imaging cameras.  @param value integer in range [-8, 8]. <br> value > 0: more contrast in hotter scene content and less contrast in colder  scene content (sky, ocean etc.). <br> value < 0: more contrast in colder scene content and less contrast in  hotter scene content. <br> value = 0: neutral <br> value = 3: recommended for generic use @param callback the execution callback with the returned execution result.",
             "getthermalace",
             "gets the value of active contrast enhancement. the value is available only when the scene mode is manual, user1,  user2 or user3. supported only by thermal imaging cameras.  @param callback the execution callback with the returned value(s).",
             "setthermalsso",
             "sets the value of smart scene optimization. when using non-linear histogram equalization to map the 14-bit sensor  pixel values to 8-bit pixel values, it can become difficult to determine the difference in temperature of two  objects from their different shades of gray. sso allows a percentage of the 14-bit histogram to be mapped linearly  to the 8-bit histogram, which will compromise local contrast, but allow for more accurate visual radiometric  measurements. this is particularly useful for bi-modal scenes. it can be set manually only when the scene mode  is user1, user2 or user3. supported only by thermal imaging cameras.  @param value percentage of histogram to map linearly [0, 100]. @param callback the execution callback with the returned execution result.",
             "getthermalsso",
             "gets the value of smart scene optimization. the value is available only when the scene mode is manual, user1,  user2 or user3. supported only by thermal imaging cameras.  @param callback the execution callback with the returned value(s).",
             "setthermalbrightness",
             "sets the brightness of the image. it can be set manually only when the scene mode is manual. supported only by thermal imaging cameras.  @param brightness the integer value falls in [0, 16383]. @param callback the execution callback with the returned execution result.",
             "getthermalbrightness",
             "gets the value of brightness. the value is available only when the scene mode is manual, user1, user2 or user3. supported only by thermal imaging cameras.  @param callback the execution callback with the returned value(s).",
             "setthermalcontrast",
             "sets the value of contrast, with larger values having higher contrast. it can be set manually only when  the scene mode is manual. supported only by thermal imaging cameras.  @param contrast contrast value as an integer with range [0, 255]. @param callback the execution callback with the returned execution result.",
             "getthermalcontrast",
             "gets contrast value. the value is available only when the scene mode is manual, user1, user2 or user3. supported only by thermal imaging cameras.  @param callback the execution callback with the returned value(s).",
             "setthermalisothermenabled",
             "enable or disable isotherms. isotherms can be used to highlight specific temperature ranges: when disabled,  all 256 values (8-bits) are dedicated to the temperature histogram of the scene. when enabled, only 128 values  (0-127) are mapped linearly to temperature. then three bands 128-175, 176-223 and 224-255 can be mapped to the  user defined temperatures to highlight them to the user. using some of the false color palettes (like rainbowiso)  results in a thermal image that is grey scale except for three specific bands highlighted by either reds, blues or  greens. supported only by thermal imaging cameras.  @param enabled `true` if isotherms are enabled. @param callback the execution callback with the returned execution result.",
             "getthermalisothermenabled",
             "determines whether isotherms are enabled. `true` if isotherms are enabled. supported only by thermal imaging cameras.  @param callback the execution callback with the returned value(s).",
             "setthermalisothermunit",
             "sets the unit of the isotherm ranges to either celsius or percent. different units results in different value ranges for isotherms. supported only by thermal imaging cameras.  @param unit an enum type of the camerathermalisothermunit to be used. please refer to djicamerathermalisothermunit. @param callback the execution callback with the returned execution result.",
             "getthermalisothermunit",
             "gets the units for isotherm ranges. supported only by thermal imaging cameras.  @param callback the execution callback with the returned value(s).",
             "setthermalisothermuppervalue",
             "sets the upper threshold value for isotherm. all temperature values above this will use colors 224-255 from  the palette. supported only by thermal imaging cameras.  @param value if the unit is percentage, the allowed range is [0,100]. if the unit is celsius, the allowed range is  [-40, 550]. the value can only be equal or larger than middle isotherm threshold. @param callback the execution callback with the returned execution result.",
             "getthermalisothermuppervalue",
             "gets the upper threshold value for isotherm. supported only by thermal imaging cameras.  @param callback the execution callback with the returned value(s).",
             "setthermalisothermmiddlevalue",
             "sets the middle threshold value for isotherm. temperature values between the middle and upper isotherm threshold  will be displayed with colors 176-223 from the palette. supported only by thermal imaging cameras.  @param value if the unit is percentage, the value falls in [0,100]. if the unit is celsius, the value range is [-40, 550].  the value can only be equal or larger than lower threshold and equal or smaller than upper threshold. @param callback the execution callback with the returned execution result.",
             "getthermalisothermmiddlevalue",
             "gets the middle threshold value for isotherm. supported only by thermal imaging cameras.  @param callback the execution callback with the returned value(s).",
             "setthermalisothermlowervalue",
             "sets the lower threshold value for isotherm. temperature values between the lower and middle isotherm threshold  will be displayed with colors 128-175 from the palette. supported only by thermal imaging cameras.  @param value if the unit is percentage, the value falls in [0,100]. if the unit is celsius, the value range is [-40, 550]. the value can only be equal or smaller than upper threshold. @param callback the execution callback with the returned execution result.",
             "getthermalisothermlowervalue",
             "gets the lower threshold value for isotherm. supported only by thermal imaging cameras.  @param callback the execution callback with the returned value(s).",
             "setthermalgainmode",
             "sets the gain mode. low gain mode can be used for scenes with temperatures ranging from -40 to 550 degrees  celsius. for higher contrast, the high gain mode can be used by for temperatures between -25 to 135 degrees  celsius for the 640x512 camera and -25 to 100 degrees celsius for 324 x 256 camera. supported only by thermal  imaging cameras.  @param mode an enum type of the camerathermalgainmode to be used. please refer to camerathermalgainmode in djicamerasettingsdef. @param callback the execution callback with the returned execution result.",
             "getthermalgainmode",
             "gets the gain mode. supported only by thermal imaging cameras.  @param callback the execution callback with the returned value(s).",
             "setthermalmeasurementmode",
             "sets the mode for thermal measurement. use callback  method `onupdate` or `onupdate` to receive  the measurement result. supported only by thermal imaging cameras.  @param mode the desired measurement mode. @param callback completion block that receives the getter execution result.",
             "getthermalmeasurementmode",
             "gets the mode for thermal measurement. supported only by thermal imaging cameras.  @param callback the execution callback with the returned value(s).",
             "setthermaldigitalzoomfactor",
             "adjusts the digital zoom. supported only by thermal imaging cameras.  @param factor for resolution 640 x 512, x1,x2,x4,x8 can be set. for resolution 336 x 256, only x1,x2,x4 can be set. please  refer to camerathermaldigitalzoomscale in djicamerasettingsdef. @param callback the execution callback with the returned execution result.",
             "getthermaldigitalzoomfactor",
             "gets current digital zoom. supported only by thermal imaging cameras.  @param callback the execution callback with the returned value(s).",
             "getthermalprofile",
             "gets the thermal imaging camera profile. the profile includes information about resolution, frame rate and focal  length. supported only by thermal imaging cameras.  @param callback the execution callback with the returned value(s).",
             "setthermalspotmeteringtargetpoint",
             "sets the spot metering target point which then invoke the callback from `setthermaltemperaturecallback` with the  temperature at a specific coordinate in the scene. this method requires a relative point that is proportional  to the dimension of the camera video dimension, the x, and y values must all be between 0 and 1.0. supported only  by zenmuse xt containing advanced radiometry capabilities.  @param targetpoint the desired target point. @param callback the execution callback with the returned execution result.",
             "getthermalspotmeteringtargetpoint",
             "gets the spot metering target point if one is set, if not then returns cgpointzero. supported only by zenmuse  xt containing advanced radiometry capabilities.  @param callback the execution callback with the returned value(s).",
             "setthermalmeteringarea",
             "set the metering area for a rectangle inside the thermal image scene, which allows the camera to transmit  aggregate temperature computations via the `onupdate`  callback method. see `thermalareatemperatureaggregations`  for the statistical values that are available. this method requires a relative rect that is proportional to  the rect of the thermal scene, the x, y, width, and height values must all be between 0 and 1.0. supported  only by zenmuse xt containing advanced radiometry capabilities.  @param area the desired thermal metering area. @param callback the execution callback with the returned execution result.",
             "getthermalmeteringarea",
             "get a rect representing the currently set metering area for the thermal scene. supported only by zenmuse xt  containing advanced radiometry capabilities.  @param callback the execution callback with the returned value(s).",
             "setthermalffcmode",
             "set the flat-field correction (ffc) mode. supported only by thermal imaging cameras.  @param mode the desired ffc mode. @param callback the execution callback with the returned execution result.",
             "getthermalffcmode",
             "get the currently set flat-field correction (ffc) mode. supported only by thermal imaging cameras with installed  firmware version of 1.15.1.60 or higher.  @param callback the execution callback with the returned value(s).",
             "triggerthermalffc",
             "trigger flat-field correction. supported only by thermal imaging cameras.  @param callback the execution callback with result of the trigger action.",
             "setthermalcustomexternalscenesettingsprofile",
             "set the custom user profile. this profile represents user-set external  scene parameters for the thermal scene. supported only by thermal  imaging cameras.  @param profile the desired user profile setting. @param callback the execution callback with the returned execution result.",
             "getthermalcustomexternalscenesettingsprofile",
             "get the currently set custom user profile. this profile represents user-set external scene parameters for the  thermal scene. supported only by thermal imaging cameras.  @param callback the execution callback with the returned value(s).",
             "setthermalatmospherictemperature",
             "set the temperature of the atmosphere between the scene and the camera. supported only by zenmuse xt containing advanced radiometry capabilities.  @param temperature the assumed temperature of the atmosphere between the camera and the scene, can be between -50 and 327.67 degrees celsius. @param callback the execution callback with the returned execution result.",
             "setthermalatmospherictransmissioncoefficient",
             "set the transmission coefficient of the atmosphere between the scene and the camera. supported only by zenmuse xt containing advanced radiometry capabilities.  @param coefficient the desired atmospheric temperature, can be between 50 and 100. @param callback the execution callback with the returned execution result.",
             "setthermalbackgroundtemperature",
             "set the assumed temperature reflected by the background of the scene, can be between -50 and 327.67 degrees  celsius. supported only by zenmuse xt containing advanced radiometry capabilities.  @param temperature the desired background reflected temperature. @param callback the execution callback with the returned execution result.",
             "setthermalsceneemissivity",
             "set the emissivity of the thermal scene, can be between 50 and 100. supported only by zenmuse xt containing  advanced radiometry capabilities.  @param emissivity the desired scene emissivity. @param callback the execution callback with the returned execution result.",
             "setthermalwindowreflection",
             "set assumed window reflection coefficient, can be between 0 and x where x is the window transmission coefficient  parameter. supported only by zenmuse xt containing advanced radiometry capabilities.  @param reflection the desired window reflection coefficient. @param callback the execution callback with the returned execution result.",
             "setthermalwindowreflectedtemperature",
             "set the temperature reflected in the window, can be between -50 and 327.67 degrees celsius. supported only by  zenmuse xt containing advanced radiometry capabilities.  @param temperature the desired window reflected temperature. @param callback the execution callback with the returned execution result.",
             "setthermalwindowtemperature",
             "set the window temperature, can be between -50 and 327.67 degrees celsius. supported only by zenmuse xt  containing advanced radiometry capabilities.  @param temperature the desired window temperature. @param callback the execution callback with the returned execution result.",
             "setthermalwindowtransmissioncoefficient",
             "set the window transmission coefficient, can be between 50 and 100-x where x is the window reflection.  supported only by zenmuse xt containing advanced radiometry capabilities.  @param coefficient the desired window transmission coefficient. @param callback the execution callback with the returned execution result.",
             "callback",
             "tells that a new media file (photo or video) is generated.",
             "timelapsepreviewcallback",
             "tells the callback that a preview image for the time-lapse is generated. this method is available only  when istimelapsesupported returns true.",
             "videodatacallback",
             "video data update callback. h.264 (also called mpeg-4 part 10 advanced video coding or mpeg-4 avc) is a  video coding format that is currently one of the most commonly used formats for the recording, compression,  and distribution of video content.",
             "temperaturedatacallback",
             "received temperature in degrees celsius of image. for the xt, the temperature measurement data is the  average of the center four pixels of the image.",
             "systemstate",
             "this class provides general information and current status of the camera.",
             "focusstate",
             "this class contains information about the lens' current state, including lens type, focus status, focus mode,  focus assistant state, and auto focus (af) switch state.",
             "sdcardstate",
             "this class provides the sd card's general information and current status.",
             "ssdstate",
             "this class contains the information about camera's solid state drive (ssd) information, including state,  whether it is connected, its capacity, video size and rate, etc.",
             "mediamanager",
             "the media manager is used to interact with the file system on the sd card. by using the media manager, the user  can get the metadata for all the multimedia files, and has access to each individual multimedia file.",
             "playbackmanager",
             "the playback manager is used to interact with the playback system of the camera. by using the playback manager,  the user can control the playback system.",
             "capabilities",
             "some of the camera's parameters have dynamic ranges. the `capabilities` class allows you  to query the valid range for a parameter. type-casting is required to get the corresponding enumerator value  for each range element.",
             "settingsdefinitions",
             "this class contains all the enums and setting classes for the dji camera.",
             "cameramode",
             "camera work modes.",
             "shootphotomode",
             "the shootphoto mode itself can have several modes. the default value  is `single`.",
             "exposuremode",
             "camera exposure modes. the default value is `program`. the different exposure modes define whether aperture, shutter speed, iso can be set automatically or manually. exposure compensation can  be changed in all modes except manual mode where it is not settable. x5, x5r, phantom 4 pro camera, x4s and  x5s:  program mode:       shutter: auto     aperture: auto     iso: manual or auto  shutter priority:   shutter: manual   aperture: auto     iso: manual or auto  aperture priority:  shutter: auto     aperture: manual    iso: manual or auto  manual mode:        shutter: manual   aperture: manual   iso: manual all  other cameras:</b>  program mode:       shutter: auto     aperture: fixed    iso: auto  shutter priority:    shutter: manual   aperture: fixed    iso: auto  aperture priority:  n/a  manual mode:        shutter: manual    aperture: manual   iso: manual",
             "shutterspeed",
             "camera's shutter speed options.",
             "iso",
             "camera iso values.",
             "aperture",
             "camera aperture values. x5, x5r, z30, phantom 4 pro camera, x4s and x5s support this setting.",
             "whitebalance",
             "this class contains current values for some camera parameters related to white balance. values for the camera's current white balance preset and color temperature can be obtained from this class.",
             "whitebalancepreset",
             "camera white balance. the default value is auto.",
             "meteringmode",
             "camera exposure metering. the default value is center.",
             "exposurecompensation",
             "camera exposure compensation.",
             "exposuresettings",
             "this class contains current values for some camera parameters related to exposure, which determines how sensitive  the picture is to light and depends on the balance of the iso value, the shutter speed, and the aperture value.  when the camera is in different exposure modes, different parameters are automatically changed by the camera to  either get the correct exposure (in program, shutter priority and aperture priority modes), or report back the current exposure (in manual mode). the current values of these parameters used by the camera are contained in this  class.",
             "opticalzoomspec",
             "zoom lens profile. includes focal length range and minimum focal length step. supported by x5, x5r and x5s with zoom lens,  z3 camera and z30 camera.",
             "zoomdirection",
             "the direction to adjust the camera zoom (camera focal length). supported by x5, x5r and x5s with zoom lens, z3 camera  and z30 camera.",
             "zoomspeed",
             "the speed of lens to zoom. the speed of lens to zoom. supported by x5, x5r and x5s with zoom lens, z3 camera and z30 camera.",
             "focusmode",
             "camera focus mode. it is settable only when `isadjustablefocalpointsupported` returns  `true` and the physical af switch on the camera is set to auto.",
             "focusstatus",
             "the focusing status of the camera's lens.",
             "focusassistantsettings",
             "stores the focus settings",
             "photofileformat",
             "camera photo file formats. the default value is jpeg.",
             "photoaebcount",
             "the number of pictures to continuously take at one time in aeb mode. use with `djicameraphotoaebparam`.",
             "photoaspectratio",
             "photo aspect ratio, where the first value is the width and the second value is the height. the default  value is `ratio_4_3`.",
             "photoburstcount",
             "the number of photos taken in one burst shot (shooting photo in burst mode).",
             "phototimelapsefileformat",
             "file format for camera when it is in time-lapse mode. the default file format is video. if video+jpeg is  selected the minimum interval will be 2 seconds.",
             "phototimeintervalsettings",
             "sets the number of pictures, and sets the time interval between pictures for the interval shoot photo mode.",
             "phototimelapsesettings",
             "stores the time lapse settings.",
             "photopanoramamode",
             "panorama photo modes.",
             "videofileformat",
             "video storage formats.",
             "videoresolution",
             "camera video resolution values. the resolutions available for a product are in `videoresolutionandframeraterange`.",
             "videoframerate",
             "camera video frame rate values. the frame rates available for a product  are in `videoresolutionandframeraterange`.",
             "resolutionandframerate",
             "this class contains current values for camera parameters related to video resolution and video frame rate.",
             "videostandard",
             "video standard values. the default value is ntsc.",
             "videofilecompressionstandard",
             "the compression standard used to store the video files. only supported by x4s, x5s and phantom 4 pro cameras.",
             "camerassdvideolicense",
             "dji camera's license keys. an inspire 2 license key activates the usage permission of cinemadng or apple prores inside  cinecore 2.0. license keys are obtained by by purchase from the dji store website using the inspire 2 serial number.  the inspire 2 is then connected to dji assistant 2, and the  license keys downloaded to it. only supported by x5s camera.",
             "ssdvideodigitalfilter",
             "camera digital filters for videos that will be stored in ssd. the default value is `none`. only supported by inspire 2.",
             "antiflickerfrequency",
             "camera anti-flickers. the default value is `manual_50hz`.",
             "ssdoperationstate",
             "solid state drive (ssd) state.",
             "ssdcapacity",
             "solid state drive (ssd) capacity.",
             "fileindexmode",
             "file index modes.",
             "customsettingsprofile",
             "camera user settings. a user can save or load camera settings to or from the specified user.",
             "digitalfilter",
             "camera digital filters. the default value is `none`. z30 camera only  supports `none`, `black_and_white`  and `inverse`.",
             "orientation",
             "physical orientation of the camera.",
             "picturestylepresettype",
             "camera preset type, a combine of saturation, contrast, sharpness.",
             "picturestylepreset",
             "camera preset type that stores saturation, contrast and sharpness",
             "cameraliveview",
             "cameraliveview provides a simplified main camera live view. to show the main camera live view in your activity, include it in xml  file directly. no need for any configuration.",
             "thermalroi",
             "region of interest. use this feature to manage color range distribution across the screen to maximize contrast for  regions of highest interest.",
             "thermalpalette",
             "the different colors are used to show various temperatures in the thermal imagery image. the colors are not actually  related to wavelengths of light, but rather the grayscale intensity.",
             "thermalscene",
             "uses the scene option to instantly enhance your image.",
             "thermalisothermunit",
             "the unit for isotherm.",
             "thermalgainmode",
             "the gain mode.",
             "thermalresolution",
             "the resolution of thermal imaging camera.",
             "thermalframerateupperbound",
             "the frame rate upper bound supported by the thermal camera.",
             "thermallensfocallength",
             "the focal length of the thermal imaging camera.",
             "thermalversion",
             "there is a standard version and version with advanced radiometry capabilities of the zenmuse xt thermal camera. this  enum defines the versions.",
             "thermalcustomexternalscenesettingsprofile",
             "user defined parameters.",
             "thermalffcmode",
             "flat-field correction mods.",
             "thermalprofile",
             "the profile of the thermal imaging camera, which includes information about resolution, frame rate and focal length.",
             "thermaldigitalzoomfactor",
             "thermal camera digital zoom scale. the default value is x1.",
             "thermalmeasurementmode",
             "thermal camera temperature measurement mode. the default value is  disabled.",
             "thermalareatemperatureaggregations",
             "the aggregate temperature measurements for a selected metering area.",
             "thermalexternalscenesettings",
             "thermal cameras measure the apparent surface temperature of a given object. this is done by taking the amount of infrared  radiation an object emits and calculating the surface temperature by applying a formula that adjusts for external factors.   this struct includes all of the external scene parameters that the thermal camera firmware allows  to be customized.  there are two types of parameters, optical parameters which specify how much infrared  radiation is transmitted from the  surface to the thermal sensor, as well as parameters that specify sources of thermal radiance other than the object.   for a more in-depth overview of the physics behind thermal imaging, see https://en.wikipedia.org/wiki/thermography.",
             "displaynamephantom3standardcamera",
             "the display name for phantom 3 standard camera.",
             "displaynamephantom3advancedcamera",
             "the display name for phantom 3 advanced camera.",
             "displaynamephantom3professionalcamera",
             "the display name for phantom 3 professional camera.",
             "displaynamephantom34kcamera",
             "the display name for phantom 3 4k camera.",
             "displaynamex3",
             "the display name for x3 camera.",
             "displaynamex5",
             "the display name for x5 camera.",
             "displaynamex5r",
             "the display name for x5r camera.",
             "displaynamephantom4camera",
             "the display name for phantom 4 camera.",
             "displaynamephantom4procamera",
             "the display name for phantom 4 pro camera.",
             "displaynamext",
             "the display name for xt camera.",
             "displaynamez3",
             "the display name for z3 camera.",
             "displaynamemavicprocamera",
             "the display name for mavic pro camera.",
             "displaynamesparkcamera",
             "the display name for spark camera.",
             "displaynamez30",
             "the display name for z30 camera.",
             "displaynamex4s",
             "the display name for x4s camera.",
             "displaynamex5s",
             "the display name for x5s camera.",
             "displaynamephantom4advancedcamera",
             "the display name for phantom 4 advanced camera.",
             "callback",
             "this interface provides information about the aggregate temperature of metering area.",
             "callback",
             "this interface provides information about the external scene settings.",
             "callback",
             "called whenever the camera parameters change. in automatic exposure modes (program, shutter priority and  aperture priority) the camera may be automatically changing aperture, shutter speed and iso (depending on  the mode and camera) when lighting conditions change. in manual mode, the exposure compensation is automatically  updated to let the user know how much compensation the exposure needs to get to an exposure the camera calculates as correct.",
             "onreceive",
             "video data update callback. h.264 (also called mpeg-4 part 10 advanced video coding or mpeg-4 avc) is a video  coding format that is currently one of the most commonly used formats for the recording, compression, and  distribution of video content.  @param videobuffer h.264 video data buffer. don't free the buffer after it has been used. the units for the video buffer are bytes. @param length size of the address of the video data buffer in bytes.",
             "onupdate",
             "called when the camera's current state has been updated.  @param systemstate the system state of camera.",
             "onupdate",
             "called when the camera's lens and focus state has been updated.  this callback method is only  available when `isinterchangeablelenssupported`  is `true`.  @param state the camera lens and focus state information.",
             "onnewfile",
             "called when a new media file (photo or video) has been generated.  in this callback method, the `mediafile` instance properties `getdurationinseconds` and  `getvideoorientation` require special consideration. the thumbnail property normally has a  pointer to a uiimage of the thumbnail, but this is only available when the camera is in  `media_download` work mode. additionally, for this instance of  `mediafile`, the `getdurationinseconds` property is 0 and the  `getvideoorientation` property is `landscape`.  @param mediafile the new media file.",
             "ongenerate",
             "called when a time-lapse preview image has been generated. this method is only available on osmo with firmware version v1.5.2.0 or above.  @param previewimage the new generated preview image.",
             "onupdate",
             "called when the camera's sd card state has been updated.  @param state the sdcard state of camera",
             "onupdate",
             "called when the camera's ssd state has been updated. this method is available only when `isssdsupported` is `true`.  @param state the ssd's information.",
             "onupdate",
             "called when there are new min, max, and average temperature values available for the set spot metering area.  supported only by zenmuse xt containing advanced radiometry capabilities.  @param aggregations the thermalareatemperatureaggregations.",
             "onupdate",
             "called when updated external scene settings are available. supported only by zenmuse xt containing advanced radiometry capabilities.  @param settings the thermalexternalscenesettings.",
             "onupdate",
             "called whenever the camera parameters change. in automatic exposure modes (program, shutter priority and  aperture priority) the camera may be automatically changing aperture, shutter speed and iso (depending on  the mode and camera) when lighting conditions change. in manual mode, the exposure compensation is  automatically updated to let the user know how much compensation the exposure needs to get to an exposure  the camera calculates as correct.  @param values the updated values for parameters.",
             "onupdate",
             "received temperature in degrees celsius of image. the thermal imaging camera will only update the temperature  if the temperature data is enabled. for the xt standard version, the temperature measurement data is the  average of the center four pixels of the image. for the xt advanced radiometry version, the temperature  measurement point can be set using `setthermalspotmeteringtargetpoint`.  @param temperature the camera's temperature data in degrees celsius.",
             "shoot_photo",
             "capture mode. in this mode, the user can capture pictures.",
             "record_video",
             "record mode. in this mode, the user can record videos.",
             "playback",
             "playback mode. in this mode, the user can preview photos and videos, and can delete files. it is supported by  phantom 3 professional camera, x3, x5 and x5r cameras on aircraft and phantom 4 camera. playback mode is not  supported by z30, x5s, x4s, phantom 4 pro, mavic pro, phantom 3 standard, phantom 3 advanced, phantom 3 4k and  osmo series.",
             "media_download",
             "in this mode, the user can download media to the mobile device. not supported by x5 camera nor x5r camera while  mounted on aircraft.",
             "broadcast",
             "in this mode, live stream resolution and frame rate will be 1080i50 (pal) or 720p60 (ntsc). in this mode videos can  be recorded. still photos can also be taken only when video is recording. the only way to exit broadcast mode is to change modes to `record_video`. only supported by inspire 2.",
             "unknown",
             "the camera work mode is unknown.",
             "callback",
             "updates the camera's current state. in order to begin updates, call the startcamerastateupdates method  for the respective aircraft.",
             "getmode",
             "the current mode of the camera.  @return an enum value of `cameramode`",
             "isshootingsinglephoto",
             "`true` when the camera is performing any photo capture in  any `shootphotomode`. between photo capture in interval and time lapse mode, this property  will be `false`. the camera is shooting a single photo.  @return a boolean value.",
             "isshootingsinglephotoinrawformat",
             "`true` when the camera is performing a photo capture in raw or raw+jpeg format. between  photo capture in interval and time lapse mode, this property will be `false`. if saving  the photo in jpeg only, this property will always be `false`.  @return a boolean value.",
             "isshootingintervalphoto",
             "`true` when the camera is performing an interval capture. `true` after `startshootphoto` is called, and `false` after `stopshootphoto` is called.  @return a boolean value.",
             "isshootingburstphoto",
             "`true` when the camera is performing a burst capture. `true`  after `startshootphoto` is called, and `false` after the burst is complete. the camera is shooting burst photos.  @return a boolean value.",
             "isshootingrawburstphoto",
             "`true` when the camera is performing a raw burst capture. `true`  after `startshootphoto` is called, and `false` after the raw burst is complete. the camera is shooting raw burst photos.  @return a boolean value.",
             "getcurrentpanoramaphotocount",
             "the current completed photo count of the executing panorama shot.  @return an int value.",
             "isshootingshallowfocusphoto",
             "`true` when the camera is performing a shallowfocus capture.  @return a boolean value.",
             "isshootingpanoramaphoto",
             "`true` when the camera is performing a panorama capture.  @return a boolean value.",
             "isstoringphoto",
             "`true` if the camera is storing a photo. when `isstoringphoto`  is `true`, the user cannot change the camera mode or start to shoot another photo.  @return a boolean value.",
             "isrecording",
             "`true` if the camera is recording video.  @return a boolean value.",
             "getcurrentvideorecordingtimeinseconds",
             "the duration, in seconds, of the video currently being recorded by the camera.  @return an int value.",
             "isoverheating",
             "`true` if the camera is too hot.  @return a boolean value.",
             "haserror",
             "`true` if there is a camera sensor error.  @return a boolean value.",
             "callback",
             "this interface provides updated information about the lens and focus.",
             "islensmounted",
             "`true` if lens is installed on the camera.  @return a boolean value.",
             "getfocusstatus",
             "the current focus status of the lens.  if the lens is not installed, the value is undefined.  @return a `focusstatus` enum value.",
             "isafswitchon",
             "`true` if the lens auto focus (af) switch is on. if the lens is not  installed, the value is undefined. if `true`, `setfocusmode`  can be used to control the focal point.  @return a boolean value.",
             "getfocusmode",
             "the current focus mode. if the lens is not installed, the value is undefined.  @return a `focusmode` enum value.",
             "isfocusassistantenabledformf",
             "`true` if the focus assistant is enabled for manual focus mode. if the lens is not installed, the value is undefined.  @return a boolean value.",
             "isfocusassistantenabledforaf",
             "`true` if the focus assistant is enabled for auto focus mode. if the lens is not installed, the value is undefined.  @return a boolean value.",
             "isfocusassistantworking",
             "`true` if the focus target is zooming out.  if the lens is not installed, the value is undefined.  @return a boolean value.",
             "callback",
             "this interface provides general information and current statuses on the sd card.",
             "isinserted",
             "`true` if the sd card is inserted in the camera.  @return a boolean value.",
             "isinitializing",
             "`true` if sd card is initializing. note that if the sd card is  initializing, the value for other properties  in `sdcardstate` is undefined.  @return a boolean value.",
             "isreadonly",
             "`true` if the sd card is read-only.  @return a boolean value.",
             "isformatted",
             "`true` if the sd card is formatted.  @return a boolean value.",
             "isformatting",
             "`true` if the sd card is formatting.  @return a boolean value.",
             "isfull",
             "`true` if the sd card cannot save any more media.  @return a boolean value.",
             "isverified",
             "`true` if the sd card is verified as genuine. the sd card is not valid if it is fake,  which can be a problem if the sd card was purchased by a non-reputable retailer.  @return a boolean value.",
             "isinvalidformat",
             "`true` if sd card filesystem format is invalid.  @return a boolean value.",
             "haserror",
             "`true` if there is an sd card error.  @return a boolean value.",
             "gettotalspaceinmb",
             "total space in megabytes (mb) available on the sd card.  @return a boolean value.",
             "getremainingspaceinmb",
             "remaining space in megabytes (mb) on the sd card.  @return an int value.",
             "getavailablecapturecount",
             "returns the number of pictures that can be taken with the remaining space available on the sd card.  @return a long value.",
             "getavailablerecordingtimeinseconds",
             "returns the number of seconds available for recording with the remaining space available on the sd card.  @return an int value.",
             "callback",
             "this interface provides general information and current status of the ssd.",
             "getssdoperationstate",
             "ssd state information for currently executing operations.  @return an instance of `ssdoperationstate`.",
             "isconnected",
             "`true` if the ssd is connected. note, if the camera is disconnected,  the values for other properties in `ssdstate` are undefined.  @return a boolean value.",
             "getcapacity",
             "ssd's total capacity. @return total ssd capacity.  @return an instance of `ssdcapacity`.",
             "getavailablerecordingtimeinseconds",
             "ssd's remaining time in seconds, based on the current `videoresolution`  and `videoframerate`. @return ssd's remaining time measured in seconds.  @return an int value.",
             "getremainingspaceinmb",
             "ssd's remaining capacity in mb. @return ssd's remaining capacity measured in mb.  @return a long value.",
             "getvideoresolution",
             "video resolution to be saved to ssd. @return ssd's video resolution.  @return a `videoresolution` enum value.",
             "getvideoframerate",
             "video framerate to be saved to ssd.  @return a `videoframerate` enum value.",
             "getrawphotoburstcount",
             "number of photos that are shot in raw burst mode.  @return an int value.",
             "single",
             "sets the camera to take a single photo.",
             "hdr",
             "sets the camera to take an hdr photo. x5 camera, x5r camera, xt camera, z30 camera, phantom 4 pro camera, x4s  camera and x5s camera do not support hdr mode.",
             "burst",
             "set the camera to take multiple photos at once. xt camera does not support burst mode.",
             "aeb",
             "automatic exposure bracketing (aeb) capture. in this mode you can quickly take multiple shots (the default is 3)  at different exposures without having to manually change any settings between frames. xt camera and z30 camera does  not support aeb mode.",
             "interval",
             "sets the camera to take a picture (or multiple pictures) continuously at a set time interval. the minimum  interval for jpeg format of any quality is 2s. for all cameras except x4s, x5s and phantom 4 pro camera:  the minimum interval for raw or raw+jpeg format is 10s. for the x4s, x5s and phantom 4 pro cameras the minimum  interval for raw or raw+jpeg dformat is 5s.",
             "time_lapse",
             "sets the camera to take a picture (or multiple pictures) continuously at a set time interval. the camera will  merge the photo sequence and the output is a video. the minimum interval for video only format is 1 s.  the minimum interval for video+photo format is 2 s. for the new osmo firmware version, no video feed will be  received if the camera is shooting photos with time-lapse mode. instead, user can receive a sequence of preview  images using the delegate method `ongenerate`. supported only by osmo camera (z3  and x3).",
             "panorama",
             "in panorama mode, the aircraft takes a series of photos with different gimbal and aircraft heading positions.  the photos can be stitched with a third-party library. it is only supported by spark.",
             "raw_burst",
             "sets the camera to take a burst of raw photos. use `getrawphotoburstcount` to check  how many photos have been shot. only supported by x5s.",
             "shallow_focus",
             "sets the camera to take a series of photos while the aircraft moves up and down automatically. the image's depth  of field can be computed with a third-party library to produce a photo with the bokeh effect. note:  1. it is only  suitable for shooting still scenes.  2. the aircraft will ascend about 20cm before shooting. ensure that there is no obstacle about the aircraft.  3. the suitable range of shooting is within 30m.  it is only supported by spark.",
             "unknown",
             "the shoot photo mode is unknown.",
             "program",
             "program mode.",
             "shutter_priority",
             "shutter priority mode.",
             "aperture_priority",
             "aperture priority mode.",
             "manual",
             "manual mode.",
             "unknown",
             "the camera exposure mode is unknown.",
             "mov",
             "the video storage format is mov.",
             "mp4",
             "the video storage format is mp4.",
             "unknown",
             "the video storage format is unknown.",
             "resolution_640x480",
             "the camera's video resolution is 640x480.",
             "resolution_640x512",
             "the camera's video resolution is 640x512.",
             "resolution_1280x720",
             "the camera's video resolution is 1280x720.",
             "resolution_1920x1080",
             "the camera's video resolution is 1920x1080.",
             "resolution_2704x1520",
             "the camera's video resolution is 2704x1520.",
             "resolution_2720x1530",
             "the camera's video resolution is 2720x1530.",
             "resolution_3840x1572",
             "the camera's video resolution is 3840x1572.",
             "resolution_3840x2160",
             "the camera's video resolution is 3840x2160.",
             "resolution_4096x2160",
             "the camera's video resolution is 4096x2160.",
             "resolution_4608x2160",
             "the camera's video resolution is 4608x2160.",
             "resolution_4608x2592",
             "the camera's video resolution is 4608x2592.",
             "resolution_5280x2160",
             "the camera's video resolution is 5280x2160.",
             "resolution_max",
             "the camera's video resolution will be maximum resolution supported by the camera sensor. for x5s and x4s,  the maximum resolution is 5280x2972.",
             "no_ssd_video",
             "the camera's ssd video resolution is unset. when the ssd resolution is unset, camera will not store video to ssd.   ssd's resolution is determined by both license key and sd card's video frame rate. if there is no supported  resolution with the current configuration, djicameravideoresolutionunset</code> will be selected and user  should adjust either the license or the frame rate.",
             "unknown",
             "the camera's video resolution is unknown.",
             "frame_rate_23_dot_976_fps",
             "the camera's video frame rate is 23.976fps (frames per second).",
             "frame_rate_24_fps",
             "the camera's video frame rate is 24fps (frames per second).",
             "frame_rate_25_fps",
             "the camera's video frame rate is 25fps (frames per second).",
             "frame_rate_29_dot_970_fps",
             "the camera's video frame rate is 29.97fps (frames per second).",
             "frame_rate_30_fps",
             "the camera's video frame rate is 30fps (frames per second).",
             "frame_rate_47_dot_950_fps",
             "the camera's video frame rate is 47.95fps (frames per second).",
             "frame_rate_48_fps",
             "the camera's video frame rate is 48fps (frames per second).",
             "frame_rate_50_fps",
             "the camera's video frame rate is 50fps (frames per second).",
             "frame_rate_59_dot_940_fps",
             "the camera's video frame rate is 59.94fps (frames per second).",
             "frame_rate_60_fps",
             "the camera's video frame rate is 60fps (frames per second).",
             "frame_rate_90_fps",
             "the camera's video frame rate is 90fps (frames per second).",
             "frame_rate_96_fps",
             "the camera's video frame rate is 96fps (frames per second).",
             "frame_rate_100_fps",
             "the camera's video frame rate is 100fps (frames per second). this frame rate can only be used when  `isslowmotionsupported` returns `true`.",
             "frame_rate_120_fps",
             "the camera's video frame rate is 120fps (frames per second). this frame rate can only be used when  `isslowmotionsupported` returns `true`.",
             "unknown",
             "the camera's video frame rate is unknown.",
             "getresolution",
             "returns the camera's current video resolution.  @return returns resolution",
             "getframerate",
             "returns the camera's current video frame rate.  @return returns framerate",
             "resolutionandframerate",
             "create a `resolutionandframerate` instance with a preset camera video resolution and frame rate.  @param resolution the value of `videoresolution` enum. @param framerate the value of `videoframerate` enum.",
             "pal",
             "the camera video standard value is set to pal.",
             "ntsc",
             "the camera video standard value is set to ntsc.",
             "unknown",
             "the camera video standard value is unknown.",
             "raw",
             "the camera's photo storage format is raw.",
             "jpeg",
             "the camera's photo storage format is jpeg.",
             "raw_and_jpeg",
             "the camera stores both the raw and jpeg formats of the photo.",
             "tiff_14_bit",
             "the camera's photo storage format is tiff (14bit).",
             "radiometric_jpeg",
             "the camera's photo storage format is radiometric jpeg (a special jpeg format with temperature information).  a radiometric jpeg has the .jpg suffix and can be viewed as a normal jpeg file would. at the same time,  the temperature data is also stored in the file as meta data. pc software is required to analyze the file  and it is accessible at flir's website http://www.flir.com/instruments/display/?id=54865. only supported  by xt camera with firmware version 1.16.1.70 or above.",
             "tiff_14_bit_linear_low_temp_resolution",
             "the camera's photo storage format is tiff linear low. in this mode each pixel is 14 bits and linearly  proportional with temperature, covering a high dynamic range of temperature which results in a lower  temperature resolution. supported only by zenmuse xt containing advanced radiometry capabilities with  firmware version 1.17.1.80 or lower. for newer firmwares, the temperature resolution preference is coupled  with the thermal gain mode.",
             "tiff_14_bit_linear_high_temp_resolution",
             "the camera's photo storage format is tiff linear high. in this mode each pixel is 14 bits and linearly  proportional with temperature, covering a low dynamic range of temperature which results in a higher  temperature resolution. supported only by zenmuse xt containing advanced radiometry capabilities with firmware version 1.17.1.80 or lower. for newer firmwares, the temperature resolution preference is  coupled with the thermal gain mode.",
             "unknown",
             "the camera's photo storage format is unknown.",
             "video",
             "the camera in time-lapse mode will generate video.",
             "jpeg_and_video",
             "the camera in time-lapse mode will generate video and jpeg.",
             "unknown",
             "the file format is unknown.",
             "ratio_4_3",
             "the camera's photo ratio is 4 : 3.",
             "ratio_16_9",
             "the camera's photo ratio is 16 : 9.",
             "ratio_3_2",
             "the camera's photo ratio is 3:2. it is only supported by phantom 4 pro camera.",
             "unknown",
             "the camera's photo ratio is unknown.",
             "burst_count_3",
             "the camera burst shoot count is set to capture 3 pictures at once when the camera shoots a photo.",
             "burst_count_5",
             "the camera burst shoot count is set to capture 5 pictures at once when the camera takes a photo.",
             "burst_count_7",
             "the camera burst shoot count is set to capture 7 pictures at once when the camera takes a photo. it is not  supported by z30 camera.",
             "burst_count_10",
             "the camera burst shoot count is set to capture 10 pictures at once when the camera takes a photo. only  supported by x4s camera, x5s camera and phantom 4 pro camera.",
             "burst_count_14",
             "the camera burst shoot count is set to capture 14 pictures at once when the camera takes a photo. only  supported by x4s camera, x5s camera and phantom 4 pro camera.",
             "continuous",
             "the camera burst shoot count is set to capture raw pictures continuously until `stopshootphoto`  command is sent. it is only supported by inspire 2 when the photo shoot mode is raw burst.",
             "unknown",
             "the camera burst shoot count value is unknown.",
             "aeb_count_3",
             "the number of pictures to continuously take at one time in aeb mode is 3.",
             "aeb_count_5",
             "the number of pictures to continuously take at one time in aeb mode is 5.",
             "aeb_count_7",
             "the number of pictures to continuously take at one time in aeb mode is 7.",
             "unknown",
             "the number of pictures to continuously take at one time in aeb mode is unknown.",
             "phototimeintervalsettings",
             "constructor.  @param capturecount number of photos to take. @param timeintervalinseconds time interval in seconds between taking photos.",
             "getcapturecount",
             "the number of photos to capture. the value range is [2, 255]. if 255 is selected, then the camera will continue  to take pictures until stopshootphotowithcompletion is called. for thermal imaging camera and z30 camera, it can  only be set to 255.  @return number of photos to capture",
             "gettimeintervalinseconds",
             "the time interval between when two photos are taken. the range for this parameter depends the photo file  format(djicameraphotofileformat). for xt camera, the range is [1, 60] seconds. for all other products, when the  file format is jpeg, the range is [2, 2^16 - 1] seconds; when the file format is raw or raw+jpeg, the range is  [10, 2^16 - 1] seconds.  @return time interval in seconds.",
             "getinterval",
             "the time interval between when two photos are taken.  @return return interval value from settings",
             "getduration",
             "the total duration for which the camera will take pictures.  @return return duration value from settings",
             "getfileformat",
             "the file format for captured photos during time lapse.  @return return file format value from settings",
             "panorama_mode_3x3",
             "camera will shoot 3 rows of 3 photos. each photo in a row will be taken with a different aircraft heading. each row of photos is taken with a different gimbal pitch.",
             "panorama_mode_3x1",
             "camera will shoot 3 photos with the same aircraft heading and different gimbal pitch.",
             "unknown",
             "unknown.",
             "shutter_speed_1_8000",
             "camera's shutter speed 1/8000 s.",
             "shutter_speed_1_6400",
             "camera's shutter speed 1/6400 s.",
             "shutter_speed_1_6000",
             "camera's shutter speed 1/6000 s.",
             "shutter_speed_1_5000",
             "camera's shutter speed 1/5000 s.",
             "shutter_speed_1_4000",
             "camera's shutter speed 1/4000 s.",
             "shutter_speed_1_3200",
             "camera's shutter speed 1/3200 s.",
             "shutter_speed_1_3000",
             "camera's shutter speed 1/3000 s.",
             "shutter_speed_1_2500",
             "camera's shutter speed 1/2500 s.",
             "shutter_speed_1_2000",
             "camera's shutter speed 1/2000 s.",
             "shutter_speed_1_1600",
             "camera's shutter speed 1/1600 s.",
             "shutter_speed_1_1500",
             "camera's shutter speed 1/1500 s.",
             "shutter_speed_1_1250",
             "camera's shutter speed 1/1250 s.",
             "shutter_speed_1_1000",
             "camera's shutter speed 1/1000 s.",
             "shutter_speed_1_800",
             "camera's shutter speed 1/800 s.",
             "shutter_speed_1_725",
             "camera's shutter speed 1/725 s.",
             "shutter_speed_1_640",
             "camera's shutter speed 1/640 s.",
             "shutter_speed_1_500",
             "camera's shutter speed 1/500 s.",
             "shutter_speed_1_400",
             "camera's shutter speed 1/400 s.",
             "shutter_speed_1_350",
             "camera's shutter speed 1/350 s.",
             "shutter_speed_1_320",
             "camera's shutter speed 1/320 s.",
             "shutter_speed_1_250",
             "camera's shutter speed 1/250 s.",
             "shutter_speed_1_240",
             "camera's shutter speed 1/240 s.",
             "shutter_speed_1_200",
             "camera's shutter speed 1/200 s.",
             "shutter_speed_1_180",
             "camera's shutter speed 1/180 s.",
             "shutter_speed_1_160",
             "camera's shutter speed 1/160 s.",
             "shutter_speed_1_125",
             "camera's shutter speed 1/125 s.",
             "shutter_speed_1_120",
             "camera's shutter speed 1/120 s.",
             "shutter_speed_1_100",
             "camera's shutter speed 1/100 s.",
             "shutter_speed_1_90",
             "camera's shutter speed 1/90 s.",
             "shutter_speed_1_80",
             "camera's shutter speed 1/80 s.",
             "shutter_speed_1_60",
             "camera's shutter speed 1/60 s.",
             "shutter_speed_1_50",
             "camera's shutter speed 1/50 s.",
             "shutter_speed_1_40",
             "camera's shutter speed 1/40 s.",
             "shutter_speed_1_30",
             "camera's shutter speed 1/30 s.",
             "shutter_speed_1_25",
             "camera's shutter speed 1/25 s.",
             "shutter_speed_1_20",
             "camera's shutter speed 1/20 s.",
             "shutter_speed_1_15",
             "camera's shutter speed 1/15 s.",
             "shutter_speed_1_12_dot_5",
             "camera's shutter speed 1/12.5 s.",
             "shutter_speed_1_10",
             "camera's shutter speed 1/10 s.",
             "shutter_speed_1_8",
             "camera's shutter speed 1/8 s.",
             "shutter_speed_1_6_dot_25",
             "camera's shutter speed 1/6.25 s.",
             "shutter_speed_1_5",
             "camera's shutter speed 1/5 s.",
             "shutter_speed_1_4",
             "camera's shutter speed 1/4 s.",
             "shutter_speed_1_3",
             "camera's shutter speed 1/3 s.",
             "shutter_speed_1_2_dot_5",
             "camera's shutter speed 1/2.5 s.",
             "shutter_speed_1_2",
             "camera's shutter speed 1/2 s.",
             "shutter_speed_1_1_dot_67",
             "camera's shutter speed 1/1.67 s.",
             "shutter_speed_1_1_dot_25",
             "camera's shutter speed 1/1.25 s.",
             "shutter_speed_1",
             "camera's shutter speed 1.0 s.",
             "shutter_speed_1_dot_3",
             "camera's shutter speed 1.3 s.",
             "shutter_speed_1_dot_6",
             "camera's shutter speed 1.6 s.",
             "shutter_speed_2",
             "camera's shutter speed 2.0 s.",
             "shutter_speed_2_dot_5",
             "camera's shutter speed 2.5 s.",
             "shutter_speed_3",
             "camera's shutter speed 3.0 s.",
             "shutter_speed_3_dot_2",
             "camera's shutter speed 3.2 s.",
             "shutter_speed_4",
             "camera's shutter speed 4.0 s.",
             "shutter_speed_5",
             "camera's shutter speed 5.0 s.",
             "shutter_speed_6",
             "camera's shutter speed 6.0 s.",
             "shutter_speed_7",
             "camera's shutter speed 7.0 s.",
             "shutter_speed_8",
             "camera's shutter speed 8.0 s.",
             "shutter_speed_9",
             "camera's shutter speed 9.0 s.",
             "shutter_speed_10",
             "camera's shutter speed 10.0 s.",
             "shutter_speed_13",
             "camera's shutter speed 13.0 s.",
             "shutter_speed_15",
             "camera's shutter speed 15.0 s.",
             "shutter_speed_20",
             "camera's shutter speed 20.0 s.",
             "shutter_speed_25",
             "camera's shutter speed 25.0 s.",
             "shutter_speed_30",
             "camera's shutter speed 30.0 s.",
             "unknown",
             "camera's shutter speed unknown.",
             "auto",
             "the iso value is automatically set. this cannot be used for all cameras when in manual mode.",
             "iso_100",
             "the iso value is set to 100.",
             "iso_200",
             "the iso value is set to 200.",
             "iso_400",
             "the iso value is set to 400.",
             "iso_800",
             "the iso value is set to 800.",
             "iso_1600",
             "the iso value is set to 1600.",
             "iso_3200",
             "the iso value is set to 3200.",
             "iso_6400",
             "the iso value is set to 6400.",
             "iso_12800",
             "the iso value is set to 12800.",
             "iso_25600",
             "the iso value is set to 25600.",
             "unknown",
             "the iso value is set to unknown value.",
             "f_1_dot_6",
             "the aperture value is f/1.6. it is only supported by z30 camera.",
             "f_1_dot_7",
             "the aperture value is f/1.7.",
             "f_1_dot_8",
             "the aperture value is f/1.8.",
             "f_2",
             "the aperture value is f/2.",
             "f_2_dot_2",
             "the aperture value is f/2.2.",
             "f_2_dot_4",
             "the aperture value is f/2.4. it is only supported by z30 camera.",
             "f_2_dot_5",
             "the aperture value is f/2.5.",
             "f_2_dot_6",
             "the aperture value is f/2.6.",
             "f_2_dot_8",
             "the aperture value is f/2.8.",
             "f_3_dot_2",
             "the aperture value is f/3.2.",
             "f_3_dot_4",
             "the aperture value is f/3.4.",
             "f_3_dot_5",
             "the aperture value is f/3.5.",
             "f_4",
             "the aperture value is f/4.",
             "f_4_dot_5",
             "the aperture value is f/4.5.",
             "f_4_dot_8",
             "the aperture value is f/4.8.",
             "f_5",
             "the aperture value is f/5.",
             "f_5_dot_6",
             "the aperture value is f/5.6.",
             "f_6_dot_3",
             "the aperture value is f/6.3.",
             "f_6_dot_8",
             "the aperture value is f/6.8.",
             "f_7_dot_1",
             "the aperture value is f/7.1.",
             "f_8",
             "the aperture value is f/8.",
             "f_9",
             "the aperture value is f/9.",
             "f_9_dot_6",
             "the aperture value is f/9.6.",
             "f_10",
             "the aperture value is f/10.",
             "f_11",
             "the aperture value is f/11.",
             "f_13",
             "the aperture value is f/13.",
             "f_14",
             "the aperture value is f/14.",
             "f_16",
             "the aperture value is f/16.",
             "f_18",
             "the aperture value is f/18.",
             "f_20",
             "the aperture value is f/20.",
             "f_22",
             "the aperture value is f/22.",
             "unknown",
             "the aperture value is unknown.",
             "getwhitebalancepreset",
             "the current preset for white balance.  @return white balance preset.",
             "getcolortemperature",
             "the current setting for color temperature. real color temperature value (k) = value * 100. for example, 50 -> 5000k.  @return color temperature.",
             "whitebalance",
             "create a `whitebalance` instance with a white balance preset.  @param preset white balance preset that is not `custom`.",
             "whitebalance",
             "create a `whitebalance` instance with a white balance preset.  @param temperature color temperature value to be set in the range of [20, 100]. real color temperature value (k) = value  * 100. for example, 50 -> 5000k.",
             "auto",
             "the camera's white balance is automatically set.",
             "sunny",
             "the camera's white balance is set to sunny.",
             "cloudy",
             "the camera's white balance is set to cloudy.",
             "water_surface",
             "the camera's white balance is set to water surface.",
             "indoor_incandescent",
             "the camera's white balance is set to indoors and incandescent light.",
             "indoor_fluorescent",
             "the camera's white balance is set to indoors and fluorescent light.",
             "custom",
             "the camera's white balance is set to custom color temperature. by using this white balance value, user can set a  specific value for the color temperature.",
             "unknown",
             "the camera's white balance is unknown.",
             "center",
             "the camera's exposure metering is set to the center.",
             "average",
             "the camera's exposure metering is set to average.",
             "spot",
             "the camera's exposure metering is set to a single spot.",
             "unknown",
             "the camera's exposure metering is unknown.",
             "n_5_0",
             "the camera's exposure compensation is -5.0ev.",
             "n_4_7",
             "the camera's exposure compensation is -4.7ev.",
             "n_4_3",
             "the camera's exposure compensation is -4.3ev.",
             "n_4_0",
             "the camera's exposure compensation is -4.0ev.",
             "n_3_7",
             "the camera's exposure compensation is -3.7ev.",
             "n_3_3",
             "the camera's exposure compensation is -3.3ev.",
             "n_3_0",
             "the camera's exposure compensation is -3.0ev.",
             "n_2_7",
             "the camera's exposure compensation is -2.7ev.",
             "n_2_3",
             "the camera's exposure compensation is -2.3ev.",
             "n_2_0",
             "the camera's exposure compensation is -2.0ev.",
             "n_1_7",
             "the camera's exposure compensation is -1.7ev.",
             "n_1_3",
             "the camera's exposure compensation is -1.3ev.",
             "n_1_0",
             "the camera's exposure compensation is -1.0ev.",
             "n_0_7",
             "the camera's exposure compensation is -0.7ev.",
             "n_0_3",
             "the camera's exposure compensation is -0.3ev.",
             "n_0_0",
             "the camera's exposure compensation is 0.0ev.",
             "p_0_3",
             "the camera's exposure compensation is +0.3ev.",
             "p_0_7",
             "the camera's exposure compensation is +0.7ev.",
             "p_1_0",
             "the camera's exposure compensation is +1.0ev.",
             "p_1_3",
             "the camera's exposure compensation is +1.3ev.",
             "p_1_7",
             "the camera's exposure compensation is +1.7ev.",
             "p_2_0",
             "the camera's exposure compensation is +2.0ev.",
             "p_2_3",
             "the camera's exposure compensation is +2.3ev.",
             "p_2_7",
             "the camera's exposure compensation is +2.7ev.",
             "p_3_0",
             "the camera's exposure compensation is +3.0ev.",
             "p_3_3",
             "the camera's exposure compensation is +3.3ev.",
             "p_3_7",
             "the camera's exposure compensation is +3.7ev.",
             "p_4_0",
             "the camera's exposure compensation is +4.0ev.",
             "p_4_3",
             "the camera's exposure compensation is +4.3ev.",
             "p_4_7",
             "the camera's exposure compensation is +4.7ev.",
             "p_5_0",
             "the camera's exposure compensation is +5.0ev.",
             "unknown",
             "the camera's exposure compensation is unknown.",
             "auto",
             "the camera's anti-flicker is automatically set. it is not supported by z30 camera.",
             "manual_60hz",
             "the camera's anti-flicker is 60 hz.",
             "manual_50hz",
             "the camera's anti-flicker is 50 hz.",
             "unknown",
             "the camera's anti-flicker is unknown.",
             "getaperture",
             "returns the current aperture value being used by the camera. a larger aperture results in a  higher exposure and shallower depth of field. for cameras that do not support adjustable aperture (e.g. zenmuse x3),  the real aperture value is fixed.  @return the enum value of `aperture`",
             "getshutterspeed",
             "returns the current shutter speed being used by the camera. a slower shutter speed results in  a higher exposure, but more blurring in areas of the scene that are moving.  @return the enum value of `shutterspeed`",
             "getiso",
             "returns the current iso value being used by the camera. `iso` defines a  number iso values separated by one exposure stop. however, when the iso is in automatic mode, the camera can select  iso values less than one stop apart, and therefore this property is the actual iso value being used by the camera.  a higher iso results in a higher exposure, and more noise in the resulting image.  @return the enum value of `iso`",
             "getexposurecompensation",
             "returns the camera's current exposure compensation. in program, aperture priority and shutter priority modes, the  exposure compensation value changes the exposure target the camera is using to calculate correct exposure and is set by the user. for example, aperture priority mode indicates that the priority is to maintain the aperture setting  and adjusting the exposure by varying the iso and shutter speed. in manual mode, this value is reported from the  camera and reports how much the  exposure needs to be compensated for to get to what the camera thinks is the correct  exposure. in manual mode, the range of exposure compensation reported by the camera is -2.0 ev to 2.0 ev. in program, aperture priority and shutter priority modes, the range of exposure compensation is -3.0 ev to + 3.0 ev. for the z30  camera in manual mode, exposurecompensation is not used and the value is always 'djicameraexposurecompensationn00'.  @return the enum value of `exposurecompensation`",
             "manual",
             "the camera's focus mode is set to manual. in this mode, user sets the focus ring value to adjust the focal distance.",
             "auto",
             "the camera's focus mode is set to auto. for the z30 camera, the focus is calculated completely automatically. for all  other cameras, a focus target can be set by the user, which is used to calculate focus automatically.",
             "afc",
             "the camera's focus mode is set to continuous af. it is only supported by mavic pro with  firmware version v01.03.0000 or above, and x4s camera.",
             "unknown",
             "the camera's focus mode is unknown.",
             "idle",
             "the lens is idle. no focus target has been set.",
             "focusing",
             "the lens is focusing on the target.",
             "successful",
             "the lens succeeded to focus on the target.",
             "failed",
             "the lens failed to focus on the target. this happens when the target is too close, or the camera cannot distinguish the  object to focus (e.g. a white wall).",
             "unknown",
             "the lens focus status is unknown.",
             "isenabledmf",
             "`true` if the lens focus assistant is enabled for manual focusing.  @return `true` if mf is enabled.",
             "isenabledaf",
             "`true` if the lens focus assistant is enabled for auto focusing.  @return true if af is enabled.",
             "not_found",
             "ssd is not found.",
             "idle",
             "ssd is idle.",
             "saving",
             "ssd is saving.",
             "formatting",
             "ssd is formatting.",
             "initializing",
             "ssd is initializing.",
             "error",
             "ssd validation error.",
             "full",
             "ssd is full.",
             "poor_connection",
             "communication to ssd is not stable. user can re-plugin ssd. it is supported by x5s.",
             "switching_license",
             "ssd is switching the license key. it is supported by x5s.",
             "formatting_required",
             "formatting is required. it is supported by x5s.",
             "unknown",
             "ssd state is unknown. this happens in the first 2 seconds after turning the camera power on as during this time the  camera cannot check the state of the ssd.",
             "capacity_256_gb",
             "ssd capacity is 256g.",
             "capacity_512_gb",
             "ssd capacity is 512g.",
             "capacity_1_tb",
             "ssd capacity is 1t.",
             "unknown",
             "ssd capacity is unknown.",
             "licensekeytypecinemadng",
             "cinemadng.",
             "licensekeytypeprores422hq",
             "apple prores 422 hq.",
             "licensekeytypeprores4444xq",
             "apple prores 4444 xq(no alpha).",
             "unknown",
             "unknown.",
             "full",
             "causes the color spectrum to be evenly distributed across the entire image depending the default settings.",
             "sky_excluded_33",
             "ignores areas of the sky 33% so that most of the spectrum can be allocated to remaining areas, providing higher  contrast and utility for analysis.",
             "sky_excluded_50",
             "ignores areas of the sky 50% so that most of the spectrum can be allocated to remaining areas, providing higher  contrast and utility for analysis.",
             "unknown",
             "the roi type is unknown.",
             "white_hot",
             "without isotherm enabled, the palette type is whitehot. with isotherm enabled, the palette type is whitehotiso.",
             "black_hot",
             "without isotherm enabled, the palette type is blackhot. with isotherm enabled, the palette type is blackhotiso.",
             "red_hot",
             "without isotherm enabled, the palette type is redhot. with isotherm enabled, the palette type is redhotiso.",
             "green_hot",
             "without isotherm enabled, the palette type is greenhot. with isotherm enabled, the palette type is greenhotiso.",
             "fusion",
             "without isotherm enabled, the palette type is fusion. with isotherm enabled, the palette type is fusioniso.",
             "rainbow",
             "without isotherm enabled, the palette type is rainbow. with isotherm enabled, the palette type is rainbowiso.",
             "ironbow_1",
             "without isotherm enabled, the palette type is ironbow1. with isotherm enabled, the palette type is ironbowwhiso.",
             "ironbow_2",
             "without isotherm enabled, the palette type is ironbow2. with isotherm enabled, the palette type is ironbowbhiso.",
             "ice_fire",
             "without isotherm enabled, the palette type is icefire. with isotherm enabled, the palette type is icefireiso.",
             "sepia",
             "without isotherm enabled, the palette type is sepia. with isotherm enabled, the palette type is sepiaiso.",
             "glowbow",
             "without isotherm enabled, the palette type is glowbow. with isotherm enabled, the palette type is glowbowiso.",
             "color_1",
             "without isotherm enabled, the palette type is color1. with isotherm enabled, the palette type is midrangewhiso.",
             "color_2",
             "without isotherm enabled, the palette type is color2. with isotherm enabled, the palette type is midrangebhiso.",
             "rain",
             "without isotherm enabled, the palette type is rain. with isotherm enabled, the palette type is rainbowhciso.",
             "unknown",
             "the palette type is unknown.",
             "linear",
             "linearly transforms the 14-bit sensor pixel data to 8-bit jpeg/mp4 pixel data.",
             "default",
             "automatically adjusts dde, ace, sso, brightness and contrast.",
             "sea_sky",
             "automatically adjusts dde, ace, sso, brightness and contrast with presets optimized for scenes composed of the sea and  the sky scenes.",
             "outdoor",
             "automatically adjusts dde, ace, sso, brightness and contrast with presets optimized for outdoor scenes.",
             "indoor",
             "automatically adjusts dde, ace, sso, brightness and contrast with presets optimized for indoor scenes.",
             "manual",
             "allows manual setting of dde, ace, sso, brightness and contrast.",
             "profile_1",
             "first saved settings of dde, ace, sso, brightness and contrast.",
             "profile_2",
             "second saved settings of dde, ace, sso, brightness and contrast.",
             "profile_3",
             "third saved settings of dde, ace, sso, brightness and contrast.",
             "unknown",
             "the scene type is unknown.",
             "percentage",
             "the unit type is percentage. the allowed range is [0, 100].",
             "celsius",
             "the unit type is degrees celsius. the allowed range is [-40, 1000].",
             "unknown",
             "the unit type is unknown.",
             "auto",
             "the camera will automatically select the optimal gain mode according to the temperature range of the image.",
             "low",
             "the camera covers a wider temperature range but is less sensitive to temperature differences.",
             "high",
             "the camera covers a smaller temperature range but is more sensitive to temperature differences.",
             "unknown",
             "the gain mode is unknown.",
             "resolution_336x256",
             "the thermal imaging camera resolution is 336x256.",
             "resolution_640x512",
             "the thermal imaging camera resolution is 640x512.",
             "unknown",
             "the thermal imaging camera resolution is unknown.",
             "upper_bound_8_dot_3_hz",
             "the thermal imaging camera frame rate upper bound is 8.3hz.",
             "upper_bound_30_hz",
             "the thermal imaging camera frame rate upper bound is 30hz.",
             "unknown",
             "the thermal imaging camera frame rate upper bound is unknown.",
             "length_6_dot_8_mm",
             "the thermal imaging camera's lens focal length is 6.8 mm.",
             "length_7_dot_5_mm",
             "the thermal imaging camera lens focal length is 7.5mm.",
             "length_9_mm",
             "the thermal imaging camera's lens focal length is 9 mm.",
             "length_13_mm",
             "the thermal imaging camera's lens focal length is 13 mm.",
             "length_19_mm",
             "the thermal imaging camera's lens focal length is 19 mm.",
             "unknown",
             "the thermal imaging camera's lens focal length is unknown.",
             "xt_standard",
             "the thermal camera is zenmuse xt standard version.",
             "xt_advanced_radiometry_enabled",
             "the thermal camera is zenmuse xt advanced radiometry version.",
             "profile_1",
             "custom thermal external scene settings for user 1.",
             "profile_2",
             "custom thermal external scene settings for user 2.",
             "profile_3",
             "custom thermal external scene settings for user 3.",
             "unknown",
             "the user is unknown.",
             "auto",
             "automatic flat-field correction mode.",
             "manual",
             "manual flat-field correction mode.",
             "unknown",
             "unknown flat-field correction mode.",
             "getresolution",
             "get the supported resolution of the thermal imaging camera.  @return the enum value of the `thermalresolution`",
             "getframerateupperbound",
             "get the supported frame rate upper bound of the thermal imaging camera.  @return the enum value of the `thermalframerateupperbound`",
             "getfocallength",
             "the lens model of the thermal imaging camera.  @return the enum value of the `thermallensfocallength`",
             "getversion",
             "get the version of the thermal imaging camera.  @return the enum value of the `thermalversion`",
             "x_1",
             "digital zoom factor x1.",
             "x_2",
             "digital zoom factor is x2.",
             "x_4",
             "digital zoom factor is x4.",
             "x_8",
             "digital zoom factor is x8.",
             "unknown",
             "digital zoom factor is unknown.",
             "disabled",
             "disable temperature measuring.",
             "spot_metering",
             "enable temperature measurement and set mode to spot metering. use `onupdate` to receive the  updated temperature data. in this mode, the advanced radiometry version xt camera can change the metering point  using `setthermalspotmeteringtargetpoint`.",
             "area_metering",
             "enable temperature measurement and set mode to area metering. use `onupdate` to receive the updated temperature data. only supported by the advanced radiometry version xt camera.",
             "unknown",
             "thermal camera's temperature measurement mode is unknown.",
             "getaverageareatemperature",
             "get the average temperature of the selected metering area.  @return a float value.",
             "getminareatemperature",
             "get the minimum temperature of the selected metering area.  @return a float value for the minimal temperature of the metering area.",
             "getmintemperaturepoint",
             "the minimum temperature coordinate of the selected metering area.  @return minimum temperature position.",
             "getmaxareatemperature",
             "get the maximum temperature of the selected metering area.  @return a float value for the maximal temperature of the metering area.",
             "getmaxtemperaturepoint",
             "the maximum temperature coordinate of the selected metering area.  @return maximum temperature position.",
             "getatmospherictemperature",
             "atmospheric temperature, can be between -50 and 327.67 degrees celsius.  @return atmospheric temperature",
             "getatmospherictransmissioncoefficient",
             "transmission coefficient of the atmosphere between the scene and the camera, can be between 50 and 100.  @return transmission coefficient",
             "getbackgroundtemperature",
             "background temperature (reflected by the scene), can be between -50 and 327.67 degrees celsius.  @return background temperature",
             "getsceneemissivity",
             "emissivity of the scene, can be between 50 and 100.  @return emissivity of the scene",
             "getwindowreflection",
             "window reflection, can be between 50 and 100-x where x is the window transmission coefficient parameter.  @return window reflection value.",
             "getwindowreflectedtemperature",
             "temperature reflected in the window, can be between -50 and 327.67 degrees celsius.  @return temperature reflected in window.",
             "getwindowtemperature",
             "window temperature, can be between -50 and 327.67 degrees celsius.  @return window temperature.",
             "getwindowtransmissioncoefficient",
             "transmission coefficient of the window, can be between 50 and 100-x where x is the window reflection.  @return window transmission coefficient.",
             "getmaxfocallength",
             "the maximum focal length of the lens in units of 0.1mm.  @return maximum focal length of lens.",
             "getminfocallength",
             "the minimum focal length of the lens in units of 0.1mm.  @return minimum focal length of lens.",
             "getfocallengthstep",
             "the minimum interval of focal length change in units of 0.1mm.  @return focal length step.",
             "zoom_in",
             "lens will zoom in. the focal length increases, field of view becomes narrower and magnification is higher.",
             "zoom_out",
             "lens will zoom out. the focal length decreases, field of view becomes wider and magnification is lower.",
             "slowest",
             "lens zooms very in slowest speed.",
             "slow",
             "lens zooms in slow speed.",
             "moderately_slow",
             "lens zooms in speed slightly slower than normal speed.",
             "normal",
             "lens zooms in normal speed.",
             "moderately_fast",
             "lens zooms very in speed slightly faster than normal speed.",
             "fast",
             "lens zooms very in fast speed.",
             "fastest",
             "lens zooms very in fastest speed.",
             "reset",
             "camera will reset the newest file's index to be one larger than the largest number of photos taken on the sd card.",
             "sequence",
             "camera will set the newest file's index to the larger of either the maximum number of photos taken on the sd card  or the camera.",
             "unknown",
             "the mode is unknown.",
             "default",
             "default user.",
             "profile_1",
             "settings for user 1.",
             "profile_2",
             "settings for user 2.",
             "profile_3",
             "settings for user 3.",
             "profile_4",
             "settings for user 4.",
             "unknown",
             "the user is unknown.",
             "none",
             "the digital filter is set to none or no filter.",
             "art",
             "the digital filter is set to art.",
             "black_and_white",
             "the digital filter is set to black and white.",
             "bright",
             "the digital filter is set to bright.",
             "d_cinelike",
             "the digital filter is set to d-cinelike (called movie before).",
             "portrait",
             "the digital filter is set to portrait. only supported by osmo with x3 camera.",
             "m_31",
             "the digital filter is set to m31.",
             "k_dx",
             "the digital filter is set to kdx.",
             "prismo",
             "the digital filter is set to prismo.",
             "jugo",
             "the digital filter is set to jugo.",
             "d_log",
             "the digital filter is set to d-log (called neutral before).",
             "true_color",
             "the digital filter is set to true color. it is only supported by phantom 4 with firmware v1.2.503 or above.",
             "inverse",
             "the digital filter is set to inverse.",
             "reminiscence",
             "the digital filter is set to reminiscence.",
             "solarize",
             "the digital filter is set to solarize.",
             "posterize",
             "the digital filter is set to posterize.",
             "whiteboard",
             "the digital filter is set to whiteboard.",
             "blackboard",
             "the digital filter is set to blackboard.",
             "aqua",
             "the digital filter is set to aqua.",
             "delta",
             "the digital filter is set to delta.",
             "dk79",
             "the digital filter is set to dk79.",
             "vision_4",
             "the digital filter is set to vision4.",
             "vision_6",
             "the digital filter is set to vision6.",
             "true_color_ext",
             "the digital filter is set to true color extend.",
             "film_a",
             "the digital filter is set to film a.",
             "film_b",
             "the digital filter is set to film b.",
             "film_c",
             "the digital filter is set to film c.",
             "film_d",
             "the digital filter is set to film d.",
             "film_e",
             "the digital filter is set to film e.",
             "film_f",
             "the digital filter is set to film f.",
             "film_g",
             "the digital filter is set to film g.",
             "film_h",
             "the digital filter is set to film h.",
             "film_i",
             "the digital filter is set to film i.",
             "unknown",
             "the digital filter is unknown.",
             "none",
             "the digital filter is set to none. it is only supported by x5s and x4s on inspire 2.",
             "d_cinelike",
             "the digital filter is set to dcinelike. it is only supported by x5s and x4s on inspire 2.",
             "d_log",
             "the digital filter is set to dlog. it is only supported by x5s and x4s on inspire 2.",
             "d_color_1",
             "the digital filter is set to dcolor1. it is only supported by x5s and x4s on inspire 2.",
             "d_color_2",
             "the digital filter is set to dcolor2. it is only supported by x5s and x4s on inspire 2.",
             "d_color_3",
             "the digital filter is set to dcolor3. it is only supported by inspire 2 ssd camera.",
             "unknown",
             "the digital filter is unknown.",
             "landscape",
             "by default, the camera is in landscape orientation.",
             "portrait",
             "the camera is in the portrait orientation, which is rotated 90 degrees in the clockwise direction from the default  landscape orientation.",
             "unknown",
             "unknown.",
             "h264",
             "h.264 compression standard.",
             "h265",
             "h.265 compression standard.",
             "unknown",
             "unknown.",
             "standard",
             "saturation 0, contrast 0, sharpness 0.",
             "landscape",
             "saturation 0, contrast 1, sharpness 1.",
             "soft",
             "saturation 0, contrast 0, sharpness -1.",
             "custom",
             "custom preset type",
             "unknown",
             "unknown preset type",
             "getsaturation",
             "an nsinteger value of saturation.  @return saturation value of preset",
             "getcontrast",
             "an nsinteger value of contrast.  @return contrast value of preset",
             "getsharpness",
             "an nsinteger value of sharpness.  @return sharpness value of preset",
             "presettype",
             "an enum value of `picturestylepresettype`.  @return preset type",
             "onrendercreatedprepared",
             "called before rendering starts",
             "onrendercreated",
             "called when rendering surface is created  @param surface surfaceinterface object.  @return an instance of djivideodecodercontroller.",
             "onrenderdestroy",
             "called when rendering surface is to be destroyed",
             "resetvideosurface",
             "reset the surface dimension of the video.  @param videowidth an int value of video width. @param videoheight an int value of video height.",
             "adddjicameraparameterslistener",
             "adds the listener for the camera range change.  @param listener camera range change listener.",
             "removelistener",
             "remove listener which is listening to the camera range change.  @param listener an instance of djicameraparameterslistener.",
             "removealllistener",
             "remove all listeners.",
             "moderange",
             "returns the current valid range for camera mode (`cameramode`). returns `null` if  current camera has no supported camera mode or the camera is disconnected. @return array of cameramode elements. each element  represents one current supported camera mode.  @return array of `cameramode` elements. each element represents one current supported camera mode.",
             "exposuremoderange",
             "returns the current valid range for camera's exposure mode (`exposuremode`). returns  `null` if current camera does not support any exposure mode or the camera is disconnected.  @return array of nsnumber. each element represent one current supported exposure mode.  @return array of `exposuremode`. each element represent one current supported exposure mode.",
             "isorange",
             "returns the current valid range for camera's iso (see `iso`). returns `null` if current camera does not support any iso value or the camera is disconnected. @return array  of cameraiso. each element represent one current supported iso value.  @return array of `iso`. each element represent one current supported iso value.",
             "shutterspeedrange",
             "returns the current valid range for camera's shutter speed (see `shutterspeed`). returns  `null` if current camera does not support any shutter speed value or the camera is  disconnected. @return array of camerashutterspeed. each element represent one current  supported shutter speed value.  @return array of `shutterspeed`. each element represent one current supported shutter speed value.",
             "aperturerange",
             "returns the current valid range for camera's aperture (see `aperture`). returns `null` if current camera does not support any aperture value or the camera is disconnected.  @return array of cameraaperture. each element represent one current supported aperture  value.  @return array of `aperture`. each element represent one current supported aperture value.",
             "exposurecompensationrange",
             "returns the current valid range for camera's exposure compensation (see `exposurecompensation`).  returns `null` if current camera does not support any exposure compensation value or the camera  is disconnected. @return array of cameraexposurecompensation. each element represent one  current supported exposure compensation value.  @return array of `exposurecompensation`. each element represent one current supported exposure compensation value.",
             "videoresolutionandframeraterange",
             "returns the current valid range for video resolution cameravideoresolution  and frame rate `videoframerate`. returns `null` if the current camera does  not support any video resolution or frame rate setting, or if the camera is disconnected.  @return array of pairs. each pair represents a valid `videoresolution` value and `videoframerate` value.",
             "ssdvideoresolutionrange",
             "returns the current valid range for camera's raw video resolution. returns `null` if current  camera does not support any raw video resolution or the camera is disconnected.  @return array of `videoresolution`. each element represent one current supported resolution value.",
             "djicameraparameterslistener",
             "defines video resolution and frame rate as a type.",
             "oncameraisorangechange",
             "when the camera iso range is changed, the listener will receive this callback.  @param newrange the new range.",
             "oncameraexposurecompensationrangechange",
             "when the camera exposure compensation range is changed, the listener will receive this callback.  @param newrange the new range.",
             "oncameraexposuremoderangechange",
             "when the camera exposure mode range is changed, the listener will receive this callback.  @param newrange the new range.",
             "oncamerashutterspeedrangechange",
             "when the camera shutter speed range is changed, the listener will receive this callback.  @param newrange the new range.",
             "oncameramoderangechange",
             "when the camera shutter speed range is changed, the listener will receive this callback.  @param newrange the new range.",
             "oncameravideoresolutionandframeraterangechange",
             "when the camera video resolution and frame rate range is changed, the listener will receive this callback.  @param newrange the new range.",
             "oncameraaperturerangechange",
             "when the camera aperture range is changed, the listener will receive this callback.  @param newrange the new range.",
             "oncamerassdrawvideoresolutionrangechange",
             "when the camera ssd raw video resolution and frame rate range is changed, the listener will receive this callback.  @param newrange the new range.",
             "addmediaupdatedvideoplaybackstatelistener",
             "sets the callback object for updating the video playback state of the media manager.  @param callback callback object of updating the vision detection state.",
             "getscheduler",
             "fetch media task scheduler. this can be used to queue the download of the previews, thumbnails and xml custom data from multiple media files.  @return an object of `fetchmediataskscheduler`.",
             "getfileliststate",
             "file list state.  @return an enum value of `fileliststate`.",
             "getfilelistsnapshot",
             "returns a copy of the current file list. returns `null`  if `getfileliststate` is reset.  @return a list of `mediafile` object.",
             "refreshfilelist",
             "refresh the file list from the sd card. if the current state  is `reset`, the media manager will  try to fetch the complete file list. if the current state is `incomplete`, the media manager  will only fetch the missing list of files. if the file list is refreshed  successfully, `getfileliststate` will  become `up_to_date`.  @param callback ",
             "deletefiles",
             "delete media files from sd card. if the operation is started successfully, `getfileliststate` will become  `deleting`. if there is error or  failedfiles is not empty, `getfileliststate` will become  `reset`.  @param files a list of `mediafile` objects. @param callback a completion callback of completioncallbackwithtwoparam<list<mediafile>.",
             "exitmediadownloading",
             "this will entirely stop the downloading process and of course clean the downloading thread pool. the camera will  exit the media_download mode and enter the shoot_photo mode.  precondition:  the camera enters the  mediadownload mode. post condition:  after this function invoked, the camera mode will shift to  takephoto mode.",
             "addupdatefileliststatelistener",
             "start listen to the update of file list state.  @param listener a `fileliststatelistener` interface.",
             "removefileliststatecallback",
             "stop listen to the update of file list state.  @param listener a `fileliststatelistener` interface.",
             "isvideoplaybacksupported",
             "checks if the media manager supports video playback or not. video playback is supported only by mavic pro.  @return `true` if the media manager supports video playback.  @return `true` if the media manager supports video playback.",
             "playvideomediafile",
             "start video playback through `mediamanager`. when the media manager is playing a video, video data can be  received from `onreceive` and playback state received from `onupdate`. video playback  through `mediamanager` is fixed at 720p.  @param videomediafile the video to play. @param callback the execution callback with the returned execution result.",
             "resume",
             "the media manager resumes the paused video.  @param callback the execution callback with the returned execution result.",
             "pause",
             "the media manager pauses the playing video.  @param callback the execution callback with the returned execution result.",
             "stop",
             "the media manager stops the playing video.  @param callback the execution callback with the returned execution result.",
             "movetoposition",
             "video playback is skipped to the new position in seconds from the start of the video.  @param position new position to play in seconds from start of video. input with precision of greater than 3 decimal places, will be rounded to 3. @param callback the execution callback with the returned execution result.",
             "fileliststate",
             "states of the file list in `mediamanager`.",
             "up_to_date",
             "the file list is up-to-date: it is synchronized with the sd card in the aircraft.",
             "incomplete",
             "new files have been generated since the last call of  `refreshfilelist`. calling `refreshfilelist` can synchronize the newly generated files and  append them to the end of the file list.",
             "reset",
             "the file list is reset. the file list will be reset in one of the following cases:  - camera is disconnected.  - sd card is formatted.   - sd card is not inserted.  - error occurs when deleting files from sd card.  in this state, `getfilelistsnapshot` will return `null`.",
             "deleting",
             "`deletefiles` has been called and the operation is still in progress.",
             "syncing",
             "the media manager is synchronizing the file list from the sd card.",
             "unknown",
             "unknown.",
             "videoplaybackstatelistener",
             "updates the video playback state of the media manager. this update method will only be called when the media manager is playing a video.",
             "downloadlistener",
             "this callback will notify the app when the media download executed.",
             "fileliststatelistener",
             "received file list state of the media manager.",
             "mediafile",
             "this class contains information about a multi-media file on the sd card. it also provides methods to retrieve the  data in the file.",
             "videoplaybackstate",
             "the playback state of the media manager.",
             "stopped",
             "the playback is stopped. no media is playing.",
             "playing",
             "the media manager is playing a video.",
             "paused",
             "the playing video is paused.",
             "unknown",
             "the playing video is unknown.",
             "getplayingmediafile",
             "the video media file that is playing.  @return an instance of `mediafile`.",
             "getplaybackstatus",
             "the status of the playback (e.g. playing or paused).  @return an enum value of `videoplaybackstatus`.",
             "getplayingposition",
             "the playing position in seconds.  @return a float value of the playing position in seconds.",
             "videoplaybackstatus",
             "the playback status.",
             "getfilename",
             "returns the name of the media file in the sd card.  @return a string instance of the name of the media file.",
             "isvalid",
             "`true` if the media file is still valid. if a media file is from the file list of the  media manager, the file will become invalid after the file list is reset.  @return a boolean value to check if the media file is still valid.",
             "getindex",
             "get the file index used in the camera.  @return an int value of the file index.",
             "getmediatype",
             "returns the type of media file.  @return an enum value of `mediatype`.",
             "getdownloadedsize",
             "downloaded size in bytes of the media file.  @return a long value of downloaded size.",
             "getfilesize",
             "returns the size, in bytes, of the media file.  @return size of media file.",
             "getdatecreated",
             "returns the time when the media file was created as a string in the format yyyy-mm-dd hh:mm:ss.  @return a string instance of the media file created date.",
             "gettimecreated",
             "returns the time when the media file was created as a long type.  @return a long value of the media file created date.",
             "getdurationinseconds",
             "if the media file is a video, this property returns the duration of the video in seconds. will be 0s if the media  file is a photo.  @return media duration.",
             "getframerate",
             "frame rate when the media file is a video.  @return an int value.",
             "getcustominformation",
             "custom information can be stored in media file's xmp meta data using `setmediafilecustominformation` this property contains the  information that was written to this media file. if this property returns `null`,  use `fetchcustominformation` to populate it. only supported  by phantom 4 pro, phantom 4 advanced and inspire 2 with firmware versions from after  may 23 2017.  @return a string value.",
             "getresolution",
             "camera resolution.  @return an enum value of `videoresolution`.",
             "getvideoorientation",
             "the orientation of the camera when the video file was first recorded. if the camera orientation changes during a  video capture, this will report the initial orientation. will be `landscape` if  the media file is a photo. only mavic pro supports this property. will be `landscape`  for other products.  @return an enum value of `orientation`",
             "getthumbnail",
             "returns the thumbnail for this media. if this property returns nil, call `fetchthumbnail`.  @return a bitmap object.",
             "getpreview",
             "returns the preview image for this media. if this property returns `null`,  call `fetchpreview`.  @return a bitmap object.",
             "fetchthumbnail",
             "fetches this media's thumbnail with a resolution (99 x 99) from the sd card. this method can be used to fetch  either a photo or a video, where the first frame of the video is the thumbnail that is fetched. it is not  available if the media type is panorama.  precondition:  the camera mode is mediadownload mode.  post condition:  this method will start to download the media thumbnail in the sd card. the content  can be videos or images.  @param callback the `completion callback` with the returned execution result.",
             "resetthumbnail",
             "resets the cached thumbnail to `null` to release the memory usage.  @param callback completion callback with the returned execution result.",
             "fetchpreview",
             "fetch media's preview image. the preview image is a lower resolution (960 x 540) version of  a photo. the `mediatype` of this media object should be  `jpeg` or `tiff`. the preview will be stored in  `getpreview`.  @param callback the `completion callback` with the returned execution result.",
             "resetpreview",
             "resets the cached preview image to `null` to release the memory usage.  @param callback the `completion callback` with the returned execution result.",
             "fetchcustominformation",
             "custom information can be stored in media file's xmp meta data using `setmediafilecustominformation`. the information will be stored in `getcustominformation`. only supported by phantom 4 pro, phantom 4  advanced and inspire 2 with firmware released after may 23 2017.  @param callback the `completion callback` with the returned execution result.",
             "fetchfiledata",
             "fetches this media file's full resolution data from the sd card. the  difference between fetching the media data and fetching the thumbnail is  that fetching the thumbnail will return a low-resolution image of the actual  picture, while fetching the media data will return all data for a video or  image. if last download action is aborted, it will continue to download the data  from where the file download has been aborted.  @param destdir file instance of location to save the files, which can not be null. @param filenamewithoutextension the filename to store in mobile devices, without the file extension.<br> if it  is null, the file name in the camera's sdcard will be used. @param callback completion callback to receive the result.",
             "stopfetchingfiledata",
             "stops a currently executing call of `fetchfiledata`.  @param callback the `completion callback` with the returned execution result.",
             "fetchsubfiledatalist",
             "fetch the file data of the sub media files. it is available only when `getmediatype` is  `panorama` or  `shallow_focus`.  @param callback completion callback to receive the result.",
             "mediatype",
             "media types.",
             "unknown",
             "unknown file type.",
             "jpeg",
             "image of jpeg format.",
             "mp4",
             "video of mp4 format.",
             "mov",
             "video of mov format.",
             "raw_dng",
             "image of dng format.",
             "panorama",
             "panorama file type.",
             "shallow_focus",
             "shallowfocus file type. shallowfocus files have a shallow depth of field.",
             "tiff",
             "tiff file type.",
             "onupdate",
             "updates the video playback state of the media manager. this update method will only be called when the media manager is playing a video.  @param videoplaybackstate videoplaybackstate object.",
             "onstart",
             "called when the file download begins.",
             "onrateupdate",
             "called to show the download rate. it is called every 1 second. hence, the persize which is the download size among two calls is the download rate.  @param total the total size. @param current the current download size. @param persize the download size between two calls.",
             "onprogress",
             "called to update the download progress. it is called every time there is data received.  @param total the total size of the file being downloaded. @param current the current download data size.",
             "onsuccess",
             "called when the media download is completed.  @param data the media that was successfully downloaded",
             "onfailure",
             "called when the media download failed.  @param error the error information.",
             "onfileliststatechange",
             "updates the file list state of the media manager.  @param state the new file list state.",
             "fetchmediataskscheduler",
             "the camera stores the media it captures to sd or ssd storage on the product. when the  mobile device wants to access the media, it needs to download it from the product over  the wireless link between the product, remote controller and mobile device (depending  on the product). each media file captured by the camera can have several types of  content associated with it including the full resolution media content, a lower  resolution preview, a lower resolution again thumbnail, and custom data within  the file's xml meta data. the full resolution content can take a long time to  download over the wireless link, so it is often useful to download previews or  thumbnails of many media files, and then only download the full resolution content  of fewer select media files. this scheduler conveniently allows the small content  types of media files (preview, thumbnail and custom data) to be downloaded to the  mobile device. the scheduler can be used to queue and download content from a series  of files, as well as used to re-prioritize files during the download process. the  scheduler holds a list of pending tasks and it completes them one by one in  first-in-first-out order. to prioritize a new task, `movetasktonext`  can be used. each task relates to a media file and can download multiple content types  sequentially. when the last content type of a task starts being downloaded, the task is removed from the list. note, the scheduler cannot be used to queue the download of full  resolution media content. only `fetchfiledata` can be used for this.",
             "getstate",
             "state of the scheduler.  @return an enum value of `fetchmediataskschedulerstate`.",
             "getpendingtasks",
             "gets a copy of the pending tasks.  @return a list of `fetchmediatask` objects.",
             "movetasktoend",
             "pushes a task to the back of the queue. the task will be executed after all other  tasks are complete.  @param task task to schedule.",
             "movetasktonext",
             "pushes a task to the front of the queue. the task will be executed after the executing task is complete.  @param task task to schedule.",
             "removetask",
             "remove content from tasks, and tasks from the scheduler. if all content is removed from a task, then the task is removed from the scheduler.  @param file an object of `mediafile`. @param option an enum value of `fetchmediataskcontent`.",
             "removealltasks",
             "removes all the pending tasks.",
             "suspend",
             "suspends the scheduler. the scheduler will not continue to execute tasks in the queue.  @param callback the `completion callback` with the returned execution result.",
             "resume",
             "resumes the scheduler. the scheduler will execute tasks in the queue sequentially.  @param callback the `completion callback` with the returned execution result.",
             "issuspendaftersinglefetchtaskfailure",
             "gets if suspend the scheduler when an error occurs during the execution.  @return a boolean value.",
             "setsuspendaftersinglefetchtaskfailure",
             "sets if suspend the scheduler when an error occurs during the execution.  @param suspendaftersinglefetchtaskfailure a boolean value.",
             "fetchmediataskschedulerstate",
             "states of the fetch media file task scheduler `fetchmediataskscheduler`.",
             "idle",
             "scheduler is waiting for tasks.",
             "executing",
             "scheduler is executing tasks.",
             "suspended",
             "scheduler is suspended. use `resume`  to resume the scheduler.",
             "unknown",
             "unknown.",
             "fetchmediatask",
             "task to fetch contents of a media file. to make `fetchmediataskscheduler`  fetch the thumbnail, preview or custom information of a media file, a task should be created  by using `fetchmediatask`.",
             "fetchmediatask",
             "creates a task instance.  @param file media file to execute task on. @param content content to fetch. @param callback the `completion callback` with the returned execution result.",
             "fetchmediatask",
             "creates a task instance without callback.  @param file media file to execute task on. @param content content to fetch.",
             "callback",
             "callback that is called when the scheduler finishes downloading content for a fetch media file task. if multiple content types are defined for a file, this completion block will be called at the completion of each content type being downloaded. the order content types will be downloaded in is first  `thumbnail`, then  `preview`.",
             "onupdate",
             "called each time the scheduler finishes downloading content.  @param file file to execute task on. @param option an enum value of `fetchmediataskcontent`. @param error error retrieving the value.",
             "fetchmediataskcontent",
             "the content to download in a fetch media file task.",
             "none",
             "none.",
             "thumbnail",
             "the scheduler will download the thumbnail of the media file.",
             "preview",
             "the scheduler will download the preview image of the media file.",
             "custom_information",
             "the scheduler will download the custom information of the media file.",
             "setplaybackstatecallback",
             "sets the camera's playback state callback. called according to the camera's update timer.  precondition:  you must first define a callback object to pass in as a parameter.  post  condition:  every time the playback state changes, the callback interface that was passed in as a parameter will call its onresult function.  the onresult function takes in a djicameraplaybackstate  object, which provides playback information such as the number of photos currently selected, the video playback  progress (if a video is being played), and much more.  @param cameraplaybackstatecb the callback object to set as the callback interface for when the playback state changes.  <br> the callback interface implements an onresult function, which takes in a  djicameraplaybackstate object from the aircraft. <br>",
             "entersinglepreviewmodewithindex",
             "enters single file preview mode for a file at the specified index. in order for this method to be called,  the camera work mode must be `playback`.  @return  djicameraerror shows the possible error during the execution. if there is no error, it returns null</code>.  @param index file to be previewed at the specified index. the value falls in [1,8].  @return `djicameraerror` shows the possible error during the execution. if there is no error, it returns null.",
             "proceedtonextsinglepreviewpage",
             "goes to the next page.  precondition:  the camera must enter single file preview mode.   special case:  if it is the last image, it will go to the first image. @return djicameraerror shows the possible error during the execution. if there is no error, it returns null</code>.  @return `djicameraerror` shows the possible error during the execution. if there is no error, it returns null.",
             "proceedtoprevioussinglepreviewpage",
             "goes back to the previous page.  precondition:  the camera must enter single file preview mode.  special case:  if it is the first image, it will go to the last image. @return djicameraerror shows the possible error during the execution. if there is no error, it returns null</code>.  @return `djicameraerror` shows the possible error during the execution. if there is no error, it returns null.",
             "playvideo",
             "starts video playback. the selected file must be a video file.  precondition:  the camera must enter  single preview mode.  post condition:  if the video finishes playing, it will stop and go back to the  beginning of the file. @return djicameraerror shows the possible error during the execution. if there is no error,  it returns null</code>.  @return `djicameraerror` shows the possible error during the execution. if there is no error, it returns null.",
             "pausevideo",
             "pauses a video during playback.  precondition:  the video is being played.  @return  djicameraerror shows the possible error during the execution. if there is no error, it returns null</code>.  @return `djicameraerror` shows the possible error during the execution. if there is no error, it returns null.",
             "stopvideo",
             "stops a video during playback.  precondition:  the video is being played.  post condition:   the file will stop and go back to the beginning of the file. @return djicameraerror shows the possible error during  the execution. if there is no error, it returns null</code>.  @return `djicameraerror` shows the possible error during the execution. if there is no error, it returns null.",
             "playvideofrompositioninpercent",
             "plays a video from the specified location. the selected file must be a video file.  precondition:   the camera must enter single file preview mode.  post condition:  the file will play from a specific location immediately. this command can only be called if the video is currently playing or is paused. if paused, the playback position will be updated and playing will resume.  @return djicameraerror shows the possible error during the execution. if there is no error, it returns null</code>.  @param location location from which to play the video must be in the range of [0, 100]. this value  represents at what percent of the entire video it should start playing.  @return `djicameraerror` shows the possible error during the execution. if there is no error, it returns null.",
             "deletecurrentpreviewfile",
             "deletes the current file being previewed.  precondition:  the camera must enter single file preview  mode.  post condition:  the image will be deleted from the sd card. @return djicameraerror shows the possible error during the execution. if there is no error, it returns null</code>.  @return `djicameraerror` shows the possible error during the execution. if there is no error, it returns null.",
             "entermultiplepreviewmode",
             "enables the user to preview multiple files when the camera is in playback mode.  precondition:  the  camera work mode should be set to playback mode.  post condition:  there will be 8 images on one page.  @return djicameraerror shows the possible error during the execution. if there is no error, it returns  null</code>.  @return `djicameraerror` shows the possible error during the execution. if there is no error, it returns null.",
             "proceedtonextmultiplepreviewpage",
             "goes to the next page when there are multiple pages.  precondition:  the camera must enter multiple  preview mode.  special case:  if it is the last page, it will stay at the last page.  @return djicameraerrorr shows the possible error during the execution. if there is no error, it  returns null</code>.  @return `djicameraerror` shows the possible error during the execution. if there is no error, it returns null.",
             "proceedtopreviousmultiplepreviewpage",
             "goes back to the previous page when there are multiple pages.  precondition:   the camera must enter multiple preview mode.  special case:  if it is the first page, it will  stay at the first page. @return djicameraerror shows the possible error during the execution. if there is  no error, it returns null</code>.  @return `djicameraerror` shows the possible error during the execution. if there is no error, it returns null.",
             "entermultipleeditmode",
             "this enables the user to select, download, or delete multiple media files when the camera is in playback mode.  precondition:  the camera work mode must be set to camera play back mode and then multiple preview mode.  post condition:  multiple photos can be selected to be downloaded or deleted. @return djicameraerror shows the  possible error during the execution. if there is no error, it returns null</code>.  @return `djicameraerror` shows the possible error during the execution. if there is no error, it returns null.",
             "exitmultipleeditmode",
             "exits multiple edit mode. @return djicameraerror shows the possible error during the execution. if there is no error, it returns null.  @return `djicameraerror` shows the possible error during the execution. if there is no error, it returns null.",
             "togglefileselectionatindex",
             "selects or unselects a file at the specified index of the current page. this index is unrelated to the filename,  and is used in multiple edit mode.  precondition:  the camera must enter multiple edit mode.   @return djicameraerror shows the possible error during the execution. if there is no error, it returns  null</code>.  @param index index at which to select a file. the value falls in [1,8]. however, the exact range should depends on how many photos totally in current page.  @return `djicameraerror` shows the possible error during the execution. if there is no error, it returns null.",
             "selectallfiles",
             "selects all the files on the sd card.  precondition:  the camera must enter multi edit mode.  @return djicameraerror shows the possible error during the execution. if there is no error, it  returns null</code>.  @return `djicameraerror` shows the possible error during the execution. if there is no error, it returns null.",
             "unselectallfiles",
             "unselects all the files on the sd card.  precondition:  the camera must enter multiple edit mode.  @return djicameraerror shows the possible error during the execution. if there is no error,  it returns null</code>.  @return `djicameraerror` shows the possible error during the execution. if there is no error, it returns null.",
             "selectallfilesinpage",
             "selects all the file(s) on the current page.  precondition:  the camera must enter multiple edit mode.   @return djicameraerror shows the possible error during the execution. if there is no error, it returns null</code>.  @return `djicameraerror` shows the possible error during the execution. if there is no error, it returns null.",
             "unselectallfilesinpage",
             "unselects all the file(s) on the current page.  precondition:  the camera must enter multiple edit  mode. @return djicameraerror shows the possible error during the execution. if there is no error, it  returns null</code>.  @return `djicameraerror` shows the possible error during the execution. if there is no error, it returns null.",
             "deleteallselectedfiles",
             "deletes all selected files from the sd card.  precondition:  the camera must enter multiple edit mode.  post condition:  the images will be deleted from the sd card.  @return djicameraerror shows  the possible error during the execution. if there is no error, it returns null</code>.  @return `djicameraerror` shows the possible error during the execution. if there is no error, it returns null.",
             "downloadselectedfiles",
             "downloads the currently selected media files.  precondition:  the camera must enter multiple preview mode.  @param destdir the destination file directory, e.g., sdcardpath/folder/ @param callback the execution callback.",
             "filedownloadcallback",
             "this callback will notify the process of downloading selected files.",
             "playbackstate",
             "this class provides the current state of the playback manager, which includes the numbers of thumbnail and media files, video duration, video play progress, and file download state.",
             "onupdate",
             "updates the playback state of the camera. this update method will only be called when the camera's work mode is  set to `playback`.  @param state contains the state information when the camera in the playback state, such as numbers of photos in the sd card, numbers of videos in the sd card and the media file type.",
             "onstart",
             "called as a file is about to start downloading.",
             "onend",
             "called when a file has completed downloading.",
             "onerror",
             "called when there is an error during download.  @param exception the error exception.",
             "onprogressupdate",
             "called to update the progress on downloading a file in percent. range is [0, 100].  @param progress the progress of downloading.",
             "getplaybackmode",
             "the current mode of the playback manager.  @return playback manager current mode.",
             "getnumberofmediafiles",
             "the total number of media files on the sd card, including photos and videos.  @return number of media files.",
             "getnumberofthumbnails",
             "the total number of thumbnails for both the photos and videos being viewed on the page. the value of the property  is valid when the `playbackmode`  is `multiple_media_file_preview` .  @return number of thumbnails.",
             "getphotocount",
             "the total number of photos on the sd card.  @return number of photos.",
             "getvideocount",
             "the total number of videos on the sd card.  @return number of videos.",
             "getfiletype",
             "the type of the current file. the cameramediafiletype includes  types of jpeg, dng and video.  the value of this property is valid when the playbackmode  is `single_photo_preview`, `single_video_playback_start` .  @return media file type.",
             "getvideoduration",
             "the duration in second of the playing video. the value of the property is valid only when `playbackmode`  is `single_video_playback_start`  .  @return duration of video.",
             "getvideoplayprogress",
             "the progress, in percentage, of the playing video. the valid range is [0, 100]. the value the property is valid  only when `playbackmode`  is `single_video_playback_start`  .  @return percentage progress of view playback.",
             "getvideoplayposition",
             "the played duration, in seconds, of the playing video. the value the property is valid only when `playbackmode`  is `single_video_playback_start` .  @return current play position of video.",
             "getphotowidth",
             "the width of the photo.  @return width of photo.",
             "getphotoheight",
             "the dimension of the previewing photo. the value of the property is valid only when `playbackmode`  is `single_photo_preview`  and `getfiletype`  is `jpeg`.  @return height of photo.",
             "getcurrentselectedfileindex",
             "the index of the current selected file.  @return index of selected file.",
             "getselectedfilecount",
             "the total number of the selected files. the value is valid while `playbackmode` is in djicameraplaybackmodemultiplefilesedit</code>.  @return number of selected files.",
             "isallfilesinpageselected",
             "`true` if all the files on the current page are selected.  @return response of all files being selected on page.",
             "isselectedfilevalid",
             "`true` if the previewing file is a valid photo or video. the value of the property is valid  only when `playbackmode`  is `single_photo_preview`.  @return if file being previewed is a valid photo or video file.",
             "getplaybackdeletionstate",
             "the current status of a file when the user tries to delete it.  @return status of file being deleted.",
             "isfiledownloaded",
             "`true` if the previewing file has been downloaded. the value of the property is valid only when `playbackmode`  is `single_photo_preview`.  @return `true` if the previewing file has been downloaded.",
             "tostring",
             "gets a string containing information about the playback state. @return a string of playback state.  @return a string instance of playback state.",
             "callback",
             "the interface provides the method to receive the updated state of the playback manager.",
             "filetype",
             "showing media file types when the camera is in playback mode.",
             "playbackmode",
             "a playback mode represents a task that the playback manager is executing.",
             "playbackdeletionstate",
             "the file deletion status when deleting a file as the camera is in playback mode.",
             "jpeg",
             "the jpeg media file type.",
             "dng",
             "the dng media file type.",
             "video",
             "the video media file type.",
             "unknown",
             "the playback file format is unknown.",
             "single_photo_preview",
             "single file preview mode.",
             "single_video_playback_start",
             "single video playback start.",
             "single_video_playback_paused",
             "single video playback pause.",
             "multiple_files_edit",
             "multiple file edit.",
             "multiple_media_file_preview",
             "multiple media file preview.",
             "media_file_download",
             "download media files.",
             "unknown",
             "unknown playback mode.",
             "none",
             "camera is not deleting files.",
             "failed",
             "media file delete failed.",
             "deleting",
             "media file is deleting.",
             "successful",
             "delete media file successfully.",
             "unknown",
             "media file unknown delete status.",
             "getheading",
             "represents the heading, in degrees. true north is 0 degrees, positive heading is east of north, and negative  heading is west of north. heading bounds are [-180, 180].  @return a double value of the heading, in degrees.",
             "haserror",
             "`true` if the compass has an error. if `true`, the compass  needs calibration.  @return a boolean value.",
             "iscalibrating",
             "`true` if the compass is currently calibrating.  @return a boolean value.",
             "getcalibrationstate",
             "shows the calibration status.  @return an enum value of `compasscalibrationstate`.",
             "startcalibration",
             "starts compass calibration. make sure there are no magnets or metal objects near the compass.  @param callback completion callback. see djibasecomponent for more information about the callback and what is  recommended be done with it.",
             "stopcalibration",
             "stops compass calibration.  @param callback completion callback. see djibasecomponent for more information about the callback and what is recommended  be done with it.",
             "setcalibrationstatecallback",
             "sets the callback for compass calibration.  @param callback the callback with compass calibration state",
             "compasscalibrationstate",
             "an enum class representing compass calibration.",
             "not_calibrating",
             "normal state. compass not in calibration.",
             "horizontal",
             "compass horizontal calibration. the user should hold the aircraft horizontally and rotate it 360 degrees.",
             "vertical",
             "compass vertical calibration. the user should hold the aircraft vertically, with the nose pointed towards the  ground, and rotate the aircraft 360 degrees.",
             "successful",
             "compass calibration succeeded.",
             "failed",
             "compass calibration failed. make sure there are no magnets or metal objects near the compass and retry.",
             "unknown",
             "compass calibration status unknown.",
             "callback",
             "updates compass calibration state",
             "onupdate",
             "called when calibration state is updated.  @param state the updated calibration state",
             "setstatecallback",
             "sets the callback function that updates the flight controller's current state data. this method is called  10 times per second.  @param callback the execution callback with the execution result returned.",
             "setimustatecallback",
             "sets the imu state callback, which will receive the changed state of the imu.  @param callback the callback for receiving the changed state of imu.",
             "setasbinformationcallback",
             "sets the airsensesysteminformation callback, which will receive the airsensesysteminformation.  @param callback the callback for receiving the `airsensesysteminformation`.",
             "setonboardsdkdevicedatacallback",
             "sets the callback function that updates the data received from an external device (e.g. the onboard device).  @param callback the execution callback with the execution result returned.",
             "getstate",
             "returns the current state of flight controller.  @return an instance of `flightcontrollerstate`.",
             "getcompass",
             "compass object.  @return an instance of `compass`.",
             "getrtk",
             "rtk positioning object.  @return an instance of `rtk`.",
             "getimucount",
             "number of imu modules in the flight controller. most products have one imu.  exceptions:  - phantom 4, phantom 4 pro, mavic pro, and inspire 2 each have two imus  - a3, matrice 600, and matrice 600 pro each have one inner imu and can have at most two external imus.  - n3 has two inner imus and can have one external imu.  @return an int value.",
             "startimucalibration",
             "starts imu calibration. for aircraft with multiple imus, this method will start the calibration  of all imus. keep the aircraft stationary and horizontal during calibration, which will take 5 to 10  minutes. the completion block will be called once the calibration is started. use the  `onupdate` method to check the execution status of the imu calibration.  @param callback completion callback.",
             "startimucalibration",
             "starts the calibration for imu with a specific id. keep the aircraft stationary and horizontal during calibration, which will take 5 to 10  minutes. the completion block will be called once the calibration is started.  use the `onupdate` method to check the execution  status of the imu calibration.  @param index the imu with the specific id to calibrate. @param callback completion callback to check if the calibration starts successfully.",
             "getlandinggear",
             "landing gear object. for products with movable landing gear only.  @return an instance of `landinggear`.",
             "islandinggearmovable",
             "`true` if landing gear is supported for the connected aircraft.  @return a boolean value.",
             "setledsenabled",
             "turns on/off the forward leds, which are used to indicate aircraft status. they are on by default.  @param enabled `true` to turn on forward leds, `false` to turn them off. @param callback completion callback that receives the getter execution result.",
             "getledsenabled",
             "gets on/off status of forward leds.  @param callback the execution callback with the returned value(s).",
             "getsimulator",
             "simulator object.  @return an instance of `simulator`.",
             "isonboardsdkdeviceavailable",
             "checks if the onboard sdk device is available.  @return a boolean value.",
             "senddatatoonboardsdkdevice",
             "if there is a device connected to the aircraft using the onboard sdk, this method will send data to that  device. the size of the data cannot be greater than 100 bytes, and will be sent in 40 byte increments every  14ms. this method is only supported on products that support the onboard sdk (matrice 100, matrice 600, matrice 600 pro, a3, a3 pro, and n3).  @param data data to be sent to the external device. the size of the data should not be larger than 100 bytes. @param callback the execution callback with the returned execution result.",
             "turnonmotors",
             "turns on the aircraft's motors. supported by flight controller firmware 3.1.0.0 or above.  @param callback the execution callback with the returned execution result.",
             "turnoffmotors",
             "turns off the aircraft's motors. the method can only be called when the aircraft is on the ground.  @param callback the execution callback with the returned execution result.",
             "starttakeoff",
             "starts aircraft takeoff. takeoff is considered complete when the aircraft is hovering 1.2 meters (4 feet)  above the ground. completion block is called when aircraft crosses 0.5 meters (1.6 feet). if the motors  are already on, this command cannot be executed.  @param callback the execution callback with the returned execution result.",
             "canceltakeoff",
             "stops aircraft takeoff. if called before `starttakeoff` is complete, the aircraft will  cancel takeoff (`starttakeoff` completion block will return an error) and hover at the  current height.  @param callback the execution callback with the returned execution result.",
             "startlanding",
             "starts auto-landing of the aircraft. returns completion block once aircraft begins to descend for auto-land.  @param callback the execution callback with the returned execution result.",
             "cancellanding",
             "stops auto-landing of the aircraft. if called before `startlanding` is complete, then the  auto landing will be canceled (`startlanding` completion block will return an error) and  the aircraft will hover at its current location.  @param callback the execution callback with the returned execution result.",
             "confirmlanding",
             "confirms continuation of landing action. when the clearance between the aircraft and the ground is less than  0.3m, the aircraft will pause landing and wait for user's confirmation. can  use `islandingconfirmationneeded`  in `flightcontrollerstate` to check if confirmation is needed. it is  supported by flight controller firmware 3.2.0.0 and above.  @param callback the execution callback with the returned value(s).",
             "isvirtualstickcontrolmodeavailable",
             "indicates whether the virtual stick control interface can be used. virtual stick mode  is only available when all of the follow requirements are met:  - virtual stick mode is enabled.  - no waypoint, hotpoint, or follow-me mission is running.  - `flightorientationmode` is set to `aircraft_heading`  - terrain-follow is disabled if the aircraft supports this feature.  - tripod mode is disabled if the aircraft supports this feature.  @return `true` if virtual stick mode is available.",
             "setvirtualstickmodeenabled",
             "enables/disables virtual stick control mode. by enabling virtual stick control mode, the aircraft can be controlled  using `sendvirtualstickflightcontroldata`. not  supported by mavic pro when using the wifi connection.  @param enabled `true` to enable virtual stick mode. @param callback the execution callback with the returned execution result.",
             "getvirtualstickmodeenabled",
             "gets virtual stick mode status (enabled/disabled). not supported by mavic pro when using the wifi connection.  @param callback the execution callback with the returned execution result.",
             "isvirtualstickadvancedmodeenabled",
             "`true` if virtual stick advanced mode is enabled. by default, it is `false`. assuming gps signal is good, advanced mode will allow aircraft to compensate for wind when hovering.  for the phantom 4, collision avoidance can be enabled for virtual stick  control if advanced mode is on, and collision avoidance is enabled in `flightassistant`.  only supported by flight controller firmware versions 3.1.x.x or above.  @return a boolean value.",
             "setvirtualstickadvancedmodeenabled",
             "set `true` to enable virtual stick advanced mode. by default, it is `false`. assuming gps signal is good, advanced mode will allow aircraft to compensate for wind when hovering.   for the phantom 4, collision avoidance can be enabled for virtual stick   control if advanced mode is on, and collision avoidance is enabled in `flightassistant`.   only supported by flight controller firmware versions 3.1.0.0 or above.  @param virtualstickadvancedmodeenabled true</code> for enabling advanced mode.",
             "getverticalcontrolmode",
             "returns current mode of `verticalcontrolmode`.  @return an enum value of `verticalcontrolmode`.",
             "setverticalcontrolmode",
             "sets whether virtual stick vertical controller changes aircraft's altitude or vertical velocity.  @param verticalcontrolmode a specific djivirtualstickverticalcontrolmode object.",
             "getrollpitchcontrolmode",
             "returns current mode of `rollpitchcontrolmode`.  @return an enum value of `rollpitchcontrolmode`.",
             "setrollpitchcontrolmode",
             "sets whether roll/pitch virtual controllers change aircraft's angle relative to level orientation, or aircraft's velocity on horizontal axes.  @param rollpitchcontrolmode a specific djivirtualstickrollpitchcontrolmode object.",
             "getyawcontrolmode",
             "returns current mode of `yawcontrolmode`.  @return an enum value of `yawcontrolmode`.",
             "setyawcontrolmode",
             "sets whether virtual stick yaw controller changes aircraft's heading by angle or by angular velocity.  @param yawcontrolmode a specific djivirtualstickyawcontrolmode object.",
             "getrollpitchcoordinatesystem",
             "gets current mode of `flightcoordinatesystem`.  @return coordinate system object.",
             "setrollpitchcoordinatesystem",
             "sets whether horizontal axes are fixed relative to the ground or to the aircraft.  @param rollpitchcoordinatesystem a specific rollpitchcoordinatesystem object.",
             "sendvirtualstickflightcontroldata",
             "sends flight control data using virtual stick commands. the `isvirtualstickcontrolmodeavailable`  method must return `true` to use virtual stick commands. virtual stick commands  should be sent to the aircraft between 5 hz and 25 hz. if virtual stick commands are not sent frequently  enough, the aircraft may regard the connection as broken, which will cause the aircraft to hover in place  until the next command comes through.  @param controldata flight control data @param callback the execution callback with the returned execution result.",
             "isflightassistantsupported",
             "`true` if the product supports intelligentflightassistant.  @return a boolean value.",
             "getflightassistant",
             "intelligent flight assistant.  @return an instance of `flightassistant`.",
             "setflightorientationmode",
             "sets the aircraft flight orientation relative to the aircraft heading, course lock, or home lock. see the  <i>flight controller user guide</i> for more information about flight orientation.  @param type the orientation mode. @param callback the execution callback with the returned execution result.",
             "lockcourseusingcurrentheading",
             "locks the current heading of the aircraft as the course lock. used when flight orientation mode  is `course_lock`.  @param callback the execution callback with the returned execution result. please refer to djibasecomponent for more  information about the block",
             "settripodmodeenabled",
             "enables/disables tripod mode. tripod mode drops the aircraft's maximum speed to 2.2mph (3.6kph), and  significantly reduces the control stick sensitivity of the remote controller to give the user the  precision needed for accurate framing. when tripod mode is enabled, missions, terrain follow mode,  course lock, and home lock are not allowed. tripod mode is not allowed if the aircraft is running a  mission. if gps or vision positioning aren't available, tripod mode cannot be enabled. if the gps  and/or the vision system is providing the flight controller with velocity information, the  aircraft will be able to automatically compensate for wind. if however, position information is not  available, manual intervention will be required. user should beware that any manual  compensation will be limited due to the reduced maximum velocity and sensitivity. if gps and vision  position become unavailable while in tripod mode, it is advisable to alert the user and disable tripod mode.  @param enabled `true` to enable tripod mode. @param callback the execution callback with the returned execution result.",
             "gettripodmodeenabled",
             "gets tripod mode status (enabled/disabled).  @param callback the execution callback with the returned value(s).",
             "setterrainfollowmodeenabled",
             "enable/disable terrain follow mode. the aircraft uses height information gathered by the onboard ultrasonic system and its downward facing cameras to keep flying at the same height above the ground.  @param enabled `true` to enable terrain follow mode. @param callback the execution callback with the returned execution result.",
             "getterrainfollowmodeenabled",
             "gets terrain mode status (enabled/disabled).  @param callback the execution callback with the returned value(s).",
             "setcontrolmode",
             "sets the control mode of the flight controller. it is highly recommended you keep the default value  of `smart`. see `controlmode` for details.  only supported by stand-alone a3.  @param mode control mode to set. @param callback completion callback that receives the setter execution result.",
             "getcontrolmode",
             "gets the control mode of the flight controller.  @param callback the execution callback with the returned value(s).",
             "setautoquickspinenabled",
             "enable/disable auto quick spin. when the gimbal reaches a yaw movement limit, the aircraft will  automatically rotate 360 degrees to unwind the gimbal, allowing it to continue moving  in the yaw direction. this method is only available when the aircraft is flying at least 3m above the ground.  @param enabled `true` to enable auto quick spin. @param callback the execution callback with the returned value(s).",
             "getquickspinenabled",
             "gets current auto quick spin mode (enabled/disabled).  @param callback the execution callback with the returned execution result.",
             "startgohome",
             "the aircraft will start to go home. the `completion callback` will return execution result once this method is invoked.  @param callback the execution callback with the returned execution result.",
             "cancelgohome",
             "the aircraft will stop going home and will hover in place.  @param callback the execution callback with the returned execution result.",
             "sethomelocation",
             "sets the home location of the aircraft. the home location is where the aircraft returns when commanded  by `startgohome`, when its signal is lost or when the battery is below  the lowbatterywarning threshold. the user should be careful setting a new home point location, as  sometimes the product will not be under user control when returning home. a home location  is valid if it is within 30m of one of the following:  - initial take-off location  - aircraft's current location  - current mobile location with at least kcllocationaccuracynearesttenmeters accuracy level  - current remote controller's location as shown by rc gps.  @param homelocation home location latitude and longitude in degrees. @param callback the execution callback with the returned execution result.",
             "sethomelocationusingaircraftcurrentlocation",
             "sets the home location of the aircraft to the current location of the aircraft. see `sethomelocation` for details on home point use.  @param callback the execution callback with the returned execution result.",
             "gethomelocation",
             "gets the home point of the aircraft.  @param callback the execution callback with the returned value(s).",
             "setgohomeheightinmeters",
             "sets the minimum altitude, relative to where the aircraft took off, at which the aircraft must be before  going home. this can be useful when the user foresees obstacles in the aircraft's flight path. if the aircraft's  current altitude is higher than the minimum go home altitude, it will go home at its current altitude.  the valid range for the altitude is from 20m to 500m.  @param height the aircraft's default go home altitude. @param callback the execution callback with the returned execution result.",
             "getgohomeheightinmeters",
             "gets the minimum altitude (relative to the take-off location in meters) at which the aircraft must be before  going home.  @param callback the execution callback with the returned value(s).",
             "setconnectionfailsafebehavior",
             "sets the failsafe action for when the connection between remote controller and aircraft is lost.  @param behavior the `connectionfailsafebehavior` object. @param callback the execution callback with the returned value(s).",
             "getconnectionfailsafebehavior",
             "gets the failsafe action for when the connection between remote controller and aircraft is lost.  @param callback the execution callback with the returned value(s).",
             "setlowbatterywarningthreshold",
             "sets the low battery warning threshold as a percentage. the percentage must be in the range of [15, 50].  @param percent low battery warning percentage. @param callback the execution callback with the returned execution result.",
             "getlowbatterywarningthreshold",
             "gets the low battery warning threshold as a percentage.  @param callback the execution callback with the returned value(s).",
             "setseriouslowbatterywarningthreshold",
             "sets the serious low battery warning threshold as a percentage. the minimum value is 10.  the maximum value is value from `getlowbatterywarningthreshold` minus 5.  @param percent serious low battery warning percentage. @param callback the execution callback with the returned execution result.",
             "getseriouslowbatterywarningthreshold",
             "gets the serious low battery warning threshold in percentage.  @param callback the execution callback with the value(s) returned.",
             "setsmartreturntohomeenabled",
             "enables/disables smart return-to-home (rth) feature. when it is enabled, aircraft will  request to go home when remaining battery is only enough for completing the go-home action.  @param enabled `true` to enable smart rth. @param callback completion block that receives the setter execution result.",
             "getsmartreturntohomeenabled",
             "gets if smart return-to-home (rth) feature is enabled or not. when it is enabled, aircraft  will request to go home when remaining battery is only enough for completing the go-home action.  @param callback completion callback that receives the execution result.",
             "confirmsmartreturntohomerequest",
             "confirms or cancels the smart return-to-home (rth) request. when smart rth is enabled, the aircraft  will request to go home when the battery is only enough for going home. before executing the go-home  action, the aircraft will wait for the confirmation from users with 10 seconds count-down. calling this  method within `false` can cancel the request and the aircraft will not execute go-home action.  otherwise, go-home action will start. smart rth will be triggered only once during the same flight.  flight controller with firmware version lower than 3.0.0.0 does not support confirming the smart rth request.  user can either cancel the request or wait for the countdown to start go-home action.  @param confirmed `true` to confirm the request and the aircraft will start go-home immediately. @param callback completion block to receive the result.",
             "getrcswitchflightmodemapping",
             "gets the mapping between the flight modes and the flight mode switch positions on the remote controller. elements 0, 1, and 2 of the returned array map to `position_one`, `position_two`, and `position_three` of the `getflightmodeswitch`. the value of each enum item represents the  corresponding value of the `remotecontrollerflightmode` enum representing the flight mode. the mapping is fixed for the phantom series, inspire series, mavic pro, and m100. for n3, a3, matrice 600, and matrice 600 pro the mapping is firmware dependent. with firmware version 3.2.11.0 or above, the mapping can be customized in dji assistant 2.  @param callback completion callback that receives the getter result. each element of array is an instance with a value of `remotecontrollerflightmode`.",
             "onboardsdkdevicedatacallback",
             "callback function that updates the data received from an external device (e.g.the onboard device).",
             "flightcontrollerstate",
             "this class represents the current state of the flight controller.",
             "onupdate",
             "called when the flight controller's current state data has been updated. this method is called 10 times  per second.  @param state current state of the flight controller.",
             "onreceive",
             "called when the data received from an external device (e.g. the onboard device) has been updated.  @param data data received from an external device. the size of the data will not be larger than 100 bytes.",
             "onupdate",
             "called when the flight controller pushes an imu state update. the callback method would not be called  if the aircraft is flying.  @param state information about the imu state pushed by the flight controller.",
             "compass",
             "this class provides compass status information and compass calibration methods. products with multiple compasses (like the phantom 4) have their compass state fused into one compass class for simplicity.",
             "rtk",
             "real time kinematic",
             "landinggear",
             "this class controls and gives state of the landing gear. please check `islandinggearmovable` before calling the methods in this class.",
             "flightassistant",
             "this class contains components of the intelligent flight assistant and provides methods to change its settings.",
             "simulator",
             "dji aircraft can be put into simulation mode using this class. developers can start and stop the simulation, as well as monitor basic aircraft attitude and location information.",
             "imustate",
             "this class provides the inertial measurement unit's (imu) state information.",
             "flightcontroldata",
             "contains all the virtual stick control data needed to move the aircraft in all directions.",
             "getpitch",
             "gets aircraft's velocity (m/s) along the y-axis or angle value (in degrees) for pitch. use `rollpitchcontrolmode` to set the velocity or angle mode. note that the argument has different meanings in different coordinate systems. see the <i>flight controller user guide</i> for more information.  @return the velocity (m/s) or angle (degrees) value for pitch.",
             "setpitch",
             "sets the aircraft's velocity (m/s) along the y-axis or angle value (in degrees) for pitch.  use `rollpitchcontrolmode` to set the velocity or angle mode.  note that the argument has different meanings in different coordinate systems. see the <i>flight  controller user guide</i> for more information.  @param pitch the velocity (m/s) or angle (degrees) value for pitch",
             "getroll",
             "gets aircraft's velocity (m/s) along the x-axis or angle value (in degrees) for roll. use `rollpitchcontrolmode` to set the velocity or angle mode. note that the argument has different meanings in different coordinate systems. see the <i>flight controller user guide</i> for more information.  @return the velocity (m/s) or angle (degrees) value for roll.",
             "setroll",
             "sets the aircraft's velocity (m/s) along the x-axis or angle value (in degrees) for roll.  use `rollpitchcontrolmode` to set the velocity or angle mode.  note that the argument has different meanings in different coordinate systems. see the <i>flight  controller user guide</i> for more information.  @param roll the velocity (m/s) or angle (degrees) value for roll.",
             "getyaw",
             "angular velocity (degrees/s) or angle (degrees) value for yaw. use `yawcontrolmode` to set angular velocity or angle mode.  @return the angular velocity (degrees/s) or angle (degrees) value for yaw.",
             "setyaw",
             "sets the angular velocity (degrees/s) or angle (degrees) value for yaw.  use `yawcontrolmode` to set angular velocity or angle mode.  @param yaw the angular velocity (degrees/s) or angle (degrees) value for yaw.",
             "getverticalthrottle",
             "gets aircraft's velocity (m/s) or altitude (m) value for verticalcontrol. use `yawcontrolmode` to set velocity or altitude mode.  @return the velocity (m/s) or altitude (m) value for verticalcontrol.",
             "setverticalthrottle",
             "sets the aircraft's velocity (m/s) or altitude (m) value for verticalcontrol. use `yawcontrolmode` to set velocity or altitude mode.  @param verticalthrottle the velocity (m/s) or altitude (m) value for verticalcontrol.",
             "flightcontroldata",
             "constructor for the flight control data to send through virtual sticks.  @param pitch the velocity (m/s) or angle (degrees) value for pitch @param roll the velocity (m/s) or angle (degrees) value for roll. @param yaw the angular velocity (degrees/s) or angle (degrees) value for yaw. @param verticalthrottle the velocity (m/s) or altitude (m) value for verticalcontrol.",
             "verticalcontrolmode",
             "defines how vertical control values are interpreted by the aircraft.",
             "velocity",
             "sets the virtual stick vertical control values to be a vertical  velocity. positive and negative vertical velocity is for the aircraft ascending and descending respectively.  maximum vertical velocity is defined as 4 m/s. minimum vertical velocity is defined as -4 m/s.",
             "position",
             "sets the virtual stick vertical control values to be an altitude.  maximum position is defined as 500 m. minimum  position is defined as 0 m.",
             "rollpitchcontrolmode",
             "defines how manual roll and pitch values are interpreted by the aircraft.",
             "angle",
             "sets the roll and pitch values to be an angle relative to a level aircraft. in the body coordinate system,  positive and negative pitch angle is for the aircraft rotating about the y-axis in the positive direction  or negative direction, respectively. positive and negative roll angle is the positive direction or negative  direction rotation angle about the x-axis, respectively. however in the ground coordinate system, positive  and negative pitch angle is the angle value for the aircraft moving south and north, respectively. positive and negative roll angle is the angle when the aircraft is moving east and west, respectively. maximum angle  is defined as 30 degrees. minimum angle is defined as -30 degrees.",
             "velocity",
             "sets the roll and pitch values to be a velocity. in the body coordinate system, positive and negative pitch  velocity is for the aircraft moving towards the positive direction or negative direction along the pitch  axis and y-axis, respectively. positive and negative roll velocity is when the aircraft is moving towards  the positive direction or negative direction along the roll axis and x-axis, respectively. however, in the  ground coordinate system, positive and negative pitch velocity is for the aircraft moving east and west,  respectively. positive and negative roll velocity is when the aircraft is moving north and south,  respectively. maximum velocity is defined as 15 meters/s.  minimum velocity is defined as -15 meters/s.",
             "yawcontrolmode",
             "defines how manual yaw values are interpreted by the aircraft.",
             "angle",
             "sets the yaw values to be an angle relative to the front of the aircraft. positive and negative yaw angle is  for the aircraft rotating clockwise and counterclockwise, respectively. maximum yaw angle is defined  as 180 degrees. minimum yaw angle is defined  as -180 degrees.",
             "angular_velocity",
             "sets the yaw values to be an angular velocity. positive and negative angular velocity is for the aircraft  rotating clockwise and counterclockwise, respectively. maximum yaw angular velocity is defined  as 100 degrees/s. minimum yaw angular velocity is  defined as -100 degrees/s.",
             "flightcoordinatesystem",
             "flight control coordinate system.",
             "ground",
             "ground coordinate system.",
             "body",
             "body coordinate system.",
             "controlmode",
             "control mode of the flight controller. it determines how the pilot can control the aircraft.  by default, it is in smart control mode.",
             "smart",
             "smart control mode. the aircraft can stabilize its altitude and attitude in smart mode.",
             "manual",
             "manual control mode. the aircraft will not stabilize its altitude and attitude in manual mode. this mode is  for advanced pilots only, and should only be used when the pilot understands the risk of operating in this  mode. any damage to the product when operating in this mode will not be covered under warranty.",
             "unknown",
             "unknown control mode.",
             "flightorientationmode",
             "tells the aircraft how to interpret flight commands for forward, backward, left and right. see the <i>flight  controller user guide</i> for more information.",
             "course_lock",
             "the aircraft should move relative to a locked course heading.",
             "home_lock",
             "the aircraft should move relative radially to the home point.",
             "aircraft_heading",
             "the aircraft should move relative to the front of the aircraft.",
             "locationcoordinate2d",
             "a class representing 2-dimensional location coordinate",
             "locationcoordinate2d",
             "construct a `djilocationcoordinate2d` object with latitude and longitude.  @param latitude latitude in degrees. @param longitude longitude in degrees.",
             "getlatitude",
             "returns `djilocationcoordinate2d` object, which could be used as an input parameter for flight controller's interfaces.  @return the double value of latitude.",
             "getlongitude",
             "returns the longitude.  @return the double value of longitude.",
             "connectionfailsafebehavior",
             "defines aircraft failsafe action when signal between the remote controller and the aircraft is lost.",
             "hover",
             "hover.",
             "landing",
             "landing.",
             "go_home",
             "return-to-home.",
             "unknown",
             "unknown.",
             "remotecontrollerflightmode",
             "flight modes that map to the flight mode switch on the remote controller.",
             "p",
             "positioning mode. gnss and vision positioning systems are used for positioning if they are available. for products without f mode, intelligent functions such as missions and intelligent orientation control can be performed in p-mode.",
             "s",
             "sport mode. the maximum flight speed and responsiveness of the aircraft is increased in this mode.",
             "a",
             "attitude mode. the gnss and vision positioning systems are not used for positioning. the aircraft only uses the barometer to maintain altitude. if receiving a gnss signal, the aircraft can automatically return home if the remote controller signal is lost and if the home point has been recorded successfully.",
             "g",
             "gentle mode. the sensitivity and speed of aircraft will be substantially decreased in gentle mode.",
             "m",
             "manual mode. the aircraft will not stabilize its altitude nor attitude in manual mode. this mode is for advanced pilots only, and should only be used when the pilot understands the risk of operating in this mode. any damage to the product when operating in this mode will not be covered under warranty. it is supported by stand-alone a3 and n3 and can be enabled in assistant 2.",
             "f",
             "function mode. performs the same as positioning mode with intelligent functions such as missions and intelligent orientation control enabled.",
             "unknown",
             "unknown mode.",
             "smartrthstate",
             "state of smart return-to-home (rth). it is only used when smart rth is enabled.",
             "idle",
             "smart rth is not triggered yet in the current flight. the smart rth state will be reset  to this value when the aircraft lands.",
             "counting_down",
             "smart rth is triggered and the aircraft is counting down. if no response is received within 10 seconds  or the user confirms the request, the aircraft will start to go-home and the state will change to  `executed`. if user  cancels the request, the state will change to `cancelled`.",
             "executed",
             "smart rth is already executed in the current flight. the state will not be reset until the aircraft lands.",
             "cancelled",
             "smart rth request is cancelled by the user. the state will not be reset until the aircraft lands.",
             "unknown",
             "unknown.",
             "airsensesysteminformation",
             "the state of dji airsense system. it contains the overall warning level and  the detailed state of each detected airplane.",
             "getwarninglevel",
             "the overall system warning level. this will be the worst case of all individual aircraft warning levels.  @return an enum value of `airsensewarninglevel`.",
             "getairplanestates",
             "the state of all airplanes detected by dji airsense system.  @return an array of `airsenseairplanestate` objects.",
             "callback",
             "an interface for obtaining `airsensesysteminformation` infos.",
             "onupdate",
             "callback method of air sense airplane state.  @param information an object of `airsensesysteminformation`.",
             "airsenseairplanestate",
             "the airsense state of an airplane. dji airsense only sends out warnings of nearby  civil aircraft under certain circumstances; it will not control dji aircraft to avoid other  aircraft automatically. make sure to fly with your aircraft within visual line of sight at  all times, and always fly with caution. after receiving warnings, lower your aircraft to a  safe height. in addition, dji airsense has the following limitations: 1. dji airsense  can only receive messages sent from civil aircraft equipped with an ads-b out device under  1090es (rtca do-260) or uat (rtca do-282) standards. for civil aircraft without ads-b outs or  with malfunctioning ads-b outs, dji airsense cannot receive related broadcasted messages or  send out warnings. 2. when there are obstacles in between a civil aircraft and dji  aircraft, dji airsense will fail to receive ads-b messages sent from civil aircraft or to send out warnings. 3. dji airsense may fail to receive ads-b messages sent from  civil aircraft or send out warnings due to ever changing circumstances and interference.  it is highly recommended to fly with caution and stay aware of your surroundings during flight. 4. dji airsense cannot send out warnings when the dji aircraft cannot accurately determine its location. 5. dji airsense cannot receive ads-b messages sent from civil  aircraft or send out warnings when it is disabled or misconfigured.",
             "getcode",
             "the unique code (icao) of the airplane.  @return string of the unique code (icao).",
             "getwarninglevel",
             "the warning level determined by dji airsense system.  @return an enum value of `airsensewarninglevel`.",
             "getrelativedirection",
             "the direction of the airplane relative to the dji aircraft.  @return an enum value of `airsensedirection`.",
             "getheading",
             "the heading of the airplane.  @return a float value of heading.",
             "getdistance",
             "the distance between the airplane and dji aircraft in meters.  @return an int value of distance.",
             "callback",
             "an interface for obtaining `airsenseairplanestate` infos.",
             "onupdate",
             "callback method of air sense airplane state.  @param information array of `airsenseairplanestate`.",
             "airsensewarninglevel",
             "the warning level determined by the dji airsense system. the warning level is based on the  distance between the airplane and the dji aircraft, and the heading of the airplane.",
             "level_0",
             "the system detects the airplane but the dji aircraft is either far away from the airplane  or is in the opposite direction of the airplane's heading.",
             "level_1",
             "the system detects the airplane. the probability that it will pass through the location  of the dji aircraft is considered low.",
             "level_2",
             "the system detects the airplane. the probability that it will pass through the location  of the dji aircraft is considered medium.",
             "level_3",
             "the system detects the airplane. the probability that it will pass through the location  of the dji aircraft is considered high.",
             "level_4",
             "the system detects the airplane. the probability that it will pass through the location  of the dji aircraft is very high.",
             "unknown",
             "unknown.",
             "airsensedirection",
             "directions.",
             "north",
             "north.",
             "north_east",
             "north east.",
             "east",
             "east.",
             "south_east",
             "south east.",
             "south",
             "south.",
             "south_west",
             "south west.",
             "west",
             "west.",
             "north_west",
             "north west.",
             "unknown",
             "unknown.",
             "limits",
             "this class provides max and min values for flight controller virtual stick.",
             "vertical_control_min_velocity",
             "vertical control velocity min value -4 m/s in virtualstickcontrolmode. negative velocity is down.",
             "vertical_control_max_velocity",
             "vertical control velocity max value 4 m/s in virtualstickcontrolmode. positive velocity is up.",
             "vertical_control_min_height",
             "vertical control position min for virtualstickverticalcontrolmodeposition. by default is set to be 0m.",
             "vertical_control_max_height",
             "vertical control position max for virtualstickverticalcontrolmodeposition. by default is set to be 500m.",
             "roll_pitch_control_max_velocity",
             "roll/pitch control velocity max value 15m/s.",
             "roll_pitch_control_min_velocity",
             "roll/pitch control velocity min value -15m/s.",
             "roll_pitch_control_max_angle",
             "roll/pitch control angle max value 30 degrees.",
             "roll_pitch_control_min_angle",
             "roll/pitch control angle min value -30 degrees.",
             "yaw_control_max_angle",
             "yaw control angle max value 180 degrees.",
             "yaw_control_min_angle",
             "yaw control angle min value -180 degrees.",
             "yaw_control_max_angular_velocity",
             "yaw control angular velocity max value 100 degree/s.",
             "yaw_control_min_angular_velocity",
             "yaw control angular velocity min value -100 degree/s.",
             "callback",
             "callback function that updates the flight controller's current state data. this method gets called 10 times per second after startupdatingflightcontrollercurrentstate is called.",
             "aremotorson",
             "`true` if motors are on.  @return a boolean value.",
             "isflying",
             "`true` if aircraft is flying.  @return a boolean value.",
             "getaircraftlocation",
             "gets the current location of the aircraft as a coordinate. `nil` if the location is invalid.  @return the current location of the aircraft as a coordinate.",
             "getattitude",
             "gets the attitude of the aircraft, where the pitch, roll, and yaw values will be in the range of [-180, 180] degrees. if its pitch, roll, and yaw values are 0, the aircraft will  be hovering level with a true north heading.  @return the attitude of the aircraft.",
             "getvelocityx",
             "current speed of the aircraft in the x direction, in meters per second, using the n-e-d (north-east-down)  coordinate system.  @return a float value of the current speed of the aircraft in the x direction.",
             "getvelocityy",
             "current speed of the aircraft in the y direction, in meters per second, using the n-e-d (north-east-down)  coordinate system.  @return a float value of the current speed of the aircraft in the y direction.",
             "getvelocityz",
             "current speed of the aircraft in the z direction, in meters per second, using the n-e-d (north-east-down)  coordinate system.  @return a float value of the current speed of the aircraft in the z direction.",
             "getflighttimeinseconds",
             "the accumulated flight time, in seconds, since the aircraft was powered on.  @return an int value of the flight time.",
             "islandingconfirmationneeded",
             "`true` if the clearance between the aircraft and the ground is less than 0.3m, and  confirmation from the user is needed to continue the landing. when the confirmation is needed, `confirmlanding` in `flightcontroller` can be used to continue landing. it is  supported by flight controller firmware 3.2.0.0 or above.  @return whether confirmation is needed or not.",
             "getflightmode",
             "flight controller flight mode. for more info, see http://wiki.dji.com/en/index.php/phantom_3_professional-aircraft  @return an enum value of the `flightmode`.",
             "getflightmodestring",
             "gets the flight mode as a string.  @return the flight mode as a string. for example, p-gps or p-atti.",
             "ismultiplemodeopen",
             "determines whether multiple flight modes are open. this will reflect whether navigation mode (ground  station) is enabled.  @return `true` if the navigation mode is enabled.",
             "getsatellitecount",
             "returns the gps satellite count.  @return the double value of the gps satellite count.",
             "getgpssignallevel",
             "gets the aircraft's current gps signal quality.  @return the aircraft's current gps signal quality.",
             "isimupreheating",
             "`true` if imu is preheating.  @return a boolean value.",
             "isultrasonicbeingused",
             "`true` if the ultrasonic sensor is being used. variables that can impact the quality  of the ultrasound measurement, or whether it's being used, are height above ground and the type of ground  (if it reflects sound waves well). usually, the ultrasonic sensor works when the aircraft is less than 8m  above ground.  @return a boolean value.",
             "getultrasonicheightinmeters",
             "height of aircraft measured by the ultrasonic sensor in meters. the data will only be available  if `isultrasonicbeingused` returns `true`. height has a precision of 0.1m. this value has reference significance when the height  is below 5 meters.  @return a float value of the height of the aircraft measured by the ultrasonic sensor in meters.",
             "doesultrasonichaveerror",
             "`true` if ultrasonic sensor has error.  @return `true` if ultrasonic sensor has error.",
             "isvisionpositioningsensorbeingused",
             "`true` if a vision sensor is being used. variables that can impact the quality of the  vision measurement, or whether it's being used, are height above ground and the type of ground (if it has  sufficiently rich texture). usually, the vision sensor works when the aircraft is less than 3m above ground.  @return a boolean value.",
             "getorientationmode",
             "the aircraft's current orientation mode.  @return an enum value of `flightorientationmode`.",
             "isfailsafeenabled",
             "`true` if the signal is lost between remote controller and aircraft, and failsafe is enabled.  @return a boolean value.",
             "getbatterythresholdbehavior",
             "recommended action based on remaining battery life.  @return an enum value of `batterythresholdbehavior`.",
             "hasreachedmaxflightheight",
             "`true` if the aircraft has reached its flight height limit.  @return a boolean value.",
             "gethomepointaltitude",
             "returns home point's altitude.  @return a float value.",
             "hasreachedmaxflightradius",
             "`true` if the aircraft has reached its flight radius limit.  @return a boolean value.",
             "islowerthanbatterywarningthreshold",
             "`true` if the battery is lower than the low battery warning threshold.  @return a boolean value.",
             "islowerthanseriousbatterywarningthreshold",
             "`true` if the battery is lower than the serious low battery warning threshold.  @return a boolean value.",
             "ishomelocationset",
             "`true` if the home point has been set.  @return a boolean value.",
             "gethomelocation",
             "returns the home location of the aircraft as a coordinate.  @return an instance of `locationcoordinate2d`.",
             "getgohomeassessment",
             "gets the aircraft's smart go home data. if smart go home is enabled, all the smart go home data will be available  in `gohomeassessment`.  @return an instance of `gohomeassessment`.",
             "getgohomeexecutionstate",
             "the current status of go-home execution.  @return an enum value of `gohomeexecutionstate`.",
             "isgoinghome",
             "`true` if the aircraft is going home.  @return a boolean value.",
             "getgohomeheight",
             "gets the height when the aircraft is going home in meters.  @return an int value of the height when the aircraft is going home.",
             "attitude",
             "the attitude of the aircraft where the pitch, roll, and yaw values will be in the range of [-180, 180] degrees. if its pitch, roll, and yaw values are 0, the aircraft will be hovering level with a true north heading.",
             "pitch",
             "the pitch value of the aircraft: forward is positive, backward is negative. units are in degrees.",
             "roll",
             "the roll value of the aircraft: forward is positive, backward is negative. units are in degrees.",
             "yaw",
             "the yaw value of the aircraft, where 0 corresponds to a true north heading. yawing clockwise will increase yaw value.",
             "batterythresholdbehavior",
             "remaining battery life state. this state describes the recommended action based on remaining battery life.",
             "fly_normally",
             "remaining battery life sufficient for normal flying.",
             "go_home",
             "remaining battery life sufficient to go home.",
             "land_immediately",
             "remaining battery life sufficient to land immediately.",
             "gohomeexecutionstate",
             "an enum used to identify the different stages of the go-home command.",
             "not_executing",
             "the aircraft is not executing a go-home command.",
             "turn_direction_to_home_point",
             "the aircraft is turning the heading direction to the home point.",
             "go_up_to_height",
             "the aircraft is going up to the height for go-home command.",
             "auto_fly_to_home_point",
             "the aircraft is flying horizontally to home point.",
             "go_down_to_ground",
             "the aircraft is going down after arriving at the home point.",
             "braking",
             "the aircraft is braking to avoid collision.",
             "bypassing",
             "the aircraft is bypassing over the obstacle.",
             "completed",
             "the go-home command is completed.",
             "unknown",
             "the go-home status is unknown.",
             "locationcoordinate3d",
             "this is a structure for presenting the location, latitude, longitude, altitude.",
             "locationcoordinate3d",
             "constructs the 3d coordinate with latitude, longitude and altitude.  @param latitude latitude in degrees @param longitude longitude in degrees @param altitude altitude in meters",
             "getlatitude",
             "returns the latitude.  @return a double value of the latitude.",
             "getlongitude",
             "returns the longitude.  @return a double value of the longitude.",
             "getaltitude",
             "returns the relative altitude of the aircraft relative to take off location, measured by barometer, in meters.  @return a float value of the relative altitude of the aircraft relative to take off location.",
             "gohomeassessment",
             "class for smart go home status.",
             "getremainingflighttime",
             "the estimated remaining time, in seconds, it will take the aircraft to go home with a 10% battery buffer remaining. this time includes landing the aircraft. if the aircraft is using the simulator, this value will be 0.  @return an int value.",
             "gettimeneededtogohome",
             "the estimated time, in seconds, needed for the aircraft to go home from its current location.  @return an int value.",
             "gettimeneededtolandfromcurrentheight",
             "the estimated time, in seconds, needed for the aircraft to move downward from its current position and land.  @return an int value.",
             "getbatterypercentageneededtogohome",
             "the estimated battery percentage, in the range of [0,100], needed for the aircraft to go home and have 10% battery remaining. this includes landing of the aircraft.  @return an int value.",
             "getbatterypercentageneededtolandfromcurrentheight",
             "the battery percentage, in the range of [0,100], needed for the aircraft to move downward from its current position and land.  @return battery percentage.",
             "getmaxradiusaircraftcanflyandgohome",
             "the maximum radius, in meters, an aircraft can fly from its home location and still make it all the way back home, based on altitude, distance, battery, etc. if the  aircraft goes out farther than the max radius, it will fly as far back home as it can and land. if the aircraft is using the simulator, this value will be 0.  @return a float value.",
             "getsmartrthstate",
             "the smart return-to-home (rth) state for the current flight.  @return return an enum value of `smartrthstate`.",
             "getsmartrthcountdown",
             "the countdown (in seconds) for the smart return-to-home (rth). once the countdown reaches 0, the aircraft will  execute an automatic go-home procedure. it is only valid when  `getsmartrthstate`  is `counting_down`.  @return the countdown for the smart return-to-home (rth).",
             "gpssignallevel",
             "a enum class representing gps signal levels, which are used to measure the signal quality.",
             "level_0",
             "the gps has almost no signal, which is very bad.",
             "level_1",
             "the gps signal is very weak.",
             "level_2",
             "the gps signal is weak. at this level, the aircraft's go home functionality will still work.",
             "level_3",
             "the gps signal is good. at this level, the aircraft can hover in the air.",
             "level_4",
             "the gps signal is very good. at this level, the aircraft can record the home point.",
             "level_5",
             "the gps signal is very strong.",
             "none",
             "there is no gps signal.",
             "flightmode",
             "flight controller flight modes. for more information, see http://wiki.dji.com/en/index.php/phantom_3_professional-aircraft.",
             "manual",
             "manual mode.",
             "atti",
             "attitude mode.",
             "atti_course_lock",
             "attitude course lock mode.",
             "gps_atti",
             "gps attitude mode.",
             "gps_course_lock",
             "gps course lock mode.",
             "gps_home_lock",
             "gps home mode.",
             "gps_hot_point",
             "gps hot point mode.",
             "assisted_takeoff",
             "assisted takeoff mode.",
             "auto_takeoff",
             "auto takeoff mode.",
             "auto_landing",
             "auto landing mode.",
             "gps_waypoint",
             "gps waypoint mode.",
             "go_home",
             "go home mode.",
             "joystick",
             "joystick mode.",
             "gps_atti_wristband",
             "attitude limited mode.",
             "draw",
             "draw mode.",
             "gps_follow_me",
             "gps follow me mode.",
             "active_track",
             "activetrack mode.",
             "tap_fly",
             "tapfly mode.",
             "gps_sport",
             "sport mode.",
             "gps_novice",
             "gps novice mode.",
             "unknown",
             "the main controller flight mode is unknown.",
             "confirm_landing",
             "confirm landing mode.",
             "terrain_follow",
             "the aircraft should move following the terrain.",
             "tripod",
             "tripod mode.",
             "track_spotlight",
             "active track mode, corresponds to spotlight active track mode.",
             "motors_just_started",
             "the motors are just started.",
             "setmaxflightheight",
             "sets the maximum flight height limitation of the aircraft. the maxheight</code> value must be in the  range [20, 500] m.  @param maxheight maximum height of the aircraft. @param callback the execution callback with the execution result returned.",
             "getmaxflightheight",
             "gets the maximum flight height limitation of the aircraft.  @param callback the execution callback with the returned value(s).",
             "setmaxflightradius",
             "sets the maximum flight radius limitation of the aircraft. the radius is calculated from the home point.  the maxradius</code> value must be in the range [15, 500] m.  @param maxradius maximum flight radius of the aircraft. @param callback the execution callback with the execution result returned.",
             "getmaxflightradius",
             "gets the maximum flight radius limitation of the aircraft.  @param callback the execution callback with the returned value(s).",
             "setmaxflightradiuslimitationenabled",
             "sets whether the maximum flight radius limitation is enabled. if enabled is `false`,  there is no maximum flight radius limitation.  @param enabled maximum flight radius limitation is enabled. @param callback the execution callback with the execution result returned.",
             "getmaxflightradiuslimitationenabled",
             "gets the maximum flight radius limitation status (enabled/disabled).  @param callback the execution callback with the returned value(s).",
             "setflyzonestatecallback",
             "sets up the `setflyzonestatecallback` for  obtaining `flyzonestate`.  @param callback flyforbidstatusupdatedcallback callback.",
             "getflyzonesinsurroundingarea",
             "gets all the fly zones within 20km of the aircraft. during simulation, this method is available only when the aircraft location is within 50km of (37.460484, -122.115312) or within 50km of (22.5726, 113.8124499). use of the geographic information provided by djiflyzonemanager is restricted. refer to the dji developer policy.  @param callback the execution callback with the returned value(s).",
             "getunlockedflyzones",
             "gets a list of unlocked fly zones of the authorized account from the server. the list contains the fly zones unlocked by the flight planner (http://www.dji.com/flysafe/geo-system#planner), and the fly zones unlocked during flight using dji go or any dji mobile sdk based application.  @param callback the execution callback with the returned value(s).",
             "unlockflyzones",
             "unlocks the selected fly zones. this method can be used to unlock  enhanced warning and authorization zones. after unlocking the zones, flight will be unrestricted in those zones until the unlock expires.  the unlocking record will be linked to the user's account and will  be accessible to dji go and other dji mobile sdk based applications.  @param ids the ids of enhancedwarningzones or authorizedwarningzones. @param callback the execution callback with the returned execution result.",
             "loadindividualunlockzonesfromserver",
             "when an individual unlock zone is approved, the approval and zone information needs to be downloaded from the fly zone server and uploaded to the aircraft. for each product connection state change, or network connection state change this  is done automatically. however, if the individual unlock zone is approved and needs  to be uploaded to the aircraft without changing the network connectivity or product  connectivity state, then this method can be used to force the  individual unlock  zone update. for this method to work, the user must already be logged in. individual  unlock zones are associated with an aircraft serial number, and so, to upload to  the aircraft, the right aircraft must also be connected. this method can only be  used when `isindividualunlockzonesupported` is `true`.  @param callback `completion callback` to receive the result.",
             "getindividualunlockzones",
             "gets the individual unlock zones currently on the aircraft. this method can only be used when `isindividualunlockzonesupported`  is `true`.  @param callback completion callback to receive the result.",
             "enableindividualunlockzone",
             "enables an individual unlock zones that is on the aircraft. all individual unlock zones  on the aircraft can be retrieved with `getindividualunlockzones`. at any time, only one individual unlock zone can be enabled. enabling an individual unlock  zone will disable the previously enabled zone. this method can only be used when  `isindividualunlockzonesupported` is `true`.  @param zone individual unlock zone to enabled. if `zone` is `nil`, only the previously enabled zone  will be disabled. @param callback `completion callback` to receive the result.",
             "getenabledindividualunlockzone",
             "gets the currently enabled individual unlock zone. this method can only be used when `isindividualunlockzonesupported` is `true`.  @param callback completion callback to receive the result.",
             "isindividualunlockzonesupported",
             "`true` if an aircraft is connected with flight controller firmware that supports individual unlock zones. aircraft that support individual unlock  zones are also able to disable unlocked fly zones temporarily.  @return a boolean value to check if individual unlock zone supported.",
             "getdatabaseversion",
             "the version of the fly zone database in the firmware of the aircraft. it is `null` if `getdatabasestate` is  `initializing`.  @param callback the execution callback.",
             "getdatabasestate",
             "the fly zone database state in the firmware of the aircraft. the sdk will compare the version of the database on the aircraft against the latest one online. when the aircraft database is  out-of-date, the user should use dji go or assistant 2 to update the firmware.  @param callback the execution callback.",
             "setgeosystemenabled",
             "`true` to enable geo system. by default, if the geo system is available at the aircraft's  location, the geo system will be enabled.  this setting can be changed when the aircraft is in the air, however it will not take effect until the aircraft lands. when the geo system is disabled, the aircraft  reverts to the nfz (no fly zone) system. this interface may be deprecated in the future. it is only supported when `isindividualunlockzonesupported` returns `false`. otherwise, geo system is always enabled when the current location supports it.  @param enabled `true` to enable geo system. @param callback the execution callback with the returned execution result.",
             "getgeosystemenabled",
             "`true` to enable geo system. by default, if the geo system is available at the aircraft's  location, the geo system will be enabled.  this setting can be changed when the aircraft is in the air, however it will not take effect until the aircraft lands. when the geo system is disabled, the aircraft  reverts to the nfz (no fly zone) system. this interface may be deprecated in the future.  @param callback the execution callback with the returned value(s).",
             "flyzoneinformation",
             "this class contains information about a fly zone. `getflyzonetype`  should be used to understand the type of fly zone to know which information in this class is valid.",
             "flyzonedatabasestate",
             "the state of the fly zone database on the aircraft.",
             "flyzonestate",
             "this enum describes whether the aircraft is clear of, near, or actually in a fly zone.",
             "initializing",
             "sdk is fetching the information of the database.",
             "no_internet_connection",
             "sdk cannot access the internet, so it cannot compare the database version with the latest one on the internet.",
             "out_of_date",
             "aircraft's database version is older than the latest one.  user should use dji go or assistant 2 to upgrade the firmware in order  to keep the database up to date.",
             "up_to_date",
             "the database in the aircraft is up to date.",
             "unknown",
             "unknown state",
             "getflyzonetype",
             "returns the type fly zone.  @return the type of fly zone.",
             "getflyzoneid",
             "returns the fly zone's id. this is required if unlocking a fly zone.  @return an int value.",
             "getname",
             "returns the name of the fly zone.  @return a string instance of the name of the fly zone.",
             "getreason",
             "returns the reason of the fly zone `flyzonereason`.  @return an enum value of `flyzonereason`.",
             "getcoordinate",
             "the coordinate of the fly zone's center. only used for geo and nfz fly zones.  @return coordinate of fly zone center.",
             "getradius",
             "the radius of the fly zone in meters. if the fly zone is a truncated cone, then the radius is the bottom of the cone. only used for geo and nfz fly zones.  @return a double value of the radius of the fly zone in meters.",
             "getshape",
             "the shape of the fly zone. this shape is only used for geo (always cylinder) and nfz fly zones.  @return an enum value of `flyzoneshape`.",
             "getcategory",
             "the category of the fly zone. this is only used for geo fly zones.  @return an enum value of `flyzonegeocategory`.",
             "getsubflyzones",
             "information about the sub fly zones.  if empty, then the fly zone is a geo or nfz fly zone. if populated, this fly zone is a poly fly zone and the sub fly zone information  will take precedence over information in `flyzoneinformation`. `flyzoneinformation` should only be used for fly zone identifying information.  @return an array of `subflyzoneinformation` objects.",
             "setunlockingenabled",
             "when `isindividualunlockzonesupported` is `true`, unlocked fly zones  can be disabled. this is useful if the aircraft is shared between users.  @param enabled `true` to enable the unlocked fly zone. @param callback `completion callback` to receive the result.",
             "getunlockingenabled",
             "`true` if the unlocked fly zone is enabled. this method can only be used when `isindividualunlockzonesupported` is `true`.  @param callback completion callback to receive the result.",
             "getstarttime",
             "the timestamp of when the flight warning or flight restriction begins, formatted in utc (yyyy-mm-dd hh:mm:ss). this is used for temporary flight  restrictions.  @return an instance of string.",
             "getendtime",
             "the timestamp of when the flight warning or flight restriction ends, formatted in utc (yyyy-mm-dd hh:mm:ss).  @return a string instance of the timestamp when the flight warning or flight restriction ends.",
             "getunlockstarttime",
             "the timestamp when the fly zone is unlocked, formatted in utc (yyyy-mm-dd hh:mm:ss).  @return a string instance of the timestamp when the fly zone is unlocked.",
             "getunlockendtime",
             "the timestamp the unlocked zone expires, formatted in utc (yyyy-mm-dd hh:mm:ss).  @return a string instance of the timestamp when the unlocked zone expires.",
             "flyzonetype",
             "there are three types of fly zones, nfz, geo and poly.",
             "nfz",
             "the nfz fly zone is a cylinder or truncated cone volume where flight is restricted. some nfz fly zones also have a 4km buffer around them where flight height is  restricted to 120m.",
             "geo",
             "the geo fly zone is a cylinder volume with four levels of restriction.  see `flyzonegeocategory`. some restrictions can  be unlocked while others cannot.",
             "poly",
             "the poly fly zone consists of one or more sub fly zones that are cylinders or complex volumes with different height limitations. a height limitation of 0m means flight is completely restricted. this is used by mavic, phantom 4 pro, inspire 2 and phantom 4.",
             "unknown",
             "the fly zone is of unknown type.",
             "flyzonegeocategory",
             "an enum class represents the category of fly zone.",
             "warning",
             "warning zones do not restrict flight and are informational to alert the user. in a warning zone, users should be  prompted with a warning message describing the zone.",
             "authorization",
             "authorization zones restrict flight by default, but can be unlocked by a geo authorized user.",
             "restricted",
             "restricted zones restrict flight by default and cannot be unlocked by a geo authorized user. users should contact  flysafe@dji.com if they have authorization to fly in a restricted zone.",
             "enhanced_warning",
             "enhanced warning zones restrict flight by default, and can be unlocked  using `unlockflyzones` without requiring the user to be logged into their dji account.",
             "unknown",
             "unknown.",
             "flyzonereason",
             "an enum class contains the reason for the fly zone.",
             "airport",
             "airport that cannot be unlocked using geo system.",
             "military",
             "military authorized zone. this cannot be unlocked using the geo system.",
             "special",
             "special zone. this cannot be unlocked using the geo system.",
             "commercial_airports",
             "commercial airport.",
             "private_commercial_airports",
             "private commercial airport.",
             "recreational_airports",
             "recreational airport.",
             "national_parks",
             "national park.",
             "noaa",
             "the national oceanic and atmospheric administration.",
             "parcel",
             "parcel.",
             "power_plant",
             "power plant.",
             "prison",
             "prison.",
             "school",
             "school.",
             "stadium",
             "stadium.",
             "prohibited_special_use",
             "prohibited special use.",
             "restricted_special_use",
             "restriction special use.",
             "temporary_flight_restrictions",
             "temporary flight restriction.",
             "class_b_air_space",
             "class b controlled airspace. see http://www.dji.com/flysafe/geo-system#notes for more information on the  controlled airspace (class b, c, d, e) in the united states.",
             "class_c_air_space",
             "class c controlled airspace. see http://www.dji.com/flysafe/geo-system#notes for more information on the  controlled airspace (class b, c, d, e) in the united states.",
             "class_d_air_space",
             "class d controlled airspace. see http://www.dji.com/flysafe/geo-system#notes for more information on the  controlled airspace (class b, c, d, e) in the united states.",
             "class_e_air_space",
             "class e controlled airspace. see http://www.dji.com/flysafe/geo-system#notes for more information on the  controlled airspace (class b, c, d, e) in the united states.",
             "unpaved_airport",
             "airport with unpaved runway.",
             "heliport",
             "heliport.",
             "unknown",
             "unknown.",
             "flyzoneshape",
             "an enum class containing the shape of the fly zone.",
             "cylinder",
             "cylinder.",
             "cone",
             "truncated cone that has a smaller radius on the ground and larger radius in the air.",
             "unknown",
             "unknown.",
             "clear",
             "the aircraft is not within 200 meters of any warning, enhanced warning, authorization or restricted zone.",
             "near_restricted_zone",
             "the aircraft is within 200 meters of an authorization or restricted zone.",
             "in_warning_zone_with_height_limitation",
             "the aircraft is currently in a warning or enhanced warning zone and this place will  limit max flight height to 120m.",
             "in_warning_zone",
             "the aircraft is currently in a warning or enhanced warning zone.",
             "in_restricted_zone",
             "the aircraft is currently in an authorization or restricted zone.",
             "unknown",
             "unknown.",
             "subflyzoneinformation",
             "this class contains information about a sub fly zone.",
             "getareaid",
             "the fly zone's identifier.  @return an int value of the sub area's id.",
             "getshape",
             "the shape of the sub-fly-zone.  @return an enum value of `subflyzoneshape`.",
             "getcenter",
             "the location of the fly zone's center. only used when `getshape` is `cylinder`.  @return a locationcoordinate2d object.",
             "getradius",
             "the radius of the fly zone in meters. only used when `getshape` is `cylinder`.  @return a double value of fly zone radius.",
             "getvertices",
             "the vertices (locations) that make up the sub fly zone polygon shape. only used when `getshape` is `polygon`.  @return a list of cllocationcoordinate2d object.",
             "getmaxflightheight",
             "maximum flight height in meters allowed in the sub fly zone. a height of 0m will restrict flight completely within the zone.  @return an int value of maximum flight height.",
             "subflyzoneshape",
             "this type of the geospatial information for the fly zone.",
             "cylinder",
             "circle shape.",
             "polygon",
             "polygon shape.",
             "unknown",
             "unknown.",
             "callback",
             "an interface for obtaining `flyforbidstatus`.",
             "onupdate",
             "called when the latest fly zone status is received.  @param state an enum value of `flyzonestate`.",
             "individualunlockzone",
             "users can unlock areas of a restricted fly zone through http://www.dji.com/flysafe/geo-system/individual-unlock.  a user needs to show special authorization (usually from a third party such as a regulatory  or managing agency) as part of the process to unlock the area within the restricted fly zone.  therefore each request is unique and customized to the individual. if the request is successful,  the unlocked area is tied to the user's account as an individual unlock zone. this class contains the properties of an individual unlock zone.",
             "getid",
             "the unique id of the individual unlock zone.  @return an int value of the id.",
             "getname",
             "name of the individual unlock zone.  @return a string value of the name.",
             "getcenter",
             "the coordinate of the individual unlock zone's center.  @return a `locationcoordinate2d` object.",
             "getradius",
             "the radius of the individual unlock zone in meters.  @return a float value of the radius.",
             "getstarttime",
             "the timestamp of when the unlocking begins, formatted in utc (yyyy-mm-dd hh:mm:ss).  @return a string value of start time.",
             "getendtime",
             "the timestamp of when the unlocking ends, formatted in utc (yyyy-mm-dd hh:mm:ss).  @return a string value of the end time.",
             "isexpired",
             "`true` if the individual unlock zone has expired. after a zone is expired,  the location will be locked.  @return a boolean value to check if is expired.",
             "getindex",
             "the imu's id. starts at 0.  @return an int value.",
             "getgyroscopestate",
             "returns the gyroscopic sensor's state value.  @return an enum value of `sensorstate`",
             "getaccelerometerstate",
             "returns the accelerometers sensor state value.  @return an enum value of `sensorstate`",
             "getcalibrationprogress",
             "returns the imu's calibration progress, its range being [1, 100]. if the imu is not calibrating, the value of the calibration progress will be -1.  @return an int value.",
             "getcalibrationstate",
             "returns the status of the imu's calibration.  @return an enum value of `calibrationstate`",
             "getmultipleorientationcalibrationhint",
             "for products that require the user to orient the aircraft during the imu calibration, this method can be used to  inform the user when each orientation is done. it is supported by flight controller firmware 3.2.0.0 or above.  @return an instance of `multipleorientationcalibrationhint`",
             "callback",
             "callback interface that is used to receive imu state from flight controller.",
             "sensorstate",
             "enum for imu calibration status.",
             "calibrationstate",
             "enum for imu calibration status.",
             "calibrationorientation",
             "the different orientations the aircraft needs for a multi-orientation imu calibration.",
             "orientationcalibrationstate",
             "imu calibration status for the current aircraft orientation.",
             "multipleorientationcalibrationhint",
             "this class is used to lead the user through an imu calibration for products that require calibration at multiple  orientations. an example workflow is:   <ol> - direct the user to orient the aircraft in one of the uncalibrated orientations in `getorientationstocalibrate`.  - monitor `getstate`  until `calibrating` turns  to `completed`.  - repeat until `getorientationstocalibrate` is empty.  </ol>",
             "nose_down",
             "the front/nose of the aircraft should be pointed down.",
             "tail_down",
             "the back/tail of the aircraft should be pointed down.",
             "right_down",
             "the right/starboard side of the aircraft should be pointed down.",
             "left_down",
             "the left/port side of the aircraft should be pointed down.",
             "bottom_down",
             "the bottom/underbelly of the aircraft should be pointed down.",
             "top_down",
             "the top of the aircraft should be pointed down.",
             "calibrating",
             "calibration of current aircraft orientation is in progress.",
             "completed",
             "calibration of current aircraft orientation is done. the orientation will be added  to `getorientationscalibrated`. the aircraft should be  rotated to a remaining orientation  in `getorientationstocalibrate`.",
             "unknown",
             "unknown. used by products that do not require imu multi-orientation calibration.",
             "getstate",
             "gets the calibration status of the current orientation.  @return an enum value of `orientationcalibrationstate`",
             "getorientationstocalibrate",
             "gets an array with the aircraft orientations that have not been calibrated yet. each element  is a  `calibrationorientation` enum value.  @return an instance of hashset `calibrationorientation`.",
             "getorientationscalibrated",
             "gets an array with the aircraft orientations that have been calibrated. each element is  a  `calibrationorientation` enum value.  @return an instance of hashset`calibrationorientation`.",
             "none",
             "imu not in calibration; no calibration is executing.",
             "calibrating",
             "imu calibration is in progress.",
             "successful",
             "imu calibration succeeded.",
             "failed",
             "imu calibration failed.",
             "unknown",
             "unknown calibration status.",
             "disconnected",
             "the imu sensor is disconnected from the flight controller.",
             "calibrating",
             "the imu sensor is calibrating",
             "calibration_failed",
             "calibrate of the imu sensor failed.",
             "data_exception",
             "the imu sensor has a data exception. calibrate the imu and restart the aircraft. if afterwards the status still  exists, you may need to contact dji for further assistance.",
             "warming_up",
             "the imu sensor is warming up.",
             "in_motion",
             "the imu sensor is not static; the aircraft may not be stable enough to calculate sensor data correctly.",
             "normal_bias",
             "the imu's bias value is normal; the aircraft can safely take off.",
             "medium_bias",
             "the imu's bias value is medium; the aircraft can safely take off.",
             "large_bias",
             "the imu's bias value is large; the aircraft cannot take off. imu calibration is needed.",
             "unknown",
             "the imu sensor's status is unknown.",
             "setvisiondetectionstateupdatedcallback",
             "set intelligent flight assistant state update callback.  @param callback the execution callback with the execution result returned.",
             "setvisioncontrolstateupdatedcallback",
             "callback function that updates aircraft state. controlled by the intelligent flight assistant.  @param callback the execution callback with the execution result returned.",
             "setfaceawarestatecallback",
             "starts to receive the update of faceawarestate.  @param callback faceawarestate update callback.",
             "setpalmcontrolstatecallback",
             "starts to receive the update of palmcontrolstate.  @param callback palmcontrolstate update callback.",
             "setcollisionavoidanceenabled",
             "enable collision avoidance. when enabled, the aircraft will stop and try to go around detected obstacles.  @param enable a boolean value. @param callback completion callback.",
             "getcollisionavoidanceenabled",
             "gets collision avoidance status (enabled/disabled).  @param callback the execution callback with the returned value(s).",
             "setupwardsavoidanceenabled",
             "enables/disables upward avoidance. when the inspire 2's upwards-facing infrared sensor detects an obstacle, the  aircraft will slow its ascent and maintain a minimum distance of 1 meter from the obstacle. the  sensor has a 10-degree horizontal field of view (fov) and 10-degree vertical fov. the maximum detection distance is 5m.  @param enabled `true` to enable the upwards avoidance. @param callback completion callback that receives the setter result.",
             "getupwardsavoidanceenabled",
             "gets upward avoidance status (enabled/disabled).  @param callback the execution callback with the returned value(s).",
             "setactiveobstacleavoidanceenabled",
             "enables/disables active obstacle avoidance. when enabled, and an obstacle is moving toward the aircraft,  the aircraft will actively fly away from it. if while actively avoiding a moving obstacle, the aircraft  detects another obstacle in its avoidance path, it will  stop. `setcollisionavoidanceenabled` must also be enabled.  @param enabled `true` to enable the active avoidance. @param callback completion callback that receives the setter result.",
             "getactiveobstacleavoidanceenabled",
             "gets active obstacle avoidance status (enabled/disabled).  @param callback the execution callback with the returned value(s).",
             "setadvancedgesturecontrolenabled",
             "enables/disables advanced gesture control. when enabled, users can use palmlaunch, palmland, palmcontrol  and beckon. when enabled, the various modes can be initiated by the user. in summary:  - aircraft starts idle on users hand  - user double clicks the power button and  faceaware becomes active  - once a face is recogized, palmlaunch will happen  -  when flying, the user can control the aircraft position by moving their palm  - if the  user waves one hand, the aircraft will fly up and backwards and start following the user.  - if the user waves both hands, the aircraft will execute beckon and return to the user.  it is only supported by spark.  @param enabled `true` to enable advanced gesture control. @param callback the `completion callback` with the returned execution result.",
             "getadvancedgesturecontrolenabled",
             "gets if advanced gesture control is enabled. when enabled, users can use palmlaunch, palmland,  palmcontrol and beckon. it is only supported by spark.  @param callback the `completion callback` with the returned execution result.",
             "setvisionassistedpositioningenabled",
             "enable vision positioning. vision positioning is used to augment gps to improve location accuracy when hovering and improve velocity calculation when flying.  @param enabled `true` to enable vision assisted positioning. @param callback completion callback.",
             "getvisionassistedpositioningenabled",
             "gets vision positioning status (enabled/disabled).  @param callback the execution callback with the returned value(s).",
             "setmultipleflightmodeenabled",
             "enables/disables multiple-flight mode. when multiple-flight mode is enabled, user can change  the aircraft's mode to p/f/a/s mode by toggling the switch on the remote controller. if it is  disabled, the aircraft will be in p mode.  @param enabled `true` to enable multiple-flight mode. @param callback completion block that receives the execution result.",
             "getmultipleflightmodeenabled",
             "gets if multiple-flight mode is enabled. when multiple-flight mode is enabled, user can change  the aircraft's mode to p/f/a/s mode by toggling the switch on the remote controller. if it is  disabled, the aircraft will be in p mode.  @param callback completion callback that receives the execution result.",
             "setnovicemodeenabled",
             "enables novice mode. when novice mode is enabled, the flight speed will become slower and less  responsive handling. for phantom 4 pro, enabling novice mode will enable the infrared time-of-flight  (tof) sensors on the left and right.  @param enabled `true` to enable novice mode. @param callback completion block that receives the execution result.",
             "getnovicemodeenabled",
             "gets if novice mode is enabled or not. if novice mode is enabled, the flight speed is slower and less  responsive handling. for phantom 4 pro, enabling novice mode will enable the infrared time-of-flight  (tof) sensors on the left and right.  @param callback callback to receive the result.",
             "setprecisionlandingenabled",
             "enables/disables precision landing. when enabled, the aircraft will record its take-off location visually  (as well as with gps). on a return-to-home action the aircraft will attempt to perform a precision landing  using the additional visual information. this method only works on a return-to-home action when the home  location is successfully recorded during take-off, and not changed during flight.  @param enabled `true` to enable the precise landing. @param callback callback block that receives the setter result.",
             "getprecisionlandingenabled",
             "gets precision landing status (enabled/disabled).  @param callback the execution callback with the returned value(s).",
             "setlandingprotectionenabled",
             "enables/disables landing protection. during auto-landing, the downwards facing vision sensor will check if  the ground surface is flat enough for a safe landing. if it is not and landing protection is enabled, then  landing will abort and need to be manually performed by the user.  @param enabled `true` to enable the landing protection. @param callback <<>android:callback> that receives the setter result.",
             "getlandingprotectionenabled",
             "gets landing protection status (enabled/disabled).  @param callback the execution callback with the returned value(s).",
             "callback",
             "callback to update the faceawarestate.",
             "callback",
             "callback to update the palmcontrolstate.",
             "visiondetectionstate",
             "this class gives state information about the product's vision sensors used for obstacle detection. the two  types of sensors used are dual camera sensors operating in the visible spectrum (dual-camera sensor) and  infrared time of flight (tof) sensors. note, inspire 2's upwards-facing infrared tof sensor is not returned  in this state. it is accessed through `visioncontrolstate`.",
             "visioncontrolstate",
             "this class gives the aircraft's state, which is controlled by the intelligent flight assistant.",
             "getstate",
             "the current state/position of the landing gear.  @return an enum value of `landinggearstate`",
             "getmode",
             "the current mode of the landing gear.  @return an enum value of `landinggearmode`",
             "setautomaticmovementenabled",
             "turns on/off self-adaptive landing gear. when turned on, landing gear will automatically lower  when aircraft is 0.5m above the ground. after take-off, landing gear will automatically rise when  aircraft reaches 0.5m above the ground. if self-adaptive landing gear is turned off, aircraft  will not automatically raise or lower its landing gear.  @param enabled yes if automatic movement is enabled. @param callback asynchronous execution result.",
             "getautomaticmovementenabled",
             "gets self-adaptive landing gear state (on/off). when turned on, landing gear will automatically lower  when aircraft is 0.5m above the ground. after take- off, landing gear will automatically rise when  aircraft reaches 0.5m above the ground. if self-adaptive landing gear is turned off, aircraft  will not automatically raise or lower its landing gear.  @param callback callback to receive the result.",
             "entertransportmode",
             "enters transport mode, moving the landing gear to its optimal position for transportation. note that if the gimbal is not removed, or the ground is not flat, entering transport mode will fail.  @param callback the execution callback with the execution result returned.",
             "exittransportmode",
             "exits transport mode. note that if the ground is not flat, exit transport mode will fail.  @param callback the execution callback with the execution result returned.",
             "retract",
             "retracts the landing gear. should only be used when `getmode`  is `manual`. for matrice 600 and matrice 600 pro, landing gear  cannot be controlled through the sdk, only automatically by the aircraft or manually by the remote controller.  @param callback the execution callback with the execution result returned.",
             "deploy",
             "deploys landing gear. should only be used when `getmode`  is `manual`. for matrice 600 and matrice 600 pro, the landing gear cannot  be controlled through the sdk, only automatically by the aircraft or manually by the remote controller.  @param callback the execution callback with the execution result returned.",
             "landinggearstate",
             "current state of landing gear.",
             "unknown",
             "landing gear is in unknown state. this will be returned if the aircraft can't get the landing gear status.",
             "deployed",
             "landing gear is fully deployed (ready for landing)",
             "retracted",
             "landing gear is fully retracted (ready for flying).",
             "deploying",
             "landing gear is deploying (getting ready for landing).",
             "retracting",
             "landing gear is retracting (getting ready for flying).",
             "stopped",
             "landing gear is stopped.",
             "landinggearmode",
             "current mode of the landing gear.",
             "manual",
             "landing gear can be deployed and retracted through function calls.",
             "transport",
             "landing gear is in transport mode (either it is moving into, moving out of, or stopped in transport position).",
             "auto",
             "landing gear automatically transitions between deployed and retracted depending on altitude. during take-off,  the transition point is 1.2m above ground. after take-off (during flight or when landing), the transition point  is 0.5m above ground.",
             "unknown",
             "landing gear is in an unknown mode.",
             "setstatecallback",
             "set rtk state update callback.  @param callback the execution callback with the execution result returned.",
             "setrtkenabled",
             "enables rtk positioning. disable rtk when in poor signal environments, where incorrect positioning information  might make controlling the aircraft difficult. can only be set when the motors are off.  @param enabled `true` to enable rtk positioning. @param callback the execution callback with the execution result returned.",
             "isconnected",
             "`true` if rtk is connected to the aircraft.  @return a boolean value.",
             "onupdate",
             "callback function that updates the rtk state data.  @param state current state of the rtk.",
             "rtkstate",
             "this class holds the state of the rtk system, including position, positioning solution, and receiver information.",
             "isrtkenabled",
             "returns state of rtk (enabled/disabled).  @return a boolean value.",
             "isrtkbeingused",
             "whether the rtk is being used.  @return a boolean value.",
             "getpositioningsolution",
             "the positioning solution describes the method used to determine positioning. the solutions vary in accuracy, from `none` (no positioning) to `fixed_point`.  @return an enum value of `positioningsolution`",
             "geterror",
             "gets rtk errors, if any. returns `null` when rtk is normal.  @return an instance of `djierror`.",
             "isheadingvalid",
             "`true` if heading value is valid. heading is invalid when a satellite fix hasn't been obtained.  @return a boolean value.",
             "getheading",
             "heading relative to true north as defined by the vector formed from antenna 2 to antenna 1 on the mobile station.  unit is degrees.  @return a float value.",
             "getmobilestationlocation",
             "location information of the mobile station's receiver 1 antenna. this location information is relative to the  base station location and is in degrees.  @return an instance of `locationcoordinate2d`.",
             "getmobilestationaltitude",
             "altitude of the mobile station's receiver 1 antenna relative, to the base station location. units are meters.  @return a float value.",
             "getbasestationlocation",
             "base station's location coordinates, in degrees.  @return an instance of `locationcoordinate2d`.",
             "getbasestationaltitude",
             "altitude of the base station above sea level, in meters.  @return a float value.",
             "getmobilestationreceiver1gpsinfo",
             "mobile station (aircraft) receiver 1 gps info.  @return an instance of `receiverinfo`",
             "getmobilestationreceiver1beidouinfo",
             "mobile station (aircraft) receiver 1 beidou info.  @return an instance of `receiverinfo`",
             "getmobilestationreceiver1glonassinfo",
             "mobile station (aircraft) receiver 1 glonass info.  @return an instance of `receiverinfo`",
             "getmobilestationreceiver2gpsinfo",
             "mobile station (aircraft) receiver 2 gps info.  @return an instance of `receiverinfo`",
             "getmobilestationreceiver2beidouinfo",
             "mobile station (aircraft) receiver 2 beidou info.  @return an instance of `receiverinfo`",
             "getmobilestationreceiver2glonassinfo",
             "mobile station (aircraft) receiver 2 glonass info.  @return an instance of `receiverinfo`",
             "getbasestationreceivergpsinfo",
             "base station receiver gps info.  @return an instance of `receiverinfo`",
             "getbasestationreceiverbeidouinfo",
             "base station receiver beidou info.  @return an instance of `receiverinfo`",
             "getbasestationreceiverglonassinfo",
             "base station receiver glonass info.  @return an instance of `receiverinfo`",
             "callback",
             "this interface provides a delegate method to update the rtk state.",
             "positioningsolution",
             "this enum defines the positioning solution currently being used.",
             "none",
             "no positioning solution. this can be caused by an insufficient number of satellites in view, insufficient  time to lock onto the satellites, or a loss in communication link between the mobile station and base station.",
             "single_point",
             "rtk point positioning.",
             "float",
             "float solution positioning.",
             "fixed_point",
             "fixed-point solution positioning (most accurate).",
             "receiverinfo",
             "single rtk receiver information. each receiver is connected to a single antenna.",
             "isconstellationsupported",
             "`true` if constellation is supported. the european and american versions of rtk support  gps and glonass, while the asia pacific version supports gps and beidou.  @return a boolean value.",
             "getsatellitecount",
             "valid satellite count for this receiver.  @return an int value.",
             "setstatecallback",
             "sets the callback function that updates the state data received from an aircraft in simulation mode.  @param callback the execution callback with the execution result returned.",
             "issimulatoractive",
             "`true` if the simulator is started.  @return a boolean value.",
             "start",
             "start simulator. will result in error if simulation is already started.  @param data the data with which to initialize the simulator. @param callback the execution callback with the execution result returned.",
             "stop",
             "stop the simulator.  @param callback the execution callback with the execution result returned.",
             "setflyzonelimitationenabled",
             "enable/disable the fly zone system in the simulator. by default, fly zone is disabled in the simulator.  rebooting the aircraft is required for the settings to take effect.  @param enabled `true` to enable fly zone in the simulator. @param callback the execution callback with the returned value(s).",
             "getflyzonelimitationenabled",
             "gets fly zone system simulator status (enabled/disabled). by default, fly zone is disabled in the simulator.  @param callback the execution callback with the returned value(s).",
             "initializationdata",
             "data to initialize the simulator with.",
             "simulatorstate",
             "aircraft simulator state data.",
             "callback",
             "simulator's callback interface. when the sdk receives the `simulatorstate`, the override  method will be called.",
             "onupdate",
             "updates the simulator's current state.  @param state an instance of `simulatorstate`.",
             "aremotorson",
             "true if motors are on in the simulator.  @return a boolean value.",
             "isflying",
             "true if aircraft is flying in the simulator.  @return a boolean value.",
             "getlocation",
             "simulated aircraft location.  @return location object.",
             "getpositionx",
             "gets east-west distance from initial simulator location, where east is positive, and  north-east-down coordinate system is used.  @return a float value.",
             "getpositiony",
             "gets north-south distance from initial simulator location, where north is positive, and  north-east-down coordinate system is used.  @return a float value.",
             "getpositionz",
             "gets vertical distance from initial simulator location. the value should be negative if the height of aircraft is higher  than initial home point's height.  @return a float value.",
             "getpitch",
             "simulated aircraft pitch with range [-30, 30] degrees.  @return a float value.",
             "getroll",
             "simulated aircraft roll with range [-30, 30] degrees.  @return a float value.",
             "getyaw",
             "simulated aircraft yaw with range [-180, 180] degrees.  @return a float value.",
             "createinstance",
             "create the initialization data for the simulator.  @param location simulator coordinate latitude and longitude in degrees. @param updatefrequency aircraft simulator state push frequency in hz with range [2, 150]. a setting of 10 hz will result in delegate method being called, 10 times per second. @param satellitecount the initial number of gps satellites with range [0, 20].  @return initialization data object.",
             "getupdatefrequency",
             "aircraft simulator state push frequency in hz with range [2, 150]. a setting of 10 hz will result in  `onupdate` being called 10 times per second.  @return frequency.",
             "getsatellitecount",
             "the initial number of gnss satellites with range [0, 20]  @return number of satellites.",
             "getlocation",
             "location to begin simulation.  @return location object",
             "callback",
             "this protocol provides an interface to update the intelligent flight assistant vision control state.",
             "onupdate",
             "callback function that updates the aircraft state controlled by the intelligent flight assistant.  @param state the vision control state.",
             "onupdate",
             "callback function that updates the faceaware state. when starting a palmlaunch, the aircraft will  start faceaware. if faceaware activates successfully, the motors will start spinning and the  aircraft will hover after releasing it.  @param state the face sware state.",
             "onupdate",
             "callback function that updates the palm control state.  @param state the palm control state.",
             "isbraking",
             "`true` if the aircraft is braking automatically to avoid collision.  @return a boolean value.",
             "isavoidingactiveobstaclecollision",
             "`true` if the aircraft is avoiding collision from an obstacle moving towards the aircraft.  @return a boolean value.",
             "isascentlimitedbyobstacle",
             "yes if the aircraft will not ascend further because of an obstacle detected within 1m above it.  @return a boolean value.",
             "isperformingprecisionlanding",
             "yes if the aircraft is landing precisely.  @return a boolean value.",
             "landingprotectionstate",
             "gets the aircraft's landing protection state. this status is valid when landing protection is enabled.  @return an enum value of `visionlandingprotectionstate`,  which will show the state of landing protection.",
             "visionlandingprotectionstate",
             "landing protection status returned by the downward vision sensor.",
             "none",
             "the aircraft is not executing auto-landing or the downward vision sensor has not started to analyze the ground yet.",
             "analyzing",
             "the downward vision sensor is analyzing the ground at the landing zone.",
             "analysis_failed",
             "the downward vision sensor's analysis failed. either the auto-landing can be attempted again, or the user needs  to land the aircraft manually.",
             "safe_to_land",
             "the ground is flat and the aircraft is safe to land automatically.",
             "not_safe_to_land",
             "landing area is not flat enough to be considered safe for landing. the aircraft should be moved to an area that  is more flat and an auto-land should be attempted again or the user should land the aircraft manually.",
             "unknown",
             "unknown.",
             "callback",
             "this protocol provides an interface to update the intelligent flight assistant current state.",
             "onupdate",
             "callback function that updates the vision detection state. the frequency of this method is 10hz.  @param state the state of vision sensor.",
             "issensorbeingused",
             "`true` if the vision sensor is working.  @return a boolean value.",
             "getsystemwarning",
             "distance warning level between the obstacle and the aircraft. this is a combination of warning levels from each sector.  @return an enum value of `visionsystemwarning`",
             "getposition",
             "the vision sensor's position on the aircraft. for phantom 4 pro, there are 4 vision sensors on the aircraft.  the sensors on the nose and tail are dual- camera sensors. the sensors on the left and right are infrared  time-of-flight (tof) sensors.  @return an enum value of `visionsensorposition`",
             "getobstacledistanceinmeters",
             "the distance to the closest detected obstacle, in meters. it is only used when the sensor is an infrared tof  sensor. the valid range is [0.3, 5.0]. phantom 4 pro has two infrared sensors on its left and right. both sensors have a 70-degree horizontal field of view (fov) and 20-degree vertical fov. the value is always 0.0 if the sensor is a dual-camera sensor or the sensor is not working properly.  @return a double value.",
             "getdetectionsectors",
             "the vision system can see in front of the aircraft with a 70 degree horizontal field of view (fov) and 55-degree  vertical fov for the phantom 4. the horizontal fov is split into four equal sectors and this array contains the distance and warning information for each sector. for phantom 4, the horizontal fov is separated into 4 sectors.  @return an instance of list<djivisiondetectionsector>. ",
             "obstacledetectionsector",
             "the vision system can see in front of the aircraft with a 60 degree horizontal field of view (fov) and 55 degree  vertical fov. the horizontal fov is split into four equal sectors, and this class gives the distance and warning  level for one sector.",
             "visionsensorposition",
             "position of the sensor on the aircraft.",
             "nose",
             "the sensor is on the front or nose of the aircraft.",
             "tail",
             "the sensor is on the back or tail of the aircraft.",
             "right",
             "the sensor is on the right or starboard side of the aircraft.",
             "left",
             "the sensor is on the left or port side of the aircraft.",
             "unknown",
             "unknown.",
             "visionsystemwarning",
             "distance warning returned by the front vision system. warning level 4 is the most serious level.",
             "invalid",
             "the warning is invalid. the front vision system cannot determine depth of the scene in front of it.",
             "safe",
             "the distance between the obstacle detected by the vision system and the aircraft is safe (over 2 meters).",
             "dangerous",
             "the distance between the obstacle detected by the vision system and the aircraft is dangerous (less than 2 meters).",
             "unknown",
             "the distance warning is unknown. this warning is returned when an exception occurs.",
             "getwarninglevel",
             "the warning level based on distance.  @return an enum value of `obstacledetectionsectorwarning`",
             "getobstacledistanceinmeters",
             "the detected obstacle distance to the aircraft in meters.  @return a float value.",
             "obstacledetectionsectorwarning",
             "distance warning returned by each sector of the front vision system. warning level 4 is the most serious level.",
             "invalid",
             "the warning level is invalid. the sector cannot determine depth of the scene in front of it.",
             "level_1",
             "the distance between the obstacle detected by the sector and the aircraft is over 4 meters.",
             "level_2",
             "the distance between the obstacle detected by the sector and the aircraft is between 3 - 4 meters.",
             "level_3",
             "the distance between the obstacle detected by the sector and the aircraft is between 2 - 3 meters.",
             "level_4",
             "the distance between the obstacle detected by the sector and the aircraft is less than 2 meters.",
             "unknown",
             "the distance warning is unknown. this warning is returned when an exception occurs.",
             "faceawarestate",
             "faceaware states. faceaware is a step of palmlaunch. tapping the battery battery power  button twice, faceaware will start to work automatically. if faceaware is activated successfully,  the aircraft will takeoff from the palm.",
             "idle",
             "the aircraft is not executing faceaware.",
             "activating",
             "the aircraft is in the process of detecting a human face in front of the camera.",
             "activated",
             "faceaware has been activated. the aircraft will beep twice and the motors will start spinning.",
             "failed_no_face_detected",
             "faceaware has failed to activate because no face was detected.",
             "unknown",
             "unknown.",
             "palmcontrolstate",
             "states of palmcontrol.",
             "initializing",
             "the aircraft is initializing for palmcontrol.",
             "recognizing_palm",
             "the aircraft is recognizing the palm.",
             "starting_follow",
             "the aircraft is moving into position for the palmcontrol follow command. in this state, the  aircraft is ascending and flying backward to a position that is 3m horizontally away from  the user and 2.3m above the ground. once it has reached this position, the state will move  to `following` and the aircraft will then follow the user. the  follow command can be initiated by raising one arm and quickly waving your hand at the camera.",
             "following",
             "the aircraft is currently following the user. to reach this state, the user first raises  one arm and quickly waves their hand at the aircraft's camera. the aircraft will then move  into position (3m from the user and 2.3m above the ground), and reach this state.",
             "adjusting_position",
             "the aircraft's position is being adjusted by the moving palm.",
             "palm_control_stopped",
             "palmcontrol is stopped. palmcontrol can be stopped by moving the sticks on the physical remote  controller or sending commands through `mobileremotecontroller` when the physical remote  controller is absent.",
             "unknown",
             "unknown.",
             "onvaluechange",
             "the callback, called every time the value behind a key is updated.  @param oldvalue the old value. `null` if no value was present before. @param newvalue the new value. `null` if the stored values are being flushed.",
             "getvalue",
             "returns the latest known value if available for the key.  does not pull it from the product if unavailable.  @param key an instance of `djikey`.  @return the value associated with the key.",
             "getvalue",
             "performs a get on a gettable key, pulling the information from the product if necessary.  @param key a valid gettable key @param callback a valid get callback.",
             "setvalue",
             "performs a set on a settable key, changing attributes on the  connected product.  @param value a value object relevant to the given key @param key a valid settable key @param callback a set callback.",
             "performaction",
             "performs an action on an actionable key.  @param key a valid actionable key @param arguments optional arguments relevant to the specific key @param callback an action callback.",
             "addlistener",
             "subscribes the listener object to all changes of value on the given  key.  @param key a valid value-based key (get, set and/or action) @param listener a valid object to hold the subscription",
             "removelistener",
             "stops the subscription to updates of a specific key value for a  specific listener. does not affect other listeners subscribing to  this key or other subscriptions of the `listener`.  @param listener the listener object passed at the moment of calling startlistening.",
             "create",
             "creates an airlink key.  @param paramkey a valid paramkey  @return airlink key",
             "createwifilinkkey",
             "creates a wifilink key.  @param paramkey a valid paramkey  @return wifilink key",
             "createlightbridgelinkkey",
             "creates a lblink key.  @param paramkey a valid paramkey  @return lblink key",
             "createocusynclinkkey",
             "creates an ocusynclink key.  @param paramkey a valid paramkey  @return ocusynclink key",
             "create",
             "creates a battery key.  @param paramkey a valid paramkey  @return battery key",
             "create",
             "creates a battery key at selected index. use this when the product supports multiple batteries.  @param paramkey a valid paramkey @param componentindex the index of the battery component.  @return battery key",
             "create",
             "creates a camera key.  @param paramkey a valid paramkey  @return camera key",
             "create",
             "creates a camera key at selected index. use this when the product supports multiple cameras.  @param paramkey a valid paramkey @param componentindex the index of the camera component.  @return camera key",
             "create",
             "creates a flightcontroller key.  @param paramkey a valid paramkey  @return flightcontroller key",
             "createflightassistantkey",
             "creates a flightassistant key.  @param paramkey a valid paramkey  @return flightassistant key",
             "create",
             "creates a gimbal key.  @param paramkey a valid paramkey  @return gimbal key",
             "create",
             "creates a product key.  @param paramkey a valid paramkey  @return product key",
             "create",
             "creates a remotecontrollerkey key.  @param paramkey a valid paramkey  @return remote controller key",
             "create",
             "creates a handheldcontroller key.  @param paramkey a valid paramkey  @return handheld controller key",
             "djikey",
             "base class of all keys to be used with the keyed interface and the `keymanager`.",
             "batterykey",
             "`batterykey` is a key dedicated to accessing battery related attributes.",
             "camerakey",
             "`camerakey` is an object dedicated to providing access to camera  related attributes.",
             "flightcontrollerkey",
             "`flightcontrollerkey` provides dedicated access to flight  controller attributes.",
             "gimbalkey",
             "`gimbalkey` is an object providing access to gimbal attributes.",
             "productkey",
             "`productkey` represent keys which are global to the whole product.",
             "remotecontrollerkey",
             "`remotecontrollerkey` provides dedicated access to remote controller attributes.",
             "handheldcontrollerkey",
             "`handheldcontrollerkey` provides dedicated access to all handheld  controller attributes.",
             "airlinkkey",
             "`airlinkkey` provides dedicated access to all communication  to the product attributes.",
             "getcallback",
             "callback called when performing a get on a key.",
             "onsuccess",
             "invoked when getting process is done successfully.  @param value the value returned back.",
             "onfailure",
             "invoked when getting process has failed.  @param error the error that occurred.",
             "setcallback",
             "callback called when performing a set on a key.",
             "onsuccess",
             "invoked when setting process is done successfully.",
             "onfailure",
             "invoked when setting process has failed.  @param error the error that occurred.",
             "actioncallback",
             "callback called when performing an action on a key.",
             "onsuccess",
             "invoked when the action is done successfully.",
             "onfailure",
             "invoked when the action has failed.  @param error the error that occurred.",
             "keylistener",
             "interface to check if the value behind a key is updated.",
             "isgesturemodeenabled",
             "`true` if gesture mode is enabled. value is undefined if  the `getcurrentstate` is one of the following:  - `not_support`  - `disconnected`   - `recovering`  @return `true` if the product supports gesture mode. ",
             "addlistener",
             "add a listener to listen to events in the activetrack operator.  @param listener listener that is interested in the activetrack mission operator events.",
             "removelistener",
             "removes listener. the listener will not receive any update after  calling this method.  @param listener listener to be removed.",
             "removealllisteners",
             "remove all listeners.",
             "setgesturemodeenabled",
             "enables/disables gesture mode.  - a human subject can be automatically  detected if they are moving a little (instead of requiring a defining rectangle)  - the human subject can accept the confirmation to track them by waving their arms.  - the tracked human can make the camera shoot a photo by showing a rectangle with their thumbs and index fingers to the aircraft.  gesture mode can only be enabled  when the aircraft is flying but not tracking a target. the `getcurrentstate` should be one of the following:  - `idle`  - `cannot_start` after the gesture mode is enabled, `getcurrentstate` will become `detecting_human`.  gesture mode can be disabled when `getcurrentstate`  is not any of the following:  - `unknown`  - `disconnected`  - `recovering`  - ``djiactivetrackmissionstate_notsupported`  if the aircraft is already tracking a target, disabling gesture mode will  stop the activetrack mission.  @param enabled `true` to enable gesture mode. @param callback the execution callback with the returned execution result.",
             "canstarttracking",
             "checks if the operator can start the mission.  @param mission an activetrack mission.  @return the possible error if the operator tries to start the mission.",
             "starttracking",
             "starts to execute a activetrack mission. it can only be called when the `getcurrentstate` is  `idle`. if a mission with  `trace` or  `profile` is started  successfully, the `getcurrentstate`  will become one of the following:  - `waiting_for_confirmation`  - `cannot_confirm`  if a mission with  `spotlight` or  `spotlight_pro` is started  successfully, the `getcurrentstate` will  become `only_camera_following`.  @param mission the activetrack mission to check. @param callback the execution callback with the returned execution result.",
             "stoptracking",
             "stops the executing mission. it can only be called when the  `getcurrentstate` is one of the following:  - `waiting_for_confirmation`  - `cannot_confirm`  - `aircraft_following`  - `only_camera_following`  - `finding_tracked_target`  after a mission is  stopped successfully, `getcurrentstate` will become  `idle` or  `detecting_human` if gesture mode is enabled.  @param callback the execution callback with the returned execution result.",
             "acceptconfirmation",
             "when the vision system is not sure the tracking rectangle is around the user's desired target, it will need confirmation before starting to fly relative to the target. the vision system will need confirmation when  `getcurrentstate` is `idle`.  `gettargetrect` of `activetracktrackingstate` can  be used to show the user the rectangle the vision system is using. if the user  agrees the rectangle represents the target they want to track, this method can be  called to start flying relative to the target.  @param callback the execution callback with the returned execution result.",
             "rejectconfirmation",
             "rejects the target rectangle from the aircraft.  @param callback the execution callback with the returned execution result.",
             "stopaircraftfollowing",
             "stops the aircraft from following the target and ask for user confirmation again.  it can only be called when the `getcurrentstate` is `aircraft_following`. after it is called successfully,  `getcurrentstate` will become  `waiting_for_confirmation`.  @param callback the execution callback with the returned execution result.",
             "setcircularspeed",
             "setting a non-zero speed starts the aircraft circling the target. speed can be set within the range [-5, 5] m/s where a positive speed is a counter-clockwise movement (when viewing from the top). reverting the speed to 0 m/s ends the circling movement. it can only be called when the `getcurrentstate`  is `aircraft_following` .  @param speed circular speed to set in m/s. @param callback the execution callback with the returned execution result.",
             "getcircularspeed",
             "in an activetrack mission, the aircraft can be set to circle the target while following it. this method returns the circular speed of the aircraft in m/s.  @param callback the execution callback with the returned execution result.",
             "switchmode",
             "changes the activetrack mode on the currently executing mission. it can only  be called when the `getcurrentstate` is one of the  following:  - `waiting_for_confirmation`  - `cannot_confirm`  - `only_camera_following`  - `finding_tracked_target`  if the current state  is `aircraft_following`,  `stopaircraftfollowing` should be called before  switching the mode. also, the activetrack mode can only be changed when gesture  mode is disabled.  @param mode active track mode to change. @param callback the execution callback with the returned execution result.",
             "setrecommendedconfiguration",
             "sets the recommended camera and gimbal configuration that optimizes performance for the activetrack mission in most environments.  @param callback the execution callback with the returned execution result.",
             "setretreatenabled",
             "enables/disable if the aircraft can retreat (fly backwards) when the target comes toward it. when it is disabled, the aircraft will not retreat and instead rotate the gimbal pitch down to track the target as it goes underneath. if the target goes beyond the gimbal's pitch stop, the target will be lost and the mission  will stop.  @param enabled `true` to enable retreat during activetrack mission. @param callback the execution callback with the returned execution result.",
             "getretreatenabled",
             "gets if retreat is enabled in activetrack mission.  @param callback the execution callback with the returned execution result.",
             "activetrackmission",
             "activetrack mission allows an aircraft to track a moving subject using the vision system and without a gps tracker on the subject.",
             "activetrackmissionevent",
             "this class encapsulates all the state changes of the activetrack mission operator.",
             "activetrackmissionoperatorlistener",
             "listener interface used to listen to activetrack mission events.",
             "onupdate",
             "called when an event occurs in the activetrack mission.  @param event an object of `activetrackmissionevent`.",
             "getpreviousstate",
             "the previous state of the operator.  @return an object of `activetrackstate`.",
             "getcurrentstate",
             "the current state of the operator.  @return an object of `activetrackstate`.",
             "gettrackingstate",
             "the tracking state of the executing activetrack mission. it is only valid  when `getcurrentstate` is one of the following:  - `waiting_for_confirmation`  - `cannot_confirm`  - `aircraft_following`  - `only_camera_following`  for the other states, it is `null`.  @return an object of `activetracktrackingstate`.",
             "geterror",
             "the encountered error if there is any. otherwise, it is `null`.  @return an error of `djierror`.",
             "activetrackstate",
             "all the possible states of `activetrackoperator`.",
             "unknown",
             "the state of the operator is unknown. it is the initial state when the  operator is just created.",
             "disconnected",
             "the connection between the mobile device and aircraft is broken.",
             "recovering",
             "the connection between the mobile device and aircraft is recovering.  in this state, the operator is synchronizing the state from the aircraft.",
             "not_support",
             "the connected product does not support activetrack mission.",
             "cannot_start",
             "there is existing error stopping any activetrack mission to start.",
             "detecting_human",
             "gesture mode is enabled and the aircraft is looking for a target automatically. if a target is found, the operator will go to state `waiting_for_confirmation` or `cannot_confirm`.",
             "waiting_for_confirmation",
             "target is found. camera is already tracking the target. in order to make the aircraft follow the target, the confirmation from user is required. once the target is confirmed, the state will become  `aircraft_following`.",
             "cannot_confirm",
             "target is found. camera is already tracking the target but there is an error stopping the aircraft to follow the target. use `getreason`  in `activetracktrackingstate` to check the reason.",
             "aircraft_following",
             "target is found. camera is already tracking the target and the aircraft is following the target.",
             "only_camera_following",
             "the operator is executing an activetrack mission in splotlight mode or spotlight pro mode. the target is found and camera is following the target.",
             "performing_quick_shot",
             "the operator is executing a quickshot activetrack mission.",
             "finding_tracked_target",
             "activetrack is started but the target is lost. the vision system is detecting the previously found target.",
             "idle",
             "the mission is idle.",
             "settargetrect",
             "a bounding box for the target. the rectangle is normalized to [0,1] where (0,0) is the top left of the video preview and (1,1) is the bottom right. the `size` parameter of `cgrect` can be set to 0 to initialize the mission with a point instead of a rectangle. if the mission is initialized with a point, the vision system will try to recognize the object around the point and return the representative  rect in the status delegate.  @param targetrect a rectf object.",
             "gettargetrect",
             "get rectf object that represents target  @return a rectf object.",
             "setmode",
             "activetrack mission mode. defaults to `trace`.  @param mode an enum value of `activetrackmode`.",
             "getquickshotmode",
             "the quickshot mode determines the preset flight path. it is only used when `setmode`  is `quick_shot`.  defaults to `unknown`.  it is only supported by spark.  @return an enum value of `quickshotmode`.",
             "setquickshotmode",
             "set the quickshot mode. it is only supported by spark.  @param quickshotmode an enum value of `quickshotmode`.",
             "activetrackmission",
             "a constructor method for activetrackmission.  @param targetrect the target rect. @param mode an enum value of `activetrackmode`.",
             "getmode",
             "get the current activetrack mode for activetrack mission.  @return an enum value of `activetrackmode`.",
             "gettargetindex",
             "get target index.  @return an int value of target index.",
             "activetracktrackingstate",
             "the tracking state of the activetrack mission that is executing.",
             "getstate",
             "the state of the  being tracked.  @return an enum value of `activetracktargetstate`.",
             "gettype",
             "the type of the target being tracked.  @return an enum value of `activetracktargettype`.",
             "gettargetrect",
             "a rectangle in the live video view image that represents the target being tracked.  the rectangle is normalized to [0,1] where (0,0) is the top left of the video  preview and (1,1) is the bottom right.  @return a rectf object.",
             "gettargetindex",
             "an int value of target index.  @return an int value of target index.",
             "getreason",
             "reason why the target cannot be confirmed by the user. it is useful when `getstate` is  `cannot_confirm`.  otherwise, it is  `none`.  @return an enum value of `activetrackcannotconfirmreason`.",
             "getcompletionpercentage",
             "the progress of the executing quickshot mission. only applicable when  `setmode` is `quick_shot`.  for other modes, it is always 0.  @return an int value of the progress.",
             "activetrackcannotconfirmreason",
             "the reason why user is not allowed to confirm the current target.",
             "none",
             "none.",
             "unstable_target",
             "the target is unstable.",
             "target_too_high",
             "the target position is too high.",
             "blocked_by_obstacle",
             "there is an obstacle between the aircraft and the target that is blocking the target.",
             "gimbal_attitude_error",
             "the gimbal's attitude is pointing to the ground.",
             "target_too_far",
             "the target is too far away from the aircraft.",
             "target_too_close",
             "the target is too close to the aircraft.",
             "aircraft_too_high",
             "the altitude of the aircraft is too high.",
             "aircraft_too_low",
             "the altitude of the aircraft is too low.",
             "obstacle_sensor_error",
             "the obstacle vision sensor has errors.",
             "unknown",
             "unknown.",
             "activetrackmode",
             "different modes of the activetrack mission. defaults to  `trace`, set to  others to enable the feature.",
             "trace",
             "aircraft moves in behind the subject keeping a constant distance to it.  mission with this mode can only be started when the aircraft is flying.",
             "profile",
             "aircraft moves in parallel with the subject in the frame instead of behind. mission with this mode can only be started when the aircraft is flying.",
             "spotlight",
             "in spotlight mode, the aircraft camera automatically follows the subject by rotating the aircraft's yaw, but the aircraft does not automatically keep a constant distance with the subject. mission with this mode can only be started when the aircraft is flying.",
             "spotlight_pro",
             "in spotlight pro mode, the aircraft camera automatically follows the subject by rotating the gimbal's yaw, but the aircraft does not automatically keep a constant  distance with the subject.",
             "quick_shot",
             "in quickshot mode, the aircraft will fly in one of four preset paths (see `quickshotmode`)  while tracking the object recording a video. when a quickshot mission ends, a 10-second video will be  generated. it is only supported by spark.",
             "unknown",
             "the active track mode is unknown.",
             "quickshotmode",
             "quickshot modes, which define different preset path for a quickshot mission.",
             "circle",
             "aircraft will circle around the object it is tracking.",
             "dronie",
             "aircraft will fly backward and upward with camera locked on the object it is tracking.",
             "helix",
             "aircraft will fly upward, spiraling around the object it is tracking.",
             "rocket",
             "the aircraft will ascend with the camera pointing downward on the object it is tracking.",
             "unknown",
             "unknown.",
             "activetracktargettype",
             "the type of activetrack target.",
             "human",
             "the activetrack target is a human being.",
             "car",
             "the activetrack target is a car.",
             "van",
             "the activetrack target is a van.",
             "bike",
             "the activetrack target is a bike.",
             "boat",
             "the activetrack target is a boat.",
             "unknown",
             "the aircraft cannot recognize the target type.",
             "activetracktargetstate",
             "the state of the target being tracked by the aircraft.",
             "cannot_confirm",
             "the aircraft has recognized the target but the user is not allowed to confirm the target. check `getreason` to get  more information.",
             "waiting_for_confirmation",
             "the aircraft has recognized the target and is waiting for user's confirmation. if this state, the aircraft will hover in the current position while the camera is tracking the target (by rotating aircraft's yaw or gimbal's altitude). if user confirms the target, the aircraft will start to following the movement of the target.",
             "tracking_with_high_confidence",
             "the aircraft has recognized the target with high confidence.",
             "tracking_with_low_confidence",
             "the activetrack mission is tracking a target with low confidence. this is only an indication that either the aircraft will soon ask for confirmation that the target is correct, or may loose tracking the target entirely if confidence doesn't improve.",
             "unknown",
             "unknown.",
             "getlatitude",
             "latitude of the mission's initial target location.  @return a double value.",
             "getlongitude",
             "longitude of the mission's initial target location.  @return a double value.",
             "getaltitude",
             "initial altitude (above sea level) in meters.  @return a float value.",
             "getheading",
             "the aircraft's heading during the mission.  @return an enum value of `followmeheading`.",
             "followmeheading",
             "aircraft's heading during a follow me mission.",
             "toward_follow_position",
             "aircraft's heading remains toward the coordinate it is following.",
             "controlled_by_remote_controller",
             "aircraft's heading will be controlled by the remote controller.",
             "getpreviousstate",
             "the previous follow me mission state, check the `followmemissionstate` enum value.  @return an object of `followmemissionstate`.",
             "getcurrentstate",
             "the current follow me mission state, check the `followmemissionstate` enum value.  @return an object of `followmemissionstate`.",
             "getdistancetotarget",
             "get the distance to the target.  @return a float value of the distance to the target.",
             "geterror",
             "the encountered error if there is any. otherwise, it is `null`.  @return an object of `djierror`.",
             "followmemissionstate",
             "all the possible state of `followmemissionoperator`.",
             "unknown",
             "the state of the operator is unknown. it is the initial state when the  operator is just created.",
             "disconnected",
             "the connection between the mobile device and aircraft is lost.",
             "not_supported",
             "the connected product does not support follow me mission.",
             "recovering",
             "the connection between the mobile device and aircraft is built-up. the operator is synchronizing the state from the aircraft.",
             "not_ready",
             "the current state is not ready for uploading a mission.",
             "ready_to_execute",
             "the operator is ready to start a follow me mission.",
             "executing",
             "the mission execution is started successfully.",
             "got_stuck",
             "the mission execution is not executing successfully.",
             "getcurrentstate",
             "the current state of the executing follow me mission.  @return an object of `followmemissionstate`.",
             "addlistener",
             "adds a new listener of all events.  @param listener an interface of `followmemissionoperatorlistener`.",
             "removelistener",
             "removes listener.  @param targetlistener an interface of `followmemissionoperatorlistener`.",
             "removealllisteners",
             "remove all listeners.",
             "startmission",
             "starts to execute a follow me mission. it can only be called when the `getcurrentstate` is  `ready_to_execute`. after a mission is started successfully, the `getcurrentstate` will become  `executing`.  @param mission an object of `followmemission`. @param callback the execution callback with the execution result returned.",
             "stopmission",
             "stops the executing mission. it can only be called when the  `getcurrentstate` is  `executing`. after a mission is stopped successfully,  `getcurrentstate` will become  `ready_to_execute`.  @param callback the execution callback with the execution result returned.",
             "updatefollowingtarget",
             "update the follow me mission's target location to follow.  @param location a locationcoordinate2d object. @param callback the execution callback with the execution result returned.",
             "getfollowingtarget",
             "get the following target's coordinate location.  @return a location object of locationcoordinate2d.",
             "followmemissionoperatorlistener",
             "listener interface for follow me mission.",
             "onexecutionupdate",
             "all events during mission execution.  @param event an object of `followmemissionevent`.",
             "onexecutionstart",
             "mission started.",
             "onexecutionfinish",
             "mission finished.  @param error error retrieving the value.",
             "followmemission",
             "the class represents a follow me mission. in a follow me mission, the aircraft is programmed to track and maintain a constant distant relative to some object, such as a person or a moving vehicle. you can use it to make the aircraft follow a gps device, such as a remote controller with a gps signal or a mobile device. it is not supported by mavic pro when using wifi connection. it is not supported by spark.",
             "followmemissionevent",
             "this class encapsulates all the state change of the follow me mission operator.",
             "sethotpoint",
             "sets the coordinate of the hot point.  @param hotpoint a locationcoordinate2d object of hotpoint.",
             "gethotpoint",
             "gets the coordinate of the hot point.  @return a object of `locationcoordinate2d`.",
             "setstartpoint",
             "set aircraft's initial point on the circular flight path when starting the hot point  mission.  @param startpoint an enum value of `hotpointstartpoint`.",
             "getstartpoint",
             "get aircraft's initial point on the circular flight path when starting the hot point  mission.  @return an enum value of `hotpointstartpoint`.",
             "setheading",
             "aircraft's heading while flying around the hot point. it can be pointed toward or  away from the hot point, forward or backward along its flight route, or can be  manually controlled by the remote controller.  @param heading aircraft heading.",
             "getheading",
             "get the aircraft's heading while flying around the hot point. it can be pointed toward or  away from the hot point, forward or backward along its flight route, and can be  controlled by the remote controller.  @return aircraft heading.",
             "setaltitude",
             "sets the altitude of the hot point orbit with a range [5,500] meters.  the altitude is relative to the ground altitude from which the aircraft took off.  @param altitude a double value of altitude to set.",
             "getaltitude",
             "gets the altitude of the hot point orbit with a range [5,500] meters.  the altitude is relative to the ground altitude from which the aircraft took off.  @return a double value of altitude.",
             "setradius",
             "sets the circular flight path radius with which the aircraft will fly around the hotpoint. the value of this property should be in the range  of [`min_radius`, `max_radius`] meters.  @param radius a double value of radius to set.",
             "getradius",
             "gets the circular flight path radius with which the aircraft will fly around the hotpoint. the value of this property should be in the range  of [`min_radius`, `max_radius`] meters.  @return a double value of radius.",
             "setangularvelocity",
             "sets the angular velocity in degrees/s of the aircraft as it orbits the hot point. the default value is 20 degrees/s. the maximum angular velocity allowed is relative to the orbit radius.  @param angularvelocity angular velocity in degrees/s.",
             "getangularvelocity",
             "gets the angular velocity (in degrees/second) of the aircraft as it orbits the hot  point. the default value is 20 degrees/s. the angular velocity is relative to the  orbit radius.  @return a float value of angular velocity.",
             "isclockwise",
             "`true` if the aircraft will move in a clockwise direction around the hot point.  @return a boolean value to check if is clockwise.",
             "setclockwise",
             "set to `true` if the aircraft should move in a clockwise direction around the hot point.  @param clockwise `true` for clockwise direction.",
             "hotpointmission",
             "constructor method for the djihotpointmission.  @param hotpoint location of the hot point. @param altitude altitude of the orbit in meters @param radius radius of the orbit in meters @param angularvelocity angular velocity of the aircraft in degrees/s @param isclockwise `true` if the aircraft should move in a clockwise direction around the hot point. @param startpoint initial location on the orbit to start @param heading aircraft heading during the mission",
             "resetmissionwithdata",
             "reset mission with hotpoint mission data.  @param data an object of `hotpointmission`.",
             "max_radius",
             "maximum radius, in meters, of the circular path the aircraft will fly around the point of interest. currently 500m.",
             "min_radius",
             "minimum radius, in meters, of the circular path the aircraft will fly around the point of interest.",
             "max_altitude",
             "maximum altitude in meters for a hotpoint mission.",
             "min_altitude",
             "minimum altitude in meters for a hotpoint mission.",
             "hotpointstartpoint",
             "aircraft starting point relative to the hot point.",
             "north",
             "start from the north.",
             "south",
             "start from the south.",
             "west",
             "start from the west.",
             "east",
             "start from the east.",
             "nearest",
             "start the circle surrounding the hotpoint at the nearest point on the  circle to the aircraft's current location.",
             "hotpointheading",
             "heading of the aircraft while orbiting the hot point.",
             "along_circle_looking_forwards",
             "heading is in the forward direction of travel along the circular path.",
             "along_circle_looking_backwards",
             "heading is in the backward direction of travel along the circular path.",
             "towards_hot_point",
             "heading is toward the hot point.",
             "away_from_hot_point",
             "heading of the aircraft is looking away from the hot point. it is in the direction of the vector defined from the hot point to the aircraft.",
             "controlled_by_remote_controller",
             "heading is controlled by the remote controller.",
             "using_initial_heading",
             "the heading remains the same as the heading of the aircraft when the mission started.",
             "getcurrentstate",
             "the current state of the executing hotpoint mission executing.  @return the state of the hotpoint mission.",
             "addlistener",
             "adds listener to receive all of the hotpoint mission operator events.  @param listener listener that is interested in the hotpoint mission operator.",
             "removelistener",
             "removes listener.  @param targetlistener listener to be removed.",
             "removealllisteners",
             "remove all listeners from listener pool.",
             "startmission",
             "starts to execute a hotpoint mission. this only be called when  the `getcurrentstate`  is `ready_to_execute`. after a mission is started successfully, the `getcurrentstate` will  become `initial_phase`  or `executing`.  @param mission an object of `hotpointmission`. @param callback the execution callback with the execution result returned.",
             "pause",
             "pauses the executing mission. it can only be called when  the `getcurrentstate` is  `initial_phase` or `executing`.  if this method is called in the `initial_phase` state, the aircraft will  continue flying to the start point but it will not continue to circle  around the  hotpoint until the user resumes the mission. after a mission is paused successfully, the `getcurrentstate` will  become `execution_paused`.  @param callback the execution callback with the execution result returned.",
             "resume",
             "resumes the paused mission. it can only be called when  the `getcurrentstate` is `execution_paused`. after a mission is resumed  successfully, the `getcurrentstate` will  become `initial_phase`  or `executing`.  @param callback the execution callback with the execution result returned.",
             "stop",
             "stops the executing or paused mission. it can only be called when `getcurrentstate` is one of the following:  - `initial_phase`  - `executing`  - `execution_paused`  after a mission is stopped  successfully, `getcurrentstate` will  become `ready_to_execute`.  @param callback the execution callback with the execution result returned.",
             "getexecutingmission",
             "gets the executing mission from the aircraft. it can only be called when `getcurrentstate` is one of the following:  - `initial_phase`  - `executing`  - `execution_paused`  @param mission detailed information of the mission being executed. `setaltitude`  and `setradius` may be different from the initial settings when  starting the mission. it is `null` if there is an error encountered when trying to get  the mission. @param callback the execution callback with the execution result returned.",
             "setangularvelocity",
             "sets angular velocity for the executing mission. it can only be called when `getcurrentstate` is one of the following:  - `initial_phase`  - `executing`  - `execution_paused`  @param angularvelocity angular velocity to set. @param callback the execution callback with the execution result returned.",
             "setradius",
             "sets radius for the executing mission. it can only be called when  the `getcurrentstate` is one of the following:  - `initial_phase`  - `executing`  - `execution_paused`  @param radius radius to set. @param callback the execution callback with the execution result returned.",
             "resetheading",
             "resets aircraft's heading to the direction defined  by `setheading` of `hotpointmission`. it can only be called  when the `getcurrentstate` is one of the following:  - `initial_phase`  - `executing`  - `execution_paused`  @param callback the execution callback with the execution result returned.",
             "maxangularvelocityforradius",
             "returns the maximum supported angular velocity, in degrees/s, for a given hotpoint  mission radius in meters. returns 0 if an unsupported radius is specified.  @param radius hotpoint radius with a range of [5,500] meters. this is used to calculate the  maximum angular velocity.  @return angular velocity in degrees/s.",
             "hotpointmission",
             "this class represents a hotpoint mission. in a hotpoint mission, the aircraft will  repeatedly fly circles of a  constant radius around a specified point called a hot point. the user can control  the aircraft to fly around the hotpoint with a specific radius and altitude. during  execution, the user can also use the physical remote controller to modify its radius  and speed. it is not supported by mavic pro when using wifi connection. it is not  supported by spark.",
             "hotpointmissionoperatorlistener",
             "listener interface for listening to hotpoint mission events.",
             "onexecutionupdate",
             "called when a new hotpoint mission event occurs.  @param event updated event.",
             "onexecutionstart",
             "called when the hotpoint mission starts.",
             "onexecutionfinish",
             "called when the hotpoint mission ends.  @param error used when mission is finishes in an unexpected way.",
             "hotpointmissionevent",
             "this class encapsulates all the state changes of the hotpoint mission operator.",
             "getpreviousstate",
             "the previous state of the operator.  @return an object of `hotpointmissionstate`.",
             "getcurrentstate",
             "the current state of the operator.  @return an object of `hotpointmissionstate`.",
             "getradius",
             "the hotpoint radius in meters of the mission.  if there is no executing mission, it is 0.  @return a float value of radius.",
             "geterror",
             "the encountered error if there is any. otherwise, it is `null`.  @return a object of `djierror`.",
             "hotpointmissionstate",
             "states of `hotpointmissionoperator`.",
             "unknown",
             "the state of the operator is unknown. this is the initial state when the operator has just been created.",
             "disconnected",
             "the connection between the mobile device and aircraft is broken.",
             "recovering",
             "the connection between the mobile device and aircraft is recovering.  at this time, the operator is synchronizing the state from the aircraft.",
             "not_supported",
             "the connected product does not support hotpoint mission.",
             "ready_to_execute",
             "mission is uploaded completely and the aircraft is ready to start the execution.",
             "initial_phase",
             "the aircraft is moving towards the start point of the hotpoint mission.",
             "executing",
             "the execution is started successfully.",
             "execution_paused",
             "hotpoint mission is paused successfully. user can call  `resume` to continue the execution.",
             "isrunning",
             "`true` if the action is running.  @return a boolean value.",
             "takeoffaction",
             "this class represents a take-off action used as an element in a timeline mission. by creating an object of this class and adding it to mission control's timeline,  the aircraft will take-off when the timeline reaches the action.",
             "aircraftyawaction",
             "this class represents an aircraft yaw rotation action to be scheduled on the mission  control timeline. by creating an object of this class and adding it to the timeline,  an aircraft will rotate around yaw by the specified angle with the specified speed  when the timeline reaches the action.",
             "gotoaction",
             "this class represents a go-to action used as an element in a timeline mission. by creating an object of this class and adding it to mission control's timeline, the aircraft will go to a specified location when the timeline reaches the action.",
             "gohomeaction",
             "this class represents a go-home action used as an element in a timeline mission. by creating an object of this class and adding it to mission control's timeline, the aircraft will go home when the timeline reaches the action.",
             "hotpointaction",
             "this class represents a hotpoint action used as an element in a timeline mission. by creating an object of this class and adding it to mission control's timeline,  the aircraft will fly along a portion of a circle centered on a location of interest when the timeline reaches the action.",
             "gimbalattitudeaction",
             "this class represents a gimbal movement action used as an element in a timeline mission. by creating an object of this class and adding it to mission control's timeline,  the camera's gimbal will move to the specified attitude when the timeline reaches the action.",
             "recordvideoaction",
             "this class represents a video recording action used as an element in a timeline mission. by creating an object of this class and adding it to mission control's timeline,  the camera can start or stop video recording when the timeline reaches the action.",
             "shootphotoaction",
             "this class represents a shoot photo action used as an element in a timeline mission. by creating an object of this class and adding it to mission control's timeline,  the camera can shoot a photo when the timeline reaches the action.",
             "aircraftyawaction",
             "initialize with a yaw angle relative to current heading and an angular velocity. the angular velocity has a range of [0, 100] degrees/s and a default value of 20 degrees/s.  @param angle angle in degrees. @param velocity velocity in degrees/s.",
             "aircraftyawactionerror",
             "the error domain used to describe errors produced by the `aircraftyawaction` object.",
             "invalid_rotation_speed",
             "set rotation speed is not within valid range [0, 100].",
             "invalid_angle_value",
             "set angle value is not within valid range [-180, 180].",
             "cannot_run_virtual_stick",
             "aircraft currently in virtual sticks mode.",
             "gimbalattitudeaction",
             "initialize instance with gimbal target attitude.  @param attitude gimbal target attitude.",
             "setcompletiontime",
             "completion time, in seconds, for the gimbal to go to the target attitude  from current attitude. default is 1 second.  @param completiontime a double value of completion time.",
             "getcompletiontime",
             "completion time, in seconds, for the gimbal to go to the target attitude  from current attitude. default is 1 second.  @return time in seconds.",
             "gettargetattitude",
             "target gimbal attitude.  @return a `attitude` object.",
             "gimbalattitudeactionerror",
             "a list of all errors relative to the gimbal attitude action.",
             "yaw_outside_max_capabilities",
             "yaw value passed is beyond the max capabilities of the gimbal.",
             "pitch_outside_max_capabilities",
             "pitch value passed is beyond the max capabilities of the gimbal.",
             "roll_outside_max_capabilities",
             "roll value passed is beyond the max capabilities of the gimbal.",
             "completion_time_invalid",
             "completion time value passed is invalid (less than 0).",
             "setautoconfirmlandingenabled",
             "`true` to enable automatic confirmation during landing. for flight controller firmware  version 3.2.0.0 or above, when the clearance between the aircraft and the ground is less  than 0.3m, the aircraft will pause landing and wait for the user's confirmation to continue.  enabling the auto confirmation, allows the aircraft to continue landing without the user's  confirmation during the timeline execution. for firmware that does not require landing  confirmation, the value is ignored. the default value is `true`.  @param enable enable automatic confirmation during landing.",
             "getautoconfirmlandingenabled",
             "for flight controller firmware version 3.2.0.0 or above, when the clearance between the  aircraft and the ground is less than 0.3m, the aircraft will pause landing and wait for the  user's confirmation to continue. enabling the auto confirmation, allows the aircraft to  continue landing without the user's confirmation during the timeline execution. for firmware that  does not require landing confirmation, the value is ignored. the default value  is `true`.  @return a boolean value.",
             "gotoaction",
             "go to the specified coordinate from the current aircraft position.  @param coordinate target coordinate.",
             "gotoaction",
             "go to the specified altitude (in meters) from the current aircraft position.  @param altitude target altitude in meters.",
             "gotoaction",
             "go to the specified coordinate and altitude (in meters) from the current aircraft position.  @param coordinate target coordinate. @param altitude target altitude in meters.",
             "setflightspeed",
             "flight speed of the aircraft when going to the target location. default is 8 m/s.  @param flightspeed a float value of the flight speed.",
             "getflightspeed",
             "flight speed of the aircraft when going to the target location. default is 8 m/s.  @return a float value of flight speed.",
             "gotoactionerror",
             "the error codes for the `gotoaction`.",
             "invalid_altitude",
             "altitude of the `gotoaction` waypoint mission is not valid, its value should  be in the range [-200, 500].",
             "invalid_coordinate",
             "gps coordinates of the gotoaction waypoint is not valid. latitude value should be in  the range [-90f, 90f] and longitude value should be in the range [-180f, 180f].",
             "invalid_flight_speed",
             "flight speed of the gotoaction waypoint is not valid. value should be in range [2, 15] m/s.",
             "recordvideoaction",
             "initialize instance with video recording duration in seconds.  @param duration time in seconds.",
             "recordvideoaction",
             "initialize instance for start or stop video recording.  @param isstartorstop true is start, false is stop.",
             "recordvideoactionerror",
             "error codes for record video actions.",
             "invalid_duration",
             "duration value is invalid (less than 0).",
             "shootphotoaction",
             "initialize object to shoot a single photo.",
             "shootphotoaction",
             "initialize object to shoot multiple photos.  @param count photo count. @param interval time interval in seconds between shooting photos.",
             "shootphotoactionerror",
             "error codes for `shootphotoaction` specific errors.",
             "invalid_photo_count",
             "invalid value for photo count.",
             "invalid_time_interval",
             "invalid value for time interval.",
             "hotpointaction",
             "initialize with hotpoint mission. the hotpoint action  will automatically stop after one complete orbit (360 degrees).  @param hotpointmission an object of `hotpointmission`.",
             "hotpointaction",
             "initialize with a hotpoint mission and the angular distance the  aircraft should travel within the orbit.  @param mission an object of `hotpointmission`. @param surroundingangle angle in degrees.",
             "setsurroundingangle",
             "the angular distance in degrees the aircraft will travel in the  orbit of the hotpoint. the default is 360 degrees.  @param surroundingangle angle in degrees",
             "gethotpointmission",
             "the hotpoint mission which is associated with this action.  @return a `hotpointmission` object.",
             "getsurroundingangle",
             "the angular distance in degrees the aircraft will travel in the  orbit of the hotpoint. the default is 360 degrees.  @return angle in degrees.",
             "getwaypointmissionoperator",
             "returns the operator for waypoint missions.  @return a waypoint mission operator object.",
             "gethotpointmissionoperator",
             "returns the operator for hotpoint missions.  @return a hotpoint mission operator object.",
             "getfollowmemissionoperator",
             "returns the operator for follow me missions.  @return a follow me mission operator object.",
             "getactivetrackoperator",
             "returns the operator for activetrack missions.  @return an activetrack mission operator object.",
             "gettapflymissionoperator",
             "returns the operator for tapfly missions.  @return a tapfly mission operator object.",
             "getpanoramamissionoperator",
             "returns the operator for panorama missions.  @return a panorama mission operator object.",
             "scheduleelement",
             "adds an element to the end of the timeline.  @param element a `timelineelement` element.  @return the first error if one occurred.",
             "scheduleelements",
             "adds a list of elements to the end of the timeline.  @param elements a list of `timelineelement` elements.  @return the first error if one occurred. ",
             "scheduleelementatindex",
             "insert an element into the timeline at an index.  @param element a `timelineelement` element @param index the element index to insert the new element before.  @return the first error if one occurred.",
             "unscheduleelement",
             "remove element from the timeline. if the same element was used more than once in the  timeline, then the first one will be removed.  @param element a `timelineelement` element that is already in the timeline.",
             "unscheduleelementatindex",
             "removes the element at an index in the timeline.  @param index index of element to remove.",
             "scheduledelementatindex",
             "returns the element at a given index in the timeline.  @param index an element index in the timeline.  @return either a mission, an element or `null` if nothing was at the given index.",
             "scheduledcount",
             "returns the number of elements within the timeline.  @return element count.",
             "unscheduleeverything",
             "clears the timeline, removing all elements.",
             "starttimeline",
             "start timeline execution from the current element index `getcurrenttimelinemarker`.",
             "pausetimeline",
             "pause execution of the timeline, and current element (if pausible). if the current element is not pausible then this method will do nothing.",
             "resumetimeline",
             "resume element and timeline execution.",
             "stoptimeline",
             "stops the execution of the timeline, resets the marker index to 0.",
             "istimelinerunning",
             "`true` if the timeline is running.  @return a boolean value that is `true` if timeline is running.",
             "getcurrenttimelinemarker",
             "tells the index in the timeline array that marks where the timeline is currently at.  changing this value will reposition where the timeline will resume/start work.  @return timeline element index.",
             "setcurrenttimelinemarker",
             "sets the element index within the timeline to start execution.  this value can be set only when a timeline is stopped (not executing or paused).  @param currenttimelinemaker timeline element index.",
             "istimelinepaused",
             "`true` if timeline is paused.  @return `true` if timeline is paused.",
             "getrunningelement",
             "the current element that is running in the timeline. if the timeline is not running, then this is `null`.  @return timeline element",
             "addlistener",
             "adds a listener to all timeline events.  @param listener a listener object.",
             "removelistener",
             "removes the listener from the timeline events listeners pool.  @param listener a previously added listener object.",
             "removealllisteners",
             "removes all listeners from the timeline events listeners pool.",
             "timelineelement",
             "required behavior of elements that run in a timeline.  in addition to implementing this behavior, a timeline element must communicate with mission control to let it know its state. mission control will wait for updates from the timeline element before it itself progresses. refer to `timelineelementfeedback` for the methods mission control exposes for the timeline element to use to communicate.",
             "onevent",
             "listener used to process timeline events.  @param element the timeline element associated with the event, or `null` if the  event is global to the whole timeline (e.g. start, finish the  timeline). @param event event. @param error the optional error if the event was error-related.",
             "listener",
             "listener used to process timeline events.",
             "timelineevent",
             "events that can initiate a call to the mission control listener.",
             "timelineelementfeedback",
             "this protocol defines how the timeline element may contact mission control  to notify it of its own execution. this protocol is not intended to be  implemented by any other object and the use of a protocol is primarily  organizational.",
             "missioncontrolerror",
             "defines all missioncontrol related errors.",
             "triggers",
             "if implemented, mission control loads and activates the triggers for the duration that the timeline element is executing.  @return a list of `trigger` object.",
             "ispausable",
             "`true` if the element can be paused. if `false`, then when the timeline is asked to pause when this element is running, nothing will happen.  @return `true` if the element can be paused.",
             "checkvalidity",
             "returns an error if there is a configuration or parameter error in the element. returns `null` if there is no issue.  @return a `djierror` object.",
             "willrun",
             "if implemented, this is called by mission control right before running the element.",
             "run",
             "starts execution of timeline element. missions adopting this behavior are being run with their respective operators.",
             "pause",
             "pauses the execution of the element. must be implemented if `ispausable` returns `true`.",
             "resume",
             "resumes the execution of the element. must be implemented if `ispausable` returns `true`.",
             "stop",
             "stops execution of the element.",
             "didrun",
             "called after element execution, regardless of whether or not it was successful.",
             "onstart",
             "used by elements to notify mission control of their successful start.  @param element a previously scheduled element. should also be the element running.",
             "onstartwitherror",
             "used by elements to notify mission control of a failure preventing to start.  @param element a previously scheduled element. should also be the element running. @param error a valid error object.",
             "onprogresswitherror",
             "used by elements to notify mission control of a progress in the execution. additional information may be pulled by mission control depending on the element. calling this method with an error means the element is still running and the error did not cause it to stop.  @param element a previously scheduled element. should also be the element running. @param error an optional error if something went wrong.",
             "onpause",
             "used by elements to notify mission control of a successful pausing.  @param element a previously scheduled element. should also be the element running.",
             "onpausewitherror",
             "used by elements to notify mission control of a failure to pause. the element is expected to be still running.  @param element a previously scheduled element. should also be the element running. @param error a valid error object.",
             "onresume",
             "used by elements to notify mission control of a successful resuming of a previously paused element.  @param element a previously scheduled element. should also be the element running.",
             "onresumewitherror",
             "used by elements to notify mission control of a failure to resume. the element is expected to be still paused.  @param element a previously scheduled element. should also be the element running. @param error a valid error object.",
             "onfinishwitherror",
             "used by elements to notify mission control of the end of the execution of it.  @param element a previously scheduled element. should also be the element running. @param error an optional error if the execution end was the result of it.",
             "onstopwitherror",
             "used by elements to notify mission control of a failure to stop the execution of the element. this should only be used to handle error after stoprun is called.  @param element a previously scheduled element. should also be the element running. @param error a valid error object.",
             "not_pausable_or_resumable",
             "unsupported feature error. where possible: this error will be returned by the function for a special feature interface when the feature is not supported by the device.",
             "cannot_schedule_while_running",
             "tried to schedule new element while the timeline was running.",
             "unknown",
             "unknown event type. this is a default value if no other event is matching.",
             "started",
             "timeline successfully started.",
             "start_error",
             "timeline failed to start.",
             "progressed",
             "timeline element progressed.",
             "paused",
             "timeline successfully paused.",
             "pause_error",
             "timeline failed to be paused.",
             "resumed",
             "timeline successfully resumed.",
             "resume_error",
             "timeline failed to resume.",
             "stopped",
             "timeline stopped successfully.",
             "stop_error",
             "timeline failed to stop and is still continuing in its previous state.",
             "finished",
             "timeline completed its execution normally.",
             "isactive",
             "`true` if the trigger is currently active. the trigger is active when the timeline element it is associated with is being executed in the timeline.  @return `true` if active.",
             "setaction",
             "the action to execute. it is up to the trigger's implementation to decide when to call this action. the action should never be called by anything but the trigger. actions can be implemented without using this property, but in addition `notifylistenersofevent` needs to be used to notify any listeners of the trigger that an action was executed.  in future subclasses of this property to be provided, this action  block will be used to give developers control of an action when a  set of criteria has been met. for example, a subclass of this may  be a battery threshold trigger. once the battery passes some threshold developers will be able to define the action they want to trigger.  @param action action to trigger.",
             "start",
             "begins trigger activity including monitoring the criteria required to  trigger the action. when subclassing,  the super class's start</code> method should be called on the first line.",
             "stop",
             "ends all trigger activity including monitoring the criteria required to  trigger the action. when subclassing,  the super class's stop</code> method should be called at the end.",
             "addlistener",
             "adds a listener to all trigger events  @param listener a listener object",
             "removelistener",
             "removes the listener from the listeners pool of all trigger events.  @param listener a previously added listener object.",
             "removealllisteners",
             "removes all listeners from the listeners pool of all trigger events.",
             "notifylistenersofevent",
             "notifies listeners about a trigger event. should be used in subclasses especially after calling the action.  @param event a valid djimissiontriggerevent. @param error an optional error.",
             "action",
             "the type for the block being called when the trigger is triggered.",
             "oncall",
             "call the action.",
             "listener",
             "listener interface for trigger events.",
             "onevent",
             "called when a trigger event occurs.  @param trigger the instance of the trigger. @param event the event type which caused the call. @param error an optional error.",
             "triggerevent",
             "events that may occur during the lifecycle of a mission trigger.",
             "unknown",
             "the default event if no other event matches the situation.",
             "started",
             "the trigger has started to monitor for its triggering criteria",
             "action_triggered",
             "the action block has been called as a result of matching the triggers' criteria",
             "stopped",
             "the trigger no longer monitors data for its triggering criteria",
             "getcurrentstate",
             "the current state of the operator.  @return an object of `panoramamissionstate`.",
             "addlistener",
             "adds listener to receive all events of the panorama mission operator.  @param listener an interface of `panoramamissionoperatorlistener`.",
             "removelistener",
             "removes listener. the listener will not receive any update after calling this method.  @param listener listener to be removed.",
             "removealllisteners",
             "remove all listeners.",
             "setup",
             "sets up the panorama mission with the specific mode. it can only be called  when the `getcurrentstate` is one of the  following:  - `ready_to_setup`  - `ready_to_execute`  if the setup starts  successfully, `getcurrentstate` will become  `setting_up`. normally, it will take seconds to  complete the setup. once setup is completed successfully,  `getcurrentstate` will become  `ready_to_execute`.  @param mode an enum value of `panoramamode`. @param callback the execution callback with the returned execution result.",
             "startmission",
             "starts to execute the mission that has been setup.  it can only be called when  the `getcurrentstate` is `ready_to_execute`.  if the mission is started successfully, the  `getcurrentstate` will become `executing`.  @param callback the execution callback with the returned execution result.",
             "stopmission",
             "stops the executing mission. it can only be called when the  `getcurrentstate` is  `executing`. after a mission is stopped successfully,  `getcurrentstate` will become  `ready_to_execute`.  @param callback the execution callback with the returned execution result.",
             "getrecentpanoramamediafile",
             "retrieves the `mediafile` object for the recently finished panorama  mission.  @param callback the execution callback with the returned execution result.",
             "panoramamissionoperatorlistener",
             "listener interface for panorama mission events.",
             "onexecutionupdate",
             "called when received a new panorama mission event.  @param event an object of `panoramamissionevent`.",
             "panoramamissionevent",
             "this class encapsulates all the state changes of the panorama mission operator.",
             "getpreviousstate",
             "the previous state of the operator.  @return an object of `panoramamissionstate`.",
             "getcurrentstate",
             "the current state of the operator.  @return an object of `panoramamissionstate`.",
             "getexecutionstate",
             "the detailed state of the executing panorama mission. it is only valid when `getcurrentstate` is  `executing`. for the other states, it is `null`.  @return an object of `panoramamissionexecutionstate`.",
             "geterror",
             "the error of djipanoramamissionevent.  @return an object of `djierror`.",
             "panoramamissionstate",
             "panorama mission state.",
             "unknown",
             "the state of the operator is unknown. this is the initial state when the operator  has just been created.",
             "disconnected",
             "the connection between the mobile device and osmo is broken.",
             "not_supported",
             "the connected product does not support panorama mission.",
             "ready_to_setup",
             "the operator is ready to setup a panorama mission.",
             "setting_up",
             "the operator is setting up for a panorama mission.",
             "ready_to_execute",
             "the setup for the panorama mission is complete. the operator is ready to  start the execution.",
             "executing",
             "the operator is executing a panorama mission.",
             "panoramamissionexecutionstate",
             "this class provides the real-time status of an executing panorama mission.",
             "gettotalnumber",
             "the total number of photos that will be shot during the mission. in full circle mode,  the number should be 8. in the half circle mode, the number should be 5.  @return an int value of total shot photo number.",
             "getcurrentshotnumber",
             "the number of photos that have been shot.  @return an int value of current shot photo number.",
             "getcurrentsavednumber",
             "the number of photos that have been saved to sd card.  @return an int value of current saved photo number.",
             "panoramamode",
             "defines options for different types of modes for panorama mission.",
             "full_circle",
             "360 degree panorama mode.",
             "half_circle",
             "180 degree panorama mode. also known as selfie mode.",
             "unknown",
             "unknown mode.",
             "target",
             "the image point from the video feed where the vision system should calculate the flight direction from. the image point is normalized to [0,1] where (0,0) is the top left corner and (1,1) is the bottom right.",
             "tapflymode",
             "tapfly mission mode. defaults to `forward`.  additional modes only supported by the phantom 4 pro.",
             "ishorizontalobstacleavoidanceenabled",
             "`true` to enable horizontal obstacle avoidance.",
             "speed",
             "speed in m/s during tap fly mission.",
             "tapflyexecutionstate",
             "this class provides the detailed state of a tapfly mission that is executing.",
             "getdirection",
             "the direction vector the aircraft is traveling in using the n-e-d  (north-east- down) coordinate system.  @return a vector object.",
             "getimagelocation",
             "the image point from the video feed where the vision system should calculate the flight direction from. the image point is normalized to [0,1] where (0,0) is the top left corner and (1,1) is the bottom right.  @return a pointf object.",
             "getspeed",
             "the real-time speed of the aircraft in m/s.  @return a float value of speed.",
             "getbypassdirection",
             "the direction the aircraft is moving around or bypassing an obstacle in. will be `none` if the aircraft is not executing  an avoidance maneuver.  @return an enum value of `bypassdirection`",
             "getrelativeheading",
             "aircraft's heading relative to the flight direction.  @return a float value of relative heading.",
             "vector",
             "a cartesian vector in 3d space.",
             "getx",
             "x-value of the cartesian vector.  @return a float value of x value.",
             "gety",
             "y-value of the cartesian vector.  @return a float value of y value.",
             "getz",
             "z-value of the cartesian vector.  @return a float value of z value.",
             "bypassdirection",
             "direction aircraft is moving around or bypassing an obstacle in.",
             "none",
             "flying normally, no obstacle to be avoided.",
             "over",
             "avoiding the obstacle by going over the top of it.",
             "left",
             "avoiding the obstacle by going to the left of it.",
             "right",
             "avoiding the obstacle by going to the right of it.",
             "unknown",
             "unknown obstacle avoidance direction",
             "tapflymode",
             "different modes of the tapfly mission. defaults to  `forward`, set to others to enable  the feature.",
             "forward",
             "aircraft will fly towards the target. forward obstacle  sensing system is active.",
             "backward",
             "aircraft will fly in the opposite direction from the target.  backward obstacle sensing system is active.",
             "free",
             "aircraft will fly towards the target. user can control the heading  by remote controller's stick. obstacle sensing systems may fail to  work when aircraft is flying sideward.",
             "unknown",
             "the tapfly mode is unknown.",
             "addlistener",
             "add a listener to listen for all events in the tapfly mission operator.  @param listener listener that is interested in the tapfly mission operator.",
             "removelistener",
             "removes listener. the listener will not receive any updates after calling this method.  @param targetlistener listener to be removed.",
             "removealllisteners",
             "remove all listeners.",
             "setupenvironment",
             "setup environment and provide result in callback  @param callback the execution callback with the returned execution result.",
             "startmission",
             "starts to execute a tapfly mission. it can only be called when  the `getcurrentstate`   is `execution_starting`. if the mission is started successfully,  the `getcurrentstate` will  become `executing`.  @param mission an object of `tapflymission`. @param callback the execution callback with the returned execution result.",
             "stopmission",
             "stops the executing mission. it can only be called when  the `getcurrentstate` is one of the following:  - `executing`  - `execution_paused`  - `execution_resetting`  after a mission is stopped  successfully, `getcurrentstate` will  become `execution_starting`.  @param callback the execution callback with the returned execution result.",
             "resetheading",
             "resets aircraft heading to the flight direction. it can only be used  when `tapflymode` is `free`.  @param callback the execution callback with the returned execution result.",
             "setautoflightspeed",
             "sets auto flight speed for tapfly mission. it can be changed before or during the  execution of a tapfly mission.  @param speed auto flight speed. @param callback the execution callback with the returned execution result.",
             "getautoflightspeed",
             "gets the auto flight speed for tapfly mission in m/s.  @param callback the execution callback with the returned execution result.",
             "sethorizontalobstaclebypassenabled",
             "`true` allows the aircraft to bypass or move around an obstacle by going to  the left or right of the obstacle. if `false`, the aircraft will only  go over an obstacle to avoid it. it can be changed before or during the execution  of a tapfly mission.  @param enabled `true` allows aircraft to bypass or move around an obstacle by going to the left or right. @param callback the execution callback with the returned execution result.",
             "gethorizontalobstaclebypassenabled",
             "`true` allows the aircraft to bypass or move around an obstacle by going to  the left or right of the obstacle. if `false`, the aircraft will only  go over an obstacle to avoid it. it can be changed before or during the execution  of a tapfly mission.  @param callback the execution callback with the returned execution result.",
             "tapflymissionoperatorlistener",
             "listener interface to receive events from the tapfly mission operator.",
             "onupdate",
             "called when a new event has been updated.  @param aggregation an object of `tapflymissionevent`.",
             "tapflymission",
             "a tapfly mission is initialized with a position target from the live video stream. the 3d direction of the coordinate is calculated, and the aircraft  will proceed to fly in that direction. the aircraft can automatically avoid obstacles when the scene is sufficiently illuminated (more than 300 lux but less than 10,000 lux). the aircraft will stop flying in the direction if it reaches its radius limitation, the mission is stopped, the user pulls back on the pitch stick or if it comes to an obstacle it cannot bypass. the remote controller yaw stick can be used to adjust the heading of the aircraft during mission execution, which also adjusts the direction of flight to the new yaw. using any other stick controls will cancel the mission.",
             "tapflymissionevent",
             "this class encapsulates all the state changes of the tapfly mission operator.",
             "getpreviousstate",
             "the previous state of the operator.  @return a object of `tapflymissionstate`.",
             "getcurrentstate",
             "the current state of the operator.  @return a object of `tapflymissionstate`.",
             "getprogressstate",
             "the detailed state of the executing tapfly mission. it is only valid  when `getcurrentstate` is one of the following:  - `executing`  - `execution_paused`  for the other states, it is `null`.  @return a object of `tapflyexecutionstate`.",
             "geterror",
             "the encountered error if any. otherwise, it is `null`.  @return a object of `djierror`.",
             "tapflymissionstate",
             "all the possible states of `tapflymissionoperator`.",
             "unknown",
             "the state of the operator is unknown. this is the initial state when the operator is  first created.",
             "idle",
             "the operator is in idle state",
             "execution_starting",
             "the start execution command has been called but the aircraft hasn't yet acknowledged it has started. no other commands should be  called when in this state. the next state is either disconnected,  executing or readytoexecute.",
             "disconnected",
             "the connection between the mobile device and aircraft is broken.",
             "recovering",
             "the connection between the mobile device and aircraft is recovering.  in this state, the operator is synchronizing the state from the aircraft.",
             "not_support",
             "the connected product does not support tapfly mission.",
             "can_not_start",
             "there is an existing error stopping the tapfly mission to start.",
             "executing",
             "the operator is executing a tapfly mission.",
             "execution_paused",
             "the execution of the tapfly mission is paused. user can pause or resume a tapfly mission by pressing the pause button on the physical remote controller.",
             "execution_resetting",
             "the tapfly mission cannot continue the execution. the execution is being stopped automatically.",
             "waypoint",
             "initiate instance with specific waypoint.  @param latitude the latitude of the waypoint. @param longitude the longitude of the waypoint. @param altitude the altitude of the waypoint.",
             "coordinate",
             "waypoint coordinate latitude and longitude in degrees.",
             "altitude",
             "altitude of the aircraft in meters when it reaches waypoint. the altitude of the aircraft is relative to  the ground at the take-off location, has a range of [-200,500], and should not be larger than the  aircraft's maximum altitude. if two adjacent waypoints have different altitudes, the altitude will  gradually change as the aircraft flys between waypoints.",
             "heading",
             "the heading to which the aircraft will rotate by the time it reaches the waypoint. the aircraft heading  will gradually change between two waypoints with different headings if the waypoint  mission's `getheadingmode` is set  to `using_waypoint_heading`. a heading has a range of  [-180, 180] degrees, where 0 represents true north.",
             "cornerradiusinmeters",
             "corner radius of the waypoint. when the flight path mode  is `curved` the flight path near a waypoint will be  a curve (rounded corner) with radius [0.2,1000]. when there is a corner radius, the aircraft will never  go through the waypoint. by default, the radius is 0.2 m. if the corner is made of three adjacent waypoints (short for a,b,c)  . then the radius of a(short for ra) plus radius of b(short for rb) must be smaller than the distance between  a and b. radius of the first and the last waypoint in a mission does not affect the flight path and it should keep the default value (0.2m).",
             "turnmode",
             "determines whether the aircraft will turn clockwise or anticlockwise when changing its heading.",
             "gimbalpitch",
             "gimbal pitch angle when reached this waypoint. this property is used when the `isgimbalpitchrotationenabled` is true. value should in range [-90, 0] degree.",
             "speed",
             "the base automatic speed of the aircraft as it moves between this waypoint and the next waypoint with range  [0, 15] m/s. by default, it is 0.0 and the aircraft will fly with `getautoflightspeed` of  the waypoint mission. if greater than 0, 'speed' will override `getautoflightspeed`.  this 'speed' can only define movement forward through the waypoint mission in comparison  to `getautoflightspeed` which can be both forward and backwards through a waypoint mission.  waypoint mission speed priority from highest to lowest is:  1) manual speed adjustment  with remote controller joy sticks  2) 'speed'  3) `setautoflightspeed`   4) `getautoflightspeed`  warning: 'speed', `shootphototimeinterval`  and `shootphotodistanceinterval` relate to behavior between this waypoint and the next  waypoint in the mission. in comparison, `turnmode`, `altitude`  and `heading` relate to behavior between the last waypoint and this waypoint in the waypoint  mission. only supported by flight controller firmware 3.2.10.0 or above.",
             "shootphototimeinterval",
             "the time interval in seconds when two photos are taken as the aircraft moves between the current waypoint  and the next waypoint. the first photo will be taken as the aircraft leaves the current waypoint. the  maximum value is 6,000.0. the minimum value is above 0.0 and depends on the camera type and the camera  parameters. when the photo file format is jpeg, the recommended minimum value is 2.0. when the photo file  format is raw, the minimum value is 10.0. if the input exceeds the camera's capability, the pictures will  be taken at the maximum possible speed. the default value is 0.0 and no photo will be taken. for a  waypoint, either `shootphototimeinterval` or `shootphotodistanceinterval`  is 0.0. input with precision of greater than 1 decimal places, will be rounded to 1. warning: 'speed', `shootphototimeinterval`  and `shootphotodistanceinterval` relate to behavior between this waypoint and the next waypoint  in the mission. in comparison, `turnmode`, `altitude` and `heading`  relate to behavior between the last waypoint and this waypoint in the waypoint mission. only supported by flight  controller firmware 3.2.10.0 or above.",
             "shootphotodistanceinterval",
             "the distance interval in meters when two photos are taken as the aircraft moves between the current  waypoint and the next waypoint. the maximum value is 6,000.0. the minimum value is above 0.0 and depends  on the camera type, the camera parameters and the flight speed. when the photo file format is jpeg, the time interval between two photos cannot smaller than 2 seconds. when the photo file format is raw, the  time interval between two photos cannot smaller than 10 seconds. if the input exceeds the camera's  capability, the taken photos may be less than expectation. the default value is 0.0 and no photo will be  taken. for a waypoint, either `shootphototimeinterval`  or `shootphotodistanceinterval` is 0.0. input with precision of greater than 1 decimal  places, will be rounded to 1. warning: 'speed', `shootphototimeinterval`  and `shootphotodistanceinterval` relate to behavior between this waypoint and the next  waypoint in the mission. in comparison, `turnmode`, `altitude`  and `heading` relate to behavior between the last waypoint and this waypoint in the waypoint  mission. only supported by flight controller firmware 3.2.10.0 or above.",
             "hasaction",
             "a flag to indicate whether there are any actions to be carried out at the waypoint.",
             "waypointactions",
             "array of all waypoint actions for the respective waypoint. the waypoint actions will be executed  consecutively from the start of the array once the aircraft reaches the waypoint.",
             "getactionatindex",
             "gets the action at the specified index.  @param index the specified index.  @return an instance of `waypointaction`.",
             "adjustactionatindex",
             "switches the action at the specified index.  @param index the specified index. @param action a djiwaypointaction object.  @return a boolean value.",
             "actionrepeattimes",
             "determines how many times the set of waypoint actions are repeated. the default value is one time, and  the maximum is `max_action_repeat_times`.",
             "actiontimeoutinseconds",
             "the maximum time set to execute all the waypoint actions for a waypoint. if the time while executing the  waypoint actions goes above the time set, the aircraft will stop executing the waypoint actions for the  current waypoint and will move on to the next waypoint. the value of this property must be in the range  of [0, 999] seconds. the default value is 60 seconds.",
             "addaction",
             "adds a waypoint action to a waypoint. the number of waypoint actions should not be larger  than `max_action_count`. the action will only be executed when the mission's `getflightpathmode` property is set  to `normal` and will not be executed when the  mission's `getflightpathmode` property is set  to `curved`. the maximum number of waypoint  actions you can add is 15.  @param action waypoint action to be added to the waypoint.  @return `true` if the waypoint action has been added to the waypoint. `false`  if the waypoint action count is too high, or if the waypoint action was incorrectly setup.",
             "insertaction",
             "insert a waypoint action at index. @return `true`, if the waypoint action has been  inserted. `false` if the waypoint action count is too high or the index is invalid.  @param action waypoint action to be inserted to the waypoint. @param index index of the inserted action.  @return a boolean value.",
             "removeaction",
             "removes a waypoint action from the waypoint. @return `true` if the waypoint action  has been removed from the waypoint.  @param action waypoint action to be removed from the waypoint.  @return a boolean value.",
             "removeactionatindex",
             "removes a waypoint action from the waypoint by index. after removal, all actions higher than the index will  be shifted down by one.  @param index the index of the waypoint action to be removed.  @return `true` if waypoint action has been removed from the waypoint.",
             "removeallaction",
             "remove all the actions.",
             "waypointaction",
             "this class represents a waypoint action for `waypoint`. it determines what action is performed when  the aircraft reaches the corresponding waypoint.",
             "waypointturnmode",
             "how the aircraft will turn at a waypoint to transition between headings.",
             "max_action_count",
             "maximum number of actions a single waypoint can have. the maximum supported number is 15.",
             "max_action_repeat_times",
             "maximum number of times a single waypoint action can be repeated. the maximum supported number is 15.",
             "actiontype",
             "waypoint action of type `waypointactiontype` the aircraft will execute this action once  the aircraft reaches the waypoint. all possible actions are defined in the `waypointactiontype` enum.",
             "actionparam",
             "action parameter for a waypoint action. see enum `waypointaction` for details on which  actions use `actionparam`.",
             "waypointaction",
             "initialize the class with a specific action type and corresponding parameter.  @param actiontype a djiwaypointactiontype object. @param actionparam action parameter of a waypoint action.",
             "waypointactiontype",
             "waypoint action types.",
             "stay",
             "keeps the aircraft at the waypoint's location. the `actionparam`  parameter will determine how much time in milliseconds the aircraft will stay at the location with  range of [0, 32767] milliseconds.",
             "start_take_photo",
             "starts to shoot a photo. the `actionparam` for the waypoint action will  be ignored. the maximum time set to execute this waypoint action is 6 seconds. if the time while executing  the waypoint action goes above 6 seconds, the aircraft will stop executing the waypoint action and will  move on to the next waypoint action, if one exists.",
             "start_record",
             "starts recording. the `actionparam` for the waypoint action will be  ignored. the maximum time set to execute this waypoint action is 6 seconds. if the time while executing  the waypoint action goes above 6 seconds (e.g. the camera is not present) the aircraft will stop executing  the waypoint action and will move on to the next waypoint action, if one exists.",
             "stop_record",
             "stops recording. the `actionparam` for the waypoint action will be ignored.  the maximum time set to execute this waypoint action is 6 seconds. if the time while executing the waypoint  action goes above 6 seconds (e.g. the camera is not present) the aircraft will stop executing the waypoint  action and will move on to the next waypoint action, if one exists.",
             "rotate_aircraft",
             "rotates the aircraft's yaw. the rotation direction is determined by the waypoint's `turnmode` property.  the `actionparam` value must be in the range of [-180, 180] degrees.",
             "gimbal_pitch",
             "rotates the gimbal's pitch. the actionparam value should be in range [-90, 0] degrees.",
             "clockwise",
             "changes the heading of the aircraft by rotating the aircraft clockwise.",
             "counter_clockwise",
             "changes the heading of the aircraft by rotating the aircraft anti-clockwise.",
             "builder",
             "class builder.",
             "checkparameters",
             "checks if the configuration for the mission is valid before loading it into `waypointmissionoperator`.  @return error found when checking parameters of the waypoint. `null` if all the parameters are valid.",
             "getwaypointcount",
             "number of waypoints in the waypoint mission.  @return waypoint count.",
             "getwaypointlist",
             "returns an list of all waypoints in the mission.  @return a list of `waypoint` instances contained in the mission.",
             "getmaxflightspeed",
             "while the aircraft is traveling between waypoints, you can offset its speed by using the throttle joystick  on the remote controller. `getmaxflightspeed` is this offset when the joystick is pushed  to maximum deflection. for example, if maxflightspeed is 10 m/s, then pushing the throttle joystick all the  way up will add 10 m/s to the aircraft speed, while pushing down will subtract 10 m/s from the aircraft  speed. if the remote controller stick is not at maximum deflection, then the offset speed will be  interpolated between [0, `getmaxflightspeed`] with a resolution of 1000 steps. if the  offset speed is negative, then the aircraft will fly backwards to previous waypoints. when it reaches the  first waypoint, it will then hover in place until a positive speed is  applied. `getmaxflightspeed` has a range of [2,15] m/s.  @return flight speed in m/s",
             "getautoflightspeed",
             "the base automatic speed of the aircraft as it moves between waypoints with range [-15, 15] m/s. the  aircraft's actual speed is a combination of the base automatic speed, and the speed control given by  the throttle joystick on the remote controller. if `getautoflightspeed` >0: actual  speed is `getautoflightspeed` + joystick speed (with combined max  of `getmaxflightspeed`) if `getautoflightspeed` =0: actual speed is  controlled only by the remote controller joystick. if `getautoflightspeed` <0 and the aircraft is at the first waypoint, the aircraft will hover in place until the speed is made positive by  the remote controller joystick.  @return flight speed in m/s",
             "getgotofirstwaypointmode",
             "defines how the aircraft will go to the first waypoint from its current position. default  is `safely`.  @return the behavior of the aircraft at the begining of the mission",
             "getfinishedaction",
             "action the aircraft will take when the waypoint mission is complete.  @return the action to execute when the waypoint mission finishes",
             "getheadingmode",
             "heading of the aircraft as it moves between waypoints. default  is `auto`.  @return heading mode.",
             "getpointofinterest",
             "aircraft heading will be fixed to the point of interest location during the waypoint mission. used when `getheadingmode`  is `toward_point_of_interest`.  @return point of interest location.",
             "getflightpathmode",
             "the path the aircraft follows between waypoints. the aircraft can either fly directly between waypoints in a straight line, or turn near a waypoint in the curve where the waypoint location defines a part of the curve.  @return the flight path mode.",
             "isexitmissiononrcsignallostenabled",
             "determines whether the mission should stop when connection between the  aircraft and remote controller is lost. default is `false`.  @return `true` if mission should stop when connection is lost.",
             "isgimbalpitchrotationenabled",
             "`true` if the gimbal pitch rotation can be controlled during the waypoint mission. when `true`, `gimbalpitch` in `waypoint` is used to control gimbal pitch.  @return `true` if gimbal pitch can be controlled.",
             "getrepeattimes",
             "mission execution can be repeated more than once. a value of 0 means the mission only executes once, and does not repeat. a value of 1 means the mission will execute a total of two times.  @return number of times to repeat mission",
             "waypoint",
             "the class represents a target point in the waypoint mission. for a waypoint mission, a flight route  consists of multiple `waypoint` objects. the user can also define the actions to perform for  each `waypoint`.",
             "waypointmissionfinishedaction",
             "actions taken when the waypoint mission has finished.",
             "waypointmissionheadingmode",
             "current waypoint mission heading mode.",
             "waypointmissionflightpathmode",
             "waypoint mission flight path mode.",
             "waypointmissiongotowaypointmode",
             "this enum will determine the goto point mode while the drone executes the flight.",
             "builder",
             "default constructor of waypoint mission with 0 waypoints.",
             "builder",
             "waypoint mission constructor that clones this waypoint mission from another.  @param waypointmissiontoclone waypoint mission to clone",
             "addwaypoint",
             "add a waypoint to the waypoint mission.  @param waypoint waypoint to add.  @return a `builder` object",
             "waypointlist",
             "list of waypoints that will define this mission  @param waypointlist list of waypoints  @return a `builder` object",
             "getwaypointlist",
             "list of waypoints that will define this mission  @return list of waypoints",
             "waypointcount",
             "number of waypoints in the waypoint mission. this must be set to the correct number of waypoints added to the mission.  @param waypointcount waypoint count.  @return a `builder` object",
             "getwaypointcount",
             "number of waypoints in the waypoint mission.  @return waypoint count.",
             "maxflightspeed",
             "while the aircraft is traveling between waypoints, you can offset its speed by using the throttle joystick  on the remote controller. `getmaxflightspeed` is this offset when the joystick is pushed  to maximum deflection. for example, if maxflightspeed is 10 m/s, then pushing the throttle joystick all the  way up will add 10 m/s to the aircraft speed, while pushing down will subtract 10 m/s from the aircraft  speed. if the remote controller stick is not at maximum deflection, then the offset speed will be  interpolated between [0, `getmaxflightspeed`] with a resolution of 1000 steps. if the  offset speed is negative, then the aircraft will fly backwards to previous waypoints. when it reaches the  first waypoint, it will then hover in place until a positive speed is  applied. `getmaxflightspeed` has a range of [2,15] m/s.  @param maxflightspeed flight speed in m/s  @return a `builder` object",
             "getmaxflightspeed",
             "while the aircraft is traveling between waypoints, you can offset its speed by using the throttle joystick  on the remote controller. `getmaxflightspeed` is this offset when the joystick is pushed  to maximum deflection. for example, if maxflightspeed is 10 m/s, then pushing the throttle joystick all the  way up will add 10 m/s to the aircraft speed, while pushing down will subtract 10 m/s from the aircraft  speed. if the remote controller stick is not at maximum deflection, then the offset speed will be  interpolated between [0, `getmaxflightspeed`] with a resolution of 1000 steps. if the  offset speed is negative, then the aircraft will fly backwards to previous waypoints. when it reaches the  first waypoint, it will then hover in place until a positive speed is  applied. `getmaxflightspeed` has a range of [2,15] m/s.  @return flight speed in m/s",
             "autoflightspeed",
             "the base automatic speed of the aircraft as it moves between waypoints with range [-15, 15] m/s. the  aircraft's actual speed is a combination of the base automatic speed, and the speed control given by  the throttle joystick on the remote controller. if `getautoflightspeed` >0: actual  speed is `getautoflightspeed` + joystick speed (with combined max  of `getmaxflightspeed`) if `getautoflightspeed` =0: actual speed is  controlled only by the remote controller joystick. if `getautoflightspeed` <0 and the aircraft is at the first waypoint, the aircraft will hover in place until the speed is made positive by  the remote controller joystick.  @param autoflightspeed flight speed in m/s  @return a `builder` object",
             "getautoflightspeed",
             "the base automatic speed of the aircraft as it moves between waypoints with range [-15, 15] m/s. the  aircraft's actual speed is a combination of the base automatic speed, and the speed control given by  the throttle joystick on the remote controller. if `getautoflightspeed` >0: actual  speed is `getautoflightspeed` + joystick speed (with combined max  of `getmaxflightspeed`) if `getautoflightspeed` =0: actual speed is  controlled only by the remote controller joystick. if `getautoflightspeed` <0 and the aircraft is at the first waypoint, the aircraft will hover in place until the speed is made positive by  the remote controller joystick.  @return flight speed in m/s",
             "gotofirstwaypointmode",
             "defines how the aircraft will go to the first waypoint from its current position. default  is `safely`.  @param gotofirstwaypointmode behavior prior to mission start.  @return a `builder` object",
             "getgotofirstwaypointmode",
             "defines how the aircraft will go to the first waypoint from its current position. default  is `safely`.  @return the behavior of the aircraft at the begining of the mission",
             "finishedaction",
             "action the aircraft will take when the waypoint mission is complete.  @param finishedaction behavior of aircraft when mission is complete.  @return a `builder` object",
             "getfinishedaction",
             "action the aircraft will take when the waypoint mission is complete.  @return the action to execute when the waypoint mission finishes",
             "headingmode",
             "heading of the aircraft as it moves between waypoints. default  is `auto`.  @param headingmode the heading mode.  @return a `builder` object",
             "getheadingmode",
             "heading of the aircraft as it moves between waypoints. default  is `auto`.  @return heading mode.",
             "setpointofinterest",
             "aircraft heading will be fixed to the point of interest location during the waypoint mission. used when `getheadingmode`  is `toward_point_of_interest`.  @param pointofinterest point of interest location.  @return a `builder` object",
             "getpointofinterest",
             "aircraft heading will be fixed to the point of interest location during the waypoint mission. used when `getheadingmode`  is `toward_point_of_interest`.  @return point of interest location.",
             "flightpathmode",
             "the path the aircraft follows between waypoints. the aircraft can either fly directly between waypoints in a straight line, or turn near a waypoint in the curve where the waypoint location defines a part of the curve.  @param flightpathmode the flight path mode.  @return a `builder` object",
             "getflightpathmode",
             "the path the aircraft follows between waypoints. the aircraft can either fly directly between waypoints in a straight line, or turn near a waypoint in the curve where the waypoint location defines a part of the curve.  @return the flight path mode.",
             "setexitmissiononrcsignallostenabled",
             "determines whether the mission should stop when connection between the  aircraft and remote controller is lost. default is `false`.  @param enabled `true` if mission should stop when connection is lost.  @return a `builder` object",
             "isexitmissiononrcsignallostenabled",
             "determines whether the mission should stop when connection between the  aircraft and remote controller is lost. default is `false`.  @return `true` if mission should stop when connection is lost.",
             "setgimbalpitchrotationenabled",
             "`true` if the gimbal pitch rotation can be controlled during the waypoint mission. when `true`, `gimbalpitch` in `waypoint` is used to control gimbal pitch.  @param gimbalpitchrotationenabled `true` if gimbal pitch can be controlled.  @return a `builder` object",
             "isgimbalpitchrotationenabled",
             "`true` if the gimbal pitch rotation can be controlled during the waypoint mission. when `true`, `gimbalpitch` in `waypoint` is used to control gimbal pitch.  @return `true` if gimbal pitch can be controlled.",
             "repeattimes",
             "mission execution can be repeated more than once. a value of 0 means the mission only executes once, and does not repeat. a value of 1 means the mission will execute a total of two times.  @param repeattimes number of times to repeat mission  @return a `builder` object",
             "getrepeattimes",
             "mission execution can be repeated more than once. a value of 0 means the mission only executes once, and does not repeat. a value of 1 means the mission will execute a total of two times.  @return number of times to repeat mission",
             "ismissioncomplete",
             "when downloading a waypoint mission, the number of waypoints in `getwaypointlist` will be less than  `getwaypointcount` until the download is complete. this property is `true` when all the information in the waypoint mission is downloaded, and complete in this object.  @return `true` if mission information is complete.",
             "build",
             "build the object into a `waypointmission` object.  @return waypoint mission.",
             "no_action",
             "no further action will be taken on completion of mission. at this point, the aircraft can be  controlled by the remote controller.",
             "go_home",
             "the aircraft will go home when the mission is complete. if the aircraft is more than 20m away from  the home point it will go home and land. otherwise, it will land directly at the current location.",
             "auto_land",
             "the aircraft will land automatically at the last waypoint.",
             "go_first_waypoint",
             "the aircraft will go back to its first waypoint and hover in position.",
             "continue_until_end",
             "when the aircraft reaches its final waypoint, it will hover without ending the mission. the joystick  can still be used to pull the aircraft back along its previous waypoints. the only way this mission  can end is if stopmission is called.",
             "auto",
             "aircraft's heading will always be in the direction of flight.",
             "using_initial_direction",
             "aircraft's heading will be set to the heading when reaching the first waypoint. before reaching the  first waypoint, the aircraft's heading can be controlled by the remote controller. when the aircraft  reaches the first waypoint, its heading will be fixed.",
             "control_by_remote_controller",
             "aircraft's heading will be controlled by the remote controller.",
             "using_waypoint_heading",
             "aircraft's heading will be gradually set to the next waypoint heading while traveling between two adjacent waypoints.",
             "toward_point_of_interest",
             "aircraft's heading will always toward point of interest.",
             "normal",
             "the flight path will be normal and the aircraft will move from one waypoint to the next in straight lines.",
             "curved",
             "the flight path will be curved and the aircraft will move from one waypoint to the next in a curved motion,  adhering to the `cornerradiusinmeters`, which is set in `waypoint`.",
             "safely",
             "go to the waypoint safely. the aircraft will rise to the same altitude of the waypoint if the current  altitude is lower then the waypoint altitude. it then goes to the waypoint coordinate from the current  altitude, and proceeds to the altitude of the waypoint.",
             "point_to_point",
             "go to the waypoint from the current aircraft point to the waypoint directly.",
             "loadmission",
             "loads the waypointmission into device memory. this also verifies all the information of `mission`. if something is incorrect, callback.result() will be called with an error. otherwise, callback.result() will be called with a `null` value. the `mission` object will remain in device memory even after the waypointmission execution has finished.  @param mission waypoint mission to load.  @return returns an error when mission data is invalid or the mission cannot be loaded in the current state.",
             "getloadedmission",
             "gets the currently loaded mission of the operator. there are two ways to load a mission. 1. a mission can be loaded by user through `loadmission`. 2. if the aircraft is already executing a waypoint mission when sdk is re-connected, the operator will download part of the mission's information from the aircraft and load it automatically. in that case, the loaded mission will only contain the summary of the executing mission but information for each waypoint is absent. user can call `downloadmission` to get all the information for the loaded mission. the `getloadedmission` will be reset to `null` when the execution of the loadedmission is stopped, finished or interrupted.  @return a object of `waypointmission`.",
             "uploadmission",
             "starts to upload the `getloadedmission` to the aircraft. it can only be called when the `getloadedmission` is complete and the `getcurrentstate` is `ready_to_upload`. if a timeout error occurs during the previous upload, the upload operation will resume from the previous break-point. after a mission is uploaded successfully, the `waypointmissionstate` will become `ready_to_execute`.  @param callback completion block that will be called when the upload operation succeeds or fails to start. ",
             "retryuploadmission",
             "retry upload waypoint mission.  @param callback the execution callback with the returned execution result.",
             "downloadmission",
             "downloads information of each waypoint from aircraft and save it to `getloadedmission`. if a download operation is started, the operator will download the information of waypoints missing in `getloadedmission` one-by-one in ascending order. if `getloadedmission` is already complete (containing all the waypoints), this method will call `completion` immediately without error. it can only be called when the `getcurrentstate` is one of the following: - `executing` - `execution_paused`  @param callback completion block that will be called when the download operation succeeds or fails to start. ",
             "startmission",
             "starts the execution of the uploaded mission. it can only be called when the `getcurrentstate` is `ready_to_execute`. after a mission is started successfully, the `getcurrentstate` will become `executing`.  @param callback completion block that will be called when the operator succeeds or fails to start the execution. if it fails, an error will be returned.",
             "resumemission",
             "resumes the paused mission. it can only be called when the `getcurrentstate` is `execution_paused`. after a mission is resumed successfully, the `getcurrentstate` will become `executing`.  @param callback completion block that will be called when the operator succeeds or fails to resume the mission. if it fails, an error will be returned.",
             "pausemission",
             "pauses the executing mission. it can only be called when the `waypointmissionstate` is `executing`. after a mission is paused successfully, the `getcurrentstate` will become `execution_paused`.  @param callback completion block that will be called when the operator succeeds or fails to pause the mission. if it fails, an error will be returned.",
             "stopmission",
             "stops the executing or paused mission. it can only be called when the `getcurrentstate` is one of the following: - `executing` - `execution_paused` after a mission is stopped successfully, `getcurrentstate` will become `ready_to_upload`.  @param callback completion block that will be called when the operator succeeds or fails to stop the mission. if it fails, an error will be returned.",
             "setautoflightspeed",
             "set the flight speed while the mission is executing automatically (without manual joystick speed input). this is the only property or method in this class that can communicate with the aircraft during a mission. all other properties and methods are used offline to prepare the mission which is then uploaded to the aircraft.  @param speed auto flight speed to be set. the absolute value of the auto flight speed should be less than or equal to the `getmaxflightspeed`. its range is [-`getmaxflightspeed`, `getmaxflightspeed`] m/s. @param callback completion callback.",
             "getcurrentstate",
             "the current state of the operator.  @return a object of `waypointmissionstate`.",
             "addlistener",
             "add listener to listen for events.  @param listener an object of `waypointmissionoperatorlistener`.",
             "removelistener",
             "removes listener. if the same listener is listening to multiple events and notifications (e.g. upload event and download event), it will not receive any update of them.  @param listener listener to be removed.",
             "waypointmission",
             "in the waypoint mission, the aircraft will travel between waypoints, execute actions at waypoints, and  adjust heading and altitude between waypoints. waypoints are physical locations to which the aircraft  will fly. creating a series of waypoints, in effect, will program a flight route for the aircraft to follow. actions can also be added to waypoints, which will be carried out when the aircraft reaches the  waypoint. the aircraft travels between waypoints automatically at a base speed. however, the user can  change the speed by using the pitch joystick. if the stick is pushed up, the speed will increase. if  the stick is pushed down, the speed will slow down. the stick can be pushed down to stop the aircraft  and further pushed to start making the aircraft travel back along the path it came. when the aircraft  is traveling through waypoints in the reverse order, it will not execute waypoint actions at each  waypoint. if the stick is released, the aircraft will again travel through the waypoints in the original  order, and continue to execute waypoint actions (even if executed previously). if the aircraft is pulled  back along the waypoint mission all the way to the first waypoint, then it will hover in place until the  stick is released enough for it to again progress through the mission from start to finish. it is not  supported by mavic pro when using wifi connection. it is not supported by spark.",
             "waypointmissionevent",
             "waypoint event base class.",
             "waypointmissionuploadevent",
             "the upload event of a waypoint mission.",
             "waypointmissiondownloadevent",
             "the download event of a waypoint mission.",
             "waypointmissionexecutionevent",
             "the execution event of a waypoint mission.",
             "waypointmissionstate",
             "all the possible state of `waypointmissionoperator`.",
             "not_supported",
             "the connected product does not support waypoint mission.",
             "ready_to_upload",
             "the aircraft is ready to upload a mission.",
             "uploading",
             "the uploading is started successfully. detail information for each waypoint is being uploaded one by one.",
             "ready_to_execute",
             "waypoint mission is uploaded completely and the aircraft is ready to start the execution.",
             "executing",
             "the execution is started successfully.",
             "execution_paused",
             "waypoint mission is paused successfully. user can call `resumemission` to continue the execution.",
             "disconnected",
             "the connection between the mobile device, remote controller and aircraft is broken.",
             "recovering",
             "the connection between the mobile device, remote controller and aircraft is built-up. the operator is synchronizing the state from the aircraft.",
             "unknown",
             "the state of the operator is unknown. it is the initial state when the operator is just created.",
             "geterror",
             "error for waypoint mission event.  @return an object of `djierror`.",
             "getprogress",
             "the upload progress of the mission. it is `null` if there is an error during upload.  @return an object of `waypointuploadprogress`.",
             "getpreviousstate",
             "the previous state of the operator.  @return an object of `waypointmissionstate`.",
             "getcurrentstate",
             "the current state of the operator.  @return an object of `waypointmissionstate`.",
             "waypointuploadprogress",
             "the upload progress of the waypoint mission operator.",
             "getprogress",
             "the download progress of the mission. it is `null` if there is an error during download.  @return a object of `waypointdownloadprogress`.",
             "waypointdownloadprogress",
             "the download progress of the waypoint mission operator.",
             "getprogress",
             "the execution progress of the mission. it is `null` if there is an error during the execution.  @return an object of `waypointexecutionprogress`.",
             "getpreviousstate",
             "the previous state of the operator.  @return an object of `waypointmissionstate`.",
             "getcurrentstate",
             "the current state of the operator.  @return an object of `waypointmissionstate`.",
             "waypointexecutionprogress",
             "the mission execution progress of the waypoint mission operator.",
             "waypointmissionexecutestate",
             "current waypoint mission state.",
             "waypointmissionoperatorlistener",
             "listener interface for waypoint mission operator events.",
             "onuploadupdate",
             "called when an upload event happens.  @param uploadevent upload event",
             "ondownloadupdate",
             "called when an download event happens.  @param downloadevent download event",
             "onexecutionstart",
             "called when the waypoint mission starts.",
             "onexecutionupdate",
             "called when there is an execution update for the waypoint mission operator.  @param executionevent execution event.",
             "onexecutionfinish",
             "called when the waypoint mission ends.  @param error error if the waypoint mission didn't end as expected.",
             "uploadedwaypointindex",
             "the index of the last uploaded waypoint. information for each waypoint is uploaded one by one in ascending order. if no waypoint has been uploaded, the value will be -1.",
             "totalwaypointcount",
             "the total count of waypoints in the waypoint mission.",
             "issummaryuploaded",
             "the waypoint mission operator has uploaded the the mission's summary (information except waypoints).",
             "issummarydownloaded",
             "`true` if waypoint summary is downloaded.",
             "totalwaypointcount",
             "the total count of waypoints in the waypoint mission.",
             "downloadedwaypointindex",
             "the index of the last downloaded waypoint. information for each waypoint is downloaded one by one in ascending order. if no waypoint has been downloaded, the value will be -1.",
             "targetwaypointindex",
             "index of the waypoint for the next mission to which the aircraft will proceed.",
             "iswaypointreached",
             "yes when the aircraft reaches a waypoint. after the waypoint actions and heading change is complete,  the `targetwaypointindex` will increment and this  property will become no.",
             "executestate",
             "current execution state of the aircraft.",
             "initializing",
             "waypoint mission is initializing, which means the mission has started and the aircraft is going to the first waypoint.",
             "moving",
             "aircraft is currently moving toward the mission's next waypoint. this happens when  the `waypointmissionflightpathmode` is set  to `normal`.",
             "curve_mode_moving",
             "aircraft is currently moving. this happens when the `waypointmissionflightpathmode` is set  to `curved`.",
             "curve_mode_turning",
             "aircraft is currently turning. this happens when the `waypointmissionflightpathmode`  is set to `curved`.",
             "begin_action",
             "aircraft has reached a waypoint, has rotated to the new heading and is now processing actions. this state  will be called before the waypoint actions starts executing and will occur for each waypoint action.",
             "doing_action",
             "aircraft is at a waypoint and is executing an action.",
             "finished_action",
             "aircraft is at a waypoint and has finished executing the current waypoint action. this state occurs once  for each waypoint action.",
             "return_to_first_waypoint",
             "aircraft has returned to the first waypoint. this happens when the `getfinishedaction`  is set to `return_to_first_waypoint`.",
             "paused",
             "the mission is currently paused by the user.",
             "sethardwarestatecallback",
             "set the hardwarestateupdatecallback  @param hardwarestatecallback rchardwarestate.hardwarestatecallback callback.",
             "setchargeremainingcallback",
             "sets the batterystateupdatecallback.  @param callback chargeremaining.batterystatecallback callback.",
             "setgpsdatacallback",
             "set the gpsdataupdatecallback.  @param callback gpsdatacallback callback.",
             "setmasterslavestatecallback",
             "callback that updates the remote controller's state related to the master and slave mode. only supported by inspire 2.  @param callback rcmasterslavestateupdatecallback callback.",
             "setgimbalcontrolrequestfromslavecallback",
             "sets gimbalcontrolrequestfromslavereceivedcallback.  @param controlrequestcallback information.controlrequestcallback callback.",
             "setfocuscontrollerstatecallback",
             "sets rcremotefocusstateupdatecallback.  @param focusstateupdatecallback focuscontrollerstate.focuscontrollerstatecallback callback.",
             "startpairing",
             "enters pairing mode, in which the remote controller starts  pairing with the aircraft. this method is used when the remote  controller no longer recognizes which aircraft it is paired with.  @param callback the execution callback with the execution result returned.  see djibasecomponent for more information about the callback    and what is recommended be done with it.",
             "stoppairing",
             "exits pairing mode.  @param callback the execution callback with the execution result returned.  see djibasecomponent for more information about the callback  and what is recommended be done with it.",
             "getpairingstate",
             "gets the pairing status as the remote controller is pairing with  the aircraft.  @param callback the execution callback with the value(s) returned.",
             "setcustomaircraftmapping",
             "set the mapping of custom style. it will change the current mapping style  to `style_custom`. the setting will only take effect when  the remote controller is in master mode.  @param mapping the remote controller aircraft mapping. @param callback the execution callback with the value(s) returned.",
             "getcustomaircraftmapping",
             "retrieves the stick mapping associated with the custom style.  @param callback the execution callback with the value(s) returned.",
             "setaircraftmappingstyle",
             "sets the remote controller's control mode.  @param style remote controller control mode to be set. @param callback the execution callback with the execution result returned.",
             "getaircraftmappingstyle",
             "gets the remote controller's control mode.  @param callback the execution callback with the execution result returned.",
             "setleftwheelgimbalcontrolaxis",
             "sets which of the gimbal directions the top left wheel (gimbal  dial) on the remote controller will control. the three options  (pitch, roll, and yaw) are outlined in the enum named  `gimbalaxis`.  @param axis gimbal direction to be set that the top left wheel on the remote  controller will control. @param callback remote execution result error callback. see djibasecomponent  for more information about the callback and what is  recommended be done with it.",
             "getleftwheelgimbalcontrolaxis",
             "gets which of the gimbal directions the top left wheel (gimbal  dial) on the remote controller will control.  @param callback the execution callback with the value(s) returned.",
             "setcustombuttontags",
             "sets custom button tags, which can be used by the user to record  user settings. moreover, this method will make it easier for  developers to set custom tags for buttons in the user interface,  will make it easier to use the c1 and c2 buttons on the remote  controller.  @param tags back buttons' custom tags, the value should in the range of [0,  255]. @param callback remote execution result error callback.",
             "getcustombuttontags",
             "gets the custom button's (back button's) tags.  @param callback the execution callback with the value(s) returned.",
             "setchargemobilemode",
             "sets the charge mode of a connected ios device.  note: android devices are always charging when connected to the remote  controller. it is only supported by inspire 2.  @param mode charge mobile mode. @param callback the execution callback with the execution result returned.",
             "getchargemobilemode",
             "gets the mode to charge the connected ios device. note that android  devices are always charging when connected to the remote controller.  it is only supported by inspire 2.  @param callback the execution callback with the value(s) returned.",
             "ismasterslavemodesupported",
             "query method to check if the remote controller supports master/slave  mode. master-slave mode is supported by the inspire 1, inspire 1  pro, matrice 100, lightbridge 2 (including matrice 600, matrice 600  pro, a3 and n3) and inspire 2. inspire 2 is using a new set of  interfaces to control the master and slave connection.  -  similar to other products, inspire 2's remote controller also use  set/get `rcmode` to change  the mode. - a slave remote controller can use  `getmasters` and  `connecttomaster` to join a master remote controller. - a master remote controller  can use `setmasterauthorizationcode` to  change the authentication code.  @return a boolean value.",
             "setmode",
             "sets the remote controller's mode. see the  `rcmode` enum for all possible remote controller modes. the master and slave modes are only supported  for the inspire 1, inspire 1 pro, m100, lightbridge 2 (including  matrice 600, matrice 600 pro, a3 and n3) and inspire 2.  @param mode mode of type `rcmode` to be set for the remote controller. @param callback the execution callback with the returned execution result.",
             "getmode",
             "gets the remote controller's work mode. it  is supported by the inspire 1, inspire 1 pro, matrice 100,  lightbridge 2 (including matrice 600, matrice 600 pro, a3 and n3)  and inspire 2.  @param callback the execution callback with the value(s) returned.",
             "setname",
             "sets the remote controller's name.  @param name remote controller name to be set. six characters at most. @param callback the execution callback with the execution result returned.",
             "getname",
             "gets the remote controller's name.  @param callback the execution callback with the value(s) returned.",
             "setpassword",
             "sets the remote controller's password.  @param password remote controller password to be set, using a string consisted by  4 digits. @param callback the execution callback with the value(s) returned. see  djibasecomponent for more information about the callback and  what is recommended to be done with it.",
             "getpassword",
             "gets the remote controller's password.  @param callback the execution callback with the value(s) returned.",
             "getslavelist",
             "used by the current master remote controller to get all the slaves  connected to it.  @param callback the execution callback with the returned value(s).",
             "startmastersearching",
             "starts a search by slave remote controller for nearby master  remote controllers. to get the list of master remote  controllers, first call `getavailablemasters`, then call  `stopmastersearching` to end the search.  @param callback remote execution result error callback. please refer to  `basecomponent` for more information about the callback  and what is recommended be done with it.",
             "stopmastersearching",
             "used by a slave remote controller to stop the search for  nearby master remote controllers.  @param callback remote execution result error callback. please refer to  djibasecomponent for more information about the callback and  what is recommended be done with it.",
             "getavailablemasters",
             "starts search by slave remote controller for nearby master  remote controllers. to get the list of master remote controllers  use getavailablemasterswithcallbackblock then call  stopmasterrcsearch to end th search.  @param callback the execution callback with the value(s) returned. the array of  masters contains objects of type information.",
             "getmastersearchingstate",
             "returns the state of the master remote controller search. the  search is initiated by the mobile device, but performed by the  remote controller. therefore, if the mobile device's application  crashes while a search is ongoing, this method can be used to  let the new instance of the application understand the remote  controller state.  @param callback the execution callback with the value(s) returned.",
             "connecttomaster",
             "used by a slave remote controller to request to join a master  remote controller and be able to control the gimbal. if the master  remote controller accepts the request, the master remote  controller will control the aircraft and the slave remote  controller will control the gimbal.  @param credentials include master's name and master's password. @param callback the execution callback with the value(s) returned.",
             "getconnectedmastercredentials",
             "returns the master remote controller's information, which includes  the unique identifier, name, and password.  @param callback the execution callback with the value(s) returned.",
             "setmasterauthorizationcode",
             "sets the authorization code of a master remote controller. the  slave remote controller needs to know the authorization code in order to join the master. a valid input is a string with 6 digits.  the default value is 888888. it can only be called when the  remote controller is in master mode.  @param authorizationcode authorization code to set. @param callback the execution callback with the value(s) returned.",
             "getmasters",
             "gets a list of the nearby remote controllers in master mode.  it can only be called when the remote controller is in slave mode.  @param callback the execution callback with the returned value(s).",
             "connecttomaster",
             "joins the master remote controller with the specific id. if the remote controller has joined the same master before, the authorization code is not required until the master remote  controller changes its authorization code. in this case,  code</code> can be `null`. it can only be called when the remote controller is in slave mode.  @param info joinmasterdata object. @param callback the execution callback with the returned value(s).",
             "respondtorequestforgimbalcontrol",
             "when a slave remote controller requests a master remote controller to  control the gimbal, this method is used by a master remote controller  to respond to the slave remote controller's request.  @param response the response object of responseforgimbalcontrol to the slave remote controller.",
             "requestgimbalcontrol",
             "even after a remote controller becomes a slave remote controller,  this method must be called by the slave remote controller to request  the master remote controller to control the gimbal.  @param callback the execution callback with the value(s) returned.",
             "setcustomgimbalmapping",
             "sets the remote controller's slave control mode.  @param mapping the djircgimbalmapping object. @param callback the execution callback with the value(s) returned.",
             "getcustomgimbalmapping",
             "gets the remote controller's slave control mode.  @param callback the execution callback with the value(s) returned.",
             "setgimbalmappingstyle",
             "sets the remote controller's slave control mode.  @param style control mode to be set. @param callback remote execution result error callback.",
             "getgimbalmappingstyle",
             "gets the remote controller's slave control mode.  @param callback the execution callback with the value(s) returned.",
             "setgimbalcontrolspeedcoefficient",
             "called by the slave remote controller to set the gimbal's pitch, roll, and yaw speed with a range of [0, 100].  @param speedcoefficient speed to be set for gimal's pitch, roll, and yaw, which should be  in the range of [0, 100]. @param callback remote execution result error callback. see djibasecomponent for  more information about the callback and what is recommended be  done with it.",
             "getgimbalcontrolspeedcoefficient",
             "gets the current slave's gimbal's pitch, roll, and yaw speed with a  range of [0, 100].  @param callback the execution callback with the value(s) returned.",
             "isfocuscontrollersupported",
             "query method to check if the remote controller supports remote  focus state checking.  @return a boolean value.",
             "callback",
             "callback function that updates the remote controller's current  gps data.",
             "onupdate",
             "callback function that updates the remote controller's current  hardware state (e.g. the state of the physical buttons and  joysticks).  @param hardwarestate current state of the remote controller's hardware state.",
             "onupdate",
             "callback function that updates the remote controller's current gps data.  @param gpsdata current state of the remote controller's gps data.",
             "onupdate",
             "callback function that updates the remote controller's current  battery state.  @param chargeremaining current state of the remote controller's battery state.",
             "onreceive",
             "callback function that gets called when a slave remote controller  makes a request to a master remote controller to control the  gimbal using the method requestgimbalcontrolrightwithcallbackblock.  @param information information of the slave making the request to the master remote  controller.",
             "onupdate",
             "callback function that updates the remote focus state, only support  focus product. if the isrcremotefocuscheckingsupported is  `true`, this  callback function will be called.  @param remotefocusstate current state of the remote focus state.",
             "onupdate",
             "callback function that updates the remote controller's state  related to the master and slave mode. only supported by inspire 2.  @param masterslavestate the remote controller's state related to the master and slave  mode.",
             "hardwarestate",
             "remote controller's current state.",
             "gpsdata",
             "remote controller's gps data. only inspire and m100 remote controllers have gps.",
             "chargeremaining",
             "remote controller's battery info.",
             "focuscontrollerstate",
             "remote controller's remote focus state. the focus product has one dial (focus control) that controls two  separate parts of the camera: focal length and aperture. however it can only control one of these at any  one time and is an absolute dial, meaning that a specific rotational position of the dial corresponds to  a specific focal length or aperture. this means that whenever the dial control mode is changed, the dial  first has to be reset to the new mode's previous dial position before the dial can be used to adjust the  setting of the new mode. example workflow:<br/><ol> - use dial to set an aperture of f2.2  - change  dial control mode to focal length (set `controltype`) - use the  dial to change the focal length - change dial control mode back to aperture -  set `controltype`  - `isworking` will now be no -  adjust dial back to f2.2 - `direction` is the direction  the dial should be rotated - `isworking` will  become yes when set back to f2.2 - now the dial can be used to adjust the aperture.</ol>",
             "pairingstate",
             "remote controller pairing state.",
             "aircraftmapping",
             "the object representing the stick mapping configuration of the remote controller.",
             "gimbalaxis",
             "defines what the gimbal dial (upper left wheel on the remote controller) will control.",
             "custombuttontags",
             "tags for c1 and c2 buttons on the remote controller",
             "chargemobilemode",
             "modes to charge an ios mobile device. only supported by inspire 2.",
             "rcmode",
             "remote controller mode of operation can be normal (single rc connected to aircraft), master, slave, or unknown.",
             "information",
             "this class contains the information for a remote controller.",
             "connecttomasterresult",
             "result when a slave remote controller tries to join a master remote controller.",
             "masterslavestate",
             "state of the remote controller related to the master and slave mode.",
             "gimbalcontrolspeedcoefficient",
             "remote controller's gimbal control speed.",
             "requestgimbalcontrolresult",
             "result when a slave remote controller requests permission to control the gimbal.",
             "responseforgimbalcontrol",
             "data object that master remote controller to respond to the slave remote controller's request.",
             "authorizationinfo",
             "joins the master remote controller with the specific id. if the remote controller has joined the same  master before, the authentication code is not required until the master remote controller changes its  authentication code. in this case, `code` can be `null`. it can only be called when the remote controller  is in slave mode. it is only supported by inspire 2.",
             "credentials",
             "remote controller credentials.",
             "getid",
             "remote controller id.  @return an int value.",
             "getname",
             "remote controller name.  @return an instance of string.",
             "getpassword",
             "remote controller password.  @return an instance of string.",
             "stick",
             "dji hardware stick. for example, the joystick on a remote controller, or the gimbal control stick on a handheld controller.",
             "getmasterid",
             "get id of the master remote controller to join.  @return an instance of string.",
             "setmasterid",
             "set the id of the master remote controller to join.  @param masterid id of the master remote controller to join.",
             "getauthcode",
             "authentication code to join the master remote controller.  @return an instance of string.",
             "setauthcode",
             "the mobile device connected to the slave remote controller must know the authorization code of the master remote controller. the master remote controller code is set by using the `setmasterauthorizationcode` method.  @param authcode authentication code to join the master remote controller.",
             "callback",
             "callback function that updates the remote controller's current battery state.",
             "getremainingchargeinmah",
             "the remaining power in the remote controller's battery in milliamp hours (mah).  @return an int value.",
             "getremainingchargeinpercent",
             "the remaining power in the remote controller's battery as a percentage in the range of [0, 100].  @return an int value.",
             "focuscontrollerstatecallback",
             "callback function that updates the remote focus state.",
             "isworking",
             "`true` if the focus control works. the control can be either changing the aperture or  focal length. if it is `false`, follow  the `direction` to rotate the remote focus device until it  turns to `true` again.  @return a boolean value.",
             "getcontroltype",
             "remote focus control type.  @return an enum value of `controltype`",
             "getdirection",
             "remote focus control direction. use this with  the `isworking` value. it will give you the correct  rotation direction when `isworking` is  `false`.  @return an enum value of `direction`",
             "controltype",
             "remote focus control type.",
             "aperture",
             "control aperture.",
             "focal_length",
             "control focal length.",
             "focus_distance",
             "adjust focus distance.",
             "unknown",
             "unknown types.",
             "direction",
             "remote focus control direction.",
             "clockwise",
             "clockwise.",
             "counter_clockwise",
             "counterclockwise.",
             "unknown",
             "unknown.",
             "gettime",
             "the remote controller's gps time.  @return an instance of `gettime`.",
             "getlocation",
             "the remote controller's location.  @return an instance of `gpslocation`.",
             "geteastspeed",
             "the remote controller's speed in the east direction in meters/second. a negative speed means the remote  controller is moving in the west direction.  @return a float value.",
             "getnorthspeed",
             "the remote controller's speed in the north direction in meters/second. a negative speed means the remote  controller is moving in the south direction.  @return a float value.",
             "getsatellitecount",
             "the number of gps satellites the remote controller detects.  @return an int value.",
             "getlocationaccuracy",
             "the the margin of error, in meters, for the gps location.  @return a float value.",
             "isvalid",
             "`true` if the gps data is valid. the data is not valid if there are too few satellites  or the signal strength is too low.  @return a boolean value.",
             "time",
             "remote controller's gps time.",
             "gethour",
             "hour value of remote controller's gps time.  @return a byte value.",
             "getminute",
             "minute value of remote controller's gps time.  @return a byte value.",
             "getsecond",
             "second value of remote controller's gps time.  @return a byte value.",
             "getyear",
             "year value of remote controller's gps time.  @return an int value.",
             "getmonth",
             "month value of remote controller's gps time.  @return a byte value.",
             "getday",
             "day value of remote controller's gps time.  @return a byte value.",
             "gpslocation",
             "location defined by latitude and longitude.",
             "getlongitude",
             "longitude component of a location.  @return a double value.",
             "getlatitude",
             "latitude component of a location.  @return a double value.",
             "getleftstick",
             "get left stick.  @return an instance of `stick`.",
             "getrightstick",
             "get right stick.  @return an instance of `stick`.",
             "getleftwheel",
             "gimbal dial's (upper left wheel) value in the range of [-660,660], where 0 is untouched and positive is turned in the clockwise direction.  @return gimbal wheel value.",
             "getrightwheel",
             "current state of the upper right wheel on the remote controller (camera settings dial).  @return an instance of `rightwheel`.",
             "gettransformationswitch",
             "current state of the transformation switch on the remote controller.  @return an instance of `transformationswitch`.",
             "getflightmodeswitch",
             "current position of the flight mode switch on the remote controller.  @return an enum value of `flightmodeswitch`",
             "getgohomebutton",
             "current state of the return to home button.  @return an instance of `button`.",
             "getrecordbutton",
             "current state of the video recording button.  @return an instance of `button`.",
             "getshutterbutton",
             "current state of the shutter button.  @return an instance of `button`.",
             "getplaybackbutton",
             "current state of the playback button. the playback button is not supported on phantom 4 remote controllers.  @return an instance of `button`.",
             "getpausebutton",
             "current state of the pause button. the pause button is only supported on phantom 4 remote controllers.  @return an instance of `button`.",
             "getc1button",
             "current state of custom button 1 (left back button).  @return an instance of `button`.",
             "getc2button",
             "current state of custom button 2 (right back button).  @return an instance of `button`.",
             "getfivedbutton",
             "current state of the 5d button. the button can be moved up, down, left and right and can be pressed. the 5d  button is only supported on mavic pro remote controllers.  @return an instance of `fivedbutton`.",
             "hardwarestatecallback",
             "callback function that updates the remote controller's  current hardware state.",
             "rightwheel",
             "current state of the camera settings dial (upper right wheel on the remote controller).",
             "transformationswitch",
             "transformation switch position. the transformation switch is around the return to home button on inspire,  inspire 1 and m100 remote controllers, and controls the state of the aircraft's landing gear.",
             "flightmodeswitch",
             "remote controller flight mode switch position.",
             "button",
             "remote controller has numerous momentary push buttons, which will use this state.",
             "fivedbutton",
             "state of the 5d button on the remote controller. vertical movement, horizontal movement and if it is pressed are  not exclusive.",
             "ispresent",
             "`true` if the hardware button is present.  @return a boolean value.",
             "isclicked",
             "`true` if button is pressed down.  @return a boolean value.",
             "isturned",
             "`true` if wheel value has changed.  @return a boolean value.",
             "getvalue",
             "wheel value in the range of [0, 1320]. the value represents the difference in an operation.  @return an int value.",
             "ispresent",
             "`true` if the transformation switch present.  @return a boolean value.",
             "getstate",
             "current transformation switch state.  @return an enum value of `state`",
             "state",
             "transformation switch position states.",
             "position_one",
             "position one. for all products except mavic pro, this is the left most position of the flight mode switch on a remote controller from the perspective of the pilot. for example, on a phantom 4 remote controller, position one is labeled a. for the mavic pro, this is the position that is furthest away from the pilot and labeled sport.",
             "position_two",
             "position two. for all products except mavic pro, this is the middle position of the flight mode switch on a remote controller from the perspective of the pilot. for example, on a phantom 4 remote controller, position two is labeled s. for the mavic pro, this is the position that is closest to the pilot (the p position).",
             "position_three",
             "position three. for all products except mavic pro, this is the right most position of the flight mode switch on a remote controller from the perspective of the pilot. for example, on a phantom 4 remote controller, position two is labeled p. the mavic pro does not have a third position for the flight mode switch.",
             "retract",
             "retract landing gear switch state.",
             "deploy",
             "deploy landing gear switch state.",
             "getverticaldirection",
             "get the movement in the vertical direction of the 5d button. up is the positive direction and down is the  negative direction.  @return an enum value of `fivedbuttondirection`",
             "gethorizontaldirection",
             "get the movement in the horizontal direction of the 5d button. right is the positive direction and left is the  negative direction.  @return an enum value of `fivedbuttondirection`",
             "fivedbuttondirection",
             "movement direction of the remote controller's 5d button.",
             "middle",
             "button has no movement in either the vertical direction or the horizontal direction.",
             "positive",
             "button is moved in the positive direction which is up or right.",
             "negative",
             "button is moved in the negative direction which is down or left.",
             "getid",
             "remote controller's unique identifier.  @return an int value.",
             "getname",
             "remote controller's name.  @return an instance of string.",
             "getpassword",
             "remote controller's password.  @return an instance of string.",
             "getsignalquality",
             "signal quality of a connected master or slave remote controller in percent [0, 100].  @return a short value.",
             "hasgimbalcontrolpermission",
             "`true` if the slave remote controller can control the aircraft's gimbal.  always `true` for a master remote controller.  @return a boolean value to check if the slave remote controller can control the aircraft's gimbal.",
             "controlrequestcallback",
             "the callback will handle the gimbal control request.",
             "getrcmode",
             "the master/slave mode of the remote controller.  @return an enum value of `rcmode`",
             "isconnected",
             "`true` if a slave remote controller joins a master remote controller.  @return a boolean value.",
             "getmasterid",
             "id of the master remote controller.  @return an instance of string.",
             "getslaveid",
             "id of the slave remote controller.  @return an instance of string.",
             "getauthorizationcode",
             "authorization code of the master remote controller that is a 6 element string of numbers.  @return an instance of string.",
             "callback",
             "callback function that updates the remote controller's master and slave state.",
             "aircraftmappingstyle",
             "the mapping style to which the remote controller is set.  @return an enum value of `aircraftmappingstyle`.",
             "leftvertical",
             "the mapping configuration for the left stick on the vertical axis.  @return an instance of `aircraftstickmapping`.",
             "lefthorizontal",
             "the mapping configuration for the left stick on the horizontal axis.  @return an instance of `aircraftstickmapping`.",
             "rightvertical",
             "the mapping configuration for the right stick on the vertical axis.  @return an instance of `aircraftstickmapping`.",
             "righthorizontal",
             "the mapping configuration for the right stick on the horizontal axis.  @return an instance of `aircraftstickmapping`.",
             "aircraftmapping",
             "constructor with a defined mapping style.  @param style the `aircraftmappingstyle` object.",
             "aircraftmapping",
             "constructor with defined mappings.  @param leftvertical the `aircraftmappingstyle` object. @param lefthorizontal the `aircraftmappingstyle` object. @param rightvertical the `aircraftmappingstyle` object. @param righthorizontal the `aircraftmappingstyle` object.",
             "aircraftstickmappingtarget",
             "the list of controls that may be mapped on a stick.",
             "none",
             "none",
             "throttle",
             "controls throttle",
             "pitch",
             "controls pitch",
             "roll",
             "controls roll",
             "yaw",
             "controls yaw",
             "aircraftstickmapping",
             "a struct representing a mapping configuration which includes the particular control and whether or not it is reversed.",
             "getmappingtarget",
             "the defined control to be mapped.  @return an enum value of `aircraftstickmappingtarget`",
             "isreversed",
             "whether or not the control is to be reversed.  @return a boolean value.",
             "aircraftmappingstyle",
             "the predefined mapping styles available to use. custom allow to specify all mapping configurations.",
             "style_1",
             "style 1.",
             "style_2",
             "style 2.",
             "style_3",
             "style 3.",
             "style_custom",
             "custom style. requires all mapping configurations.",
             "unknown",
             "unknown style.",
             "gimbalmapping",
             "the mapping styles to control the gimbal.",
             "leftvertical",
             "the mapping configuration for the left stick on the vertical axis.  @return an instance of `gimbalstickmapping`.",
             "lefthorizontal",
             "the mapping configuration for the left stick on the horizontal axis.  @return an instance of `gimbalstickmapping`.",
             "rightvertical",
             "the mapping configuration for the right stick on the vertical axis.  @return an instance of `gimbalstickmapping`.",
             "righthorizontal",
             "the mapping configuration for the right stick on the horizontal axis.  @return an instance of `gimbalstickmapping`.",
             "gimbalmappingstyle",
             "the control style to which the remote controller is set.  @return an enum value of `gimbalmappingstyle`.",
             "gimbalmappingstyle",
             "the gimbal control stick mapping styles.",
             "default",
             "default",
             "custom",
             "custom",
             "unknown",
             "unknown",
             "gimbalstickmappingtarget",
             "the list of available control to be used when creating custom mapping configurations",
             "none",
             "none",
             "pitch",
             "pitch",
             "roll",
             "roll",
             "yaw",
             "yaw",
             "gimbalstickmapping",
             "a struct representing a custom mapping configuration.",
             "getmappingtarget",
             "the specific control to be mapped.  @return the enum value of `gimbalstickmappingtarget`.",
             "isreversed",
             "whether or not the control is to be reversed.  @return a boolean value.",
             "unpaired",
             "the remote controller is not pairing.",
             "pairing",
             "the remote controller is currently pairing.",
             "paired",
             "the remote controller's pairing was completed.",
             "unknown",
             "the remote controller's pairing state is unknown.",
             "pitch",
             "the upper left wheel will control the gimbal's pitch.",
             "roll",
             "the upper left wheel will control the gimbal's roll.",
             "yaw",
             "the upper left wheel will control the gimbal's yaw.",
             "getc1buttontag",
             "button tag for custom button 2.  @return value that is the tag",
             "getc2buttontag",
             "button tag for custom button 2  @return value that is the tag",
             "builder",
             "create a `custombuttontags` instance with  values for c1 and c2. a valid tag is an integer in range [0, 255].",
             "c1buttontag",
             "button tag for custom button 2  @param c1buttontag button tag for custom button 1  @return builder object.",
             "c2buttontag",
             "button tag for custom button 2  @param c2buttontag button tag for custom button 2  @return builder object.",
             "build",
             "button tag for custom button  @return `custombuttontags` object.",
             "never",
             "the remote controller does not charge the mobile device.",
             "always",
             "the remote controller charges the mobile device until the the mobile device is fully charged.",
             "intelligent",
             "the remote controller charges the mobile device in an intelligent mode: the remote controller starts charging  when the mobile device's battery is lowered then 20% and stops charging when the mobile device's battery is above 50%.",
             "unknown",
             "the remote controller's charging mode is unknown.",
             "master",
             "remote controller is a master (will route a connected slave remote  controller's commands to the aircraft).",
             "slave",
             "remote controller is currently a slave remote controller (sends commands to aircraft through a master remote controller).",
             "normal",
             "remote controller is not connected to another remote controller.",
             "unknown",
             "the remote controller's mode is unknown.",
             "accepted",
             "the slave remote controller's attempt to join the master remote controller was successful.",
             "password_error",
             "the slave remote controller's attempt to join the master remote controller was unsuccessful due to a password error.",
             "rejected",
             "the slave remote controller's attempt to join the master remote controller was rejected.",
             "maximum_capacity",
             "the slave remote controller's attempt to join the master remote controller was unsuccessful because the master  remote controller is at the maximum number of slaves it can have.",
             "timeout",
             "the slave remote controller's attempt to join the master remote controller was unsuccessful because the request timed out.",
             "unknown",
             "the result of the slave remote controller's attempt to join the master remote controller is unknown.",
             "getpitchspeedcoefficient",
             "gimbal's pitch speed with range [0, 100].  @return an int value.",
             "getrollspeedcoefficient",
             "gimbal's roll speed with range [0, 100].  @return an int value.",
             "getyawspeedcoefficient",
             "gimbal's yaw speed with range [0, 100].  @return an int value.",
             "accepted",
             "the master remote controller agrees to the slave's request.",
             "rejected",
             "the master remote controller denies the slave's request. if the slave remote controller wants to control the gimbal, it must send a request to the master remote controller first. then the master remote controller can decide to approve or deny the request.",
             "timeout",
             "the slave remote controller's request timed out.",
             "unknown",
             "the slave remote controller's request is unknown.",
             "responseforgimbalcontrol",
             "constructor of the class.  @param requesterid slave remote controller's identifier. @param isagree true</code> if the master remote controller agrees to give the slave remote controller the right to control the gimbal.",
             "getrequesterid",
             "get the slave remote controller's identifier.  @return the int value of the slave remote controller id.",
             "isagree",
             "true</code> if the master remote controller agrees to give the slave remote controller the right to control the gimbal.  @return agree or disagree to control the gimbal.",
             "completioncallback",
             "completion callback for asynchronous operations when no information needs to be returned from the operation.",
             "onresult",
             "invoked when the asynchronous operation completes. if the operation  completes successfully, `error` will be `null`. override to handle in your own code.  @param error the dji error result",
             "completioncallbackwith",
             "completion callback for asynchronous operations when information that requires one parameter (t) needs to be returned from the operation. the parameter t will be defined where the operation called.",
             "onsuccess",
             "invoked when the asynchronous operation completes successfully. override to handle in your own code.  @param t the parameter being returned.",
             "onfailure",
             "invoked when the asynchronous operation fails to complete normally. override to handle in your own code.  @param error the dji error result",
             "completioncallbackwithtwoparam",
             "completion callback for asynchronous operations when information that requires two parameters (x, y) needs to be returned from the  operation. the parameters x and y will be defined where the operation is called.",
             "onsuccess",
             "invoked when the asynchronous operation completes successfully. override to handle in your own code.  @param x the first parameter being returned. @param y the second parameter being returned.",
             "onfailure",
             "invoked when the asynchronous operation fails to complete normally. override to handle in your own code.  @param error the dji error result",
        ],
        "longSearchIndex": [
        ],
        "info": [
            [
                   "getFlightController",
                   2,
                   "/Products/Aircraft/DJIAircraft.html",
                   "#DJIAircraft_flightController_inline",
                   "Returns an instance of the aircraft's flight controller.  @return DJIFlightController component.",
            ],
            [
                   "Returns an instance of the aircraft's flight controller.  @return DJIFlightController component.",
                   1,
                   "/Products/Aircraft/DJIAircraft.html",
                   "#DJIAircraft_flightController_inline",
                   "",
            ],
            [
                   "getCameras",
                   2,
                   "/Products/Aircraft/DJIAircraft.html",
                   "#DJIAircraft_cameras_inline",
                   "Retrieves instances of the product's cameras. This is used when the aircraft has multiple DJI cameras, e.g. M210 and  M210 RTK. Note, when two cameras do exist, camera order within the array will not always the same. For example: On the M210, the port side (left) camera will have property `getIndex` to be 0 and the starboard side (right)  camera will have `getIndex` to be 1. However, the first object of `getCameras` will not  necessarily always be the camera with `getIndex` of 0.  @return A list of the aircraft's cameras.",
            ],
            [
                   "Retrieves instances of the product's cameras. This is used when the aircraft has multiple DJI cameras, e.g. M210 and  M210 RTK. Note, when two cameras do exist, camera order within the array will not always the same. For example: On the M210, the port side (left) camera will have property `getIndex` to be 0 and the starboard side (right)  camera will have `getIndex` to be 1. However, the first object of `getCameras` will not  necessarily always be the camera with `getIndex` of 0.  @return A list of the aircraft's cameras.",
                   1,
                   "/Products/Aircraft/DJIAircraft.html",
                   "#DJIAircraft_cameras_inline",
                   "",
            ],
            [
                   "getGimbals",
                   2,
                   "/Products/Aircraft/DJIAircraft.html",
                   "#DJIAircraft_gimbals_inline",
                   "Retrieves instances of the product's gimbals. This is used when the aircraft has multiple DJI gimbals, e.g. M210  and M210 RTK. Note, when two gimbals do exist, gimbal order within the array will not always the same. For example:  On the M210, the port side (left) gimbal will have property `getIndex` to be 0 and the starboard  side (right) gimbal will have `getIndex` to be 1. However, the first object of `getGimbals`  will not necessarily always be the gimbal with `getIndex` of 0.  @return A list of the aircraft's gimbals.",
            ],
            [
                   "Retrieves instances of the product's gimbals. This is used when the aircraft has multiple DJI gimbals, e.g. M210  and M210 RTK. Note, when two gimbals do exist, gimbal order within the array will not always the same. For example:  On the M210, the port side (left) gimbal will have property `getIndex` to be 0 and the starboard  side (right) gimbal will have `getIndex` to be 1. However, the first object of `getGimbals`  will not necessarily always be the gimbal with `getIndex` of 0.  @return A list of the aircraft's gimbals.",
                   1,
                   "/Products/Aircraft/DJIAircraft.html",
                   "#DJIAircraft_gimbals_inline",
                   "",
            ],
            [
                   "getRemoteController",
                   2,
                   "/Products/Aircraft/DJIAircraft.html",
                   "#DJIAircraft_remoteController_inline",
                   "Returns an instance of the aircraft's remote controller.  @return DJIRemoteController component.",
            ],
            [
                   "Returns an instance of the aircraft's remote controller.  @return DJIRemoteController component.",
                   1,
                   "/Products/Aircraft/DJIAircraft.html",
                   "#DJIAircraft_remoteController_inline",
                   "",
            ],
            [
                   "getMobileRemoteController",
                   2,
                   "/Products/Aircraft/DJIAircraft.html",
                   "#DJIAircraft_mobileRemoteController_inline",
                   "A simulated remote controller on the mobile device. It is supported by Mavic Pro and Spark using WiFi.  @return DJIMobileRemoteController component.",
            ],
            [
                   "A simulated remote controller on the mobile device. It is supported by Mavic Pro and Spark using WiFi.  @return DJIMobileRemoteController component.",
                   1,
                   "/Products/Aircraft/DJIAircraft.html",
                   "#DJIAircraft_mobileRemoteController_inline",
                   "",
            ],
            [
                   "UNKNOWN_AIRCRAFT",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameUnknownAircraft_inline",
                   "The Aircraft's model name is unknown.",
            ],
            [
                   "The Aircraft's model name is unknown.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameUnknownAircraft_inline",
                   "",
            ],
            [
                   "INSPIRE_1",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameInspire1_inline",
                   "The aircraft's model name is Inspire 1.",
            ],
            [
                   "The aircraft's model name is Inspire 1.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameInspire1_inline",
                   "",
            ],
            [
                   "INSPIRE_1_PRO",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameInspire1Pro_inline",
                   "The aircraft's model name is Inspire 1 Pro.",
            ],
            [
                   "The aircraft's model name is Inspire 1 Pro.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameInspire1Pro_inline",
                   "",
            ],
            [
                   "INSPIRE_1_RAW",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameInspire1RAW_inline",
                   "The aircraft's model name is Inspire 1 Raw.",
            ],
            [
                   "The aircraft's model name is Inspire 1 Raw.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameInspire1RAW_inline",
                   "",
            ],
            [
                   "INSPIRE_2",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameInspire2_inline",
                   "The aircraft's model name is Inspire 2.",
            ],
            [
                   "The aircraft's model name is Inspire 2.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameInspire2_inline",
                   "",
            ],
            [
                   "PHANTOM_3_PROFESSIONAL",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNamePhantom3Professional_inline",
                   "The aircraft's model name is Phantom 3 Professional.",
            ],
            [
                   "The aircraft's model name is Phantom 3 Professional.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNamePhantom3Professional_inline",
                   "",
            ],
            [
                   "PHANTOM_3_ADVANCED",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNamePhantom3Advanced_inline",
                   "The aircraft's model name is Phantom 3 Advanced.",
            ],
            [
                   "The aircraft's model name is Phantom 3 Advanced.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNamePhantom3Advanced_inline",
                   "",
            ],
            [
                   "PHANTOM_3_STANDARD",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNamePhantom3Standard_inline",
                   "The aircraft's model name is Phantom 3 Standard.",
            ],
            [
                   "The aircraft's model name is Phantom 3 Standard.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNamePhantom3Standard_inline",
                   "",
            ],
            [
                   "Phantom_3_4K",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNamePhantom34K_inline",
                   "The aircraft's model name is Phantom 3 4K.",
            ],
            [
                   "The aircraft's model name is Phantom 3 4K.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNamePhantom34K_inline",
                   "",
            ],
            [
                   "PHANTOM_4",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNamePhantom4_inline",
                   "The aircraft's model name is Phantom 4.",
            ],
            [
                   "The aircraft's model name is Phantom 4.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNamePhantom4_inline",
                   "",
            ],
            [
                   "PHANTOM_4_PRO",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNamePhantom4Pro_inline",
                   "The aircraft's model name is Phantom 4 Pro.",
            ],
            [
                   "The aircraft's model name is Phantom 4 Pro.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNamePhantom4Pro_inline",
                   "",
            ],
            [
                   "MATRICE_100",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameMatrice100_inline",
                   "The aircraft's model name is Matrice 100.",
            ],
            [
                   "The aircraft's model name is Matrice 100.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameMatrice100_inline",
                   "",
            ],
            [
                   "MATRICE_200",
                   2,
                   "/Products/Aircraft/DJIAircraft.html",
                   "#DJIAircraft_DJIAircraftModelNameMatrice200_inline",
                   "The aircraft's model name is Matrice 200.",
            ],
            [
                   "The aircraft's model name is Matrice 200.",
                   1,
                   "/Products/Aircraft/DJIAircraft.html",
                   "#DJIAircraft_DJIAircraftModelNameMatrice200_inline",
                   "",
            ],
            [
                   "PHANTOM_4_ADVANCED",
                   2,
                   "/Products/Aircraft/DJIAircraft.html",
                   "#DJIAircraft_DJIAircraftModelNamePhantom4Advanced_inline",
                   "The aircraft's model name is Phantom 4 Advanced.",
            ],
            [
                   "The aircraft's model name is Phantom 4 Advanced.",
                   1,
                   "/Products/Aircraft/DJIAircraft.html",
                   "#DJIAircraft_DJIAircraftModelNamePhantom4Advanced_inline",
                   "",
            ],
            [
                   "MATRICE_600",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameMatrice600_inline",
                   "The aircraft's model name is Matrice 600.",
            ],
            [
                   "The aircraft's model name is Matrice 600.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameMatrice600_inline",
                   "",
            ],
            [
                   "MATRICE_600_PRO",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameMatrice600Pro_inline",
                   "The aircraft's model name is Matrice 600 Pro.",
            ],
            [
                   "The aircraft's model name is Matrice 600 Pro.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameMatrice600Pro_inline",
                   "",
            ],
            [
                   "A3",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameA3_inline",
                   "The aircraft flight controller's model name is A3.",
            ],
            [
                   "The aircraft flight controller's model name is A3.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameA3_inline",
                   "",
            ],
            [
                   "MAVIC_PRO",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameMavicPro_inline",
                   "The aircraft's model name is Mavic Pro.",
            ],
            [
                   "The aircraft's model name is Mavic Pro.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameMavicPro_inline",
                   "",
            ],
            [
                   "Spark",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameSpark_inline",
                   "The aircraft's model name is Spark.",
            ],
            [
                   "The aircraft's model name is Spark.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameSpark_inline",
                   "",
            ],
            [
                   "MATRICE_210",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameMatrice210_inline",
                   "The aircraft's model name is Matrice 210.",
            ],
            [
                   "The aircraft's model name is Matrice 210.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameMatrice210_inline",
                   "",
            ],
            [
                   "MATRICE_210_RTK",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameMatrice210RTK_inline",
                   "The aircraft's model name is Matrice 210 RTK.",
            ],
            [
                   "The aircraft's model name is Matrice 210 RTK.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameMatrice210RTK_inline",
                   "",
            ],
            [
                   "N3",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameN3_inline",
                   "The aircraft flight controller's model name is N3.",
            ],
            [
                   "The aircraft flight controller's model name is N3.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIAircraft_DJIAircraftModelNameN3_inline",
                   "",
            ],
            [
                   "getAppActivationState",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_appActivationState_inline",
                   "Current App Activation state.  @return An enum value of `AppActivationState`.",
            ],
            [
                   "Current App Activation state.  @return An enum value of `AppActivationState`.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_appActivationState_inline",
                   "",
            ],
            [
                   "getAircraftBindingState",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_aircraftBindingState_inline",
                   "Current aircraft binding state. Users in China need to bind additional account details with  the aircraft one-time through DJI Go. These details need to be bound and the application  needs to be activated by logging into their DJI Go account to lift the flight restrictions.  @return An enum value of `AircraftBindingState`.",
            ],
            [
                   "Current aircraft binding state. Users in China need to bind additional account details with  the aircraft one-time through DJI Go. These details need to be bound and the application  needs to be activated by logging into their DJI Go account to lift the flight restrictions.  @return An enum value of `AircraftBindingState`.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_aircraftBindingState_inline",
                   "",
            ],
            [
                   "addAircraftBindingStateListener",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_addAircraftBindingStateListener_inline",
                   "Add the Aircraft binding state listener.  @param listener A listener of `AircraftBindingStateListener`.",
            ],
            [
                   "Add the Aircraft binding state listener.  @param listener A listener of `AircraftBindingStateListener`.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_addAircraftBindingStateListener_inline",
                   "",
            ],
            [
                   "addAppActivationStateListener",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_addAppActivationStateListener_inline",
                   "Add listener for the app activation state update.  @param listener A listener of `AppActivationStateListener`.",
            ],
            [
                   "Add listener for the app activation state update.  @param listener A listener of `AppActivationStateListener`.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_addAppActivationStateListener_inline",
                   "",
            ],
            [
                   "removeAircraftBindingStateListener",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_removeAircraftBindingStateListener_inline",
                   "Remove the aircraft binding state listener.  @param listener A listener of `AircraftBindingStateListener`.",
            ],
            [
                   "Remove the aircraft binding state listener.  @param listener A listener of `AircraftBindingStateListener`.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_removeAircraftBindingStateListener_inline",
                   "",
            ],
            [
                   "removeAppActivationStateListener",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_removeAppActivationStateListener_inline",
                   "Remove activation state listener.  @param listener A listener of `AppActivationStateListener`.",
            ],
            [
                   "Remove activation state listener.  @param listener A listener of `AppActivationStateListener`.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_removeAppActivationStateListener_inline",
                   "",
            ],
            [
                   "AircraftBindingState",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationAircraftBindingState_inline",
                   "The aircraft's binding state.",
            ],
            [
                   "The aircraft's binding state.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationAircraftBindingState_inline",
                   "",
            ],
            [
                   "INITIAL",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationAircraftBindingState_Initial_inline",
                   "The binding state of the aircraft is not yet determined. The aircraft will only be in this  state until DJI Go or a DJI Mobile SDK based application rights the binding information to  the aircraft. Binding is only required if the user is in China. If the user is not in China,  then this state will become `NOT_REQUIRED` after the  country code check is complete. If country code check has been disabled, the user will need  to use DJI Go to move to the `NOT_REQUIRED` state. In  this state, the aircraft will have the 30m height and 50m radius limitation.",
            ],
            [
                   "The binding state of the aircraft is not yet determined. The aircraft will only be in this  state until DJI Go or a DJI Mobile SDK based application rights the binding information to  the aircraft. Binding is only required if the user is in China. If the user is not in China,  then this state will become `NOT_REQUIRED` after the  country code check is complete. If country code check has been disabled, the user will need  to use DJI Go to move to the `NOT_REQUIRED` state. In  this state, the aircraft will have the 30m height and 50m radius limitation.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationAircraftBindingState_Initial_inline",
                   "",
            ],
            [
                   "UNBOUND",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationAircraftBindingState_Unbound_inline",
                   "The aircraft is not currently bound, and needs to be (as it is in China). In this state, the  aircraft will have 30m max flight height and 50m max flight distance limitation. User should  finish the one-off binding process with DJI GO to remove the flight limitation.",
            ],
            [
                   "The aircraft is not currently bound, and needs to be (as it is in China). In this state, the  aircraft will have 30m max flight height and 50m max flight distance limitation. User should  finish the one-off binding process with DJI GO to remove the flight limitation.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationAircraftBindingState_Unbound_inline",
                   "",
            ],
            [
                   "UNBOUND_BUT_CANNOT_SYNC",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationAircraftBindingState_UnboundButCannotSync_inline",
                   "The aircraft is flying inside China and is unbound. The aircraft can be bound using DJI Go.  If DJI Go is connected to the aircraft, then the binding will be stored in the aircraft. If  DJI Go is not connected to the aircraft during the binding process, then the binding result  will be stored on a server. The SDK can query this server to see if the binding has already  happened, and if it has, download the binding to the aircraft. However, if the aircraft is  unbound, and the server is not reachable, then this state will be presented. The user should  connect the mobile device to the Internet to refresh this state.",
            ],
            [
                   "The aircraft is flying inside China and is unbound. The aircraft can be bound using DJI Go.  If DJI Go is connected to the aircraft, then the binding will be stored in the aircraft. If  DJI Go is not connected to the aircraft during the binding process, then the binding result  will be stored on a server. The SDK can query this server to see if the binding has already  happened, and if it has, download the binding to the aircraft. However, if the aircraft is  unbound, and the server is not reachable, then this state will be presented. The user should  connect the mobile device to the Internet to refresh this state.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationAircraftBindingState_UnboundButCannotSync_inline",
                   "",
            ],
            [
                   "BOUND",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationAircraftBindingState_Bound_inline",
                   "The aircraft is bound.",
            ],
            [
                   "The aircraft is bound.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationAircraftBindingState_Bound_inline",
                   "",
            ],
            [
                   "NOT_REQUIRED",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationAircraftBindingState_NotRequired_inline",
                   "The aircraft is not bound but it is not currently located in China. Therefore, binding the aircraft is not required.",
            ],
            [
                   "The aircraft is not bound but it is not currently located in China. Therefore, binding the aircraft is not required.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationAircraftBindingState_NotRequired_inline",
                   "",
            ],
            [
                   "NOT_SUPPORTED",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationAircraftBindingState_NotSupported_inline",
                   "The aircraft's firmware does not support the App Activation system.",
            ],
            [
                   "The aircraft's firmware does not support the App Activation system.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationAircraftBindingState_NotSupported_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationAircraftBindingState_Unknown_inline",
                   "Either the aircraft is disconnected or the connected product is not a DJI aircraft.",
            ],
            [
                   "Either the aircraft is disconnected or the connected product is not a DJI aircraft.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationAircraftBindingState_Unknown_inline",
                   "",
            ],
            [
                   "AppActivationState",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationState_inline",
                   "The App Activation state.",
            ],
            [
                   "The App Activation state.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationState_inline",
                   "",
            ],
            [
                   "NOT_SUPPORTED",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationState_NotSupported_inline",
                   "The aircraft's firmware does not support the App Activation System.",
            ],
            [
                   "The aircraft's firmware does not support the App Activation System.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationState_NotSupported_inline",
                   "",
            ],
            [
                   "LOGIN_REQUIRED",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationState_LoginRequired_inline",
                   "The application needs to be activated by the user through their DJI account. Use `UserAccountManager` to enable the user to log in. Log in is only required if the  aircraft is located in China.",
            ],
            [
                   "The application needs to be activated by the user through their DJI account. Use `UserAccountManager` to enable the user to log in. Log in is only required if the  aircraft is located in China.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationState_LoginRequired_inline",
                   "",
            ],
            [
                   "ACTIVATED",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationState_Activated_inline",
                   "The application is activated and flight restrictions turned off.",
            ],
            [
                   "The application is activated and flight restrictions turned off.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationState_Activated_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationState_Unknown_inline",
                   "Either the aircraft is disconnected or the connected product is not a DJI aircraft.",
            ],
            [
                   "Either the aircraft is disconnected or the connected product is not a DJI aircraft.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_DJIAppActivationState_Unknown_inline",
                   "",
            ],
            [
                   "AircraftBindingStateListener",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_AircraftBindingStateListenerInterface_inline",
                   "An interface for obtaining `AircraftBindingState`.",
            ],
            [
                   "An interface for obtaining `AircraftBindingState`.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_AircraftBindingStateListenerInterface_inline",
                   "",
            ],
            [
                   "AppActivationStateListener",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_AppActivationStateListenerInterface_inline",
                   "An interface for obtaining `AppActivationState`.",
            ],
            [
                   "An interface for obtaining `AppActivationState`.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_AppActivationStateListenerInterface_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_AppActivationStateOnUpdateCallback_inline",
                   "Called when the App Activation state changes.  @param state The App Activation state. Use this state to check if login is required to  unrestrict the flight limitation.",
            ],
            [
                   "Called when the App Activation state changes.  @param state The App Activation state. Use this state to check if login is required to  unrestrict the flight limitation.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_AppActivationStateOnUpdateCallback_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_AircraftBindingStateOnUpdateCallback_inline",
                   "Called when the App Activation manager updates the aircraft binding state.  @param state The aircraft binding state. Use this state to check if it is required to use  DJI GO to bind the aircraft.",
            ],
            [
                   "Called when the App Activation manager updates the aircraft binding state.  @param state The aircraft binding state. Use this state to check if it is required to use  DJI GO to bind the aircraft.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "#DJIAppActivationManager_AircraftBindingStateOnUpdateCallback_inline",
                   "",
            ],
            [
                   "setComponentListener",
                   2,
                   "/Components/BaseComponent/DJIBaseComponent.html",
                   "#DJIBaseComponent_setDJIComponentListener_inline",
                   "Sets the listener for the DJI component.  @param listener The callback of `ComponentListener`.",
            ],
            [
                   "Sets the listener for the DJI component.  @param listener The callback of `ComponentListener`.",
                   1,
                   "/Components/BaseComponent/DJIBaseComponent.html",
                   "#DJIBaseComponent_setDJIComponentListener_inline",
                   "",
            ],
            [
                   "onConnectivityChange",
                   2,
                   "/Components/BaseComponent/DJIBaseComponent.html",
                   "#DJIBaseComponent_ConnectivityChanged_inline",
                   "Called when the connectivity status has changes for the component. This callback will be called when the component disconnects from the product. If the product itself gets disconnected,  this callback method will be called by all of the product component.  @param isConnected `true` if the component is connected.",
            ],
            [
                   "Called when the connectivity status has changes for the component. This callback will be called when the component disconnects from the product. If the product itself gets disconnected,  this callback method will be called by all of the product component.  @param isConnected `true` if the component is connected.",
                   1,
                   "/Components/BaseComponent/DJIBaseComponent.html",
                   "#DJIBaseComponent_ConnectivityChanged_inline",
                   "",
            ],
            [
                   "getIndex",
                   2,
                   "/Components/BaseComponent/DJIBaseComponent.html",
                   "#DJIBaseComponent_index_inline",
                   "Returns the component index. Index is zero based. A component will have an index greater than zero when there  are multiple components of the same type on the DJI product, and one of the components already has the index 0.  For instance, M210 can have two gimbal mounted cameras, and will therefore have two gimbal components with indeces  0 and 1, and two camera components with indeces 0 and 1. For Matrice 600, there are printed numbers on the battery  boxes. The `Battery` component instance with index 0 corresponds to battery compartment number 1. For Inspire 2  and M200 series, `Battery` with index 0 corresponds to the battery on the port (left hand) side of the aircraft.  For M210 and M210 RTK, `Camera` and `Gimbal` with index 0 corresponds to the camera and gimbal on the port  (left hand) side of the aircraft.  @return An int value of index.",
            ],
            [
                   "Returns the component index. Index is zero based. A component will have an index greater than zero when there  are multiple components of the same type on the DJI product, and one of the components already has the index 0.  For instance, M210 can have two gimbal mounted cameras, and will therefore have two gimbal components with indeces  0 and 1, and two camera components with indeces 0 and 1. For Matrice 600, there are printed numbers on the battery  boxes. The `Battery` component instance with index 0 corresponds to battery compartment number 1. For Inspire 2  and M200 series, `Battery` with index 0 corresponds to the battery on the port (left hand) side of the aircraft.  For M210 and M210 RTK, `Camera` and `Gimbal` with index 0 corresponds to the camera and gimbal on the port  (left hand) side of the aircraft.  @return An int value of index.",
                   1,
                   "/Components/BaseComponent/DJIBaseComponent.html",
                   "#DJIBaseComponent_index_inline",
                   "",
            ],
            [
                   "isConnected",
                   2,
                   "/Components/BaseComponent/DJIBaseComponent.html",
                   "#DJIBaseComponent_connected_inline",
                   "`true` if the component is connected.  @return `true` if the component is connected.",
            ],
            [
                   "`true` if the component is connected.  @return `true` if the component is connected.",
                   1,
                   "/Components/BaseComponent/DJIBaseComponent.html",
                   "#DJIBaseComponent_connected_inline",
                   "",
            ],
            [
                   "getSerialNumber",
                   2,
                   "/Components/BaseComponent/DJIBaseComponent.html",
                   "#DJIBaseComponent_getSerialNumber_inline",
                   "Gets the serial number of the component. Depending on the component, this serial number might not match the serial number found  on the physical component.  @param callback The execution callback with the value returned.",
            ],
            [
                   "Gets the serial number of the component. Depending on the component, this serial number might not match the serial number found  on the physical component.  @param callback The execution callback with the value returned.",
                   1,
                   "/Components/BaseComponent/DJIBaseComponent.html",
                   "#DJIBaseComponent_getSerialNumber_inline",
                   "",
            ],
            [
                   "getFirmwareVersion",
                   2,
                   "/Components/BaseComponent/DJIBaseComponent.html",
                   "#DJIBaseComponent_getFirmwareVersion_inline",
                   "Returns the firmware version of the component. Each component will  have a different firmware version, the combination of which will  form the package firmware version `getFirmwarePackageVersion` found in `BaseProduct`.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Returns the firmware version of the component. Each component will  have a different firmware version, the combination of which will  form the package firmware version `getFirmwarePackageVersion` found in `BaseProduct`.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/BaseComponent/DJIBaseComponent.html",
                   "#DJIBaseComponent_getFirmwareVersion_inline",
                   "",
            ],
            [
                   "ComponentListener",
                   2,
                   "/Components/BaseComponent/DJIBaseComponent.html",
                   "#DJIBaseComponent_DJIComponentListenerInterface_inline",
                   "Receives notifications of component connectivity changes.",
            ],
            [
                   "Receives notifications of component connectivity changes.",
                   1,
                   "/Components/BaseComponent/DJIBaseComponent.html",
                   "#DJIBaseComponent_DJIComponentListenerInterface_inline",
                   "",
            ],
            [
                   "setBaseProductListener",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_setBaseProductListener_inline",
                   "Sets the listener for the DJI base product.  @param listener The callback of `BaseProductListener`.",
            ],
            [
                   "Sets the listener for the DJI base product.  @param listener The callback of `BaseProductListener`.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_setBaseProductListener_inline",
                   "",
            ],
            [
                   "setDiagnosticsInformationCallback",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_setUpdateDiagnosticsListCallback_inline",
                   "Sets up the diagnostics list update callback.  @param callback The callback of `DiagnosticsInformationCallback`.",
            ],
            [
                   "Sets up the diagnostics list update callback.  @param callback The callback of `DiagnosticsInformationCallback`.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_setUpdateDiagnosticsListCallback_inline",
                   "",
            ],
            [
                   "getFirmwarePackageVersion",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_getFirmwarePackageVersion_inline",
                   "Gets the product's firmware package version. Products other than  Phantom 4, Phantom 4 Pro, Mavic Pro, and Inspire 2, require internet connection. The execution time for this method  depends on the speed of internet connectivity.  @return The product's firmware package version string.",
            ],
            [
                   "Gets the product's firmware package version. Products other than  Phantom 4, Phantom 4 Pro, Mavic Pro, and Inspire 2, require internet connection. The execution time for this method  depends on the speed of internet connectivity.  @return The product's firmware package version string.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_getFirmwarePackageVersion_inline",
                   "",
            ],
            [
                   "setName",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_setName_inline",
                   "Retrieves the model of the product.  @param name Name to be set to the aircraft. @param callback Asynchronous execution result.",
            ],
            [
                   "Retrieves the model of the product.  @param name Name to be set to the aircraft. @param callback Asynchronous execution result.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_setName_inline",
                   "",
            ],
            [
                   "getName",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_getName_inline",
                   "Retrieves the model of the product.  @param callback The execution callback with the returned value.",
            ],
            [
                   "Retrieves the model of the product.  @param callback The execution callback with the returned value.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_getName_inline",
                   "",
            ],
            [
                   "getModel",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_model_inline",
                   "Retrieves the model of the product. See `Aircraft` and  `HandHeld` for the possible strings that can be returned.  @return The model of the product.",
            ],
            [
                   "Retrieves the model of the product. See `Aircraft` and  `HandHeld` for the possible strings that can be returned.  @return The model of the product.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_model_inline",
                   "",
            ],
            [
                   "isConnected",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_connected_inline",
                   "`true` if the device is connected.  @return `true` if the device is connected.",
            ],
            [
                   "`true` if the device is connected.  @return `true` if the device is connected.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_connected_inline",
                   "",
            ],
            [
                   "getCamera",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_getCamera_inline",
                   "Retrieves an instance of the device's camera.  @return An instance of the aircraft's camera.",
            ],
            [
                   "Retrieves an instance of the device's camera.  @return An instance of the aircraft's camera.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_getCamera_inline",
                   "",
            ],
            [
                   "getBattery",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_getBattery_inline",
                   "Retrieves an instance of the product's smart battery. When using products with multiple batteries, such as the M600 or Inspire 2, use `getBatteries`, as this method will only return a single battery.  @return An instance of the aircraft's smart battery.",
            ],
            [
                   "Retrieves an instance of the product's smart battery. When using products with multiple batteries, such as the M600 or Inspire 2, use `getBatteries`, as this method will only return a single battery.  @return An instance of the aircraft's smart battery.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_getBattery_inline",
                   "",
            ],
            [
                   "getBatteries",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_getBatteries_inline",
                   "Returns an array of aircraft's batteries. It is used when the aircraft has multiple  batteries, e.g. Matrice 600.  @return A List of `Battery` objects.",
            ],
            [
                   "Returns an array of aircraft's batteries. It is used when the aircraft has multiple  batteries, e.g. Matrice 600.  @return A List of `Battery` objects.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_getBatteries_inline",
                   "",
            ],
            [
                   "getGimbal",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_getGimbal_inline",
                   "Retrieves an instance of the device's gimbal.  @return An instance of the aircraft's gimbal.",
            ],
            [
                   "Retrieves an instance of the device's gimbal.  @return An instance of the aircraft's gimbal.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_getGimbal_inline",
                   "",
            ],
            [
                   "getAirLink",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_getAirLink_inline",
                   "Retrieves an instance of the device's AirLink.  @return An instance of the aircraft's AirLink.",
            ],
            [
                   "Retrieves an instance of the device's AirLink.  @return An instance of the aircraft's AirLink.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_getAirLink_inline",
                   "",
            ],
            [
                   "ComponentKey",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_componentKey_inline",
                   "Specifies all the components.",
            ],
            [
                   "Specifies all the components.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_componentKey_inline",
                   "",
            ],
            [
                   "CAMERA",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_componentKey_camera_inline",
                   "Camera component.",
            ],
            [
                   "Camera component.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_componentKey_camera_inline",
                   "",
            ],
            [
                   "GIMBAL",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_componentKey_gimbal_inline",
                   "Gimbal component.",
            ],
            [
                   "Gimbal component.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_componentKey_gimbal_inline",
                   "",
            ],
            [
                   "REMOTE_CONTROLLER",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_componentKey_remoteController_inline",
                   "Remote Controller component.",
            ],
            [
                   "Remote Controller component.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_componentKey_remoteController_inline",
                   "",
            ],
            [
                   "FLIGHT_CONTROLLER",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_componentKey_flightController_inline",
                   "Flight Controller component.",
            ],
            [
                   "Flight Controller component.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_componentKey_flightController_inline",
                   "",
            ],
            [
                   "BATTERY",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_componentKey_battery_inline",
                   "Battery component.",
            ],
            [
                   "Battery component.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_componentKey_battery_inline",
                   "",
            ],
            [
                   "HAND_HELD_CONTROLLER",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_componentKey_handheldController_inline",
                   "Handheld Controller component.",
            ],
            [
                   "Handheld Controller component.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_componentKey_handheldController_inline",
                   "",
            ],
            [
                   "AIR_LINK",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_componentKey_airLink_inline",
                   "AirLink component.",
            ],
            [
                   "AirLink component.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_componentKey_airLink_inline",
                   "",
            ],
            [
                   "MOBILE_REMOTE_CONTROLLER",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_componentKey_mobileRemoteController_inline",
                   "Mobile remote controller component.",
            ],
            [
                   "Mobile remote controller component.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_componentKey_mobileRemoteController_inline",
                   "",
            ],
            [
                   "BaseProductListener",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_baseProductListener_inline",
                   "Receives notifications of component and product connectivity changes.",
            ],
            [
                   "Receives notifications of component and product connectivity changes.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_baseProductListener_inline",
                   "",
            ],
            [
                   "Model",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIModelNameString_inline",
                   "Class containing all product strings.",
            ],
            [
                   "Class containing all product strings.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIModelNameString_inline",
                   "",
            ],
            [
                   "VideoFeeder",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "",
                   "Class that manages live video feed from DJI products to the mobile device.",
            ],
            [
                   "Class that manages live video feed from DJI products to the mobile device.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "",
                   "",
            ],
            [
                   "onConnectivityChange",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_ConnectivityChanges_inline",
                   "Called when the connectivity between mobile device and product  changes.  @param isConnected `true` if the product is connected to the mobile device.",
            ],
            [
                   "Called when the connectivity between mobile device and product  changes.  @param isConnected `true` if the product is connected to the mobile device.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_ConnectivityChanges_inline",
                   "",
            ],
            [
                   "onComponentChange",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_ComponentChanges_inline",
                   "Called when a component object changes.  @param key An enum value of the `ComponentKey`. @param oldComponent An instance of `BaseComponent`. @param newComponent An instance of `BaseComponent`.",
            ],
            [
                   "Called when a component object changes.  @param key An enum value of the `ComponentKey`. @param oldComponent An instance of `BaseComponent`. @param newComponent An instance of `BaseComponent`.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIBaseProduct_ComponentChanges_inline",
                   "",
            ],
            [
                   "setBluetoothDevicesListCallback",
                   2,
                   "/Components/SDKManager/DJIBluetoothProductConnector.html",
                   "#DJIBluetoothProductConnector_setBluetoothProductConnectorListener_inline",
                   "Set DJIBluetoothProductConnector Listener.  @param callback The callback of `BluetoothDevicesListCallback`.",
            ],
            [
                   "Set DJIBluetoothProductConnector Listener.  @param callback The callback of `BluetoothDevicesListCallback`.",
                   1,
                   "/Components/SDKManager/DJIBluetoothProductConnector.html",
                   "#DJIBluetoothProductConnector_setBluetoothProductConnectorListener_inline",
                   "",
            ],
            [
                   "searchBluetoothProducts",
                   2,
                   "/Components/SDKManager/DJIBluetoothProductConnector.html",
                   "#DJIBluetoothProductConnector_searchBluetoothProducts_inline",
                   "Used to start searching for DJI Products that are near the mobile device and can be controlled with the Mobile  SDK using Bluetooth. Use `onUpdate` to receive the product list.  @param callback Completion block returns the command execution result. It is called once the searching is started.",
            ],
            [
                   "Used to start searching for DJI Products that are near the mobile device and can be controlled with the Mobile  SDK using Bluetooth. Use `onUpdate` to receive the product list.  @param callback Completion block returns the command execution result. It is called once the searching is started.",
                   1,
                   "/Components/SDKManager/DJIBluetoothProductConnector.html",
                   "#DJIBluetoothProductConnector_searchBluetoothProducts_inline",
                   "",
            ],
            [
                   "connect",
                   2,
                   "/Components/SDKManager/DJIBluetoothProductConnector.html",
                   "#DJIBluetoothProductConnector_connectProductWithCompletion_inline",
                   "Connects to the DJI product using Bluetooth. Once it is connected, `DJISDKManager` can be used to access the product.  @param product The Bluetooth product to connect to. @param callback The completion block returns the command execution result.",
            ],
            [
                   "Connects to the DJI product using Bluetooth. Once it is connected, `DJISDKManager` can be used to access the product.  @param product The Bluetooth product to connect to. @param callback The completion block returns the command execution result.",
                   1,
                   "/Components/SDKManager/DJIBluetoothProductConnector.html",
                   "#DJIBluetoothProductConnector_connectProductWithCompletion_inline",
                   "",
            ],
            [
                   "disconnect",
                   2,
                   "/Components/SDKManager/DJIBluetoothProductConnector.html",
                   "#DJIBluetoothProductConnector_disconnectProduct_inline",
                   "Disconnects connected Bluetooth product.  @param callback The completion block returns the command execution result.",
            ],
            [
                   "Disconnects connected Bluetooth product.  @param callback The completion block returns the command execution result.",
                   1,
                   "/Components/SDKManager/DJIBluetoothProductConnector.html",
                   "#DJIBluetoothProductConnector_disconnectProduct_inline",
                   "",
            ],
            [
                   "BluetoothDevicesListCallback",
                   2,
                   "/Components/SDKManager/DJIBluetoothProductConnector.html",
                   "#DJIBluetoothProductConnector_BluetoothProductConnectorListenerInterface_inline",
                   "Delegate that receives the product list found by the connector.",
            ],
            [
                   "Delegate that receives the product list found by the connector.",
                   1,
                   "/Components/SDKManager/DJIBluetoothProductConnector.html",
                   "#DJIBluetoothProductConnector_BluetoothProductConnectorListenerInterface_inline",
                   "",
            ],
            [
                   "BluetoothDevice",
                   2,
                   "/Components/SDKManager/DJIBluetoothProductConnector_DJIBluetoothDevice.html",
                   "",
                   "This class contains information for a DJI Bluetooth device.",
            ],
            [
                   "This class contains information for a DJI Bluetooth device.",
                   1,
                   "/Components/SDKManager/DJIBluetoothProductConnector_DJIBluetoothDevice.html",
                   "",
                   "",
            ],
            [
                   "getName",
                   2,
                   "/Components/SDKManager/DJIBluetoothProductConnector_DJIBluetoothDevice.html",
                   "#DJIBluetoothProductConnector_DJIBluetoothDevice_getName_inline",
                   "Returns the name of the Bluetooth device.  @return A string representing the name.",
            ],
            [
                   "Returns the name of the Bluetooth device.  @return A string representing the name.",
                   1,
                   "/Components/SDKManager/DJIBluetoothProductConnector_DJIBluetoothDevice.html",
                   "#DJIBluetoothProductConnector_DJIBluetoothDevice_getName_inline",
                   "",
            ],
            [
                   "getStatus",
                   2,
                   "/Components/SDKManager/DJIBluetoothProductConnector_DJIBluetoothDevice.html",
                   "#DJIBluetoothProductConnector_DJIBluetoothDevice_getStatus_inline",
                   "Returns connection status for the Bluetooth device.  @return The enum value of `BluetoothDeviceStatus`.",
            ],
            [
                   "Returns connection status for the Bluetooth device.  @return The enum value of `BluetoothDeviceStatus`.",
                   1,
                   "/Components/SDKManager/DJIBluetoothProductConnector_DJIBluetoothDevice.html",
                   "#DJIBluetoothProductConnector_DJIBluetoothDevice_getStatus_inline",
                   "",
            ],
            [
                   "getRssi",
                   2,
                   "/Components/SDKManager/DJIBluetoothProductConnector_DJIBluetoothDevice.html",
                   "#DJIBluetoothProductConnector_DJIBluetoothDevice_getRssi_inline",
                   "Returns the signal quality.  @return An Integer representing the signal quality.",
            ],
            [
                   "Returns the signal quality.  @return An Integer representing the signal quality.",
                   1,
                   "/Components/SDKManager/DJIBluetoothProductConnector_DJIBluetoothDevice.html",
                   "#DJIBluetoothProductConnector_DJIBluetoothDevice_getRssi_inline",
                   "",
            ],
            [
                   "BluetoothDeviceStatus",
                   2,
                   "/Components/SDKManager/DJIBluetoothProductConnector_DJIBluetoothDevice.html",
                   "#DJIBluetoothProductConnector_DJIBluetoothDevice_DJIBluetoothDeviceStatus_inline",
                   "DJI Bluetooth device status enum.",
            ],
            [
                   "DJI Bluetooth device status enum.",
                   1,
                   "/Components/SDKManager/DJIBluetoothProductConnector_DJIBluetoothDevice.html",
                   "#DJIBluetoothProductConnector_DJIBluetoothDevice_DJIBluetoothDeviceStatus_inline",
                   "",
            ],
            [
                   "CONNECTED",
                   2,
                   "/Components/SDKManager/DJIBluetoothProductConnector_DJIBluetoothDevice.html",
                   "#DJIBluetoothProductConnector_DJIBluetoothDevice_DJIBluetoothDeviceStatus_CONNECTED_inline",
                   "Bluetooth device connected.",
            ],
            [
                   "Bluetooth device connected.",
                   1,
                   "/Components/SDKManager/DJIBluetoothProductConnector_DJIBluetoothDevice.html",
                   "#DJIBluetoothProductConnector_DJIBluetoothDevice_DJIBluetoothDeviceStatus_CONNECTED_inline",
                   "",
            ],
            [
                   "DISCONNECTED",
                   2,
                   "/Components/SDKManager/DJIBluetoothProductConnector_DJIBluetoothDevice.html",
                   "#DJIBluetoothProductConnector_DJIBluetoothDevice_DJIBluetoothDeviceStatus_DISCONNECTED_inline",
                   "Bluetooth device disconnected.",
            ],
            [
                   "Bluetooth device disconnected.",
                   1,
                   "/Components/SDKManager/DJIBluetoothProductConnector_DJIBluetoothDevice.html",
                   "#DJIBluetoothProductConnector_DJIBluetoothDevice_DJIBluetoothDeviceStatus_DISCONNECTED_inline",
                   "",
            ],
            [
                   "CONNECTING",
                   2,
                   "/Components/SDKManager/DJIBluetoothProductConnector_DJIBluetoothDevice.html",
                   "#DJIBluetoothProductConnector_DJIBluetoothDevice_DJIBluetoothDeviceStatus_CONNECTING_inline",
                   "Bluetooth device connecting.",
            ],
            [
                   "Bluetooth device connecting.",
                   1,
                   "/Components/SDKManager/DJIBluetoothProductConnector_DJIBluetoothDevice.html",
                   "#DJIBluetoothProductConnector_DJIBluetoothDevice_DJIBluetoothDeviceStatus_CONNECTING_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/SDKManager/DJIBluetoothProductConnector.html",
                   "#DJIBluetoothProductConnector_ConnectorDidFindProducts_inline",
                   "Provides the list of DJI products that can be connected with the mobile device over Bluetooth. Delegate will  continue to receive an updated list after `searchBluetoothProducts` is called  until the searching is finished (either product is connected or after 10s).  @param devices A list of DJI products found by the connector.",
            ],
            [
                   "Provides the list of DJI products that can be connected with the mobile device over Bluetooth. Delegate will  continue to receive an updated list after `searchBluetoothProducts` is called  until the searching is finished (either product is connected or after 10s).  @param devices A list of DJI products found by the connector.",
                   1,
                   "/Components/SDKManager/DJIBluetoothProductConnector.html",
                   "#DJIBluetoothProductConnector_ConnectorDidFindProducts_inline",
                   "",
            ],
            [
                   "destroyCodec",
                   2,
                   "/Components/CodecManager/DJICodecManager.html",
                   "#DJICodecManager_destroyCodec_inline",
                   "Destroys the media codec.",
            ],
            [
                   "Destroys the media codec.",
                   1,
                   "/Components/CodecManager/DJICodecManager.html",
                   "#DJICodecManager_destroyCodec_inline",
                   "",
            ],
            [
                   "DJICodecManager",
                   2,
                   "/Components/CodecManager/DJICodecManager.html",
                   "#DJICodecManager_constructor_inline",
                   "Constructor for the class.  @param context The context. @param surfaceTexture The surface texture view. @param width The width of surface texture view. @param height The height of surface texture view.",
            ],
            [
                   "Constructor for the class.  @param context The context. @param surfaceTexture The surface texture view. @param width The width of surface texture view. @param height The height of surface texture view.",
                   1,
                   "/Components/CodecManager/DJICodecManager.html",
                   "#DJICodecManager_constructor_inline",
                   "",
            ],
            [
                   "cleanSurface",
                   2,
                   "/Components/CodecManager/DJICodecManager.html",
                   "#DJICodecManager_cleanSurface_inline",
                   "Cleans the surface from the codec manager.",
            ],
            [
                   "Cleans the surface from the codec manager.",
                   1,
                   "/Components/CodecManager/DJICodecManager.html",
                   "#DJICodecManager_cleanSurface_inline",
                   "",
            ],
            [
                   "sendDataToDecoder",
                   2,
                   "/Components/CodecManager/DJICodecManager.html",
                   "#DJICodecManager_sendDataToDecoder_inline",
                   "Sends H264 raw video data to the decoder.  @param videoBuffer The video buffer data. @param size The data size.",
            ],
            [
                   "Sends H264 raw video data to the decoder.  @param videoBuffer The video buffer data. @param size The data size.",
                   1,
                   "/Components/CodecManager/DJICodecManager.html",
                   "#DJICodecManager_sendDataToDecoder_inline",
                   "",
            ],
            [
                   "sendDataToDecoder",
                   2,
                   "/Components/CodecManager/DJICodecManager.html",
                   "#DJICodecManager_sendDataToDecoderWithSourceId_inline",
                   "Sends H264 raw video data to the decoder with source id.  @param videoBuffer The video buffer data. @param size The data size. @param source source id.",
            ],
            [
                   "Sends H264 raw video data to the decoder with source id.  @param videoBuffer The video buffer data. @param size The data size. @param source source id.",
                   1,
                   "/Components/CodecManager/DJICodecManager.html",
                   "#DJICodecManager_sendDataToDecoderWithSourceId_inline",
                   "",
            ],
            [
                   "getVideoWidth",
                   2,
                   "/Components/CodecManager/DJICodecManager.html",
                   "#DJICodecManager_getVideoWidth_inline",
                   "Get the video width.  @return Video width Integer value.",
            ],
            [
                   "Get the video width.  @return Video width Integer value.",
                   1,
                   "/Components/CodecManager/DJICodecManager.html",
                   "#DJICodecManager_getVideoWidth_inline",
                   "",
            ],
            [
                   "getVideoHeight",
                   2,
                   "/Components/CodecManager/DJICodecManager.html",
                   "#DJICodecManager_getVideoHeight_inline",
                   "Get the video height.  @return Video height Integer value.",
            ],
            [
                   "Get the video height.  @return Video height Integer value.",
                   1,
                   "/Components/CodecManager/DJICodecManager.html",
                   "#DJICodecManager_getVideoHeight_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_UpdateDiagnosticsList_inline",
                   "Callback interface that updates the product's current diagnostics information.  @param diagnosticsList The List of `DJIDiagnostics` instance.",
            ],
            [
                   "Callback interface that updates the product's current diagnostics information.  @param diagnosticsList The List of `DJIDiagnostics` instance.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_UpdateDiagnosticsList_inline",
                   "",
            ],
            [
                   "getCode",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_code_inline",
                   "Get diagnostics error code.  @return Diagnostics error code.  See Also: `DJIDiagnosticsError`",
            ],
            [
                   "Get diagnostics error code.  @return Diagnostics error code.  See Also: `DJIDiagnosticsError`",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_code_inline",
                   "",
            ],
            [
                   "getReason",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_reason_inline",
                   "The reason of the error.  @return Reason of the error.",
            ],
            [
                   "The reason of the error.  @return Reason of the error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_reason_inline",
                   "",
            ],
            [
                   "getSolution",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_solution_inline",
                   "The suggested solution for the error.  @return The suggest solution for the error.",
            ],
            [
                   "The suggested solution for the error.  @return The suggest solution for the error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_solution_inline",
                   "",
            ],
            [
                   "CAMERA_UPGRADE_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraUpgradeError_inline",
                   "Aircraft upgrade error.",
            ],
            [
                   "Aircraft upgrade error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraUpgradeError_inline",
                   "",
            ],
            [
                   "CAMERA_SENSOR_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraSensorError_inline",
                   "Camera sensor error.",
            ],
            [
                   "Camera sensor error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraSensorError_inline",
                   "",
            ],
            [
                   "CAMERA_OVER_HEAT",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraOverHeat_inline",
                   "Camera has overheated.",
            ],
            [
                   "Camera has overheated.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraOverHeat_inline",
                   "",
            ],
            [
                   "CAMERA_ENCRYPTION_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraEncryptionError_inline",
                   "Camera encryption error.",
            ],
            [
                   "Camera encryption error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraEncryptionError_inline",
                   "",
            ],
            [
                   "CAMERA_NO_SD_CARD",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraNoSDCard_inline",
                   "NO SD card.",
            ],
            [
                   "NO SD card.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraNoSDCard_inline",
                   "",
            ],
            [
                   "CAMERA_SD_CARD_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraSDCardError_inline",
                   "SD card error.",
            ],
            [
                   "SD card error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraSDCardError_inline",
                   "",
            ],
            [
                   "CAMERA_SD_CARD_NO_SPACE",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraSDCardNoSpace_inline",
                   "Remaining SD card capacity is not enough.",
            ],
            [
                   "Remaining SD card capacity is not enough.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraSDCardNoSpace_inline",
                   "",
            ],
            [
                   "CAMERA_SD_CARD_FULL",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraSDCardFull_inline",
                   "SD card is full.",
            ],
            [
                   "SD card is full.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraSDCardFull_inline",
                   "",
            ],
            [
                   "CAMERA_SD_CARD_READ_ONLY",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraSDCardReadOnly_inline",
                   "SD card is readonly.",
            ],
            [
                   "SD card is readonly.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraSDCardReadOnly_inline",
                   "",
            ],
            [
                   "CAMERA_SD_CARD_NOT_FORMATTED",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraSDCardNotFormatted_inline",
                   "SD card not formatted.",
            ],
            [
                   "SD card not formatted.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CameraSDCardNotFormatted_inline",
                   "",
            ],
            [
                   "GIMBAL_GYROSCOPE_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_GimbalGyroscopeError_inline",
                   "Gimbal gyroscope error.",
            ],
            [
                   "Gimbal gyroscope error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_GimbalGyroscopeError_inline",
                   "",
            ],
            [
                   "GIMBAL_PITCH_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_GimbalPitchError_inline",
                   "Gimbal pitch error.",
            ],
            [
                   "Gimbal pitch error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_GimbalPitchError_inline",
                   "",
            ],
            [
                   "GIMBAL_ROLL_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_GimbalRollError_inline",
                   "Gimbal roll error.",
            ],
            [
                   "Gimbal roll error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_GimbalRollError_inline",
                   "",
            ],
            [
                   "GIMBAL_YAW_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_GimbalYawError_inline",
                   "Gimbal yaw error.",
            ],
            [
                   "Gimbal yaw error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_GimbalYawError_inline",
                   "",
            ],
            [
                   "GIMBAL_CONNECT_TO_FC_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_GimbalConnectToFCError_inline",
                   "Gimbal cannot receive flight controller data.",
            ],
            [
                   "Gimbal cannot receive flight controller data.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_GimbalConnectToFCError_inline",
                   "",
            ],
            [
                   "BATTERY_DISCHARGE_OVER_CURRENT",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_BatteryDischargeOverCurrent_inline",
                   "Battery current too high during discharge.",
            ],
            [
                   "Battery current too high during discharge.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_BatteryDischargeOverCurrent_inline",
                   "",
            ],
            [
                   "BATTERY_DISCHARGE_OVER_HEAT",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_BatteryDischargeOverHeat_inline",
                   "Battery too hot during discharge.",
            ],
            [
                   "Battery too hot during discharge.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_BatteryDischargeOverHeat_inline",
                   "",
            ],
            [
                   "BATTERY_LOW_TEMPERATURE",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_BatteryLowTemperature_inline",
                   "Low temperature environment: Battery not suitable for flight.",
            ],
            [
                   "Low temperature environment: Battery not suitable for flight.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_BatteryLowTemperature_inline",
                   "",
            ],
            [
                   "BATTERY_CELL_BROKEN",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_BatteryCellBroken_inline",
                   "Battery cell is broken.",
            ],
            [
                   "Battery cell is broken.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_BatteryCellBroken_inline",
                   "",
            ],
            [
                   "BATTERY_NEED_STUDY",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_BatteryNeedStudy_inline",
                   "Battery needs a complete charge and discharge cycle.",
            ],
            [
                   "Battery needs a complete charge and discharge cycle.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_BatteryNeedStudy_inline",
                   "",
            ],
            [
                   "BATTERY_ILLEGAL",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_BatteryIllegal_inline",
                   "Battery is not a DJI battery.",
            ],
            [
                   "Battery is not a DJI battery.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_BatteryIllegal_inline",
                   "",
            ],
            [
                   "SINGLE_BATTERY_MODE",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_SingleBatteryMode_inline",
                   "Battery is in single battery mode.",
            ],
            [
                   "Battery is in single battery mode.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_SingleBatteryMode_inline",
                   "",
            ],
            [
                   "FAKE_BATTERY_MODE",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FakeBatteryMode_inline",
                   "Battery is in fake battery mode.",
            ],
            [
                   "Battery is in fake battery mode.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FakeBatteryMode_inline",
                   "",
            ],
            [
                   "REMOTE_CONTROLLER_FPGA_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerFPGAError_inline",
                   "RC FPGA error.",
            ],
            [
                   "RC FPGA error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerFPGAError_inline",
                   "",
            ],
            [
                   "REMOTE_CONTROLLER_TRANSMITTER_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerTransmitterError_inline",
                   "RC transmitter error.",
            ],
            [
                   "RC transmitter error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerTransmitterError_inline",
                   "",
            ],
            [
                   "REMOTE_CONTROLLER_BATTERY_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerBatteryError_inline",
                   "RC battery error.",
            ],
            [
                   "RC battery error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerBatteryError_inline",
                   "",
            ],
            [
                   "REMOTE_CONTROLLER_GPS_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerGPSError_inline",
                   "RC GPS error.",
            ],
            [
                   "RC GPS error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerGPSError_inline",
                   "",
            ],
            [
                   "REMOTE_CONTROLLER_ENCRYPTION_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerEncryptionError_inline",
                   "RC encryption error.",
            ],
            [
                   "RC encryption error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerEncryptionError_inline",
                   "",
            ],
            [
                   "REMOTE_CONTROLLER_NEED_CALIBRATION",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerNeedCalibration_inline",
                   "RC is not calibrated.",
            ],
            [
                   "RC is not calibrated.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerNeedCalibration_inline",
                   "",
            ],
            [
                   "REMOTE_CONTROLLER_BATTERY_LOW",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerBatteryLow_inline",
                   "RC battery low.",
            ],
            [
                   "RC battery low.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerBatteryLow_inline",
                   "",
            ],
            [
                   "REMOTE_CONTROLLER_IDLE_TOO_LONG",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerIdleTooLong_inline",
                   "RC idle for too long.",
            ],
            [
                   "RC idle for too long.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerIdleTooLong_inline",
                   "",
            ],
            [
                   "REMOTE_CONTROLLER_RESET",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerReset_inline",
                   "RC is reset, please check RC settings",
            ],
            [
                   "RC is reset, please check RC settings",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerReset_inline",
                   "",
            ],
            [
                   "REMOTE_CONTROLLER_OVER_HEAT",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerOverHeat_inline",
                   "RC overheated.",
            ],
            [
                   "RC overheated.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_RemoteControllerOverHeat_inline",
                   "",
            ],
            [
                   "CENTRAL_BOARD_CONNECT_TO_BATTERY_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CentralBoardConnectToBatteryError_inline",
                   "Battery connection to the center board has failed.",
            ],
            [
                   "Battery connection to the center board has failed.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CentralBoardConnectToBatteryError_inline",
                   "",
            ],
            [
                   "CENTRAL_BOARD_CONNECT_TO_GPS_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CentralBoardConnectToGPSError_inline",
                   "GPS connection to the center board has failed.",
            ],
            [
                   "GPS connection to the center board has failed.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CentralBoardConnectToGPSError_inline",
                   "",
            ],
            [
                   "CENTRAL_BOARD_CONNECT_TO_FC_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CentralBoardConnectToFCError_inline",
                   "Flight controller connection to the center board has failed.",
            ],
            [
                   "Flight controller connection to the center board has failed.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_CentralBoardConnectToFCError_inline",
                   "",
            ],
            [
                   "VIDEO_DECODER_ENCRYPTION_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_VideoDecoderEncryptionError_inline",
                   "Video decoder encryption error.",
            ],
            [
                   "Video decoder encryption error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_VideoDecoderEncryptionError_inline",
                   "",
            ],
            [
                   "VIDEO_DECODER_CONNECT_TO_DESERIALIZER_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_VideoDecoderConnectToDeserializerError_inline",
                   "Deserializer disconnected.",
            ],
            [
                   "Deserializer disconnected.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_VideoDecoderConnectToDeserializerError_inline",
                   "",
            ],
            [
                   "AIR_ENCODER_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_AirEncoderError_inline",
                   "Aircraft Encoder Error.",
            ],
            [
                   "Aircraft Encoder Error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_AirEncoderError_inline",
                   "",
            ],
            [
                   "AIR_ENCODER_UPGRADE",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_AirEncoderUpgrade_inline",
                   "Aircraft updating.",
            ],
            [
                   "Aircraft updating.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_AirEncoderUpgrade_inline",
                   "",
            ],
            [
                   "FLIGHT_CONTROLLER_IMU_NEED_CALIBRATION",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerIMUNeedCalibration_inline",
                   "IMU calibration required.",
            ],
            [
                   "IMU calibration required.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerIMUNeedCalibration_inline",
                   "",
            ],
            [
                   "FLIGHT_CONTROLLER_IMU_CALIBRATION_INCOMPLETE",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerIMUCalibrationIncomplete_inline",
                   "IMU calibration incomplete.",
            ],
            [
                   "IMU calibration incomplete.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerIMUCalibrationIncomplete_inline",
                   "",
            ],
            [
                   "FLIGHT_CONTROLLER_IMU_DATA_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerIMUDataError_inline",
                   "IMU data error.",
            ],
            [
                   "IMU data error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerIMUDataError_inline",
                   "",
            ],
            [
                   "FLIGHT_CONTROLLER_IMU_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerIMUError_inline",
                   "General IMU error.",
            ],
            [
                   "General IMU error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerIMUError_inline",
                   "",
            ],
            [
                   "FLIGHT_CONTROLLER_IMU_INIT_FAILED",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerIMUInitFailed_inline",
                   "IMU initialization failed.",
            ],
            [
                   "IMU initialization failed.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerIMUInitFailed_inline",
                   "",
            ],
            [
                   "FLIGHT_CONTROLLER_BAROMETER_INIT_FAILED",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerBarometerInitFailed_inline",
                   "Barometer initialization failed.",
            ],
            [
                   "Barometer initialization failed.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerBarometerInitFailed_inline",
                   "",
            ],
            [
                   "FLIGHT_CONTROLLER_BAROMETER_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerBarometerError_inline",
                   "Barometer error.",
            ],
            [
                   "Barometer error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerBarometerError_inline",
                   "",
            ],
            [
                   "FLIGHT_CONTROLLER_ACCELEROMETER_INIT_FAILED",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerAccelerometerInitFailed_inline",
                   "Accelerometer failed.",
            ],
            [
                   "Accelerometer failed.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerAccelerometerInitFailed_inline",
                   "",
            ],
            [
                   "FLIGHT_CONTROLLER_GYROSCOPE_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerGyroscopeError_inline",
                   "Gyroscope error.",
            ],
            [
                   "Gyroscope error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerGyroscopeError_inline",
                   "",
            ],
            [
                   "FLIGHT_CONTROLLER_ATTITUDE_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerAttitudeError_inline",
                   "Aircraft attitude angle is too large.",
            ],
            [
                   "Aircraft attitude angle is too large.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerAttitudeError_inline",
                   "",
            ],
            [
                   "FLIGHT_CONTROLLER_DATA_RECORD_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerDataRecordError_inline",
                   "Data recorder errors.",
            ],
            [
                   "Data recorder errors.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerDataRecordError_inline",
                   "",
            ],
            [
                   "FLIGHT_CONTROLLER_TAKEOFF_FAILED",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerTakeoffFailed_inline",
                   "Take-off failure.",
            ],
            [
                   "Take-off failure.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerTakeoffFailed_inline",
                   "",
            ],
            [
                   "FLIGHT_CONTROLLER_SYSTEM_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerSystemError_inline",
                   "Unknown flight controller error.",
            ],
            [
                   "Unknown flight controller error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerSystemError_inline",
                   "",
            ],
            [
                   "FLIGHT_CONTROLLER_IMU_HEATING",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerImuHeating_inline",
                   "Imu is heating.",
            ],
            [
                   "Imu is heating.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerImuHeating_inline",
                   "",
            ],
            [
                   "FLIGHT_CONTROLLER_COMPASS_NEED_RESTART",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerCompassNeedRestart_inline",
                   "Compass needs restart.",
            ],
            [
                   "Compass needs restart.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerCompassNeedRestart_inline",
                   "",
            ],
            [
                   "FLIGHT_CONTROLLER_COMPASS_ABNORMAL",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerCompassAbnormal_inline",
                   "Compass abnormal.",
            ],
            [
                   "Compass abnormal.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerCompassAbnormal_inline",
                   "",
            ],
            [
                   "FLIGHT_CONTROLLER_USING_WRONG_PROPELLERS",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerUsingWrongPropellers_inline",
                   "Using the wrong propellers. Inspire 2 has propellers for high  altitudes and low altitudes. This error will be present when the  wrong propellers are being used at the wrong altitude.",
            ],
            [
                   "Using the wrong propellers. Inspire 2 has propellers for high  altitudes and low altitudes. This error will be present when the  wrong propellers are being used at the wrong altitude.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_FlightControllerUsingWrongPropellers_inline",
                   "",
            ],
            [
                   "VISION_PROPELLER_GUARD",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_VisionPropellerGuard_inline",
                   "Propeller Guard Mounted.",
            ],
            [
                   "Propeller Guard Mounted.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_VisionPropellerGuard_inline",
                   "",
            ],
            [
                   "VISION_SENSOR_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_VisionSensorError_inline",
                   "Vision sensor error.",
            ],
            [
                   "Vision sensor error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_VisionSensorError_inline",
                   "",
            ],
            [
                   "VISION_SENSOR_CALIBRATION_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_VisionSensorCalibrationError_inline",
                   "Vision sensor calibration error.",
            ],
            [
                   "Vision sensor calibration error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_VisionSensorCalibrationError_inline",
                   "",
            ],
            [
                   "VISION_SENSOR_COMMUNICATION_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_VisionSensorCommunicationError_inline",
                   "Vision sensor communication error.",
            ],
            [
                   "Vision sensor communication error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_VisionSensorCommunicationError_inline",
                   "",
            ],
            [
                   "VISION_SYSTEM_ERROR",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_VisionSystemError_inline",
                   "Vision system error.",
            ],
            [
                   "Vision system error.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_VisionSystemError_inline",
                   "",
            ],
            [
                   "DJIDiagnosticsError",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_inline",
                   "DJIDiagnosticsError.",
            ],
            [
                   "DJIDiagnosticsError.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_DJIDiagnosticsError_inline",
                   "",
            ],
            [
                   "DiagnosticsInformationCallback",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_UpdateDiagnosticsListCallbackInterface_inline",
                   "Callback interface that updates the product's current diagnostics information.",
            ],
            [
                   "Callback interface that updates the product's current diagnostics information.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "#DJIDiagnostics_UpdateDiagnosticsListCallbackInterface_inline",
                   "",
            ],
            [
                   "getDescription",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_getDescription_inline",
                   "Returns the description of the error code.  @return The description of the error code.",
            ],
            [
                   "Returns the description of the error code.  @return The description of the error code.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_getDescription_inline",
                   "",
            ],
            [
                   "setDescription",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_setDescription_inline",
                   "Sets the description for the error code.  @param desc Description string.",
            ],
            [
                   "Sets the description for the error code.  @param desc Description string.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_setDescription_inline",
                   "",
            ],
            [
                   "getDJIError",
                   2,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "#DJIError_DJIGeoError_getDJIError_inline",
                   "Returns the specific error in DJIGeoError according to the error code.  @param ccode Error code.  @return The DJIError object.",
            ],
            [
                   "Returns the specific error in DJIGeoError according to the error code.  @param ccode Error code.  @return The DJIError object.",
                   1,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "#DJIError_DJIGeoError_getDJIError_inline",
                   "",
            ],
            [
                   "COULD_NOT_CONNECT_TO_INTERNET_FOR_PULLING_DATA",
                   2,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "#DJIError_DJIGeoError_COULD_NOT_CONNECT_TO_INTERNET_FOR_PULLING_DATA_inline",
                   "Could not connect to the Internet while SDK try to pull the latest cached data from server.",
            ],
            [
                   "Could not connect to the Internet while SDK try to pull the latest cached data from server.",
                   1,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "#DJIError_DJIGeoError_COULD_NOT_CONNECT_TO_INTERNET_FOR_PULLING_DATA_inline",
                   "",
            ],
            [
                   "COULD_NOT_FIND_UNLOCKED_RECORD_IN_THE_SERVER",
                   2,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "#DJIError_DJIGeoError_COULD_NOT_FIND_UNLOCKED_RECORD_IN_THE_SERVER_inline",
                   "Could not find unlocked record in the server.",
            ],
            [
                   "Could not find unlocked record in the server.",
                   1,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "#DJIError_DJIGeoError_COULD_NOT_FIND_UNLOCKED_RECORD_IN_THE_SERVER_inline",
                   "",
            ],
            [
                   "NO_DATA_IN_DATABASE",
                   2,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "#DJIError_DJIGeoError_NO_DATA_IN_DATABASE_inline",
                   "No data in database.",
            ],
            [
                   "No data in database.",
                   1,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "#DJIError_DJIGeoError_NO_DATA_IN_DATABASE_inline",
                   "",
            ],
            [
                   "ACCOUNT_NOT_LOGGED_IN_OR_NOT_AUTHORIZED",
                   2,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "#DJIError_DJIGeoError_ACCOUNT_NOT_LOG_IN_OR_NOT_AUTHORIZED_inline",
                   "No logged in account or account did not get authorization.",
            ],
            [
                   "No logged in account or account did not get authorization.",
                   1,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "#DJIError_DJIGeoError_ACCOUNT_NOT_LOG_IN_OR_NOT_AUTHORIZED_inline",
                   "",
            ],
            [
                   "FLIGHT_CONTROLLER_SERIAL_NUMBER_IS_NOT_READY",
                   2,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "#DJIError_DJIGeoError_FLIGHT_CONTROLLER_SERIAL_NUMBER_IS_NOT_READY_inline",
                   "The flight controller SN is not ready.",
            ],
            [
                   "The flight controller SN is not ready.",
                   1,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "#DJIError_DJIGeoError_FLIGHT_CONTROLLER_SERIAL_NUMBER_IS_NOT_READY_inline",
                   "",
            ],
            [
                   "COULD_NOT_ENABLE_OR_DISABLE_GEO_SYSTEM_WHILE_AIRCRAFT_IS_IN_THE_SKY",
                   2,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "#DJIError_DJIGeoError_COULD_NOT_ENABLE_OR_DISABLE_GEO_SYSTEM_WHILE_AIRCRAFT_IS_IN_THE_SKY_inline",
                   "Could not enable or disable the GEO system while the aircraft is flying.",
            ],
            [
                   "Could not enable or disable the GEO system while the aircraft is flying.",
                   1,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "#DJIError_DJIGeoError_COULD_NOT_ENABLE_OR_DISABLE_GEO_SYSTEM_WHILE_AIRCRAFT_IS_IN_THE_SKY_inline",
                   "",
            ],
            [
                   "NOT_LOGGED_IN",
                   2,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "#DJIError_DJISDKGEOError_NotLoggedIn_inline",
                   "No user account recorded.",
            ],
            [
                   "No user account recorded.",
                   1,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "#DJIError_DJISDKGEOError_NotLoggedIn_inline",
                   "",
            ],
            [
                   "INVALID_SIMULATED_LOCATION",
                   2,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "#DJIError_DJISDKGEOError_InvalidSimulatedLocation_inline",
                   "The simulated aircraft location is not valid. During the simulation, a location is valid if it is within  50km of (37.460484, -122.115312).",
            ],
            [
                   "The simulated aircraft location is not valid. During the simulation, a location is valid if it is within  50km of (37.460484, -122.115312).",
                   1,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "#DJIError_DJISDKGEOError_InvalidSimulatedLocation_inline",
                   "",
            ],
            [
                   "MAX_FLIGHT_SPEED_NOT_VALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointMissionErrorMaxFlightSpeed_inline",
                   "Max Flight speed value provided is invalid",
            ],
            [
                   "Max Flight speed value provided is invalid",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointMissionErrorMaxFlightSpeed_inline",
                   "",
            ],
            [
                   "AUTO_FLIGHT_SPEED_NOT_VALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointMissionErrorAutoFlightSpeed_inline",
                   "Auto flight speed value provided is invalid",
            ],
            [
                   "Auto flight speed value provided is invalid",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointMissionErrorAutoFlightSpeed_inline",
                   "",
            ],
            [
                   "REPEAT_TIME_NOT_VALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointMissionErrorRepeatTime_inline",
                   "Repeat time value provided is invalid",
            ],
            [
                   "Repeat time value provided is invalid",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointMissionErrorRepeatTime_inline",
                   "",
            ],
            [
                   "WAYPOINT_COUNT_NOT_VALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointMissionErrorWaypointCount_inline",
                   "Waypoint count is invalid",
            ],
            [
                   "Waypoint count is invalid",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointMissionErrorWaypointCount_inline",
                   "",
            ],
            [
                   "WAYPOINT_LIST_SIZE_NOT_VALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointMissionErrorWaypointListSize_inline",
                   "Waypoint list size is invalid",
            ],
            [
                   "Waypoint list size is invalid",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointMissionErrorWaypointListSize_inline",
                   "",
            ],
            [
                   "WAYPOINT_COORDINATE_NOT_VALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorCoordinate_inline",
                   "Waypoint coordinate provided is invalid",
            ],
            [
                   "Waypoint coordinate provided is invalid",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorCoordinate_inline",
                   "",
            ],
            [
                   "ALTITUDE_NOT_VALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorAltitude_inline",
                   "Waypoint altitude provided is invalid",
            ],
            [
                   "Waypoint altitude provided is invalid",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorAltitude_inline",
                   "",
            ],
            [
                   "HEADING_NOT_VALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorHeading_inline",
                   "Waypoint heading provided is invalid",
            ],
            [
                   "Waypoint heading provided is invalid",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorHeading_inline",
                   "",
            ],
            [
                   "ACTION_REPEAT_TIME_NOT_VALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorRepeatTime_inline",
                   "Waypoint repeat time provided is invalid",
            ],
            [
                   "Waypoint repeat time provided is invalid",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorRepeatTime_inline",
                   "",
            ],
            [
                   "ACTION_TIMEOUT_NOT_VALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorActionTimeout_inline",
                   "Waypoint action timeout provided is invalid",
            ],
            [
                   "Waypoint action timeout provided is invalid",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorActionTimeout_inline",
                   "",
            ],
            [
                   "CORNER_RADIUS_NOT_VALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorCornerRadius_inline",
                   "Waypoint corner radius provided is invalid",
            ],
            [
                   "Waypoint corner radius provided is invalid",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorCornerRadius_inline",
                   "",
            ],
            [
                   "GIMBAL_PITCH_NOT_VALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorGimbalPitch_inline",
                   "Waypoint gimbal pitch provided is invalid",
            ],
            [
                   "Waypoint gimbal pitch provided is invalid",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorGimbalPitch_inline",
                   "",
            ],
            [
                   "WAYPOINT_SPEED_NOT_VALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorSpeed_inline",
                   "Waypoint speed provided is invalid",
            ],
            [
                   "Waypoint speed provided is invalid",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorSpeed_inline",
                   "",
            ],
            [
                   "SHOOT_PHOTO_NOT_VALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorShootPhotoDistance_inline",
                   "Waypoint shoot photo distance provided is invalid",
            ],
            [
                   "Waypoint shoot photo distance provided is invalid",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorShootPhotoDistance_inline",
                   "",
            ],
            [
                   "STAY_ACTION_NOT_VALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorStayActionParam_inline",
                   "Waypoint stay action param provided is invalid",
            ],
            [
                   "Waypoint stay action param provided is invalid",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorStayActionParam_inline",
                   "",
            ],
            [
                   "ROTATE_GIMBAL_ACTION_NOT_VALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorRotateGimbalActionParam_inline",
                   "Waypoint rotate gimbal action param provided is invalid",
            ],
            [
                   "Waypoint rotate gimbal action param provided is invalid",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorRotateGimbalActionParam_inline",
                   "",
            ],
            [
                   "ROTATE_AIRCRAFT_ACTION_NOT_VALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorRotateAircraftActionParam_inline",
                   "Waypoint rotate aircraft action param provided is invalid",
            ],
            [
                   "Waypoint rotate aircraft action param provided is invalid",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_WaypointErrorRotateAircraftActionParam_inline",
                   "",
            ],
            [
                   "getDJIError",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_getDJIError_inline",
                   "Returns the specific error in DJIMissionManagerError according to the error code.  @param ccode Error code.  @return The DJIError object.",
            ],
            [
                   "Returns the specific error in DJIMissionManagerError according to the error code.  @param ccode Error code.  @return The DJIError object.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_getDJIError_inline",
                   "",
            ],
            [
                   "COMMON_UNSUPPORTED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_COMMON_UNSUPPORTED_inline",
                   "Unsupported feature error. Where possible:  This error will be returned by the function for a special  feature interface when the feature is not supported by the device.",
            ],
            [
                   "Unsupported feature error. Where possible:  This error will be returned by the function for a special  feature interface when the feature is not supported by the device.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_COMMON_UNSUPPORTED_inline",
                   "",
            ],
            [
                   "COMMON_DISCONNECTED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_COMMON_DISCONNECTED_inline",
                   "Disconnected.",
            ],
            [
                   "Disconnected.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_COMMON_DISCONNECTED_inline",
                   "",
            ],
            [
                   "BEGAN",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_BEGAN_inline",
                   "Mission began (Phantom 2 series).",
            ],
            [
                   "Mission began (Phantom 2 series).",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_BEGAN_inline",
                   "",
            ],
            [
                   "CANCELED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_CANCELED_inline",
                   "Mission canceled.",
            ],
            [
                   "Mission canceled.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_CANCELED_inline",
                   "",
            ],
            [
                   "FAILED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_FAILED_inline",
                   "Mission failed.",
            ],
            [
                   "Mission failed.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_FAILED_inline",
                   "",
            ],
            [
                   "NO_MISSION_RUNNING",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_NOT_EXISTED_inline",
                   "Mission not existed.",
            ],
            [
                   "Mission not existed.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_NOT_EXISTED_inline",
                   "",
            ],
            [
                   "TIMEOUT",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_TIMEOUT_inline",
                   "Mission timeout.",
            ],
            [
                   "Mission timeout.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_TIMEOUT_inline",
                   "",
            ],
            [
                   "GPS_NOT_READY",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_GPS_NOT_READY_inline",
                   "The GPS of the aircraft is not ready.  Maybe the aircraft haven't got the home point location.",
            ],
            [
                   "The GPS of the aircraft is not ready.  Maybe the aircraft haven't got the home point location.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_GPS_NOT_READY_inline",
                   "",
            ],
            [
                   "MOTORS_DID_NOT_START",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MOTOR_NOT_START_inline",
                   "The aircraft's motor has not started.",
            ],
            [
                   "The aircraft's motor has not started.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MOTOR_NOT_START_inline",
                   "",
            ],
            [
                   "TAKE_OFF",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_TAKEOFF_inline",
                   "The aircraft is taking off.",
            ],
            [
                   "The aircraft is taking off.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_TAKEOFF_inline",
                   "",
            ],
            [
                   "IS_FLYING",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_IS_FLYING_inline",
                   "The aircraft is flying.",
            ],
            [
                   "The aircraft is flying.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_IS_FLYING_inline",
                   "",
            ],
            [
                   "NOT_AUTO_MODE",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_NOT_AUTO_MODE_inline",
                   "The aircraft is not in auto mode.",
            ],
            [
                   "The aircraft is not in auto mode.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_NOT_AUTO_MODE_inline",
                   "",
            ],
            [
                   "MAX_NUMBER_OF_WAYPOINTS_UPLOAD_LIMIT_REACHED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_UPLOAD_WAYPOINT_NUM_MAX_LIMIT_inline",
                   "Waypoint mission has reached the maximum points limit.  1. Phantom 2 Vision/Vision+: the max points limit  is 16.  2. Inspire1/ Phantom 3 series: the max points limit is 99.",
            ],
            [
                   "Waypoint mission has reached the maximum points limit.  1. Phantom 2 Vision/Vision+: the max points limit  is 16.  2. Inspire1/ Phantom 3 series: the max points limit is 99.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_UPLOAD_WAYPOINT_NUM_MAX_LIMIT_inline",
                   "",
            ],
            [
                   "UPLOADING_WAYPOINT",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_UPLOADING_inline",
                   "Waypoint is uploading.",
            ],
            [
                   "Waypoint is uploading.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_UPLOADING_inline",
                   "",
            ],
            [
                   "KEY_LEVEL_LOW",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_KEY_LEVEL_LOW_inline",
                   "The API key provided to you is not at the correct permission level.  Check whether your key is a level 2  application key in your AndroidManifest.xml.",
            ],
            [
                   "The API key provided to you is not at the correct permission level.  Check whether your key is a level 2  application key in your AndroidManifest.xml.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_KEY_LEVEL_LOW_inline",
                   "",
            ],
            [
                   "NAVIGATION_MODE_DISABLED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_NAVIGATION_IS_NOT_OPEN_inline",
                   "Navigation is not open.",
            ],
            [
                   "Navigation is not open.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_NAVIGATION_IS_NOT_OPEN_inline",
                   "",
            ],
            [
                   "IOC_TYPE_UNKNOWN",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_IOC_TYPE_UNKNOWN_inline",
                   "The type of IOC is unknown.",
            ],
            [
                   "The type of IOC is unknown.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_IOC_TYPE_UNKNOWN_inline",
                   "",
            ],
            [
                   "HOME_POINT_VALUE_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_HOMEPOINT_VALUE_INVALID_inline",
                   "The homepoint is not a valid float value.",
            ],
            [
                   "The homepoint is not a valid float value.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_HOMEPOINT_VALUE_INVALID_inline",
                   "",
            ],
            [
                   "HOME_POINT_LOCATION_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_HOMEPOINT_LOCATION_INVALID_inline",
                   "The latitude and longitude of the homepoint are invalid.",
            ],
            [
                   "The latitude and longitude of the homepoint are invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_HOMEPOINT_LOCATION_INVALID_inline",
                   "",
            ],
            [
                   "HOME_POINT_DIRECTION_UNKNOWN",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_HOMEPOINT_DIRECTION_UNKNOWN_inline",
                   "The direction of the homepoint is unknown.",
            ],
            [
                   "The direction of the homepoint is unknown.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_HOMEPOINT_DIRECTION_UNKNOWN_inline",
                   "",
            ],
            [
                   "HOME_POINT_MISSION_PAUSED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_HOMEPOINT_PAUSED_inline",
                   "Homepoint is paused.",
            ],
            [
                   "Homepoint is paused.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_HOMEPOINT_PAUSED_inline",
                   "",
            ],
            [
                   "HOME_POINT_MISSION_NOT_PAUSED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_HOMEPOINT_NOT_PAUSED_inline",
                   "The homepoint is not paused.",
            ],
            [
                   "The homepoint is not paused.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_HOMEPOINT_NOT_PAUSED_inline",
                   "",
            ],
            [
                   "FOLLOW_ME_DISTANCE_TOO_LARGE",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_FOLLOWME_DISTANCE_TOO_LARGE_inline",
                   "The distance between the aircraft and mobile phone is too large (must be lower than 20000m). This error will  be returned when initializing the follow me task.",
            ],
            [
                   "The distance between the aircraft and mobile phone is too large (must be lower than 20000m). This error will  be returned when initializing the follow me task.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_FOLLOWME_DISTANCE_TOO_LARGE_inline",
                   "",
            ],
            [
                   "FOLLOW_ME_DISCONNECT_TIME_TOO_LONG",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_FOLLOWME_DISCONNECT_TIME_TOOLONG_inline",
                   "The disconnect time of the Follow Me mission is too long.",
            ],
            [
                   "The disconnect time of the Follow Me mission is too long.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_FOLLOWME_DISCONNECT_TIME_TOOLONG_inline",
                   "",
            ],
            [
                   "FOLLOW_ME_GIMBAL_PITCH_ERROR",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_FOLLOWME_GIMBAL_PITCH_ERROR_inline",
                   "The initial pitch angle of the gimbal is too large.",
            ],
            [
                   "The initial pitch angle of the gimbal is too large.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_FOLLOWME_GIMBAL_PITCH_ERROR_inline",
                   "",
            ],
            [
                   "ALTITUDE_TOO_HIGH",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_ALTITUDE_TOO_HIGH_inline",
                   "The altitude is too high.",
            ],
            [
                   "The altitude is too high.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_ALTITUDE_TOO_HIGH_inline",
                   "",
            ],
            [
                   "ALTITUDE_TOO_LOW",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_ALTITUDE_TOO_LOW_inline",
                   "The altitude is too low.",
            ],
            [
                   "The altitude is too low.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_ALTITUDE_TOO_LOW_inline",
                   "",
            ],
            [
                   "MISSION_RADIUS_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_RADIUS_INVALID_inline",
                   "The radius of mission is invalid.",
            ],
            [
                   "The radius of mission is invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_RADIUS_INVALID_inline",
                   "",
            ],
            [
                   "MISSION_SPEED_TOO_HIGH",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_SPEED_TOO_LARGE_inline",
                   "The speed of the mission is too high.",
            ],
            [
                   "The speed of the mission is too high.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_SPEED_TOO_LARGE_inline",
                   "",
            ],
            [
                   "MISSION_ENTRY_POINT_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_ENTRYPOINT_INVALID_inline",
                   "The entry point of the mission is invalid.",
            ],
            [
                   "The entry point of the mission is invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_ENTRYPOINT_INVALID_inline",
                   "",
            ],
            [
                   "MISSION_HEADING_MODE_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_HEADING_MODE_INVALID_inline",
                   "The heading mode of the mission is invalid.",
            ],
            [
                   "The heading mode of the mission is invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_HEADING_MODE_INVALID_inline",
                   "",
            ],
            [
                   "MISSION_RADIUS_OVER_LIMIT",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_RADIUS_OVERLIMITED_inline",
                   "The radius of the mission is over the acceptable limit.",
            ],
            [
                   "The radius of the mission is over the acceptable limit.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_RADIUS_OVERLIMITED_inline",
                   "",
            ],
            [
                   "NAVIGATION_MODE_NOT_SUPPORTED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_UNSUPPORTED_NAVIGATION_FOR_THE_PRODUCT_inline",
                   "Navigation in the product is unsupported.",
            ],
            [
                   "Navigation in the product is unsupported.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_UNSUPPORTED_NAVIGATION_FOR_THE_PRODUCT_inline",
                   "",
            ],
            [
                   "DISTANCE_FROM_MISSION_TARGET_TOO_LONG",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_DISTANCE_FROM_MISSION_TARGET_TOO_LONG_inline",
                   "The distance from the mission target is too long.  For example, the distance from hotpoint target position  is too long,  or the distance from the first waypoint target position is too long",
            ],
            [
                   "The distance from the mission target is too long.  For example, the distance from hotpoint target position  is too long,  or the distance from the first waypoint target position is too long",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_DISTANCE_FROM_MISSION_TARGET_TOO_LONG_inline",
                   "",
            ],
            [
                   "RC_MODE_ERROR",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_RC_MODE_ERROR_inline",
                   "Remote controller mode error.  You should put the remote controller's mode selection bar to F position.",
            ],
            [
                   "Remote controller mode error.  You should put the remote controller's mode selection bar to F position.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_RC_MODE_ERROR_inline",
                   "",
            ],
            [
                   "IOC_WORKING",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_IOC_WORKING_inline",
                   "The IOC mode is working.",
            ],
            [
                   "The IOC mode is working.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_IOC_WORKING_inline",
                   "",
            ],
            [
                   "MISSION_NOT_INITIALIZED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_NOT_INIT_inline",
                   "The mission is not initialized.",
            ],
            [
                   "The mission is not initialized.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_NOT_INIT_inline",
                   "",
            ],
            [
                   "MISSION_NOT_EXIST",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_NOT_EXIST_inline",
                   "The mission does not exist.",
            ],
            [
                   "The mission does not exist.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_NOT_EXIST_inline",
                   "",
            ],
            [
                   "MISSION_CONFLICT",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_CONFLICT_inline",
                   "There is a conflicting setting in the mission.",
            ],
            [
                   "There is a conflicting setting in the mission.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_CONFLICT_inline",
                   "",
            ],
            [
                   "MISSION_ESTIMATE_TIME_TOO_LONG",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_ESTIMATE_TIME_TOO_LONG_inline",
                   "The estimated time for the mission is too long.",
            ],
            [
                   "The estimated time for the mission is too long.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_ESTIMATE_TIME_TOO_LONG_inline",
                   "",
            ],
            [
                   "HIGH_PRIORITY_MISSION_EXECUTING",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_HIGH_PRIORITY_MISSION_EXECUTING_inline",
                   "A higher priority mission is executing.",
            ],
            [
                   "A higher priority mission is executing.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_HIGH_PRIORITY_MISSION_EXECUTING_inline",
                   "",
            ],
            [
                   "MISSION_CONDITION_NOT_SATISFIED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_CONDITION_NOT_SATISFIED_inline",
                   "The condition of the mission is not satisfied.",
            ],
            [
                   "The condition of the mission is not satisfied.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_CONDITION_NOT_SATISFIED_inline",
                   "",
            ],
            [
                   "MISSION_ACROSS_NO_FLY_ZONE",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_ACROSS_NOFLYZONE_inline",
                   "The mission is across a no fly zone.",
            ],
            [
                   "The mission is across a no fly zone.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_ACROSS_NOFLYZONE_inline",
                   "",
            ],
            [
                   "MISSION_INFO_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_INFO_INVALID_inline",
                   "The information for the mission is invalid.",
            ],
            [
                   "The information for the mission is invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_MISSION_INFO_INVALID_inline",
                   "",
            ],
            [
                   "WAYPOINT_INFO_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_INFO_INVALID_inline",
                   "The information for the waypoint is invalid.",
            ],
            [
                   "The information for the waypoint is invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_INFO_INVALID_inline",
                   "",
            ],
            [
                   "WAYPOINT_TRACE_TOO_LONG",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_TRACE_TOO_LONG_inline",
                   "The waypoint trace is too long. The maximum waypoint trace is 30km. The waypoint trace is the sum of all distances between waypoints in a mission.",
            ],
            [
                   "The waypoint trace is too long. The maximum waypoint trace is 30km. The waypoint trace is the sum of all distances between waypoints in a mission.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_TRACE_TOO_LONG_inline",
                   "",
            ],
            [
                   "WAYPOINT_TOTAL_TRACE_TOO_LONG",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_TOTAL_TRACE_TOO_LONG_inline",
                   "The total waypoint mission distance is too long. The maximum total distance is 40km.  The total distance includes the sum of:   - Distance from current aircraft location to first waypoint   - Sum of all distances between waypoints   - Distance from last waypoint to the homepoint.",
            ],
            [
                   "The total waypoint mission distance is too long. The maximum total distance is 40km.  The total distance includes the sum of:   - Distance from current aircraft location to first waypoint   - Sum of all distances between waypoints   - Distance from last waypoint to the homepoint.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_TOTAL_TRACE_TOO_LONG_inline",
                   "",
            ],
            [
                   "WAYPOINT_INDEX_OVER_RANGE",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_INDEX_OVERRANGE_inline",
                   "The index of the waypoint is out of range.",
            ],
            [
                   "The index of the waypoint is out of range.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_INDEX_OVERRANGE_inline",
                   "",
            ],
            [
                   "WAYPOINT_DISTANCE_TOO_CLOSE",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_DISTANCE_TOO_CLOSE_inline",
                   "The waypoint distance is too close.",
            ],
            [
                   "The waypoint distance is too close.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_DISTANCE_TOO_CLOSE_inline",
                   "",
            ],
            [
                   "WAYPOINT_DISTANCE_TOO_LONG",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_DISTANCE_TOO_LONG_inline",
                   "The waypoint distance is too long. A valid distance between two adjacent waypoints  is less than 2km and greater than 0.5m. In addition, the first and last waypoint of  the mission must also have a separation of less than 2km and greater than 0.5m. If  the separation of any consecutive waypoints or the separation of the first and  last waypoint is larger than 2km, then this error will be raised.",
            ],
            [
                   "The waypoint distance is too long. A valid distance between two adjacent waypoints  is less than 2km and greater than 0.5m. In addition, the first and last waypoint of  the mission must also have a separation of less than 2km and greater than 0.5m. If  the separation of any consecutive waypoints or the separation of the first and  last waypoint is larger than 2km, then this error will be raised.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_DISTANCE_TOO_LONG_inline",
                   "",
            ],
            [
                   "WAYPOINT_DAMPING_CHECK_FAILED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_DAMPING_CHECK_FAILED_inline",
                   "The damping check failed.",
            ],
            [
                   "The damping check failed.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_DAMPING_CHECK_FAILED_inline",
                   "",
            ],
            [
                   "WAYPOINT_ACTION_PARAMETER_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_ACTION_PARAM_INVALID_inline",
                   "The parameter of the waypoint action is invalid.",
            ],
            [
                   "The parameter of the waypoint action is invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_ACTION_PARAM_INVALID_inline",
                   "",
            ],
            [
                   "WAYPOINTS_UPLOADING",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINTS_UPLOADING_inline",
                   "The waypoints are still uploading.",
            ],
            [
                   "The waypoints are still uploading.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINTS_UPLOADING_inline",
                   "",
            ],
            [
                   "WAYPOINT_MISSION_INFO_NOT_UPLOADED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_MISSION_INFO_NOT_UPLOADED_inline",
                   "The information for the waypoint mission is not completely uploaded.",
            ],
            [
                   "The information for the waypoint mission is not completely uploaded.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_MISSION_INFO_NOT_UPLOADED_inline",
                   "",
            ],
            [
                   "WAYPOINT_UPLOAD_NOT_COMPLETE",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_UPLOAD_NOT_COMPLETE_inline",
                   "The waypoint uploading is not complete.",
            ],
            [
                   "The waypoint uploading is not complete.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_UPLOAD_NOT_COMPLETE_inline",
                   "",
            ],
            [
                   "WAYPOINT_REQUEST_IS_RUNNING",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_REQUEST_IS_RUNNING_inline",
                   "The waypoint mission is running.",
            ],
            [
                   "The waypoint mission is running.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_REQUEST_IS_RUNNING_inline",
                   "",
            ],
            [
                   "WAYPOINT_NOT_RUNNING",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_NOT_RUNNING_inline",
                   "The waypoint mission is not running.",
            ],
            [
                   "The waypoint mission is not running.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_NOT_RUNNING_inline",
                   "",
            ],
            [
                   "WAYPOINT_IDLE_VELOCITY_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_IDLE_VELOCITY_INVALID_inline",
                   "The idle velocity is invalid.",
            ],
            [
                   "The idle velocity is invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WAYPOINT_IDLE_VELOCITY_INVALID_inline",
                   "",
            ],
            [
                   "AIRCRAFT_STARTING_MOTOR",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_AIRCRAFT_STARTING_MOTOR_inline",
                   "The aircraft is starting the motor.",
            ],
            [
                   "The aircraft is starting the motor.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_AIRCRAFT_STARTING_MOTOR_inline",
                   "",
            ],
            [
                   "WRONG_CMD",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WRONG_CMD_inline",
                   "The command is wrong.",
            ],
            [
                   "The command is wrong.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_WRONG_CMD_inline",
                   "",
            ],
            [
                   "POINTING_AIRCRAFT_NOT_IN_THE_AIR",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_POINTING_AIRCRAFT_NOT_IN_THE_AIR_inline",
                   "The aircraft is not in the air. Please take off first.",
            ],
            [
                   "The aircraft is not in the air. Please take off first.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_POINTING_AIRCRAFT_NOT_IN_THE_AIR_inline",
                   "",
            ],
            [
                   "VISION_SENSOR_LOW_QUALITY",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_VISION_SENSOR_LOW_QUALITY_inline",
                   "The quality of vision sensor is low.",
            ],
            [
                   "The quality of vision sensor is low.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_VISION_SENSOR_LOW_QUALITY_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_UNKNOWN_inline",
                   "Unknown result.",
            ],
            [
                   "Unknown result.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJIMissionManagerError_MISSION_RESULT_UNKNOWN_inline",
                   "",
            ],
            [
                   "MODE_ERROR",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_ModeError_inline",
                   "Cannot execute in the current mode. For products and flight controller firmware versions that support 'F'  mode (e.g. Phantom 3 Professional, Inspire 1, A3 with flight controller firmware version lower than  3.2.10.0, etc), please make sure the remote controller's mode switch is in 'F' mode. For the others,  please make sure the remote controller's mode switch is in 'P' mode.",
            ],
            [
                   "Cannot execute in the current mode. For products and flight controller firmware versions that support 'F'  mode (e.g. Phantom 3 Professional, Inspire 1, A3 with flight controller firmware version lower than  3.2.10.0, etc), please make sure the remote controller's mode switch is in 'F' mode. For the others,  please make sure the remote controller's mode switch is in 'P' mode.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_ModeError_inline",
                   "",
            ],
            [
                   "GPS_SIGNAL_WEAK",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftBadGPS_inline",
                   "The GPS signal of the aircraft is weak.",
            ],
            [
                   "The GPS signal of the aircraft is weak.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftBadGPS_inline",
                   "",
            ],
            [
                   "LOW_BATTERY",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftLowBattery_inline",
                   "Low battery level warning.",
            ],
            [
                   "Low battery level warning.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftLowBattery_inline",
                   "",
            ],
            [
                   "AIRCRAFT_NOT_IN_THE_AIR",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftNotInTheAir_inline",
                   "The aircraft is not in the air.",
            ],
            [
                   "The aircraft is not in the air.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftNotInTheAir_inline",
                   "",
            ],
            [
                   "AIRCRAFT_ALTITUDE_TOO_HIGH",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftAltitudeTooHigh_inline",
                   "The aircraft's altitude is too high.",
            ],
            [
                   "The aircraft's altitude is too high.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftAltitudeTooHigh_inline",
                   "",
            ],
            [
                   "AIRCRAFT_ALTITUDE_TOO_LOW",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftAltitudeTooLow_inline",
                   "The aircraft's altitude is too low.",
            ],
            [
                   "The aircraft's altitude is too low.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftAltitudeTooLow_inline",
                   "",
            ],
            [
                   "AIRCRAFT_TAKING_OFF",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftTakingoff_inline",
                   "Aircraft is taking off.",
            ],
            [
                   "Aircraft is taking off.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftTakingoff_inline",
                   "",
            ],
            [
                   "AIRCRAFT_LANDING",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftLanding_inline",
                   "Aircraft is landing.",
            ],
            [
                   "Aircraft is landing.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftLanding_inline",
                   "",
            ],
            [
                   "AIRCRAFT_GOING_HOME",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftGoingHome_inline",
                   "Aircraft is going home.",
            ],
            [
                   "Aircraft is going home.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftGoingHome_inline",
                   "",
            ],
            [
                   "HOME_POINT_NOT_RECORDED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftHomePointNotRecorded_inline",
                   "The home point of the aircraft is not recorded.",
            ],
            [
                   "The home point of the aircraft is not recorded.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftHomePointNotRecorded_inline",
                   "",
            ],
            [
                   "IN_NOVICE_MODE",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftInNoviceMode_inline",
                   "Aircraft is in novice mode.",
            ],
            [
                   "Aircraft is in novice mode.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftInNoviceMode_inline",
                   "",
            ],
            [
                   "AIRCRAFT_IN_NO_FLY_ZONE",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftInNoFlyZone_inline",
                   "Aircraft is in a no fly zone.",
            ],
            [
                   "Aircraft is in a no fly zone.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftInNoFlyZone_inline",
                   "",
            ],
            [
                   "REACH_FLIGHT_LIMITATION",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_ReachFlightLimitation_inline",
                   "The aircraft has reached the flight limitation.",
            ],
            [
                   "The aircraft has reached the flight limitation.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_ReachFlightLimitation_inline",
                   "",
            ],
            [
                   "RUNNING_MISSION",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftRunningMission_inline",
                   "The aircraft is running a mission.",
            ],
            [
                   "The aircraft is running a mission.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftRunningMission_inline",
                   "",
            ],
            [
                   "TOO_CLOSE_TO_HOME_POINT",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftNearHomePoint_inline",
                   "Aircraft is too close to the home point.",
            ],
            [
                   "Aircraft is too close to the home point.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_AircraftNearHomePoint_inline",
                   "",
            ],
            [
                   "MISSION_PARAMETERS_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_MissionParametersInvalid_inline",
                   "The parameters of the mission are invalid.",
            ],
            [
                   "The parameters of the mission are invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_MissionParametersInvalid_inline",
                   "",
            ],
            [
                   "MISSION_RESUME_FAILED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_MissionResumeFailed_inline",
                   "Mission resume failed.",
            ],
            [
                   "Mission resume failed.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_MissionResumeFailed_inline",
                   "",
            ],
            [
                   "TRACKING_TARGET_LOST",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_TrackingTargetLost_inline",
                   "The tracking target is lost.",
            ],
            [
                   "The tracking target is lost.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_TrackingTargetLost_inline",
                   "",
            ],
            [
                   "NO_VIDEO_FEED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_NoVideoFeed_inline",
                   "No live video feed is captured for the ActiveTrack Mission.",
            ],
            [
                   "No live video feed is captured for the ActiveTrack Mission.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_NoVideoFeed_inline",
                   "",
            ],
            [
                   "VIDEO_FRAME_RATE_TOO_LOW",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_VideoFrameRateTooLow_inline",
                   "The frame rate of the live video feed is too low.",
            ],
            [
                   "The frame rate of the live video feed is too low.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_VideoFrameRateTooLow_inline",
                   "",
            ],
            [
                   "VISION_SYSTEM_NOT_AUTHORIZED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_VisionSystemNotAuthorized_inline",
                   "The vision system cannot get the authorization to control the aircraft.",
            ],
            [
                   "The vision system cannot get the authorization to control the aircraft.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_VisionSystemNotAuthorized_inline",
                   "",
            ],
            [
                   "VISION_SYSTEM_ERROR",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_VisionSystemError_inline",
                   "The vision system encounters system error.",
            ],
            [
                   "The vision system encounters system error.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_VisionSystemError_inline",
                   "",
            ],
            [
                   "CANNOT_BYPASS_OBSTACLE",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_CannotBypassObstacle_inline",
                   "The aircraft cannot bypass the obstacle.",
            ],
            [
                   "The aircraft cannot bypass the obstacle.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_CannotBypassObstacle_inline",
                   "",
            ],
            [
                   "STOPPED_BY_USER",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_StoppedByUser_inline",
                   "Mission was stopped by the user.",
            ],
            [
                   "Mission was stopped by the user.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_StoppedByUser_inline",
                   "",
            ],
            [
                   "VISION_SYSTEM_NEEDS_CALIBRATION",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_VisionSystemNeedCalibration_inline",
                   "The vision system requires calibration.",
            ],
            [
                   "The vision system requires calibration.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_VisionSystemNeedCalibration_inline",
                   "",
            ],
            [
                   "VISION_SENSOR_OVEREXPOSED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_VisionSensorOverexposed_inline",
                   "The vision sensors are overexposed.",
            ],
            [
                   "The vision sensors are overexposed.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_VisionSensorOverexposed_inline",
                   "",
            ],
            [
                   "VISION_SENSOR_UNDEREXPOSED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_VisionSensorUnderexposed_inline",
                   "The vision sensors are underexposed.",
            ],
            [
                   "The vision sensors are underexposed.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_VisionSensorUnderexposed_inline",
                   "",
            ],
            [
                   "VISION_DATA_ABNORMAL",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_VisionDataAbnormal_inline",
                   "The data from the vision system is abnormal.",
            ],
            [
                   "The data from the vision system is abnormal.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_VisionDataAbnormal_inline",
                   "",
            ],
            [
                   "FEATURE_POINT_CANNOT_MATCH",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_FeaturePointCannotMatch_inline",
                   "The feature points found by both vision sensors cannot match.",
            ],
            [
                   "The feature points found by both vision sensors cannot match.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_FeaturePointCannotMatch_inline",
                   "",
            ],
            [
                   "TRACKING_RECT_TOO_SMALL",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_TrackingRectTooSmall_inline",
                   "The tracking rectangle is too small.",
            ],
            [
                   "The tracking rectangle is too small.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_TrackingRectTooSmall_inline",
                   "",
            ],
            [
                   "TRACKING_RECT_TOO_LARGE",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_TrackingRectTooLarge_inline",
                   "The tracking rectangle is too large.",
            ],
            [
                   "The tracking rectangle is too large.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_TrackingRectTooLarge_inline",
                   "",
            ],
            [
                   "TRACKING_TARGET_NOT_ENOUGH_FEATURES",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_TrackingTargetNotEnoughFeature_inline",
                   "The tracking target doesn't have enough features to lock onto.",
            ],
            [
                   "The tracking target doesn't have enough features to lock onto.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_TrackingTargetNotEnoughFeature_inline",
                   "",
            ],
            [
                   "TRACKING_TARGET_TOO_CLOSE",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_TrackingTargetTooClose_inline",
                   "The Tracking target is too close to the aircraft.",
            ],
            [
                   "The Tracking target is too close to the aircraft.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_TrackingTargetTooClose_inline",
                   "",
            ],
            [
                   "TRACKING_TARGET_TOO_FAR",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_TrackingTargetTooFar_inline",
                   "The tracking target is too far away from the aircraft.",
            ],
            [
                   "The tracking target is too far away from the aircraft.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_TrackingTargetTooFar_inline",
                   "",
            ],
            [
                   "TRACKING_TARGET_TOO_HIGH",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_TrackingTargetTooHigh_inline",
                   "The tracking target is too high.",
            ],
            [
                   "The tracking target is too high.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_TrackingTargetTooHigh_inline",
                   "",
            ],
            [
                   "TRACKING_TARGET_SHAKING",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_TrackingTargetShaking_inline",
                   "The tracking target is shaking too much.",
            ],
            [
                   "The tracking target is shaking too much.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_TrackingTargetShaking_inline",
                   "",
            ],
            [
                   "TRACKING_TARGET_LOW_CONFIDENCE",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_TrackingTargetLowConfidence_inline",
                   "The ActiveTrack mission is too unsure the tracking object and confirmation is required.",
            ],
            [
                   "The ActiveTrack mission is too unsure the tracking object and confirmation is required.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_TrackingTargetLowConfidence_inline",
                   "",
            ],
            [
                   "TRACKING_PAUSED_BY_USER",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_MissionPausedByUser_inline",
                   "Mission is paused by user.",
            ],
            [
                   "Mission is paused by user.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_MissionPausedByUser_inline",
                   "",
            ],
            [
                   "TRACKING_GIMBAL_PITCH_TOO_LOW",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_GimbalPitchTooLow_inline",
                   "Gimbal pitch is too low.",
            ],
            [
                   "Gimbal pitch is too low.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_GimbalPitchTooLow_inline",
                   "",
            ],
            [
                   "TRACKING_OBSTACLE_DETECTED",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_ObstacleDetected_inline",
                   "Encounter an obstacle.",
            ],
            [
                   "Encounter an obstacle.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_ObstacleDetected_inline",
                   "",
            ],
            [
                   "REACH_ALTITUDE_LOWER_BOUND",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_ReachAltitudeLowerBound_inline",
                   "The aircraft reaches the altitude lower bound of the TapFly Mission.",
            ],
            [
                   "The aircraft reaches the altitude lower bound of the TapFly Mission.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "#DJIError_DJISDKMissionError_ReachAltitudeLowerBound_inline",
                   "",
            ],
            [
                   "getDJIError",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_getDJIError_inline",
                   "Returns the specific error in DJIFlightControllerError according to the error code.  @param ccode Error code.  @return The DJIError object.",
            ],
            [
                   "Returns the specific error in DJIFlightControllerError according to the error code.  @param ccode Error code.  @return The DJIError object.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_getDJIError_inline",
                   "",
            ],
            [
                   "FAIL_TO_ENTER_TRANSPORT_MODE_WHEN_MOTORS_ON",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_FAIL_TO_ENTER_TRANSPORT_MODE_WHEN_MOTORS_ON_inline",
                   "When the motors are on, the aircraft could not get into transport mode.",
            ],
            [
                   "When the motors are on, the aircraft could not get into transport mode.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_FAIL_TO_ENTER_TRANSPORT_MODE_WHEN_MOTORS_ON_inline",
                   "",
            ],
            [
                   "IMU_CALIBRATION_ERROR_IN_THE_AIR_OR_MOTORS_ON",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_IMU_CALIBRATION_ERROR_IN_THE_AIR_OR_MOTORS_ON_inline",
                   "IMU calibration is not allowed if the aircraft's motors are on or the aircraft is in the air.",
            ],
            [
                   "IMU calibration is not allowed if the aircraft's motors are on or the aircraft is in the air.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_IMU_CALIBRATION_ERROR_IN_THE_AIR_OR_MOTORS_ON_inline",
                   "",
            ],
            [
                   "INVALID_PARAMETER",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_FLIGHT_CONTROLLER_INVALID_PARAMETER_inline",
                   "The parameter is not a valid value.",
            ],
            [
                   "The parameter is not a valid value.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_FLIGHT_CONTROLLER_INVALID_PARAMETER_inline",
                   "",
            ],
            [
                   "OBJECT_EMPTY_OR_NOT_AVAILABLE",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_FLIGHT_CONTROLLER_OBJECT_EMPTY_OR_NOT_AVAILABLE_inline",
                   "Value request is not ready for empty or null.",
            ],
            [
                   "Value request is not ready for empty or null.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_FLIGHT_CONTROLLER_OBJECT_EMPTY_OR_NOT_AVAILABLE_inline",
                   "",
            ],
            [
                   "UNSUPPORTED",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_FLIGHT_CONTROLLER_UNSUPPORT_inline",
                   "Product does not support this command.",
            ],
            [
                   "Product does not support this command.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_FLIGHT_CONTROLLER_UNSUPPORT_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_BEGAN",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_BEGAN_inline",
                   "Mission began.",
            ],
            [
                   "Mission began.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_BEGAN_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_CANCELED",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_CANCELED_inline",
                   "Mission canceled.",
            ],
            [
                   "Mission canceled.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_CANCELED_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_FAILED",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_FAILED_inline",
                   "Mission failed.",
            ],
            [
                   "Mission failed.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_FAILED_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_TIMEOUT",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_TIMEOUT_inline",
                   "Mission timeout.",
            ],
            [
                   "Mission timeout.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_TIMEOUT_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_MODE_ERROR",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MODE_ERROR_inline",
                   "Aircraft's control mode is in error.  It may be that the control mode is set to manual or attitude (Manual or Atti).",
            ],
            [
                   "Aircraft's control mode is in error.  It may be that the control mode is set to manual or attitude (Manual or Atti).",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MODE_ERROR_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_GPS_NOT_READY",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_GPS_NOT_READY_inline",
                   "The aircraft GPS is not ready.  It may be that the aircraft does not have the home point location.",
            ],
            [
                   "The aircraft GPS is not ready.  It may be that the aircraft does not have the home point location.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_GPS_NOT_READY_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_MOTOR_NOT_START",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MOTOR_NOT_START_inline",
                   "The aircraft motor is not started.",
            ],
            [
                   "The aircraft motor is not started.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MOTOR_NOT_START_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_TAKEOFF",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_TAKEOFF_inline",
                   "The aircraft is taking off.",
            ],
            [
                   "The aircraft is taking off.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_TAKEOFF_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_IS_FLYING",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_IS_FLYING_inline",
                   "The aircraft is flying.",
            ],
            [
                   "The aircraft is flying.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_IS_FLYING_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_NOT_AUTO_MODE",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_NOT_AUTO_MODE_inline",
                   "The aircraft is not in auto mode.",
            ],
            [
                   "The aircraft is not in auto mode.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_NOT_AUTO_MODE_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_UPLOAD_WAYPOINT_NUM_MAX_LIMIT",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_UPLOAD_WAYPOINT_NUM_MAX_LIMIT_inline",
                   "The number of uploaded waypoints has reached the maximum limit.  For the Inspire 1 and Phantom 3 Series the maximum number is 99.",
            ],
            [
                   "The number of uploaded waypoints has reached the maximum limit.  For the Inspire 1 and Phantom 3 Series the maximum number is 99.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_UPLOAD_WAYPOINT_NUM_MAX_LIMIT_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_WAYPOINT_UPLOADING",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_UPLOADING_inline",
                   "The waypoint is uploading.",
            ],
            [
                   "The waypoint is uploading.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_UPLOADING_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_KEY_LEVEL_LOW",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_KEY_LEVEL_LOW_inline",
                   "The key level is low.  Check that your key is a level 2 application key in your AndroidManifest.xml.",
            ],
            [
                   "The key level is low.  Check that your key is a level 2 application key in your AndroidManifest.xml.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_KEY_LEVEL_LOW_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_NAVIGATION_IS_NOT_OPEN",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_NAVIGATION_IS_NOT_OPEN_inline",
                   "Navigation is not open.",
            ],
            [
                   "Navigation is not open.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_NAVIGATION_IS_NOT_OPEN_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_TOO_CLOSE_TO_HOMEPOINT",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_TOO_CLOSE_TO_HOMEPOINT_inline",
                   "Too close to the home point.",
            ],
            [
                   "Too close to the home point.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_TOO_CLOSE_TO_HOMEPOINT_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_IOC_TYPE_UNKNOWN",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_IOC_TYPE_UNKNOWN_inline",
                   "The type of IOC is unknown.",
            ],
            [
                   "The type of IOC is unknown.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_IOC_TYPE_UNKNOWN_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_HOMEPOINT_VALUE_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_HOMEPOINT_VALUE_INVALID_inline",
                   "The homepoint is not a valid float value.",
            ],
            [
                   "The homepoint is not a valid float value.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_HOMEPOINT_VALUE_INVALID_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_HOMEPOINT_LOCATION_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_HOMEPOINT_LOCATION_INVALID_inline",
                   "The latitude and longitude of the home point are invalid.",
            ],
            [
                   "The latitude and longitude of the home point are invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_HOMEPOINT_LOCATION_INVALID_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_HOMEPOINT_DIRECTION_UNKNOWN",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_HOMEPOINT_DIRECTION_UNKNOWN_inline",
                   "The direction of the home point is unknown.",
            ],
            [
                   "The direction of the home point is unknown.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_HOMEPOINT_DIRECTION_UNKNOWN_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_HOMEPOINT_PAUSED",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_HOMEPOINT_PAUSED_inline",
                   "The homepoint is paused.",
            ],
            [
                   "The homepoint is paused.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_HOMEPOINT_PAUSED_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_HOMEPOINT_NOT_PAUSED",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_HOMEPOINT_NOT_PAUSED_inline",
                   "The homepoint is not paused.",
            ],
            [
                   "The homepoint is not paused.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_HOMEPOINT_NOT_PAUSED_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_FOLLOWME_DISTANCE_TOO_LARGE",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_FOLLOWME_DISTANCE_TOO_LARGE_inline",
                   "The distance between the aircraft and mobile phone is too large (must be lower than 20000m). This error is returned when initializing the follow me task.",
            ],
            [
                   "The distance between the aircraft and mobile phone is too large (must be lower than 20000m). This error is returned when initializing the follow me task.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_FOLLOWME_DISTANCE_TOO_LARGE_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_FOLLOWME_DISCONNECT_TIME_TOO_LONG",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_FOLLOWME_DISCONNECT_TIME_TOO_LONG_inline",
                   "The disconnect time of the Follow Me mission is too long.",
            ],
            [
                   "The disconnect time of the Follow Me mission is too long.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_FOLLOWME_DISCONNECT_TIME_TOO_LONG_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_FOLLOWME_GIMBAL_PITCH_ERROR",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_FOLLOWME_GIMBAL_PITCH_ERROR_inline",
                   "The initial pitch angle of the gimbal is too large.",
            ],
            [
                   "The initial pitch angle of the gimbal is too large.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_FOLLOWME_GIMBAL_PITCH_ERROR_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_ALTITUDE_TOO_HIGH",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_ALTITUDE_TOO_HIGH_inline",
                   "The altitude is too high.",
            ],
            [
                   "The altitude is too high.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_ALTITUDE_TOO_HIGH_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_ALTITUDE_TOO_LOW",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_ALTITUDE_TOO_LOW_inline",
                   "The altitude is too low.",
            ],
            [
                   "The altitude is too low.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_ALTITUDE_TOO_LOW_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_MISSION_RADIUS_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_RADIUS_INVALID_inline",
                   "The radius of the mission is invalid.",
            ],
            [
                   "The radius of the mission is invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_RADIUS_INVALID_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_MISSION_SPEED_TOO_LARGE",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_SPEED_TOO_LARGE_inline",
                   "The speed of the mission is too large.",
            ],
            [
                   "The speed of the mission is too large.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_SPEED_TOO_LARGE_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_MISSION_ENTRYPOINT_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_ENTRYPOINT_INVALID_inline",
                   "The entry point of mission is invalid.",
            ],
            [
                   "The entry point of mission is invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_ENTRYPOINT_INVALID_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_MISSION_HEADING_MODE_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_HEADING_MODE_INVALID_inline",
                   "The heading mode of the mission is invalid.",
            ],
            [
                   "The heading mode of the mission is invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_HEADING_MODE_INVALID_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_MISSION_RESUME_FAILED",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_RESUME_FAILED_inline",
                   "The mission resume failed.",
            ],
            [
                   "The mission resume failed.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_RESUME_FAILED_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_MISSION_RADIUS_OVERLIMITED",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_RADIUS_OVERLIMITED_inline",
                   "The radius of the mission is over the acceptable limit.",
            ],
            [
                   "The radius of the mission is over the acceptable limit.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_RADIUS_OVERLIMITED_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_UNSUPPORTED_NAVIGATION_FOR_THE_PRODUCT",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_UNSUPPORTED_NAVIGATION_FOR_THE_PRODUCT_inline",
                   "The navigation in the product is unsupported.",
            ],
            [
                   "The navigation in the product is unsupported.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_UNSUPPORTED_NAVIGATION_FOR_THE_PRODUCT_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_DISTANCE_FROM_MISSION_TARGET_TOO_LONG",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_DISTANCE_FROM_MISSION_TARGET_TOO_LONG_inline",
                   "The navigation in the product is unsupported. For example, the distance from hotpoint target position is too long,  or the distance from the first waypoint target position is too long.",
            ],
            [
                   "The navigation in the product is unsupported. For example, the distance from hotpoint target position is too long,  or the distance from the first waypoint target position is too long.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_DISTANCE_FROM_MISSION_TARGET_TOO_LONG_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_RC_MODE_ERROR",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_RC_MODE_ERROR_inline",
                   "Remote controller mode error.  You should put the remote controller's mode selection bar to F position.",
            ],
            [
                   "Remote controller mode error.  You should put the remote controller's mode selection bar to F position.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_RC_MODE_ERROR_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_MC_MODE_ERROR",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MC_MODE_ERROR_inline",
                   "The mode of the main controller is error.",
            ],
            [
                   "The mode of the main controller is error.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MC_MODE_ERROR_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_IOC_WORKING",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_IOC_WORKING_inline",
                   "The IOC mode is working.",
            ],
            [
                   "The IOC mode is working.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_IOC_WORKING_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_MISSION_NOT_INIT",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_NOT_INIT_inline",
                   "The mission is not initialized.",
            ],
            [
                   "The mission is not initialized.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_NOT_INIT_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_MISSION_NOT_EXIST",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_NOT_EXIST_inline",
                   "The mission does not exist.",
            ],
            [
                   "The mission does not exist.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_NOT_EXIST_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_MISSION_CONFLICT",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_CONFLICT_inline",
                   "There is a conflicting setting in the mission.",
            ],
            [
                   "There is a conflicting setting in the mission.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_CONFLICT_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_MISSION_ESTIMATE_TIME_TOO_LONG",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_ESTIMATE_TIME_TOO_LONG_inline",
                   "The mission estimate time is too long.",
            ],
            [
                   "The mission estimate time is too long.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_ESTIMATE_TIME_TOO_LONG_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_IN_NOVICE_MODE",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_IN_NOVICE_MODE_inline",
                   "The aircraft is in novice mode.",
            ],
            [
                   "The aircraft is in novice mode.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_IN_NOVICE_MODE_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_HIGH_PRIORITY_MISSION_EXECUTING",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_HIGH_PRIORITY_MISSION_EXECUTING_inline",
                   "The higher priority mission is executing.",
            ],
            [
                   "The higher priority mission is executing.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_HIGH_PRIORITY_MISSION_EXECUTING_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_GPS_SIGNAL_WEAK",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_GPS_SIGNAL_WEAK_inline",
                   "The GPS signal of the aircraft is weak.",
            ],
            [
                   "The GPS signal of the aircraft is weak.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_GPS_SIGNAL_WEAK_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_LOW_BATTERY",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_LOW_BATTERY_inline",
                   "Low battery level warning.",
            ],
            [
                   "Low battery level warning.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_LOW_BATTERY_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_AIRCRAFT_NOT_IN_THE_AIR",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_AIRCRAFT_NOT_IN_THE_AIR_inline",
                   "The aircraft is not in the air.",
            ],
            [
                   "The aircraft is not in the air.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_AIRCRAFT_NOT_IN_THE_AIR_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_MISSION_PARAM_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_PARAM_INVALID_inline",
                   "The parameters of the mission are invalid.",
            ],
            [
                   "The parameters of the mission are invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_PARAM_INVALID_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_MISSION_CONDITION_NOT_SATISFIED",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_CONDITION_NOT_SATISFIED_inline",
                   "The condition of the mission is not satisfied.",
            ],
            [
                   "The condition of the mission is not satisfied.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_CONDITION_NOT_SATISFIED_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_MISSION_ACROSS_NOFLYZONE",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_ACROSS_NOFLYZONE_inline",
                   "The mission is across a no fly zone.",
            ],
            [
                   "The mission is across a no fly zone.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_ACROSS_NOFLYZONE_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_HOMEPOINT_NOT_RECORDED",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_HOMEPOINT_NOT_RECORDED_inline",
                   "The home point of aircraft is not recorded.",
            ],
            [
                   "The home point of aircraft is not recorded.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_HOMEPOINT_NOT_RECORDED_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_AIRCRAFT_IN_NOFLYZONE",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_AIRCRAFT_IN_NOFLYZONE_inline",
                   "The aircraft is in a no fly zone.",
            ],
            [
                   "The aircraft is in a no fly zone.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_AIRCRAFT_IN_NOFLYZONE_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_MISSION_INFO_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_INFO_INVALID_inline",
                   "The information of the mission is invalid.",
            ],
            [
                   "The information of the mission is invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_MISSION_INFO_INVALID_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_WAYPOINT_INFO_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_INFO_INVALID_inline",
                   "The information of the waypoint is invalid.",
            ],
            [
                   "The information of the waypoint is invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_INFO_INVALID_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_WAYPOINT_TRACE_TOO_LONG",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_TRACE_TOO_LONG_inline",
                   "The trace of the waypoint is too long. The maximum waypoint trace is 30km.",
            ],
            [
                   "The trace of the waypoint is too long. The maximum waypoint trace is 30km.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_TRACE_TOO_LONG_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_WAYPOINT_TOTAL_TRACE_TOO_LONG",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_TOTAL_TRACE_TOO_LONG_inline",
                   "The total trace of the waypoint is too long. The maximum total trace is 40km.",
            ],
            [
                   "The total trace of the waypoint is too long. The maximum total trace is 40km.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_TOTAL_TRACE_TOO_LONG_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_WAYPOINT_INDEX_OVERRANGE",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_INDEX_OVERRANGE_inline",
                   "The index of the waypoint is over range.",
            ],
            [
                   "The index of the waypoint is over range.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_INDEX_OVERRANGE_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_WAYPOINT_DISTANCE_TOO_CLOSE",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_DISTANCE_TOO_CLOSE_inline",
                   "The waypoint distance is too close.",
            ],
            [
                   "The waypoint distance is too close.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_DISTANCE_TOO_CLOSE_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_WAYPOINT_DISTANCE_TOO_LONG",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_DISTANCE_TOO_LONG_inline",
                   "The waypoint distance is too long. The maximum distance between two adjacent waypoints is 2km.",
            ],
            [
                   "The waypoint distance is too long. The maximum distance between two adjacent waypoints is 2km.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_DISTANCE_TOO_LONG_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_WAYPOINT_DAMPING_CHECK_FAILED",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_DAMPING_CHECK_FAILED_inline",
                   "The damping check failed.",
            ],
            [
                   "The damping check failed.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_DAMPING_CHECK_FAILED_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_WAYPOINT_ACTION_PARAM_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_ACTION_PARAM_INVALID_inline",
                   "The parameter of the waypoint action is invalid.",
            ],
            [
                   "The parameter of the waypoint action is invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_ACTION_PARAM_INVALID_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_WAYPOINTS_UPLOADING",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINTS_UPLOADING_inline",
                   "The waypoints is still uploading.",
            ],
            [
                   "The waypoints is still uploading.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINTS_UPLOADING_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_WAYPOINT_MISSION_INFO_NOT_UPLOADED",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_MISSION_INFO_NOT_UPLOADED_inline",
                   "The information of the waypoint mission is not completely uploaded.",
            ],
            [
                   "The information of the waypoint mission is not completely uploaded.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_MISSION_INFO_NOT_UPLOADED_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_WAYPOINT_UPLOAD_NOT_COMPLETE",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_UPLOAD_NOT_COMPLETE_inline",
                   "The waypoint uploading is not complete.",
            ],
            [
                   "The waypoint uploading is not complete.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_UPLOAD_NOT_COMPLETE_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_WAYPOINT_REQUEST_IS_RUNNING",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_REQUEST_IS_RUNNING_inline",
                   "The waypoint request is running.",
            ],
            [
                   "The waypoint request is running.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_REQUEST_IS_RUNNING_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_WAYPOINT_NOT_RUNNING",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_NOT_RUNNING_inline",
                   "The waypoint mission is not running.",
            ],
            [
                   "The waypoint mission is not running.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_NOT_RUNNING_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_WAYPOINT_IDLE_VELOCITY_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_IDLE_VELOCITY_INVALID_inline",
                   "The idle velocity is invalid.",
            ],
            [
                   "The idle velocity is invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WAYPOINT_IDLE_VELOCITY_INVALID_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_AIRCRAFT_TAKINGOFF",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_AIRCRAFT_TAKINGOFF_inline",
                   "The aircraft is taking off.",
            ],
            [
                   "The aircraft is taking off.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_AIRCRAFT_TAKINGOFF_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_AIRCRAFT_LANDING",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_AIRCRAFT_LANDING_inline",
                   "The aircraft is landing.",
            ],
            [
                   "The aircraft is landing.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_AIRCRAFT_LANDING_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_AIRCRAFT_GOINGHOME",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_AIRCRAFT_GOINGHOME_inline",
                   "The aircraft is going home.",
            ],
            [
                   "The aircraft is going home.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_AIRCRAFT_GOINGHOME_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_AIRCRAFT_STARTING_MOTOR",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_AIRCRAFT_STARTING_MOTOR_inline",
                   "The aircraft is starting the motor.",
            ],
            [
                   "The aircraft is starting the motor.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_AIRCRAFT_STARTING_MOTOR_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_WRONG_CMD",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WRONG_CMD_inline",
                   "The command is wrong.",
            ],
            [
                   "The command is wrong.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_WRONG_CMD_inline",
                   "",
            ],
            [
                   "ALREADY_IN_THE_AIR",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_UNABLE_TO_TAKE_OFF_inline",
                   "If the motors are already turned on or the aircraft is already flying, the takeoff did not execute.",
            ],
            [
                   "If the motors are already turned on or the aircraft is already flying, the takeoff did not execute.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_UNABLE_TO_TAKE_OFF_inline",
                   "",
            ],
            [
                   "MISSION_RESULT_UNKNOWN",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_UNKNOWN_inline",
                   "Unknown result.",
            ],
            [
                   "Unknown result.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJIFlightControllerError_MISSION_RESULT_UNKNOWN_inline",
                   "",
            ],
            [
                   "GPS_SIGNAL_WEAK",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_BadGPS_inline",
                   "GPS level is not high enough to allow flight controller to obtain accurate location.",
            ],
            [
                   "GPS level is not high enough to allow flight controller to obtain accurate location.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_BadGPS_inline",
                   "",
            ],
            [
                   "COULD_NOT_ENTER_TRANSPORT_MODE",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_GimbalNotRemoved_inline",
                   "Aircraft could not enter transport mode, since the gimbal is still connected.",
            ],
            [
                   "Aircraft could not enter transport mode, since the gimbal is still connected.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_GimbalNotRemoved_inline",
                   "",
            ],
            [
                   "CANNOT_TURN_OFF_MOTORS_WHILE_AIRCRAFT_FLYING",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_AircraftFlying_inline",
                   "The aircraft is flying. For safety consideration, the motors could not be shut down.",
            ],
            [
                   "The aircraft is flying. For safety consideration, the motors could not be shut down.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_AircraftFlying_inline",
                   "",
            ],
            [
                   "HOME_POINT_TOO_FAR",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_HomePointTooFar_inline",
                   "The new home point is too far.",
            ],
            [
                   "The new home point is too far.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_HomePointTooFar_inline",
                   "",
            ],
            [
                   "GO_HOME_ALTITUDE_TOO_LOW",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_GoHomeAltitudeTooLow_inline",
                   "The new home altitude is too low. (Lower than 20m).",
            ],
            [
                   "The new home altitude is too low. (Lower than 20m).",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_GoHomeAltitudeTooLow_inline",
                   "",
            ],
            [
                   "GO_HOME_ALTITUDE_TOO_HIGH",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_GoHomeAltitudeTooHigh_inline",
                   "The new home altitude is too high. (higher than 500m).",
            ],
            [
                   "The new home altitude is too high. (higher than 500m).",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_GoHomeAltitudeTooHigh_inline",
                   "",
            ],
            [
                   "GO_HOME_ALTITUDE_HIGHER_THAN_MAX_FLIGHT_HEIGHT",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_GoHomeAltitudeHigherThanMaxFlightHeight_inline",
                   "The go home altitude is too high (higher than max flight height).",
            ],
            [
                   "The go home altitude is too high (higher than max flight height).",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_GoHomeAltitudeHigherThanMaxFlightHeight_inline",
                   "",
            ],
            [
                   "RTK_CANNOT_START",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_RTKStartError_inline",
                   "RTK cannot start properly. Please reboot.",
            ],
            [
                   "RTK cannot start properly. Please reboot.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_RTKStartError_inline",
                   "",
            ],
            [
                   "RTK_CONNECTION_BROKEN",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_RTKConnectionBroken_inline",
                   "Connection between base station and mobile station is broken.",
            ],
            [
                   "Connection between base station and mobile station is broken.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_RTKConnectionBroken_inline",
                   "",
            ],
            [
                   "RTK_BS_ANTENNA_ERROR",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_RTKBSAntennaError_inline",
                   "RTK base station antenna error. Check if the antenna is connected to the correct port.",
            ],
            [
                   "RTK base station antenna error. Check if the antenna is connected to the correct port.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_RTKBSAntennaError_inline",
                   "",
            ],
            [
                   "RTK_BS_COORDINATE_RESET",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_RTKBSCoordinatesReset_inline",
                   "RTK base station's coordinate resets.",
            ],
            [
                   "RTK base station's coordinate resets.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "#DJIError_DJISDKFlightControllerError_RTKBSCoordinatesReset_inline",
                   "",
            ],
            [
                   "FEATURE_NOT_SUPPORTED",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_SDKFeatureNotSupported_inline",
                   "Feature not supported error.",
            ],
            [
                   "Feature not supported error.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_SDKFeatureNotSupported_inline",
                   "",
            ],
            [
                   "APPLICATION_NOT_ACTIVATED",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_ApplicationNotActivated_inline",
                   "Application not activated error.",
            ],
            [
                   "Application not activated error.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_ApplicationNotActivated_inline",
                   "",
            ],
            [
                   "SYSTEM_BUSY",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_SystemBusy_inline",
                   "System busy error.",
            ],
            [
                   "System busy error.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_SystemBusy_inline",
                   "",
            ],
            [
                   "INVALID_PARAMETERS",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_InvalidParameters_inline",
                   "Parameters invalid error.",
            ],
            [
                   "Parameters invalid error.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_InvalidParameters_inline",
                   "",
            ],
            [
                   "PARAMETER_GET_FAILED",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_ParameterGetFailed_inline",
                   "Get parameter failed error.",
            ],
            [
                   "Get parameter failed error.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_ParameterGetFailed_inline",
                   "",
            ],
            [
                   "PARAMETER_SET_FAILED",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_ParameterSetFailed_inline",
                   "Setting parameters operation failed.",
            ],
            [
                   "Setting parameters operation failed.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_ParameterSetFailed_inline",
                   "",
            ],
            [
                   "COMMAND_EXECUTION_FAILED",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_CommandExecutionFailed_inline",
                   "Command execute failed error.",
            ],
            [
                   "Command execute failed error.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_CommandExecutionFailed_inline",
                   "",
            ],
            [
                   "SEND_DATA_FAILED",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_SendDataFailed_inline",
                   "Send data failed error.",
            ],
            [
                   "Send data failed error.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_SendDataFailed_inline",
                   "",
            ],
            [
                   "CONNECTION_TO_SDK_FAILED",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_ConnectionToSDKFailed_inline",
                   "Connection to SDK failed error.",
            ],
            [
                   "Connection to SDK failed error.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_ConnectionToSDKFailed_inline",
                   "",
            ],
            [
                   "DEVICE_NOT_FOUND",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_DeviceNotFound_inline",
                   "Device not found.",
            ],
            [
                   "Device not found.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_DeviceNotFound_inline",
                   "",
            ],
            [
                   "NOT_DEFINED",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_NotDefined_inline",
                   "Not defined error.",
            ],
            [
                   "Not defined error.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_NotDefined_inline",
                   "",
            ],
            [
                   "COULD_NOT_CONNECT_TO_INTERNET",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_ErrorCouldNotConnectToInternet_inline",
                   "The application is not able to connect to the Internet the first time it tries to register the API Key.",
            ],
            [
                   "The application is not able to connect to the Internet the first time it tries to register the API Key.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_ErrorCouldNotConnectToInternet_inline",
                   "",
            ],
            [
                   "INVALID_APP_KEY",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_InvalidAppKey_inline",
                   "The application key you provided is incorrect.",
            ],
            [
                   "The application key you provided is incorrect.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_InvalidAppKey_inline",
                   "",
            ],
            [
                   "HTTP_TIMEOUT",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_HTTPTimeout_inline",
                   "The network you are trying to reach is busy, or the server is unreachable.",
            ],
            [
                   "The network you are trying to reach is busy, or the server is unreachable.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_HTTPTimeout_inline",
                   "",
            ],
            [
                   "DEVICE_NOT_MATCH",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_DeviceDoesNotMatch_inline",
                   "The attempt to copy metadata from another registered device to a device that is currently connected is not  permitted. For example, if a developer has two devices and the application is activated with the app key on  one of the devices and if the other device is plugged in and tries to register the application, this error  will occur.",
            ],
            [
                   "The attempt to copy metadata from another registered device to a device that is currently connected is not  permitted. For example, if a developer has two devices and the application is activated with the app key on  one of the devices and if the other device is plugged in and tries to register the application, this error  will occur.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_DeviceDoesNotMatch_inline",
                   "",
            ],
            [
                   "BUNDLE_NOT_MATCH",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_BundleIdDoesNotMatch_inline",
                   "The bundle identifier of your application does not match the bundle identifier you registered on the  developer website when you applied to obtain an application key.",
            ],
            [
                   "The bundle identifier of your application does not match the bundle identifier you registered on the  developer website when you applied to obtain an application key.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_BundleIdDoesNotMatch_inline",
                   "",
            ],
            [
                   "APP_KEY_PROHIBITED",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_AppKeyProhibited_inline",
                   "The application key is prohibited. This occurs when an application key that has already been released by DJI  is revoked. Please contact DJI for assistance.",
            ],
            [
                   "The application key is prohibited. This occurs when an application key that has already been released by DJI  is revoked. Please contact DJI for assistance.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_AppKeyProhibited_inline",
                   "",
            ],
            [
                   "MAX_ACTIVATION_COUNT_REACHED",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_MaxActivationCountReached_inline",
                   "There is a maximum number of devices one application key can be used to activate. The maximum number of  devices is given when an application is registered on the DJI developer website. This error will occur  if the maximum number of activations has been reached.",
            ],
            [
                   "There is a maximum number of devices one application key can be used to activate. The maximum number of  devices is given when an application is registered on the DJI developer website. This error will occur  if the maximum number of activations has been reached.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_MaxActivationCountReached_inline",
                   "",
            ],
            [
                   "APP_KEY_INVALID_PLATFORM",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_AppKeyInvalidPlatformError_inline",
                   "This error occurs when an application key was given for a specific platform and is trying to be used to  activate an application for another platform. For instance, if an application key was given for an iOS  application and is used to activate an Android application, this error will occur.",
            ],
            [
                   "This error occurs when an application key was given for a specific platform and is trying to be used to  activate an application for another platform. For instance, if an application key was given for an iOS  application and is used to activate an Android application, this error will occur.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_AppKeyInvalidPlatformError_inline",
                   "",
            ],
            [
                   "APP_KEY_NOT_EXIST",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_AppKeyDoesNotExist_inline",
                   "The application key does not exist. Please make sure the application key you are entering is correct.",
            ],
            [
                   "The application key does not exist. Please make sure the application key you are entering is correct.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_AppKeyDoesNotExist_inline",
                   "",
            ],
            [
                   "APP_KEY_LEVEL_NOT_PERMITTED",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_AppKeyLevelNotPermitted_inline",
                   "There are two levels for the SDK framework, level 1 and level 2. If an application key was given under one  level and is trying to be used to active an application using another level SDK framework, this error will occur.",
            ],
            [
                   "There are two levels for the SDK framework, level 1 and level 2. If an application key was given under one  level and is trying to be used to active an application using another level SDK framework, this error will occur.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_AppKeyLevelNotPermitted_inline",
                   "",
            ],
            [
                   "SERVER_PARSE_FAILURE",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_ServerParseFailure_inline",
                   "There is a server error. Please contact DJI for assistance.",
            ],
            [
                   "There is a server error. Please contact DJI for assistance.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_ServerParseFailure_inline",
                   "",
            ],
            [
                   "SERVER_WRITE_FAILURE",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_ServerWriteError_inline",
                   "There is a server error. Please contact DJI for assistance.",
            ],
            [
                   "There is a server error. Please contact DJI for assistance.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_ServerWriteError_inline",
                   "",
            ],
            [
                   "SERVER_DATA_ABNORMAL",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_ServerDataAbnormal_inline",
                   "There is a server error. Please contact DJI for assistance.",
            ],
            [
                   "There is a server error. Please contact DJI for assistance.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_ServerDataAbnormal_inline",
                   "",
            ],
            [
                   "INVALID_METADATA",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_InvalidMetaData_inline",
                   "The activation data received from server is invalid. Please reconnect to the internet and try again.",
            ],
            [
                   "The activation data received from server is invalid. Please reconnect to the internet and try again.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_InvalidMetaData_inline",
                   "",
            ],
            [
                   "EMPTY_APP_KEY",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_EmptyAppKey_inline",
                   "No application key was provided.",
            ],
            [
                   "No application key was provided.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_EmptyAppKey_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_Unknown_inline",
                   "An unknown error occurred when the application was trying to register. Please contact DJI for assistance.",
            ],
            [
                   "An unknown error occurred when the application was trying to register. Please contact DJI for assistance.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKRegistrationError_Unknown_inline",
                   "",
            ],
            [
                   "KEY_UNSUPPORTED",
                   2,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_KEY_UNSUPPORTED_inline",
                   "The key is not supported.",
            ],
            [
                   "The key is not supported.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_KEY_UNSUPPORTED_inline",
                   "",
            ],
            [
                   "INVALID_VALUE",
                   2,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_INVALID_VALUE_inline",
                   "Invalid parameters.  This error will be returned when the sent parameters are invalid.",
            ],
            [
                   "Invalid parameters.  This error will be returned when the sent parameters are invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_INVALID_VALUE_inline",
                   "",
            ],
            [
                   "INVALID_KEY_FORMAT",
                   2,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_ErrorEnum_InvalidKeyFormat_inline",
                   "The key does not match the format: component/index/key with index being a number or *.",
            ],
            [
                   "The key does not match the format: component/index/key with index being a number or *.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_ErrorEnum_InvalidKeyFormat_inline",
                   "",
            ],
            [
                   "INVALID_KEY_FOR_COMPONENT",
                   2,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_ErrorEnum_InvalidKeyForComponent_inline",
                   "The key does not exist in component abstraction.",
            ],
            [
                   "The key does not exist in component abstraction.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_ErrorEnum_InvalidKeyForComponent_inline",
                   "",
            ],
            [
                   "NO_GET_FOR_KEY",
                   2,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_ErrorEnum_NoGetForKey_inline",
                   "The key is not gettable.",
            ],
            [
                   "The key is not gettable.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_ErrorEnum_NoGetForKey_inline",
                   "",
            ],
            [
                   "NO_SET_FOR_KEY",
                   2,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_ErrorEnum_NoSetForKey_inline",
                   "The key is not settable.",
            ],
            [
                   "The key is not settable.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_ErrorEnum_NoSetForKey_inline",
                   "",
            ],
            [
                   "UNKNOWN_ACCESS_TYPE",
                   2,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_ErrorEnum_UnknowAccessType_inline",
                   "The access type requested for the key is unknown. This is an implementation error in the cache as only valid  types should be exposed to the public interface.",
            ],
            [
                   "The access type requested for the key is unknown. This is an implementation error in the cache as only valid  types should be exposed to the public interface.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_ErrorEnum_UnknowAccessType_inline",
                   "",
            ],
            [
                   "DISCONNECTED",
                   2,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_ErrorEnum_Disconnected_inline",
                   "The abstraction is no longer connected to real hardware.",
            ],
            [
                   "The abstraction is no longer connected to real hardware.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_ErrorEnum_Disconnected_inline",
                   "",
            ],
            [
                   "NO_STORAGE_ACCESS",
                   2,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_ErrorEnum_NoStorageAccess_inline",
                   "Can not access to component storage.",
            ],
            [
                   "Can not access to component storage.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_ErrorEnum_NoStorageAccess_inline",
                   "",
            ],
            [
                   "NO_ACTION_FOR_KEY",
                   2,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_ErrorEnum_NoActionForKey_inline",
                   "The key is not actionable.",
            ],
            [
                   "The key is not actionable.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_ErrorEnum_NoActionForKey_inline",
                   "",
            ],
            [
                   "SETTER_VALUE_TYPE_MISMATCH",
                   2,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_ErrorEnum_SetterValueTypeMismatch_inline",
                   "The key does not match the format: component/index/key with index being a number of *.",
            ],
            [
                   "The key does not match the format: component/index/key with index being a number of *.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "#DJIError_DJISDKCacheError_ErrorEnum_SetterValueTypeMismatch_inline",
                   "",
            ],
            [
                   "getDJIError",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_getDJIErrorConstructor1_inline",
                   "Constructor Method 1.  @param ccode Error code.  @return The DJIError object.",
            ],
            [
                   "Constructor Method 1.  @param ccode Error code.  @return The DJIError object.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_getDJIErrorConstructor1_inline",
                   "",
            ],
            [
                   "UNKNOWN_ERROR",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_COMMON_CAMERA_UNKNOWN_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_COMMON_CAMERA_UNKNOWN_inline",
                   "",
            ],
            [
                   "CHECK_PERMISSION_LEVEL1_IS_INVALID",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CHECK_PERMISSION_LEVEL1_IS_INVALID_inline",
                   "Level 1 API permission is invalid. This error indicates that the API Key's level 1 permission is invalid.",
            ],
            [
                   "Level 1 API permission is invalid. This error indicates that the API Key's level 1 permission is invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CHECK_PERMISSION_LEVEL1_IS_INVALID_inline",
                   "",
            ],
            [
                   "MEDIA_INVALID_REQUEST_TYPE",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_MEDIA_INVALID_REQUEST_TYPE_inline",
                   "Result of media downloading request type is invalid.",
            ],
            [
                   "Result of media downloading request type is invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_MEDIA_INVALID_REQUEST_TYPE_inline",
                   "",
            ],
            [
                   "MEDIA_NO_SUBMEDIA_FILES",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_MEDIA_NO_SUBMEDIA_FILES_inline",
                   "No sub media files.",
            ],
            [
                   "No sub media files.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_MEDIA_NO_SUBMEDIA_FILES_inline",
                   "",
            ],
            [
                   "MEDIA_REQUEST_CLIENT_ABORT",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_MEDIA_REQUEST_CLIENT_ABORT_inline",
                   "Result of media downloading: the client aborted the download.",
            ],
            [
                   "Result of media downloading: the client aborted the download.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_MEDIA_REQUEST_CLIENT_ABORT_inline",
                   "",
            ],
            [
                   "MEDIA_REQUEST_SERVER_ABORT",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_MEDIA_REQUEST_SERVER_ABORT_inline",
                   "Result of media downloading: the server aborted the download.",
            ],
            [
                   "Result of media downloading: the server aborted the download.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_MEDIA_REQUEST_SERVER_ABORT_inline",
                   "",
            ],
            [
                   "MEDIA_REQUEST_DISCONNECT",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_MEDIA_REQUEST_DISCONNECT_inline",
                   "Result of media downloading: the download link disconnected.",
            ],
            [
                   "Result of media downloading: the download link disconnected.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_MEDIA_REQUEST_DISCONNECT_inline",
                   "",
            ],
            [
                   "COULD_NOT_DELETE_ALL_FILES",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_COULD_NOT_DELETE_ALL_FILES_inline",
                   "Could not delete all files.",
            ],
            [
                   "Could not delete all files.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_COULD_NOT_DELETE_ALL_FILES_inline",
                   "",
            ],
            [
                   "CANNOT_SET_PARAMETERS_IN_THIS_STATE",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_CANNOT_SET_PARAMETERS_IN_THIS_STATE_inline",
                   "Cannot set the parameters in this state.",
            ],
            [
                   "Cannot set the parameters in this state.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_CANNOT_SET_PARAMETERS_IN_THIS_STATE_inline",
                   "",
            ],
            [
                   "GET_REMOTE_MEDIA_FAILED",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_GET_REMOTE_MEDIA_FAILED_inline",
                   "Failed to get remote media data.",
            ],
            [
                   "Failed to get remote media data.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_GET_REMOTE_MEDIA_FAILED_inline",
                   "",
            ],
            [
                   "GET_THUMBNAIL_FAILED",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_GET_THUMBNAIL_FAILED_inline",
                   "Get thumbnail picture failed.",
            ],
            [
                   "Get thumbnail picture failed.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_GET_THUMBNAIL_FAILED_inline",
                   "",
            ],
            [
                   "NOT_CONNECTED",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_CONNECTION_NOT_OK_inline",
                   "Camera connection isn't ok.",
            ],
            [
                   "Camera connection isn't ok.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_CONNECTION_NOT_OK_inline",
                   "",
            ],
            [
                   "EXEC_TIMEOUT",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_EXEC_TIMEOUT_inline",
                   "The camera action executed a timeout.",
            ],
            [
                   "The camera action executed a timeout.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_EXEC_TIMEOUT_inline",
                   "",
            ],
            [
                   "INVALID_PARAMETERS",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_INVALID_PARAM_inline",
                   "Camera invalid parameters.  This error will be returned when the sent parameters are invalid.",
            ],
            [
                   "Camera invalid parameters.  This error will be returned when the sent parameters are invalid.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_INVALID_PARAM_inline",
                   "",
            ],
            [
                   "UNSUPPORTED_CMD_STATE",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_UNSUPPORTED_CMD_STATE_inline",
                   "The camera does not support the command in the current state.  This error is returned when the camera  is busy and the camera is unsupported for the command in the current state.",
            ],
            [
                   "The camera does not support the command in the current state.  This error is returned when the camera  is busy and the camera is unsupported for the command in the current state.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_UNSUPPORTED_CMD_STATE_inline",
                   "",
            ],
            [
                   "PARAMETERS_SET_FAILED",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_PARAMETERS_SET_FAILED_inline",
                   "Failed to set the parameters.  This error will be returned when setting the camera parameters fails.",
            ],
            [
                   "Failed to set the parameters.  This error will be returned when setting the camera parameters fails.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_PARAMETERS_SET_FAILED_inline",
                   "",
            ],
            [
                   "PARAMETERS_GET_FAILED",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_PARAMETERS_GET_FAILED_inline",
                   "Failed to get the parameters.  This error will be returned when getting the camera parameters fails.",
            ],
            [
                   "Failed to get the parameters.  This error will be returned when getting the camera parameters fails.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_PARAMETERS_GET_FAILED_inline",
                   "",
            ],
            [
                   "PARAMETERS_NOT_AVAILABLE",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_PARAMETERS_NOT_AVAILABLE_inline",
                   "The parameters are not available.  This error will be returned when there are some errors with the  parameters submitted to the camera.",
            ],
            [
                   "The parameters are not available.  This error will be returned when there are some errors with the  parameters submitted to the camera.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_PARAMETERS_NOT_AVAILABLE_inline",
                   "",
            ],
            [
                   "MEDIA_FILE_RESET",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_MEDIA_FILE_RESET_inline",
                   "Media file is reset. The operation can be executed.",
            ],
            [
                   "Media file is reset. The operation can be executed.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJICameraError_CAMERA_MEDIA_FILE_RESET_inline",
                   "",
            ],
            [
                   "SD_CARD_NOT_INSERTED",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJISDKCameraError_SDCardNotInserted_inline",
                   "No SD card.",
            ],
            [
                   "No SD card.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJISDKCameraError_SDCardNotInserted_inline",
                   "",
            ],
            [
                   "SD_CARD_FULL",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJISDKCameraError_SDCardFull_inline",
                   "SD card full.",
            ],
            [
                   "SD card full.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJISDKCameraError_SDCardFull_inline",
                   "",
            ],
            [
                   "SD_CARD_ERROR",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJISDKCameraError_SDCardError_inline",
                   "SD card error.",
            ],
            [
                   "SD card error.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJISDKCameraError_SDCardError_inline",
                   "",
            ],
            [
                   "SENSOR_ERROR",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJISDKCameraError_SensorError_inline",
                   "Camera sensor error.",
            ],
            [
                   "Camera sensor error.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJISDKCameraError_SensorError_inline",
                   "",
            ],
            [
                   "SYSTEM_ERROR",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJISDKCameraError_SystemError_inline",
                   "Camera system error.",
            ],
            [
                   "Camera system error.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJISDKCameraError_SystemError_inline",
                   "",
            ],
            [
                   "NO_SUCH_MEDIA_FILE",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJISDKCameraError_NoSuchMediaFile_inline",
                   "The media file is not found in SD card.",
            ],
            [
                   "The media file is not found in SD card.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "#DJIError_DJISDKCameraError_NoSuchMediaFile_inline",
                   "",
            ],
            [
                   "getDJIError",
                   2,
                   "/Components/SDKError/DJIError_DJIAirLinkError.html",
                   "#DJIError_DJIAirLinkError_getDJIError_inline",
                   "Returns the specific error in DJIAirLinkError according to the error code.  @param ccode Error code.  @return The DJIError object.",
            ],
            [
                   "Returns the specific error in DJIAirLinkError according to the error code.  @param ccode Error code.  @return The DJIError object.",
                   1,
                   "/Components/SDKError/DJIError_DJIAirLinkError.html",
                   "#DJIError_DJIAirLinkError_getDJIError_inline",
                   "",
            ],
            [
                   "IMAGE_TRANSMITTER_CANNOT_SET_PARAMETERS_IN_THIS_STATE",
                   2,
                   "/Components/SDKError/DJIError_DJIAirLinkError.html",
                   "#DJIError_DJIAirLinkError_IMAGE_TRANSMITTER_CANNOT_SET_PARAMETERS_IN_THIS_STATE_inline",
                   "Cannot set the parameters in this state.",
            ],
            [
                   "Cannot set the parameters in this state.",
                   1,
                   "/Components/SDKError/DJIError_DJIAirLinkError.html",
                   "#DJIError_DJIAirLinkError_IMAGE_TRANSMITTER_CANNOT_SET_PARAMETERS_IN_THIS_STATE_inline",
                   "",
            ],
            [
                   "GET_SMART_BATTERY_INFO_FAILED",
                   2,
                   "/Components/SDKError/DJIError_DJIBatteryError.html",
                   "#DJIError_DJIBatteryError_BATTERY_GET_SMART_BATTERY_INFO_FAILED_inline",
                   "Get smart battery failure information. This error is returned by functions when retrieving failure information  for the DJIPhantomBattery and DJIAircraftBattery, including:  public void  getSmartBatteryRestTimeForAll(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryNeedTimeForGoHome(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryNeedTimeForLand(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryGohomeBatteryLevel(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryLandBatteryLevel(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryRadiusForGohome(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryRequestGohomeFlag(DJISmartBatteryExecuteResultCallback mCallBack)",
            ],
            [
                   "Get smart battery failure information. This error is returned by functions when retrieving failure information  for the DJIPhantomBattery and DJIAircraftBattery, including:  public void  getSmartBatteryRestTimeForAll(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryNeedTimeForGoHome(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryNeedTimeForLand(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryGohomeBatteryLevel(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryLandBatteryLevel(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryRadiusForGohome(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryRequestGohomeFlag(DJISmartBatteryExecuteResultCallback mCallBack)",
                   1,
                   "/Components/SDKError/DJIError_DJIBatteryError.html",
                   "#DJIError_DJIBatteryError_BATTERY_GET_SMART_BATTERY_INFO_FAILED_inline",
                   "",
            ],
            [
                   "UPDATE_WRONG",
                   2,
                   "/Components/SDKError/DJIError_DJIBatteryError.html",
                   "#DJIError_DJIBatteryError_UPDATE_WRONG_inline",
                   "The update process is wrong.",
            ],
            [
                   "The update process is wrong.",
                   1,
                   "/Components/SDKError/DJIError_DJIBatteryError.html",
                   "#DJIError_DJIBatteryError_UPDATE_WRONG_inline",
                   "",
            ],
            [
                   "getDJIError",
                   2,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "#DJIError_DJIRemoteControllerError_getDJIError_inline",
                   "Returns the specific error in DJIRemoteControllerError according to the error code.  @param ccode Error code.  @return A DJIError instance of the specific error.",
            ],
            [
                   "Returns the specific error in DJIRemoteControllerError according to the error code.  @param ccode Error code.  @return A DJIError instance of the specific error.",
                   1,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "#DJIError_DJIRemoteControllerError_getDJIError_inline",
                   "",
            ],
            [
                   "FIRMWARE_NON_SEQUENCE",
                   2,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "#DJIError_DJIRemoteControllerError_FIRMWARE_NON_SEQUENCE_inline",
                   "The sequence number of the firmware is not continuous.",
            ],
            [
                   "The sequence number of the firmware is not continuous.",
                   1,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "#DJIError_DJIRemoteControllerError_FIRMWARE_NON_SEQUENCE_inline",
                   "",
            ],
            [
                   "FIRMWARE_LENGTH_WRONG",
                   2,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "#DJIError_DJIRemoteControllerError_FIRMWARE_LENGTH_WRONG_inline",
                   "The file size of the firmware is wrong.",
            ],
            [
                   "The file size of the firmware is wrong.",
                   1,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "#DJIError_DJIRemoteControllerError_FIRMWARE_LENGTH_WRONG_inline",
                   "",
            ],
            [
                   "FIRMWARE_CRC_WRONG",
                   2,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "#DJIError_DJIRemoteControllerError_FIRMWARE_CRC_WRONG_inline",
                   "The check number of the firmware is wrong.",
            ],
            [
                   "The check number of the firmware is wrong.",
                   1,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "#DJIError_DJIRemoteControllerError_FIRMWARE_CRC_WRONG_inline",
                   "",
            ],
            [
                   "FLASH_CLEAR_WRONG",
                   2,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "#DJIError_DJIRemoteControllerError_FLASH_CLEAR_WRONG_inline",
                   "The clear action of the flash is wrong.",
            ],
            [
                   "The clear action of the flash is wrong.",
                   1,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "#DJIError_DJIRemoteControllerError_FLASH_CLEAR_WRONG_inline",
                   "",
            ],
            [
                   "FLASH_WRITE_WRONG",
                   2,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "#DJIError_DJIRemoteControllerError_FLASH_WRITE_WRONG_inline",
                   "The write action of the flash is wrong.",
            ],
            [
                   "The write action of the flash is wrong.",
                   1,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "#DJIError_DJIRemoteControllerError_FLASH_WRITE_WRONG_inline",
                   "",
            ],
            [
                   "UPDATE_WRONG",
                   2,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "#DJIError_DJIRemoteControllerError_UPDATE_WRONG_inline",
                   "The update process is wrong.",
            ],
            [
                   "The update process is wrong.",
                   1,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "#DJIError_DJIRemoteControllerError_UPDATE_WRONG_inline",
                   "",
            ],
            [
                   "FIRMWARE_MATCH_ERROR",
                   2,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "#DJIError_DJIRemoteControllerError_FIRMWARE_MATCH_ERROR_inline",
                   "The firmware does not matched.",
            ],
            [
                   "The firmware does not matched.",
                   1,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "#DJIError_DJIRemoteControllerError_FIRMWARE_MATCH_ERROR_inline",
                   "",
            ],
            [
                   "FLASH_FLUSHING",
                   2,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "#DJIError_DJIRemoteControllerError_FLASH_FLUSHING_inline",
                   "The flash is flushing.",
            ],
            [
                   "The flash is flushing.",
                   1,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "#DJIError_DJIRemoteControllerError_FLASH_FLUSHING_inline",
                   "",
            ],
            [
                   "getDJIError",
                   2,
                   "/Components/SDKError/DJIError_DJIGimbalError.html",
                   "#DJIError_DJIGimbalError_getDJIError_inline",
                   "Returns the specific error in DJIGimbalError according to the error code.  @param ccode Error code.  @return A DJIError instance of the specific error.",
            ],
            [
                   "Returns the specific error in DJIGimbalError according to the error code.  @param ccode Error code.  @return A DJIError instance of the specific error.",
                   1,
                   "/Components/SDKError/DJIError_DJIGimbalError.html",
                   "#DJIError_DJIGimbalError_getDJIError_inline",
                   "",
            ],
            [
                   "DJIGimbalError",
                   2,
                   "/Components/SDKError/DJIError_DJIGimbalError.html",
                   "",
                   "Defines all gimbal related errors.",
            ],
            [
                   "Defines all gimbal related errors.",
                   1,
                   "/Components/SDKError/DJIError_DJIGimbalError.html",
                   "",
                   "",
            ],
            [
                   "RESULT_FAILED",
                   2,
                   "/Components/SDKError/DJIError_DJIGimbalError.html",
                   "#DJIError_DJIGimbalError_GIMBAL_RESULT_FAILED_inline",
                   "Gimbal Result Failed.",
            ],
            [
                   "Gimbal Result Failed.",
                   1,
                   "/Components/SDKError/DJIError_DJIGimbalError.html",
                   "#DJIError_DJIGimbalError_GIMBAL_RESULT_FAILED_inline",
                   "",
            ],
            [
                   "CANNOT_SET_PARAMETERS_IN_THIS_STATE",
                   2,
                   "/Components/SDKError/DJIError_DJIGimbalError.html",
                   "#DJIError_DJIGimbalError_GIMBAL_CANNOT_SET_PARAMETERS_IN_THIS_STATE_inline",
                   "Cannot set the parameters in this state.",
            ],
            [
                   "Cannot set the parameters in this state.",
                   1,
                   "/Components/SDKError/DJIError_DJIGimbalError.html",
                   "#DJIError_DJIGimbalError_GIMBAL_CANNOT_SET_PARAMETERS_IN_THIS_STATE_inline",
                   "",
            ],
            [
                   "REGISTRATION_SUCCESS",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_DJISDKError_REGISTRATION_SUCCESS_inline",
                   "API Key successfully registered.",
            ],
            [
                   "API Key successfully registered.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_DJISDKError_REGISTRATION_SUCCESS_inline",
                   "",
            ],
            [
                   "DJISDKError",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "",
                   "DJI SDK Error.",
            ],
            [
                   "DJI SDK Error.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "",
                   "",
            ],
            [
                   "DJISDKCacheError",
                   2,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "",
                   "Class that handles all errors about SDK Cache.",
            ],
            [
                   "Class that handles all errors about SDK Cache.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKCacheError.html",
                   "",
                   "",
            ],
            [
                   "CANNOT_PAUSE_STABILIZATION",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMON_EXECUTION_FAILED_inline",
                   "The execution could not be executed.",
            ],
            [
                   "The execution could not be executed.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMON_EXECUTION_FAILED_inline",
                   "",
            ],
            [
                   "COMMON_SYSTEM_BUSY",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMON_SYSTEM_BUSY_inline",
                   "The system is too busy to execute the action.",
            ],
            [
                   "The system is too busy to execute the action.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMON_SYSTEM_BUSY_inline",
                   "",
            ],
            [
                   "COMMON_UNKNOWN",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMON_UNKNOWN_inline",
                   "Catch all for various errors.",
            ],
            [
                   "Catch all for various errors.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMON_UNKNOWN_inline",
                   "",
            ],
            [
                   "COMMON_UNDEFINED",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMON_UNDEFINED_inline",
                   "Undefined error.  This error will be returned when the error is undefined.  public void  setMultiControlMode(boolean value,final DJIExecuteResultCallback mCallBack)",
            ],
            [
                   "Undefined error.  This error will be returned when the error is undefined.  public void  setMultiControlMode(boolean value,final DJIExecuteResultCallback mCallBack)",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMON_UNDEFINED_inline",
                   "",
            ],
            [
                   "COMMON_TIMEOUT",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMON_TIMEOUT_inline",
                   "Execution timeout.  This error will be returned when the execution times out.  public void  sendDataToExternalDevice(byte[] data,final DJIExecuteResultCallback mCallBack)  public void  setMultiControlMode(boolean value,final DJIExecuteResultCallback mCallBack)",
            ],
            [
                   "Execution timeout.  This error will be returned when the execution times out.  public void  sendDataToExternalDevice(byte[] data,final DJIExecuteResultCallback mCallBack)  public void  setMultiControlMode(boolean value,final DJIExecuteResultCallback mCallBack)",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMON_TIMEOUT_inline",
                   "",
            ],
            [
                   "COMMON_PARAM_ILLEGAL",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMON_PARAM_ILLEGAL_inline",
                   "Illegal parameters.  This error will be returned by the function for setting camera parameters in DJIPhantomCamera and DJIInspireCamera, when illegal parameters are used.",
            ],
            [
                   "Illegal parameters.  This error will be returned by the function for setting camera parameters in DJIPhantomCamera and DJIInspireCamera, when illegal parameters are used.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMON_PARAM_ILLEGAL_inline",
                   "",
            ],
            [
                   "COMMON_PARAM_INVALID",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMON_PARAM_INVALID_inline",
                   "Invalid parameters.  This error will be returned by the function for setting camera parameters when invalid parameters are used.",
            ],
            [
                   "Invalid parameters.  This error will be returned by the function for setting camera parameters when invalid parameters are used.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMON_PARAM_INVALID_inline",
                   "",
            ],
            [
                   "COMMON_UNSUPPORTED",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMON_UNSUPPORTED_inline",
                   "Unsupported feature.  This error will be returned by the function for some special feature interface when the feature isn't supported by the device.",
            ],
            [
                   "Unsupported feature.  This error will be returned by the function for some special feature interface when the feature isn't supported by the device.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMON_UNSUPPORTED_inline",
                   "",
            ],
            [
                   "COMMON_DISCONNECTED",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMON_DISCONNECTED_inline",
                   "Disconnected error.  This error will be returned by the function for some special interface when the DJI product is not connected to the mobile device.",
            ],
            [
                   "Disconnected error.  This error will be returned by the function for some special interface when the DJI product is not connected to the mobile device.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMON_DISCONNECTED_inline",
                   "",
            ],
            [
                   "FIRMWARE_NON_SEQUENCE",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_FIRMWARE_NON_SEQUENCE_inline",
                   "Inspire only.  The sequence number of firmware is not continuous.",
            ],
            [
                   "Inspire only.  The sequence number of firmware is not continuous.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_FIRMWARE_NON_SEQUENCE_inline",
                   "",
            ],
            [
                   "FIRMWARE_LENGTH_WRONG",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_FIRMWARE_LENGTH_WRONG_inline",
                   "The file size of the firmware is invalid.",
            ],
            [
                   "The file size of the firmware is invalid.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_FIRMWARE_LENGTH_WRONG_inline",
                   "",
            ],
            [
                   "FIRMWARE_CRC_WRONG",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_FIRMWARE_CRC_WRONG_inline",
                   "Inspire only.  The check number of the firmware is invalid.",
            ],
            [
                   "Inspire only.  The check number of the firmware is invalid.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_FIRMWARE_CRC_WRONG_inline",
                   "",
            ],
            [
                   "FLASH_CLEAR_WRONG",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_FLASH_CLEAR_WRONG_inline",
                   "The clear action of the flash is invalid.",
            ],
            [
                   "The clear action of the flash is invalid.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_FLASH_CLEAR_WRONG_inline",
                   "",
            ],
            [
                   "FLASH_WRITE_WRONG",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_FLASH_WRITE_WRONG_inline",
                   "The write action of the flash is invalid.",
            ],
            [
                   "The write action of the flash is invalid.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_FLASH_WRITE_WRONG_inline",
                   "",
            ],
            [
                   "UPDATE_WRONG",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_UPDATE_WRONG_inline",
                   "The update process is invalid.",
            ],
            [
                   "The update process is invalid.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_UPDATE_WRONG_inline",
                   "",
            ],
            [
                   "FIRMWARE_MATCH_WRONG",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_FIRMWARE_MATCH_WRONG_inline",
                   "There is a firmware match error.",
            ],
            [
                   "There is a firmware match error.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_FIRMWARE_MATCH_WRONG_inline",
                   "",
            ],
            [
                   "FLASH_FLUSHING",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_FLASH_FLUSHING_inline",
                   "The flash is flushing.",
            ],
            [
                   "The flash is flushing.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_FLASH_FLUSHING_inline",
                   "",
            ],
            [
                   "MEDIA_INVALID_REQUEST_TYPE",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_MEDIA_INVALID_REQUEST_TYPE_inline",
                   "The media download request type is invalid.",
            ],
            [
                   "The media download request type is invalid.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_MEDIA_INVALID_REQUEST_TYPE_inline",
                   "",
            ],
            [
                   "MEDIA_NO_SUCH_FILE",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_MEDIA_NO_SUCH_FILE_inline",
                   "Media download error: no such file.",
            ],
            [
                   "Media download error: no such file.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_MEDIA_NO_SUCH_FILE_inline",
                   "",
            ],
            [
                   "MEDIA_REQUEST_CLIENT_ABORT",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_MEDIA_REQUEST_CLIENT_ABORT_inline",
                   "Media download error: the client aborted the downloading.",
            ],
            [
                   "Media download error: the client aborted the downloading.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_MEDIA_REQUEST_CLIENT_ABORT_inline",
                   "",
            ],
            [
                   "MEDIA_REQUEST_DISCONNECT",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_MEDIA_REQUEST_DISCONNECT_inline",
                   "Result of media downloading: the downloading link disconnects.",
            ],
            [
                   "Result of media downloading: the downloading link disconnects.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_MEDIA_REQUEST_DISCONNECT_inline",
                   "",
            ],
            [
                   "IMAGE_TRANSMITTER_INVALID_PARAMETER",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_IMAGE_TRANSMITTER_INVALID_PARAMETER_inline",
                   "The input parameters is out of bound or invalid.",
            ],
            [
                   "The input parameters is out of bound or invalid.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_IMAGE_TRANSMITTER_INVALID_PARAMETER_inline",
                   "",
            ],
            [
                   "COMMAND_NOT_SUPPORTED_BY_FIRMWARE",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMAND_NOT_SUPPORTED_BY_FIRMWARE_inline",
                   "The command is not supported by the current firmware version.",
            ],
            [
                   "The command is not supported by the current firmware version.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_COMMAND_NOT_SUPPORTED_BY_FIRMWARE_inline",
                   "",
            ],
            [
                   "UNABLE_TO_GET_FIRMWARE_VERSION",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_UNABLE_TO_GET_FIRMWARE_VERSION_inline",
                   "Unable to get the firmware version. Note: The SDK gets the firmware version table from the server.  Ensure Internet connectivity before you invoke getVersion().",
            ],
            [
                   "Unable to get the firmware version. Note: The SDK gets the firmware version table from the server.  Ensure Internet connectivity before you invoke getVersion().",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_UNABLE_TO_GET_FIRMWARE_VERSION_inline",
                   "",
            ],
            [
                   "UNABLE_TO_GET_FLAGS",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_UNABLE_TO_GET_FLAGS_inline",
                   "Unable to get the analytics flags from server. Note: Ensure Internet connectivity before you invoke this method.",
            ],
            [
                   "Unable to get the analytics flags from server. Note: Ensure Internet connectivity before you invoke this method.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_UNABLE_TO_GET_FLAGS_inline",
                   "",
            ],
            [
                   "UNABLE_TO_GET_FLAG_BUT_RETRY",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_UNABLE_TO_GET_FLAG_BUT_RETRY_inline",
                   "Unable to get the analytics flags from server, but retrying.",
            ],
            [
                   "Unable to get the analytics flags from server, but retrying.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_UNABLE_TO_GET_FLAG_BUT_RETRY_inline",
                   "",
            ],
            [
                   "BATTERY_PAIR_FAILED",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_BATTERY_PAIR_FAILED_inline",
                   "Unable to pair the batteries.",
            ],
            [
                   "Unable to pair the batteries.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_BATTERY_PAIR_FAILED_inline",
                   "",
            ],
            [
                   "BATTERY_GET_SMART_BATTERY_INFO_FAILED",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_BATTERY_GET_SMART_BATTERY_INFO_FAILED_inline",
                   "Get smart battery information failed.  This error will be returned by the functions for getting information in DJIPhantomBattery and DJIAircraftBattery when the request to get information failed.  public void  getSmartBatteryRestTimeForAll(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryNeedTimeForGoHome(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryNeedTimeForLand(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryGohomeBatteryLevel(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryLandBatteryLevel(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryRadiusForGohome(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryRequestGohomeFlag(DJISmartBatteryExecuteResultCallback mCallBack)",
            ],
            [
                   "Get smart battery information failed.  This error will be returned by the functions for getting information in DJIPhantomBattery and DJIAircraftBattery when the request to get information failed.  public void  getSmartBatteryRestTimeForAll(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryNeedTimeForGoHome(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryNeedTimeForLand(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryGohomeBatteryLevel(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryLandBatteryLevel(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryRadiusForGohome(DJISmartBatteryExecuteResultCallback mCallBack)  public void getSmartBatteryRequestGohomeFlag(DJISmartBatteryExecuteResultCallback mCallBack)",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_BATTERY_GET_SMART_BATTERY_INFO_FAILED_inline",
                   "",
            ],
            [
                   "NO_NETWORK",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_NO_NETWORK_inline",
                   "No network access.",
            ],
            [
                   "No network access.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_NO_NETWORK_inline",
                   "",
            ],
            [
                   "DATABASE_IS_NOT_READY",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_DATABASE_IS_NOT_READY_inline",
                   "Database is not ready.",
            ],
            [
                   "Database is not ready.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_DATABASE_IS_NOT_READY_inline",
                   "",
            ],
            [
                   "DJICameraError",
                   2,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "",
                   "Defines all camera-related errors.",
            ],
            [
                   "Defines all camera-related errors.",
                   1,
                   "/Components/SDKError/DJIError_DJICameraError.html",
                   "",
                   "",
            ],
            [
                   "DJIFlightControllerError",
                   2,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "",
                   "Defines all flight controller errors.",
            ],
            [
                   "Defines all flight controller errors.",
                   1,
                   "/Components/SDKError/DJIError_DJIFlightControllerError.html",
                   "",
                   "",
            ],
            [
                   "MISSION_NOT_STARTED",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_DJISDKMissionError_MissionNotStarted_inline",
                   "Mission is not started yet.",
            ],
            [
                   "Mission is not started yet.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_DJISDKMissionError_MissionNotStarted_inline",
                   "",
            ],
            [
                   "DJIMissionError",
                   2,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "",
                   "Defines all mission manager related errors.",
            ],
            [
                   "Defines all mission manager related errors.",
                   1,
                   "/Components/SDKError/DJIError_DJIMissionManagerError.html",
                   "",
                   "",
            ],
            [
                   "DJIAirLinkError",
                   2,
                   "/Components/SDKError/DJIError_DJIAirLinkError.html",
                   "",
                   "Defines all AirLink related errors.",
            ],
            [
                   "Defines all AirLink related errors.",
                   1,
                   "/Components/SDKError/DJIError_DJIAirLinkError.html",
                   "",
                   "",
            ],
            [
                   "DJIBatteryError",
                   2,
                   "/Components/SDKError/DJIError_DJIBatteryError.html",
                   "",
                   "Defines all battery related errors.",
            ],
            [
                   "Defines all battery related errors.",
                   1,
                   "/Components/SDKError/DJIError_DJIBatteryError.html",
                   "",
                   "",
            ],
            [
                   "DJIGeoError",
                   2,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "",
                   "This class contains the error type for GEO feature.",
            ],
            [
                   "This class contains the error type for GEO feature.",
                   1,
                   "/Components/SDKError/DJIError_DJIGeoError.html",
                   "",
                   "",
            ],
            [
                   "DJIRemoteControllerError",
                   2,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "",
                   "Defines all remote controller related errors.",
            ],
            [
                   "Defines all remote controller related errors.",
                   1,
                   "/Components/SDKError/DJIError_DJIRemoteControllerError.html",
                   "",
                   "",
            ],
            [
                   "REGISTRATION_AESENCRYPT_FAILED",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_REGISTRATION_AESENCRYPT_FAILED_inline",
                   "Server error, please contact <dev@dji.com> for help.",
            ],
            [
                   "Server error, please contact <dev@dji.com> for help.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_REGISTRATION_AESENCRYPT_FAILED_inline",
                   "",
            ],
            [
                   "REGISTRATION_AESENCRYPT_ERROR",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_REGISTRATION_AESENCRYPT_ERROR_inline",
                   "Server error, please contact <dev@dji.com> for help.",
            ],
            [
                   "Server error, please contact <dev@dji.com> for help.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_REGISTRATION_AESENCRYPT_ERROR_inline",
                   "",
            ],
            [
                   "REGISTRATION_INVALID_UUID",
                   2,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_REGISTRATION_INVALID_UUID_inline",
                   "Server error, please contact <dev@dji.com> for help.",
            ],
            [
                   "Server error, please contact <dev@dji.com> for help.",
                   1,
                   "/Components/SDKError/DJIError_DJISDKError.html",
                   "#DJIError_DJISDKError_REGISTRATION_INVALID_UUID_inline",
                   "",
            ],
            [
                   "MEDIA_REQUEST_SERVER_ABORT",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_MEDIA_REQUEST_SERVER_ABORT_inline",
                   "Media download error: the server aborted the downloading.",
            ],
            [
                   "Media download error: the server aborted the downloading.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "#DJIError_MEDIA_REQUEST_SERVER_ABORT_inline",
                   "",
            ],
            [
                   "setStateCallback",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setGimbalStateUpdateCallback_inline",
                   "Sets up the gimbal state update callback.  @param callback The execution callback.",
            ],
            [
                   "Sets up the gimbal state update callback.  @param callback The execution callback.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setGimbalStateUpdateCallback_inline",
                   "",
            ],
            [
                   "setMovementSettingsCallback",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setGimbalAdvancedSettingsStateUpdateCallback_inline",
                   "Sets up the gimbal advanced setting state update callback.  @param callback The execution callback.",
            ],
            [
                   "Sets up the gimbal advanced setting state update callback.  @param callback The execution callback.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setGimbalAdvancedSettingsStateUpdateCallback_inline",
                   "",
            ],
            [
                   "setBatteryChargeRemainingCallback",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setGimbalBatteryRemainingEnergyUpdateCallback_inline",
                   "Sets the gimbal remaining energy callback. The unit is percentage.  @param callback The execution callback.",
            ],
            [
                   "Sets the gimbal remaining energy callback. The unit is percentage.  @param callback The execution callback.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setGimbalBatteryRemainingEnergyUpdateCallback_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_UpdateGimbalState_inline",
                   "Updates the gimbal's current state.  @param gimbalState The gimbal state.",
            ],
            [
                   "Updates the gimbal's current state.  @param gimbalState The gimbal state.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_UpdateGimbalState_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_UpdateMovementSettingsState_inline",
                   "Update the gimbal's user configuration data. This method is only supported by Osmo series.  @param settings An instance of `MovementSettings`.",
            ],
            [
                   "Update the gimbal's user configuration data. This method is only supported by Osmo series.  @param settings An instance of `MovementSettings`.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_UpdateMovementSettingsState_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_UpdateBatteryRemainingCharge_inline",
                   "Update the gimbal's remaining energy in percentage.  @param remainingChargeInPercent An int value.",
            ],
            [
                   "Update the gimbal's remaining energy in percentage.  @param remainingChargeInPercent An int value.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_UpdateBatteryRemainingCharge_inline",
                   "",
            ],
            [
                   "getCapabilities",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_gimbalCapabilities_inline",
                   "Returns the gimbal's features and possible range of settings. Each key is a possible gimbal feature and is in `CapabilityKey` enum. The value for  each key is an instance of `DJIParamCapability` or its sub-classes.  The `isSupported` property can be used to query if a feature is  supported by the gimbal and the `getMin`  and `getMax` properties of `DJIParamMinMaxCapability`  can be used to query the valid range for the setting. When a feature is not supported, the values for `getMin`  and `getMax` are undefined.  @return A Map<CapabilityKey, DJIParamCapability> instance.",
            ],
            [
                   "Returns the gimbal's features and possible range of settings. Each key is a possible gimbal feature and is in `CapabilityKey` enum. The value for  each key is an instance of `DJIParamCapability` or its sub-classes.  The `isSupported` property can be used to query if a feature is  supported by the gimbal and the `getMin`  and `getMax` properties of `DJIParamMinMaxCapability`  can be used to query the valid range for the setting. When a feature is not supported, the values for `getMin`  and `getMax` are undefined.  @return A Map<CapabilityKey, DJIParamCapability> instance.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_gimbalCapabilities_inline",
                   "",
            ],
            [
                   "getYawRelativeToAircraftHeading",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_GimbalState_yawRelativeToAircraftHeading_inline",
                   "This function will return the angle between gimbal and the drone heading.  @return A float value of yaw angle.",
            ],
            [
                   "This function will return the angle between gimbal and the drone heading.  @return A float value of yaw angle.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_GimbalState_yawRelativeToAircraftHeading_inline",
                   "",
            ],
            [
                   "setMode",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setGimbalWorkMode_inline",
                   "Sets the gimbal's work mode.  @param mode Gimbal work mode to be set. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the gimbal's work mode.  @param mode Gimbal work mode to be set. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setGimbalWorkMode_inline",
                   "",
            ],
            [
                   "reset",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_resetGimbal_inline",
                   "Resets the gimbal. The behaviors are product-dependent. Osmo series (e.g. Osmo, Osmo Pro):  The gimbal's pitch and yaw will be set to the origin, which is the standard position for  the gimbal. Phantom series (e.g. Phantom 3 Professional, Phantom 4 series): The first call  sets gimbal to point down vertically to the earth. The second call sets gimbal to the  standard position. Other products (e.g. Inspire 1): Only the gimbal's pitch will the set  to the origin.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Resets the gimbal. The behaviors are product-dependent. Osmo series (e.g. Osmo, Osmo Pro):  The gimbal's pitch and yaw will be set to the origin, which is the standard position for  the gimbal. Phantom series (e.g. Phantom 3 Professional, Phantom 4 series): The first call  sets gimbal to point down vertically to the earth. The second call sets gimbal to the  standard position. Other products (e.g. Inspire 1): Only the gimbal's pitch will the set  to the origin.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_resetGimbal_inline",
                   "",
            ],
            [
                   "rotate",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_rotateGimbalWithRotation_inline",
                   "Rotate gimbal's pitch, roll, and yaw with `Rotation`.  @param rotation An instance of `Rotation`. @param callback The callback of `CompletionCallback`.",
            ],
            [
                   "Rotate gimbal's pitch, roll, and yaw with `Rotation`.  @param rotation An instance of `Rotation`. @param callback The callback of `CompletionCallback`.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_rotateGimbalWithRotation_inline",
                   "",
            ],
            [
                   "startCalibration",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_startGimbalAutoCalibration_inline",
                   "Starts calibrating the gimbal. The product should be stationary (not flying, or being held)  and horizontal during calibration. For gimbal's with adjustable payloads, the payload should  be present and balanced before doing a calibration.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Starts calibrating the gimbal. The product should be stationary (not flying, or being held)  and horizontal during calibration. For gimbal's with adjustable payloads, the payload should  be present and balanced before doing a calibration.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_startGimbalAutoCalibration_inline",
                   "",
            ],
            [
                   "fineTuneRollInDegrees",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_fineTuneGimbalRollInDegrees_inline",
                   "The gimbal roll can be fine tuned with a custom offset. The range for the custom offset  is [-2.0, 2.0] degrees. If the offset is negative, the gimbal will be fine tuned the  specified number of degrees in the counterclockwise direction.  @param offset Fine-tuned offset, in degrees, to be tuned. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "The gimbal roll can be fine tuned with a custom offset. The range for the custom offset  is [-2.0, 2.0] degrees. If the offset is negative, the gimbal will be fine tuned the  specified number of degrees in the counterclockwise direction.  @param offset Fine-tuned offset, in degrees, to be tuned. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_fineTuneGimbalRollInDegrees_inline",
                   "",
            ],
            [
                   "fineTunePitchInDegrees",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_fineTuneGimbalPitchInDegrees_inline",
                   "The gimbal pitch can be fine tuned with a custom offset. The range for the custom offset  is [-2.0, 2.0] degrees. If the offset is negative, the gimbal will be fine tuned the specified  number of degrees in the counterclockwise direction. It is only supported by Spark.  @param offset Fine-tuned offset, in degrees, to be tuned. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "The gimbal pitch can be fine tuned with a custom offset. The range for the custom offset  is [-2.0, 2.0] degrees. If the offset is negative, the gimbal will be fine tuned the specified  number of degrees in the counterclockwise direction. It is only supported by Spark.  @param offset Fine-tuned offset, in degrees, to be tuned. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_fineTuneGimbalPitchInDegrees_inline",
                   "",
            ],
            [
                   "startBalanceTest",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_startGimbalBalanceTest_inline",
                   "Starts testing the balance of the gimbal payload. For gimbals that allow payloads to be  changed, a balance test should be performed to ensure the camera is mounted correctly.  The product should be stationary (not flying, or being held) and horizontal during testing.  See `GimbalState` for the test result.  @param callback The execution callback with the returned value(s). The callback will execute when the  balance test is successfully started.",
            ],
            [
                   "Starts testing the balance of the gimbal payload. For gimbals that allow payloads to be  changed, a balance test should be performed to ensure the camera is mounted correctly.  The product should be stationary (not flying, or being held) and horizontal during testing.  See `GimbalState` for the test result.  @param callback The execution callback with the returned value(s). The callback will execute when the  balance test is successfully started.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_startGimbalBalanceTest_inline",
                   "",
            ],
            [
                   "setMovementSettingsProfile",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setMovementSettingsProfile_inline",
                   "Sets the movement settings profile. The movement settings profile has options for both  preset and custom profiles for SmoothTrack and Controller settings. Settings for  SmoothTrack and Controller can only be set manually when using a custom profile.  @param profile Profile to set. @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Sets the movement settings profile. The movement settings profile has options for both  preset and custom profiles for SmoothTrack and Controller settings. Settings for  SmoothTrack and Controller can only be set manually when using a custom profile.  @param profile Profile to set. @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setMovementSettingsProfile_inline",
                   "",
            ],
            [
                   "getMovementSettingsProfile",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getMovementSettingsProfile_inline",
                   "Gets the advanced settings profile. Use `MovementSettingsProfile` to check if it is supported by the gimbal.  @param callback callback that receives the execution result.",
            ],
            [
                   "Gets the advanced settings profile. Use `MovementSettingsProfile` to check if it is supported by the gimbal.  @param callback callback that receives the execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getMovementSettingsProfile_inline",
                   "",
            ],
            [
                   "restoreFactorySettings",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_loadFactorySettings_inline",
                   "Restores the gimbal's settings to factory settings.  @param callback The completion callback that receives execution result.",
            ],
            [
                   "Restores the gimbal's settings to factory settings.  @param callback The completion callback that receives execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_loadFactorySettings_inline",
                   "",
            ],
            [
                   "setPitchRangeExtensionEnabled",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setPitchRangeExtensionEnabled_inline",
                   "Extends the pitch range of gimbal. If extended, the gimbal's pitch control range can  be [-30, 90], otherwise, it's [0, 90]. Use `PITCH_RANGE_EXTENSION`  to check if it is supported by the gimbal.  @param isEnabled Whether the pitch range should be extended. @param callback The completion callback that receives execution result.",
            ],
            [
                   "Extends the pitch range of gimbal. If extended, the gimbal's pitch control range can  be [-30, 90], otherwise, it's [0, 90]. Use `PITCH_RANGE_EXTENSION`  to check if it is supported by the gimbal.  @param isEnabled Whether the pitch range should be extended. @param callback The completion callback that receives execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setPitchRangeExtensionEnabled_inline",
                   "",
            ],
            [
                   "getPitchRangeExtensionEnabled",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getPitchRangeExtensionEnabled_inline",
                   "Get the extend gimbal pitch range state. Use `PITCH_RANGE_EXTENSION`  to check if it is supported by the gimbal.  @param callback The completion callback that receives execution result.",
            ],
            [
                   "Get the extend gimbal pitch range state. Use `PITCH_RANGE_EXTENSION`  to check if it is supported by the gimbal.  @param callback The completion callback that receives execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getPitchRangeExtensionEnabled_inline",
                   "",
            ],
            [
                   "applyMotorControlPreset",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_configureMotorControlWithPreset_inline",
                   "Configures gimbal's motor control with a preset configuration applicable for most popular  cameras. In order to the optimize the performance, motor control tuning is still required.  @param preset The preset configuration to set. @param callback The completion callback that receives execution result.",
            ],
            [
                   "Configures gimbal's motor control with a preset configuration applicable for most popular  cameras. In order to the optimize the performance, motor control tuning is still required.  @param preset The preset configuration to set. @param callback The completion callback that receives execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_configureMotorControlWithPreset_inline",
                   "",
            ],
            [
                   "setMotorControlStiffness",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setMotorControlStiffnessOnAxis_inline",
                   "Sets the coefficient of speed error control. It can be seen as the coefficient for the  proportional term in the PID controller. Use `PITCH_MOTOR_CONTROL_STIFFNESS`, `YAW_MOTOR_CONTROL_STIFFNESS`  and `ROLL_MOTOR_CONTROL_STIFFNESS` with `getCapabilities`  to check if the gimbal supports this feature and the range of possible values (unitless).  @param axis The axis that the setting is applied to. @param stiffness The stiffness value to set. @param callback The completion callback that receives execution result.",
            ],
            [
                   "Sets the coefficient of speed error control. It can be seen as the coefficient for the  proportional term in the PID controller. Use `PITCH_MOTOR_CONTROL_STIFFNESS`, `YAW_MOTOR_CONTROL_STIFFNESS`  and `ROLL_MOTOR_CONTROL_STIFFNESS` with `getCapabilities`  to check if the gimbal supports this feature and the range of possible values (unitless).  @param axis The axis that the setting is applied to. @param stiffness The stiffness value to set. @param callback The completion callback that receives execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setMotorControlStiffnessOnAxis_inline",
                   "",
            ],
            [
                   "getMotorControlStiffness",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getMotorControlStiffnessOnAxis_inline",
                   "Gets the coefficient of speed error control. It can be seen as the coefficient for the proportional term in  the PID controller. Use `PITCH_MOTOR_CONTROL_STIFFNESS`, `YAW_MOTOR_CONTROL_STIFFNESS`  and `ROLL_MOTOR_CONTROL_STIFFNESS` with `getCapabilities` to check if the gimbal supports this feature and the range of possible values (unitless).  @param axis The axis to query. @param callback The completion callback that receives execution result.",
            ],
            [
                   "Gets the coefficient of speed error control. It can be seen as the coefficient for the proportional term in  the PID controller. Use `PITCH_MOTOR_CONTROL_STIFFNESS`, `YAW_MOTOR_CONTROL_STIFFNESS`  and `ROLL_MOTOR_CONTROL_STIFFNESS` with `getCapabilities` to check if the gimbal supports this feature and the range of possible values (unitless).  @param axis The axis to query. @param callback The completion callback that receives execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getMotorControlStiffnessOnAxis_inline",
                   "",
            ],
            [
                   "setMotorControlStrength",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setMotorControlStrengthOnAxis_inline",
                   "Sets the coefficient of attitude accuracy control. It can be seen as the coefficient for the integral term  in the PID controller. Use `PITCH_MOTOR_CONTROL_STRENGTH`, `YAW_MOTOR_CONTROL_STRENGTH`  and `ROLL_MOTOR_CONTROL_STRENGTH` with `getCapabilities` to check if the gimbal supports  this feature and the range of possible values (unitless).  @param axis The axis that the setting is applied to. @param strength The strength value to set. @param callback The completion callback that receives execution result.",
            ],
            [
                   "Sets the coefficient of attitude accuracy control. It can be seen as the coefficient for the integral term  in the PID controller. Use `PITCH_MOTOR_CONTROL_STRENGTH`, `YAW_MOTOR_CONTROL_STRENGTH`  and `ROLL_MOTOR_CONTROL_STRENGTH` with `getCapabilities` to check if the gimbal supports  this feature and the range of possible values (unitless).  @param axis The axis that the setting is applied to. @param strength The strength value to set. @param callback The completion callback that receives execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setMotorControlStrengthOnAxis_inline",
                   "",
            ],
            [
                   "getMotorControlStrength",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getMotorControlStrengthOnAxis_inline",
                   "Gets the coefficient of attitude accuracy control. It can be seen as the coefficient for the integral term  in the PID controller. Use `PITCH_MOTOR_CONTROL_STRENGTH`, `YAW_MOTOR_CONTROL_STRENGTH`  and `ROLL_MOTOR_CONTROL_STRENGTH` with `getCapabilities` to check if the gimbal supports  this feature and the range of possible values (unitless).  @param axis The axis to query. @param callback The completion callback that receives execution result.",
            ],
            [
                   "Gets the coefficient of attitude accuracy control. It can be seen as the coefficient for the integral term  in the PID controller. Use `PITCH_MOTOR_CONTROL_STRENGTH`, `YAW_MOTOR_CONTROL_STRENGTH`  and `ROLL_MOTOR_CONTROL_STRENGTH` with `getCapabilities` to check if the gimbal supports  this feature and the range of possible values (unitless).  @param axis The axis to query. @param callback The completion callback that receives execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getMotorControlStrengthOnAxis_inline",
                   "",
            ],
            [
                   "setMotorControlGyroFilteringFactor",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setMotorControlGyroFilteringOnAxis_inline",
                   "Sets the coefficient of denoising the output.  Use `PITCH_MOTOR_CONTROL_GYRO_FILTERING_FACTOR`, `YAW_MOTOR_CONTROL_GYRO_FILTERING_FACTOR`  and `ROLL_MOTOR_CONTROL_GYRO_FILTERING_FACTOR` with `getCapabilities` to check  if the gimbal supports this feature and the range of possible values (unitless).  @param filteringFactor The gyro filtering value to set. @param axis The axis that the setting is applied to. @param callback Asynchronous execution result.",
            ],
            [
                   "Sets the coefficient of denoising the output.  Use `PITCH_MOTOR_CONTROL_GYRO_FILTERING_FACTOR`, `YAW_MOTOR_CONTROL_GYRO_FILTERING_FACTOR`  and `ROLL_MOTOR_CONTROL_GYRO_FILTERING_FACTOR` with `getCapabilities` to check  if the gimbal supports this feature and the range of possible values (unitless).  @param filteringFactor The gyro filtering value to set. @param axis The axis that the setting is applied to. @param callback Asynchronous execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setMotorControlGyroFilteringOnAxis_inline",
                   "",
            ],
            [
                   "getMotorControlGyroFilteringFactor",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getMotorControlGyroFilteringOnAxis_inline",
                   "Gets the coefficient of denoising the output.  Use `PITCH_MOTOR_CONTROL_GYRO_FILTERING_FACTOR`, `YAW_MOTOR_CONTROL_GYRO_FILTERING_FACTOR`  and `ROLL_MOTOR_CONTROL_GYRO_FILTERING_FACTOR` with `getCapabilities` to check  if the gimbal supports this feature and the range of possible values (unitless).  @param axis The axis to query. @param callback The completion callback that receives execution result.",
            ],
            [
                   "Gets the coefficient of denoising the output.  Use `PITCH_MOTOR_CONTROL_GYRO_FILTERING_FACTOR`, `YAW_MOTOR_CONTROL_GYRO_FILTERING_FACTOR`  and `ROLL_MOTOR_CONTROL_GYRO_FILTERING_FACTOR` with `getCapabilities` to check  if the gimbal supports this feature and the range of possible values (unitless).  @param axis The axis to query. @param callback The completion callback that receives execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getMotorControlGyroFilteringOnAxis_inline",
                   "",
            ],
            [
                   "setMotorControlPreControl",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setMotorControlPreControlOnAxis_inline",
                   "Sets the value for pre-adjust. It can be seen as the coefficient for the derivative term in the PID controller. Use `PITCH_MOTOR_CONTROL_PRE_CONTROL`, `YAW_MOTOR_CONTROL_PRE_CONTROL` and `ROLL_MOTOR_CONTROL_PRE_CONTROL` with `getCapabilities` to check if the gimbal supports this feature and the range of possible values (unitless).  @param axis The axis that the setting is applied to. @param preControl The Precontrol value to set. @param callback Asynchronous execution result.",
            ],
            [
                   "Sets the value for pre-adjust. It can be seen as the coefficient for the derivative term in the PID controller. Use `PITCH_MOTOR_CONTROL_PRE_CONTROL`, `YAW_MOTOR_CONTROL_PRE_CONTROL` and `ROLL_MOTOR_CONTROL_PRE_CONTROL` with `getCapabilities` to check if the gimbal supports this feature and the range of possible values (unitless).  @param axis The axis that the setting is applied to. @param preControl The Precontrol value to set. @param callback Asynchronous execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setMotorControlPreControlOnAxis_inline",
                   "",
            ],
            [
                   "getMotorControlPreControl",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getMotorControlPreControlOnAxis_inline",
                   "Gets the value for pre-adjust. It can be seen as the coefficient for the derivative term in the  PID controller. Only supported by Ronin-MX. Use `PITCH_MOTOR_CONTROL_PRE_CONTROL`, `YAW_MOTOR_CONTROL_PRE_CONTROL`  and `ROLL_MOTOR_CONTROL_PRE_CONTROL` with `getCapabilities` to check if the  gimbal supports this feature and the range of possible values (unitless).  @param axis The axis to query. @param callback The completion callback that receives execution result.",
            ],
            [
                   "Gets the value for pre-adjust. It can be seen as the coefficient for the derivative term in the  PID controller. Only supported by Ronin-MX. Use `PITCH_MOTOR_CONTROL_PRE_CONTROL`, `YAW_MOTOR_CONTROL_PRE_CONTROL`  and `ROLL_MOTOR_CONTROL_PRE_CONTROL` with `getCapabilities` to check if the  gimbal supports this feature and the range of possible values (unitless).  @param axis The axis to query. @param callback The completion callback that receives execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getMotorControlPreControlOnAxis_inline",
                   "",
            ],
            [
                   "setControllerDeadband",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setControllerDeadbandOnAxis_inline",
                   "Sets physical controller (e.g. the joystick on Osmo or the remote controller of the aircraft)  deadband on an axis. A larger deadband requires more controller movement to start gimbal motion.  Use `YAW_CONTROLLER_DEADBAND` and `PITCH_CONTROLLER_DEADBAND`  with `getCapabilities` to check if the gimbal supports this feature and the range  of possible values (unitless).  @param deadband The deadband value to be set. @param axis The axis that the setting will be applied to. @param callback The completion callback that receives execution result.",
            ],
            [
                   "Sets physical controller (e.g. the joystick on Osmo or the remote controller of the aircraft)  deadband on an axis. A larger deadband requires more controller movement to start gimbal motion.  Use `YAW_CONTROLLER_DEADBAND` and `PITCH_CONTROLLER_DEADBAND`  with `getCapabilities` to check if the gimbal supports this feature and the range  of possible values (unitless).  @param deadband The deadband value to be set. @param axis The axis that the setting will be applied to. @param callback The completion callback that receives execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setControllerDeadbandOnAxis_inline",
                   "",
            ],
            [
                   "getControllerDeadband",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getControllerDeadbandOnAxis_inline",
                   "Gets physical controller deadband value on an axis. A larger deadband requires more controller  movement to start gimbal motion. Use `YAW_CONTROLLER_DEADBAND` and `PITCH_CONTROLLER_DEADBAND` with `getCapabilities` to  check if the gimbal supports this feature and the range of possible values (unitless).  @param direction The axis to query. @param callback The completion callback that receives execution result.",
            ],
            [
                   "Gets physical controller deadband value on an axis. A larger deadband requires more controller  movement to start gimbal motion. Use `YAW_CONTROLLER_DEADBAND` and `PITCH_CONTROLLER_DEADBAND` with `getCapabilities` to  check if the gimbal supports this feature and the range of possible values (unitless).  @param direction The axis to query. @param callback The completion callback that receives execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getControllerDeadbandOnAxis_inline",
                   "",
            ],
            [
                   "setControllerSpeedCoefficient",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setControllerSpeedOnAxis_inline",
                   "Sets physical controller (e.g. the joystick on Osmo or the remote controller of the aircraft)  speed on an axis. Speed setting controls the mapping between the movement of the controller and  the gimbal speed. Use `YAW_CONTROLLER_SPEED_COEFFICIENT`  and `PITCH_CONTROLLER_SPEED_COEFFICIENT` with `getCapabilities` to check if  the gimbal supports this feature and the range of possible values (unitless).  @param speedCoefficient The speed value to be set. @param axis The axis that the setting will be applied to. @param callback Asynchronous execution result.",
            ],
            [
                   "Sets physical controller (e.g. the joystick on Osmo or the remote controller of the aircraft)  speed on an axis. Speed setting controls the mapping between the movement of the controller and  the gimbal speed. Use `YAW_CONTROLLER_SPEED_COEFFICIENT`  and `PITCH_CONTROLLER_SPEED_COEFFICIENT` with `getCapabilities` to check if  the gimbal supports this feature and the range of possible values (unitless).  @param speedCoefficient The speed value to be set. @param axis The axis that the setting will be applied to. @param callback Asynchronous execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setControllerSpeedOnAxis_inline",
                   "",
            ],
            [
                   "getControllerSpeedCoefficient",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getControllerSpeedOnAxis_inline",
                   "Gets physical controller speed value on an axis. Speed setting controls the mapping between the  movement of the controller and the gimbal speed. Use `YAW_CONTROLLER_SPEED_COEFFICIENT`  and `PITCH_CONTROLLER_SPEED_COEFFICIENT` with `getCapabilities` to check if  the gimbal supports this feature and the range of possible values (unitless).  @param axis The axis to query. @param callback The completion block that receives execution result.",
            ],
            [
                   "Gets physical controller speed value on an axis. Speed setting controls the mapping between the  movement of the controller and the gimbal speed. Use `YAW_CONTROLLER_SPEED_COEFFICIENT`  and `PITCH_CONTROLLER_SPEED_COEFFICIENT` with `getCapabilities` to check if  the gimbal supports this feature and the range of possible values (unitless).  @param axis The axis to query. @param callback The completion block that receives execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getControllerSpeedOnAxis_inline",
                   "",
            ],
            [
                   "setControllerSmoothingFactor",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setControllerSmoothingOnAxis_inline",
                   "Sets physical controller (e.g. the joystick on Osmo or the remote controller of the aircraft)  smoothing on an axis. Smoothing controls the deceleration of the gimbal.  Use `YAW_CONTROLLER_SMOOTHING_FACTOR` and `PITCH_CONTROLLER_SMOOTHING_FACTOR`  with `getCapabilities` to check if the gimbal supports this feature and the  range of possible values (unitless).  @param smoothingFactor The smoothing value to be set. @param axis The axis that the setting will be applied to. @param callback The completion block that receives execution result.",
            ],
            [
                   "Sets physical controller (e.g. the joystick on Osmo or the remote controller of the aircraft)  smoothing on an axis. Smoothing controls the deceleration of the gimbal.  Use `YAW_CONTROLLER_SMOOTHING_FACTOR` and `PITCH_CONTROLLER_SMOOTHING_FACTOR`  with `getCapabilities` to check if the gimbal supports this feature and the  range of possible values (unitless).  @param smoothingFactor The smoothing value to be set. @param axis The axis that the setting will be applied to. @param callback The completion block that receives execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setControllerSmoothingOnAxis_inline",
                   "",
            ],
            [
                   "getControllerSmoothingFactor",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getControllerSmoothingOnAxis_inline",
                   "Gets physical controller smoothing value on an axis. Smoothing controls the deceleration of the  gimbal. Use `YAW_CONTROLLER_SMOOTHING_FACTOR`  and `PITCH_CONTROLLER_SMOOTHING_FACTOR` with `getCapabilities`  to check if the gimbal supports this feature and the range of possible values (unitless).  @param axis The axis to query. @param callback The completion block that receives execution result.",
            ],
            [
                   "Gets physical controller smoothing value on an axis. Smoothing controls the deceleration of the  gimbal. Use `YAW_CONTROLLER_SMOOTHING_FACTOR`  and `PITCH_CONTROLLER_SMOOTHING_FACTOR` with `getCapabilities`  to check if the gimbal supports this feature and the range of possible values (unitless).  @param axis The axis to query. @param callback The completion block that receives execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getControllerSmoothingOnAxis_inline",
                   "",
            ],
            [
                   "setSmoothTrackEnabled",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setSmoothTrackEnabledOnAxis_inline",
                   "Enables SmoothTrack for the axis. Only supported by Osmo. Ronin-MX supports SmoothTrack but it  is always enabled for both pitch axis and yaw axis.  Use `PITCH_SMOOTH_TRACK_ENABLED` and `YAW_SMOOTH_TRACK_ENABLED`  with `getCapabilities` to check if the gimbal supports this feature.  @param enabled `true` to enable SmoothTrack on the axis. @param axis The axis that the setting will be applied to. @param callback The completion callback that receives execution result.",
            ],
            [
                   "Enables SmoothTrack for the axis. Only supported by Osmo. Ronin-MX supports SmoothTrack but it  is always enabled for both pitch axis and yaw axis.  Use `PITCH_SMOOTH_TRACK_ENABLED` and `YAW_SMOOTH_TRACK_ENABLED`  with `getCapabilities` to check if the gimbal supports this feature.  @param enabled `true` to enable SmoothTrack on the axis. @param axis The axis that the setting will be applied to. @param callback The completion callback that receives execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setSmoothTrackEnabledOnAxis_inline",
                   "",
            ],
            [
                   "getSmoothTrackEnabled",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getSmoothTrackEnabledOnAxis_inline",
                   "Gets whether an axis has SmoothTrack enabled. Only supported by Osmo. Ronin-MX supports  SmoothTrack but it is always enabled for both pitch axis and yaw axis. Use `PITCH_SMOOTH_TRACK_ENABLED` and `YAW_SMOOTH_TRACK_ENABLED`  with `getCapabilities` to check if the gimbal supports this feature.  @param axis The axis to query. @param callback The completion callback that receives execution result.",
            ],
            [
                   "Gets whether an axis has SmoothTrack enabled. Only supported by Osmo. Ronin-MX supports  SmoothTrack but it is always enabled for both pitch axis and yaw axis. Use `PITCH_SMOOTH_TRACK_ENABLED` and `YAW_SMOOTH_TRACK_ENABLED`  with `getCapabilities` to check if the gimbal supports this feature.  @param axis The axis to query. @param callback The completion callback that receives execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getSmoothTrackEnabledOnAxis_inline",
                   "",
            ],
            [
                   "setSmoothTrackSpeed",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setSmoothTrackSpeedOnAxis_inline",
                   "Sets gimbal SmoothTrack catch up speed on an axis. SmoothTrack speed determines how fast the  gimbal will catch up with a large, translated handle movement. Use `PITCH_SMOOTH_TRACK_SPEED` and `YAW_SMOOTH_TRACK_SPEED`  with `getCapabilities` to check if the gimbal supports this feature and the  range of possible values (unitless).  @param axis Gimbal axis. @param speed SmoothTrack speed. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets gimbal SmoothTrack catch up speed on an axis. SmoothTrack speed determines how fast the  gimbal will catch up with a large, translated handle movement. Use `PITCH_SMOOTH_TRACK_SPEED` and `YAW_SMOOTH_TRACK_SPEED`  with `getCapabilities` to check if the gimbal supports this feature and the  range of possible values (unitless).  @param axis Gimbal axis. @param speed SmoothTrack speed. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setSmoothTrackSpeedOnAxis_inline",
                   "",
            ],
            [
                   "getSmoothTrackSpeed",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getSmoothTrackSpeedOnAxis_inline",
                   "Gets gimbal SmoothTrack speed on an axis. SmoothTrack speed determines how fast the gimbal will  catch up with a large, translated handle movement. Use `PITCH_SMOOTH_TRACK_SPEED`  and `YAW_SMOOTH_TRACK_SPEED` with `getCapabilities` to check if the  gimbal supports this feature and the range of possible values (unitless).  @param axis Gimbal axis. @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets gimbal SmoothTrack speed on an axis. SmoothTrack speed determines how fast the gimbal will  catch up with a large, translated handle movement. Use `PITCH_SMOOTH_TRACK_SPEED`  and `YAW_SMOOTH_TRACK_SPEED` with `getCapabilities` to check if the  gimbal supports this feature and the range of possible values (unitless).  @param axis Gimbal axis. @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getSmoothTrackSpeedOnAxis_inline",
                   "",
            ],
            [
                   "setSmoothTrackDeadband",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setSmoothTrackDeadbandOnAxis_inline",
                   "Sets SmoothTrack deadband on an axis. A larger deadband requires more handle movement to  translate into gimbal motion. Use `PITCH_SMOOTH_TRACK_DEADBAND` and `YAW_SMOOTH_TRACK_DEADBAND` with `getCapabilities` to check  if the gimbal supports this feature and the range of possible values in degrees.  @param axis Gimbal axis. @param deadband SmoothTrack deadband [0,90]. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets SmoothTrack deadband on an axis. A larger deadband requires more handle movement to  translate into gimbal motion. Use `PITCH_SMOOTH_TRACK_DEADBAND` and `YAW_SMOOTH_TRACK_DEADBAND` with `getCapabilities` to check  if the gimbal supports this feature and the range of possible values in degrees.  @param axis Gimbal axis. @param deadband SmoothTrack deadband [0,90]. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setSmoothTrackDeadbandOnAxis_inline",
                   "",
            ],
            [
                   "getSmoothTrackDeadband",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getSmoothTrackDeadbandOnAxis_inline",
                   "Gets SmoothTrack deadband on an axis. A larger deadband requires more handle movement to  translate into gimbal motion. Use `PITCH_SMOOTH_TRACK_DEADBAND` and `YAW_SMOOTH_TRACK_DEADBAND` with `getCapabilities` to check  if the gimbal supports this feature and the range of possible values in degrees.  @param axis Gimbal axis. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Gets SmoothTrack deadband on an axis. A larger deadband requires more handle movement to  translate into gimbal motion. Use `PITCH_SMOOTH_TRACK_DEADBAND` and `YAW_SMOOTH_TRACK_DEADBAND` with `getCapabilities` to check  if the gimbal supports this feature and the range of possible values in degrees.  @param axis Gimbal axis. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getSmoothTrackDeadbandOnAxis_inline",
                   "",
            ],
            [
                   "setSmoothTrackAcceleration",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setSmoothTrackAccelerationOnAxis_inline",
                   "Sets SmoothTrack acceleration on an axis. Acceleration determines how closely the camera will  follow the translated yaw handle movement. Use `PITCH_SMOOTH_TRACK_ACCELERATION`  and `YAW_SMOOTH_TRACK_ACCELERATION` with `getCapabilities` to  check if the gimbal supports this feature and the range of possible values (unitless).  @param axis Gimbal axis. @param acceleration SmoothTrack acceleration [0,30]. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets SmoothTrack acceleration on an axis. Acceleration determines how closely the camera will  follow the translated yaw handle movement. Use `PITCH_SMOOTH_TRACK_ACCELERATION`  and `YAW_SMOOTH_TRACK_ACCELERATION` with `getCapabilities` to  check if the gimbal supports this feature and the range of possible values (unitless).  @param axis Gimbal axis. @param acceleration SmoothTrack acceleration [0,30]. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setSmoothTrackAccelerationOnAxis_inline",
                   "",
            ],
            [
                   "getSmoothTrackAcceleration",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getSmoothTrackAccelerationOnAxis_inline",
                   "Gets SmoothTrack acceleration on an axis. Acceleration determines how closely the camera will  follow the translated yaw handle movement. Use `PITCH_SMOOTH_TRACK_ACCELERATION`  and `YAW_SMOOTH_TRACK_ACCELERATION` with `getCapabilities` to check  if the gimbal supports this feature and the range of possible values (unitless).  @param axis Gimbal axis. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Gets SmoothTrack acceleration on an axis. Acceleration determines how closely the camera will  follow the translated yaw handle movement. Use `PITCH_SMOOTH_TRACK_ACCELERATION`  and `YAW_SMOOTH_TRACK_ACCELERATION` with `getCapabilities` to check  if the gimbal supports this feature and the range of possible values (unitless).  @param axis Gimbal axis. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getSmoothTrackAccelerationOnAxis_inline",
                   "",
            ],
            [
                   "setEndpoint",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setEndpointInDirection_inline",
                   "Endpoint settings determine the farthest points to which the gimbal will rotate during manual controller  input. Only supported by Ronin-MX. Use `PITCH_UP_ENDPOINT`, `PITCH_DOWN_ENDPOINT`, `YAW_LEFT_ENDPOINT`  and `YAW_RIGHT_ENDPOINT` in `getCapabilities` to check if the gimbal supports this feature and what the valid range of endpoints are.  @param endpoint The endpoint value to set. @param direction The direction that the setting will be applied to. @param callback The completion callback that receives execution result.",
            ],
            [
                   "Endpoint settings determine the farthest points to which the gimbal will rotate during manual controller  input. Only supported by Ronin-MX. Use `PITCH_UP_ENDPOINT`, `PITCH_DOWN_ENDPOINT`, `YAW_LEFT_ENDPOINT`  and `YAW_RIGHT_ENDPOINT` in `getCapabilities` to check if the gimbal supports this feature and what the valid range of endpoints are.  @param endpoint The endpoint value to set. @param direction The direction that the setting will be applied to. @param callback The completion callback that receives execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setEndpointInDirection_inline",
                   "",
            ],
            [
                   "getEndpoint",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getEndpointInDirection_inline",
                   "Gets the farthest points to which the gimbal will rotate during manual controller input.  Use `PITCH_UP_ENDPOINT`, `PITCH_DOWN_ENDPOINT`, `YAW_LEFT_ENDPOINT`  and `YAW_RIGHT_ENDPOINT` with `getCapabilities` to check if the gimbal supports  this feature.  @param direction The endpoint direction. @param callback The completion callback that receives execution result.",
            ],
            [
                   "Gets the farthest points to which the gimbal will rotate during manual controller input.  Use `PITCH_UP_ENDPOINT`, `PITCH_DOWN_ENDPOINT`, `YAW_LEFT_ENDPOINT`  and `YAW_RIGHT_ENDPOINT` with `getCapabilities` to check if the gimbal supports  this feature.  @param direction The endpoint direction. @param callback The completion callback that receives execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getEndpointInDirection_inline",
                   "",
            ],
            [
                   "setMotorEnabled",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setMotorEnabled_inline",
                   "Turns on and off the gimbal motors. `false` means the gimbal power remains on, however the motors will not work.  @param enabled `true` to enable the motor. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Turns on and off the gimbal motors. `false` means the gimbal power remains on, however the motors will not work.  @param enabled `true` to enable the motor. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setMotorEnabled_inline",
                   "",
            ],
            [
                   "getMotorEnabled",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getMotorEnabled_inline",
                   "Gets if the gimbal motors are enabled to work or not.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets if the gimbal motors are enabled to work or not.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getMotorEnabled_inline",
                   "",
            ],
            [
                   "toggleSelfie",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_toggleGimbalSelfie_inline",
                   "Resets gimbal position to selfie setup. If the gimbal yaw is not at 180 degrees, then calling this method will rotate the gimbal yaw to 180 degrees (effectively pointing the camera to the person holding the gimbal). If the gimbal yaw is at 180 degrees, then the gimbal will rotate in yaw to 0 degrees.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Resets gimbal position to selfie setup. If the gimbal yaw is not at 180 degrees, then calling this method will rotate the gimbal yaw to 180 degrees (effectively pointing the camera to the person holding the gimbal). If the gimbal yaw is at 180 degrees, then the gimbal will rotate in yaw to 0 degrees.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_toggleGimbalSelfie_inline",
                   "",
            ],
            [
                   "setControllerMode",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setControllerMode_inline",
                   "Sets the gimbal's controller mode. The control mode for the gimbal controller (joystick for Osmo). The total  controller deflection is a combination of horizontal and vertical deflection. This translates to gimbal movement  around the yaw and pitch axes. The gimbal can be set to either move in both yaw and pitch simultaneously based on  horizontal and vertical deflection of the controller, or move in only yaw or pitch exclusively based on whether horizontal or vertical deflection is larger.  @param mode See enum named `ControllerMode` in DJIGimbal to find details on different gimbal stick control modes. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the gimbal's controller mode. The control mode for the gimbal controller (joystick for Osmo). The total  controller deflection is a combination of horizontal and vertical deflection. This translates to gimbal movement  around the yaw and pitch axes. The gimbal can be set to either move in both yaw and pitch simultaneously based on  horizontal and vertical deflection of the controller, or move in only yaw or pitch exclusively based on whether horizontal or vertical deflection is larger.  @param mode See enum named `ControllerMode` in DJIGimbal to find details on different gimbal stick control modes. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setControllerMode_inline",
                   "",
            ],
            [
                   "getControllerMode",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getControllerMode_inline",
                   "Gets the gimbal's controller mode.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the gimbal's controller mode.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getControllerMode_inline",
                   "",
            ],
            [
                   "setInvertedControlEnabled",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setInvertedControlEnabled_inline",
                   "Inverts the physical control for gimbal movement on an axis. The setting can only be applied  to the pitch or yaw axis.  @param enabled `true` to enable inverted control. @param axis The axis that the setting will be applied to. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Inverts the physical control for gimbal movement on an axis. The setting can only be applied  to the pitch or yaw axis.  @param enabled `true` to enable inverted control. @param axis The axis that the setting will be applied to. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_setInvertedControlEnabled_inline",
                   "",
            ],
            [
                   "getInvertedControlEnabled",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getInvertedControlEnabled_inline",
                   "Gets if the physical control is inverted for gimbal movement on an axis.  The setting can only be applied to the pitch or yaw axis.  @param axis The axis to query. @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets if the physical control is inverted for gimbal movement on an axis.  The setting can only be applied to the pitch or yaw axis.  @param axis The axis to query. @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_getInvertedControlEnabled_inline",
                   "",
            ],
            [
                   "GimbalState",
                   2,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "",
                   "This class provides the current state of the gimbal.",
            ],
            [
                   "This class provides the current state of the gimbal.",
                   1,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "",
                   "",
            ],
            [
                   "getAttitudeInDegrees",
                   2,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_attitude_inline",
                   "The current gimbal attitude in degrees. Roll, pitch and yaw are 0 if the gimbal is level with the  aircraft and points in the forward direction of North Pole.  @return An `Attitude` instance.",
            ],
            [
                   "The current gimbal attitude in degrees. Roll, pitch and yaw are 0 if the gimbal is level with the  aircraft and points in the forward direction of North Pole.  @return An `Attitude` instance.",
                   1,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_attitude_inline",
                   "",
            ],
            [
                   "getRollFineTuneInDegrees",
                   2,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_rollFineTuneInDegrees_inline",
                   "Returns the gimbal's roll fine-tune value. The range for the fine-tuned value is [-10, 10] degrees.  If the fine-tune value is negative, the gimbal will be fine- tuned to the specified number of degrees in  the counterclockwise direction.  @return A float value.",
            ],
            [
                   "Returns the gimbal's roll fine-tune value. The range for the fine-tuned value is [-10, 10] degrees.  If the fine-tune value is negative, the gimbal will be fine- tuned to the specified number of degrees in  the counterclockwise direction.  @return A float value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_rollFineTuneInDegrees_inline",
                   "",
            ],
            [
                   "getPitchFineTuneInDegrees",
                   2,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_pitchFineTuneInDegrees_inline",
                   "Returns the gimbal's pitch fine-tune value. The range for the fine-tuned value is [-10, 10] degrees.  If the fine-tune value is negative, the gimbal will be fine- tuned to the specified number of degrees  in the downward direction. It is only supported by Spark.  @return A float value.",
            ],
            [
                   "Returns the gimbal's pitch fine-tune value. The range for the fine-tuned value is [-10, 10] degrees.  If the fine-tune value is negative, the gimbal will be fine- tuned to the specified number of degrees  in the downward direction. It is only supported by Spark.  @return A float value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_pitchFineTuneInDegrees_inline",
                   "",
            ],
            [
                   "getMode",
                   2,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_workMode_inline",
                   "Returns the gimbal's current work mode.  @return A `GimbalMode` enum value.",
            ],
            [
                   "Returns the gimbal's current work mode.  @return A `GimbalMode` enum value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_workMode_inline",
                   "",
            ],
            [
                   "isMobileDeviceMounted",
                   2,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_isMobileDeviceMounted_inline",
                   "`true` if the mobile device is mounted on the gimbal.  @return A boolean value.",
            ],
            [
                   "`true` if the mobile device is mounted on the gimbal.  @return A boolean value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_isMobileDeviceMounted_inline",
                   "",
            ],
            [
                   "isMotorOverloaded",
                   2,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_isMotorOverloaded_inline",
                   "`true` if one of the gimbal motors is overloaded.  @return A boolean value.",
            ],
            [
                   "`true` if one of the gimbal motors is overloaded.  @return A boolean value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_isMotorOverloaded_inline",
                   "",
            ],
            [
                   "isCalibrationSuccessful",
                   2,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_isCalibrationSuccessful_inline",
                   "`true` if the gimbal calibration succeeded.  @return A boolean value.",
            ],
            [
                   "`true` if the gimbal calibration succeeded.  @return A boolean value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_isCalibrationSuccessful_inline",
                   "",
            ],
            [
                   "isCalibrating",
                   2,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_isCalibrating_inline",
                   "`true` if the gimbal is calibrating.  @return A boolean value.",
            ],
            [
                   "`true` if the gimbal is calibrating.  @return A boolean value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_isCalibrating_inline",
                   "",
            ],
            [
                   "getCalibrationProgress",
                   2,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_calibrationProgress_inline",
                   "Current progress (percentage) for calibration.  @return An int value.",
            ],
            [
                   "Current progress (percentage) for calibration.  @return An int value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_calibrationProgress_inline",
                   "",
            ],
            [
                   "isPitchAtStop",
                   2,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_isPitchAtStop_inline",
                   "`true` if the gimbal's pitch value is at its limit.  @return A boolean value.",
            ],
            [
                   "`true` if the gimbal's pitch value is at its limit.  @return A boolean value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_isPitchAtStop_inline",
                   "",
            ],
            [
                   "isRollAtStop",
                   2,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_isRollAtStop_inline",
                   "`true` if the gimbal's roll value is at its limit.  @return A boolean value.",
            ],
            [
                   "`true` if the gimbal's roll value is at its limit.  @return A boolean value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_isRollAtStop_inline",
                   "",
            ],
            [
                   "isYawAtStop",
                   2,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_isYawAtStop_inline",
                   "`true` if the gimbal's yaw value is at its limit.  @return A boolean value.",
            ],
            [
                   "`true` if the gimbal's yaw value is at its limit.  @return A boolean value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_isYawAtStop_inline",
                   "",
            ],
            [
                   "isBalanceTesting",
                   2,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_isTestingBalance_inline",
                   "`true` if the gimbal is currently testing payload balance.  @return A boolean value.",
            ],
            [
                   "`true` if the gimbal is currently testing payload balance.  @return A boolean value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_isTestingBalance_inline",
                   "",
            ],
            [
                   "getPitchBalanceTestResult",
                   2,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_pitchTestResult_inline",
                   "Returns the pitch axis balance test result.  @return A `BalanceTestResult` enum value.",
            ],
            [
                   "Returns the pitch axis balance test result.  @return A `BalanceTestResult` enum value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_pitchTestResult_inline",
                   "",
            ],
            [
                   "getRollBalanceTestResult",
                   2,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_rollTestResult_inline",
                   "Returns the roll axis balance test result.  @return A `BalanceTestResult` enum value.",
            ],
            [
                   "Returns the roll axis balance test result.  @return A `BalanceTestResult` enum value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_rollTestResult_inline",
                   "",
            ],
            [
                   "getBalanceState",
                   2,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_balanceState_inline",
                   "Returns the balance status of the gimbal.  @return A `BalanceState` enum value.",
            ],
            [
                   "Returns the balance status of the gimbal.  @return A `BalanceState` enum value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_balanceState_inline",
                   "",
            ],
            [
                   "isMountedUpwards",
                   2,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_isMountedUpwards_inline",
                   "`true` if the gimbal is mounted upwards on the aircraft. It is only supported by M210 and M210 RTK.  @return A boolean value.",
            ],
            [
                   "`true` if the gimbal is mounted upwards on the aircraft. It is only supported by M210 and M210 RTK.  @return A boolean value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_GimbalState.html",
                   "#DJIGimbal_GimbalState_isMountedUpwards_inline",
                   "",
            ],
            [
                   "MovementSettings",
                   2,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "",
                   "The current movement settings of the gimbal. These include settings for SmoothTrack and the Controller.",
            ],
            [
                   "The current movement settings of the gimbal. These include settings for SmoothTrack and the Controller.",
                   1,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "",
                   "",
            ],
            [
                   "getProfile",
                   2,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_profile_inline",
                   "Advanced settings profile.  @return A `MovementSettingsProfile` enum value.",
            ],
            [
                   "Advanced settings profile.  @return A `MovementSettingsProfile` enum value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_profile_inline",
                   "",
            ],
            [
                   "isYawSmoothTrackEnabled",
                   2,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_isSmoothTrackEnabledYaw_inline",
                   "`true` if gimbal SmoothTrack is enabled for the yaw axis.  @return A boolean value.",
            ],
            [
                   "`true` if gimbal SmoothTrack is enabled for the yaw axis.  @return A boolean value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_isSmoothTrackEnabledYaw_inline",
                   "",
            ],
            [
                   "isPitchSmoothTrackEnabled",
                   2,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_isSmoothTrackEnabledPitch_inline",
                   "`true` if gimbal SmoothTrack is enabled for the pitch axis.  @return A boolean value.",
            ],
            [
                   "`true` if gimbal SmoothTrack is enabled for the pitch axis.  @return A boolean value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_isSmoothTrackEnabledPitch_inline",
                   "",
            ],
            [
                   "getYawSmoothTrackSpeed",
                   2,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_smoothTrackSpeedYaw_inline",
                   "SmoothTrack yaw axis speed determines how fast the gimbal will catch up with the translated yaw  handle movement. Range is [0,100].  @return An int value.",
            ],
            [
                   "SmoothTrack yaw axis speed determines how fast the gimbal will catch up with the translated yaw  handle movement. Range is [0,100].  @return An int value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_smoothTrackSpeedYaw_inline",
                   "",
            ],
            [
                   "getPitchSmoothTrackSpeed",
                   2,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_smoothTrackSpeedPitch_inline",
                   "SmoothTrack pitch axis speed determines how fast the gimbal will catch up with the translated  pitch handle movement. Range is [0,100].  @return An int value.",
            ],
            [
                   "SmoothTrack pitch axis speed determines how fast the gimbal will catch up with the translated  pitch handle movement. Range is [0,100].  @return An int value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_smoothTrackSpeedPitch_inline",
                   "",
            ],
            [
                   "getYawSmoothTrackDeadband",
                   2,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_smoothTrackDeadbandYaw_inline",
                   "A larger SmoothTrack yaw axis deadband requires more yaw handle movement to translate into gimbal  motion. Range is [0,90] degrees.  @return An int value.",
            ],
            [
                   "A larger SmoothTrack yaw axis deadband requires more yaw handle movement to translate into gimbal  motion. Range is [0,90] degrees.  @return An int value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_smoothTrackDeadbandYaw_inline",
                   "",
            ],
            [
                   "getPitchSmoothTrackDeadband",
                   2,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_smoothTrackDeadbandPitch_inline",
                   "A larger SmoothTrack pitch axis deadband requires more pitch handle movement to translate into  gimbal motion. Range is [0,90] degrees.  @return An int value.",
            ],
            [
                   "A larger SmoothTrack pitch axis deadband requires more pitch handle movement to translate into  gimbal motion. Range is [0,90] degrees.  @return An int value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_smoothTrackDeadbandPitch_inline",
                   "",
            ],
            [
                   "getYawSmoothTrackAcceleration",
                   2,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_smoothTrackAccelerationYaw_inline",
                   "SmoothTrack yaw axis acceleration determines how closely the gimbal's yaw axis will follow the  translated controller movement. Range is [0,30].  @return An int value.",
            ],
            [
                   "SmoothTrack yaw axis acceleration determines how closely the gimbal's yaw axis will follow the  translated controller movement. Range is [0,30].  @return An int value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_smoothTrackAccelerationYaw_inline",
                   "",
            ],
            [
                   "getPitchSmoothTrackAcceleration",
                   2,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_smoothTrackAccelerationPitch_inline",
                   "SmoothTrack pitch axis acceleration determines how closely the camera will follow the translated  pitch handle movement. Range is [0,30].  @return An int value.",
            ],
            [
                   "SmoothTrack pitch axis acceleration determines how closely the camera will follow the translated  pitch handle movement. Range is [0,30].  @return An int value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_smoothTrackAccelerationPitch_inline",
                   "",
            ],
            [
                   "getYawControllerSmoothingFactor",
                   2,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_controllerSmoothingYaw_inline",
                   "Controller yaw axis smoothing controls the deceleration of the gimbal. A small value will cause the  gimbal to stop abruptly. Range is [0,30].  @return An int value.",
            ],
            [
                   "Controller yaw axis smoothing controls the deceleration of the gimbal. A small value will cause the  gimbal to stop abruptly. Range is [0,30].  @return An int value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_controllerSmoothingYaw_inline",
                   "",
            ],
            [
                   "getPitchControllerSmoothingFactor",
                   2,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_controllerSmoothingPitch_inline",
                   "Controller pitch axis smoothing controls the deceleration of the gimbal. A small value will cause the  gimbal to stop abruptly. Range is [0,30].  @return An int value.",
            ],
            [
                   "Controller pitch axis smoothing controls the deceleration of the gimbal. A small value will cause the  gimbal to stop abruptly. Range is [0,30].  @return An int value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_controllerSmoothingPitch_inline",
                   "",
            ],
            [
                   "getYawControllerSpeedCoefficient",
                   2,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_controllerSpeedYaw_inline",
                   "Controller yaw axis speed determines how sensitively the gimbal's yaw axis will follow the controller  movement. Range is [0,100].  @return An int value.",
            ],
            [
                   "Controller yaw axis speed determines how sensitively the gimbal's yaw axis will follow the controller  movement. Range is [0,100].  @return An int value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_controllerSpeedYaw_inline",
                   "",
            ],
            [
                   "getPitchControllerSpeedCoefficient",
                   2,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_controllerSpeedPitch_inline",
                   "Controller pitch axis speed determines how sensitively the gimbal's pitch axis will follow the  controller movement. Range is [0,100].  @return An int value.",
            ],
            [
                   "Controller pitch axis speed determines how sensitively the gimbal's pitch axis will follow the  controller movement. Range is [0,100].  @return An int value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_movementSettingsState.html",
                   "#DJIGimbal_movementSettingsState_controllerSpeedPitch_inline",
                   "",
            ],
            [
                   "Attitude",
                   2,
                   "/Components/Gimbal/DJIGimbal_attitude.html",
                   "",
                   "The gimbal's attitude in degrees relative to the aircraft.          If you don't want a specific axis to get rotated, invoke the `GimbalAttitudeAction` method and set the value of the axis to `NO_ROTATION` in the `Attitude` object. By default, the values of pitch, roll, and yaw in the `Attitude` are set to `NO_ROTATION`.",
            ],
            [
                   "The gimbal's attitude in degrees relative to the aircraft.          If you don't want a specific axis to get rotated, invoke the `GimbalAttitudeAction` method and set the value of the axis to `NO_ROTATION` in the `Attitude` object. By default, the values of pitch, roll, and yaw in the `Attitude` are set to `NO_ROTATION`.",
                   1,
                   "/Components/Gimbal/DJIGimbal_attitude.html",
                   "",
                   "",
            ],
            [
                   "getPitch",
                   2,
                   "/Components/Gimbal/DJIGimbal_attitude.html",
                   "#DJIGimbal_attitude_pitch_inline",
                   "Pitch value in degrees.  @return A float value.",
            ],
            [
                   "Pitch value in degrees.  @return A float value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_attitude.html",
                   "#DJIGimbal_attitude_pitch_inline",
                   "",
            ],
            [
                   "getRoll",
                   2,
                   "/Components/Gimbal/DJIGimbal_attitude.html",
                   "#DJIGimbal_attitude_roll_inline",
                   "Roll value in degrees.  @return <<android:A float value.>",
            ],
            [
                   "Roll value in degrees.  @return <<android:A float value.>",
                   1,
                   "/Components/Gimbal/DJIGimbal_attitude.html",
                   "#DJIGimbal_attitude_roll_inline",
                   "",
            ],
            [
                   "getYaw",
                   2,
                   "/Components/Gimbal/DJIGimbal_attitude.html",
                   "#DJIGimbal_attitude_yaw_inline",
                   "Yaw value in degrees.  @return <<android:A float value.>",
            ],
            [
                   "Yaw value in degrees.  @return <<android:A float value.>",
                   1,
                   "/Components/Gimbal/DJIGimbal_attitude.html",
                   "#DJIGimbal_attitude_yaw_inline",
                   "",
            ],
            [
                   "Axis",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_axis_inline",
                   "Gimbal Axis.",
            ],
            [
                   "Gimbal Axis.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_axis_inline",
                   "",
            ],
            [
                   "YAW",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_axis_yaw_inline",
                   "Gimbal's yaw axis.",
            ],
            [
                   "Gimbal's yaw axis.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_axis_yaw_inline",
                   "",
            ],
            [
                   "PITCH",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_axis_pitch_inline",
                   "Gimbal's pitch axis.",
            ],
            [
                   "Gimbal's pitch axis.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_axis_pitch_inline",
                   "",
            ],
            [
                   "ROLL",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_axis_roll_inline",
                   "Gimbal's roll axis.",
            ],
            [
                   "Gimbal's roll axis.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_axis_roll_inline",
                   "",
            ],
            [
                   "GimbalMode",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_workMode_inline",
                   "Gimbal work modes.",
            ],
            [
                   "Gimbal work modes.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_workMode_inline",
                   "",
            ],
            [
                   "FREE",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_workMode_freeMode_inline",
                   "The gimbal can move independently of the aircraft's yaw. In this mode, even if the aircraft yaw  changes, the camera will continue pointing in the same world direction. This mode is only available  for the Ronin-MX when the M600 or M600 Pro landing gear is retracted.",
            ],
            [
                   "The gimbal can move independently of the aircraft's yaw. In this mode, even if the aircraft yaw  changes, the camera will continue pointing in the same world direction. This mode is only available  for the Ronin-MX when the M600 or M600 Pro landing gear is retracted.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_workMode_freeMode_inline",
                   "",
            ],
            [
                   "FPV",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_workMode_fpvMode_inline",
                   "The gimbal's work mode is FPV mode. In this mode, the gimbal yaw will follow the aircraft's heading,  and the gimbal roll will follow the RC's roll channel value. The pitch will be available to move. This  mode is only available for the Ronin-MX when the M600 landing gear is retracted.",
            ],
            [
                   "The gimbal's work mode is FPV mode. In this mode, the gimbal yaw will follow the aircraft's heading,  and the gimbal roll will follow the RC's roll channel value. The pitch will be available to move. This  mode is only available for the Ronin-MX when the M600 landing gear is retracted.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_workMode_fpvMode_inline",
                   "",
            ],
            [
                   "YAW_FOLLOW",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_workMode_yawFollowMode_inline",
                   "The gimbal's work mode is such that it will follow the yaw. In this mode, the gimbal yaw will be  fixed, while pitch and roll will be available to move.",
            ],
            [
                   "The gimbal's work mode is such that it will follow the yaw. In this mode, the gimbal yaw will be  fixed, while pitch and roll will be available to move.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_workMode_yawFollowMode_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_workMode_unknown_inline",
                   "The gimbal's work mode is unknown.",
            ],
            [
                   "The gimbal's work mode is unknown.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_workMode_unknown_inline",
                   "",
            ],
            [
                   "BalanceTestResult",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_balanceTestResult_inline",
                   "For gimbals that allow payloads to be changed, a balance test should be performed to ensure the  camera is mounted correctly.",
            ],
            [
                   "For gimbals that allow payloads to be changed, a balance test should be performed to ensure the  camera is mounted correctly.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_balanceTestResult_inline",
                   "",
            ],
            [
                   "PASS",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_balanceTestResult_great_inline",
                   "The balance test result is great.",
            ],
            [
                   "The balance test result is great.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_balanceTestResult_great_inline",
                   "",
            ],
            [
                   "MARGINAL",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_balanceTestResult_good_inline",
                   "The balance test result is good. When this result is returned, it is possible there was some noise in the balance measurement. For best results, it is recommended to run the balance test again and adjust the payload position until the result becomes great.",
            ],
            [
                   "The balance test result is good. When this result is returned, it is possible there was some noise in the balance measurement. For best results, it is recommended to run the balance test again and adjust the payload position until the result becomes great.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_balanceTestResult_good_inline",
                   "",
            ],
            [
                   "FAIL",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_balanceTestResult_bad_inline",
                   "The balance test result is bad. The payload should be adjusted when this result is returned.",
            ],
            [
                   "The balance test result is bad. The payload should be adjusted when this result is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_balanceTestResult_bad_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_balanceTestResult_unknown_inline",
                   "The balance test result is unknown.",
            ],
            [
                   "The balance test result is unknown.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_balanceTestResult_unknown_inline",
                   "",
            ],
            [
                   "MovementSettingsProfile",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_movementSettingsProfile_inline",
                   "The Movement Settings Profile contains presets for SmoothTrack and the Physical Controller  sensitivity. SmoothTrack and Controller settings can only be manually changed if Custom1 or Custom2  profiles are selected.",
            ],
            [
                   "The Movement Settings Profile contains presets for SmoothTrack and the Physical Controller  sensitivity. SmoothTrack and Controller settings can only be manually changed if Custom1 or Custom2  profiles are selected.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_movementSettingsProfile_inline",
                   "",
            ],
            [
                   "FAST",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_movementSettingsProfile_fast_inline",
                   "The gimbal's SmoothTrack and Controller sensitivity is high. When the gimbal is using this profile,  user cannot change the Movement Settings manually.",
            ],
            [
                   "The gimbal's SmoothTrack and Controller sensitivity is high. When the gimbal is using this profile,  user cannot change the Movement Settings manually.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_movementSettingsProfile_fast_inline",
                   "",
            ],
            [
                   "MEDIUM",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_movementSettingsProfile_medium_inline",
                   "The gimbal's SmoothTrack and Controller sensitivity is medium. When the gimbal is using this profile,  user cannot change the Movement Settings manually.",
            ],
            [
                   "The gimbal's SmoothTrack and Controller sensitivity is medium. When the gimbal is using this profile,  user cannot change the Movement Settings manually.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_movementSettingsProfile_medium_inline",
                   "",
            ],
            [
                   "SLOW",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_movementSettingsProfile_slow_inline",
                   "The gimbal's SmoothTrack and Controller sensitivity is slow. When the gimbal is using this profile,  user cannot change the Movement Settings manually.",
            ],
            [
                   "The gimbal's SmoothTrack and Controller sensitivity is slow. When the gimbal is using this profile,  user cannot change the Movement Settings manually.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_movementSettingsProfile_slow_inline",
                   "",
            ],
            [
                   "CUSTOM_1",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_movementSettingsProfile_custom1_inline",
                   "The gimbal uses a custom configuration in memory slot 1 where the yaw and pitch speed, deadband, and  acceleration can be defined.",
            ],
            [
                   "The gimbal uses a custom configuration in memory slot 1 where the yaw and pitch speed, deadband, and  acceleration can be defined.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_movementSettingsProfile_custom1_inline",
                   "",
            ],
            [
                   "CUSTOM_2",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_movementSettingsProfile_custom2_inline",
                   "The gimbal uses a custom configuration in memory slot 2 where the yaw and pitch speed, deadband, and  acceleration can be defined.",
            ],
            [
                   "The gimbal uses a custom configuration in memory slot 2 where the yaw and pitch speed, deadband, and  acceleration can be defined.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_movementSettingsProfile_custom2_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_movementSettingsProfile_unknown_inline",
                   "The gimbal's user config type is unknown.",
            ],
            [
                   "The gimbal's user config type is unknown.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_movementSettingsProfile_unknown_inline",
                   "",
            ],
            [
                   "MotorControlPreset",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_motorControlPreset_inline",
                   "Different cameras have different preset parameters for gimbal motor stiffness, strength, gyro  filtering and pre-control.",
            ],
            [
                   "Different cameras have different preset parameters for gimbal motor stiffness, strength, gyro  filtering and pre-control.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_motorControlPreset_inline",
                   "",
            ],
            [
                   "RED",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_motorControlPreset_red_inline",
                   "The gimbal's motor control configuration is optimized for RED cameras.",
            ],
            [
                   "The gimbal's motor control configuration is optimized for RED cameras.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_motorControlPreset_red_inline",
                   "",
            ],
            [
                   "DSLR",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_motorControlPreset_DSLRCamera_inline",
                   "The gimbal's motor control configuration is optimized for most DSLR cameras.",
            ],
            [
                   "The gimbal's motor control configuration is optimized for most DSLR cameras.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_motorControlPreset_DSLRCamera_inline",
                   "",
            ],
            [
                   "MIRRORLESS",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_motorControlPreset_mirrorlessCamera_inline",
                   "The gimbal's motor control configuration is optimized for most mirrorless cameras.",
            ],
            [
                   "The gimbal's motor control configuration is optimized for most mirrorless cameras.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_motorControlPreset_mirrorlessCamera_inline",
                   "",
            ],
            [
                   "EndpointDirection",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_endpointDirection_inline",
                   "Gimbal endpoint setting.",
            ],
            [
                   "Gimbal endpoint setting.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_endpointDirection_inline",
                   "",
            ],
            [
                   "PITCH_UP",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_endpointDirection_pitchUp_inline",
                   "Pitch (also called tilt) endpoint setting in the upwards direction.",
            ],
            [
                   "Pitch (also called tilt) endpoint setting in the upwards direction.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_endpointDirection_pitchUp_inline",
                   "",
            ],
            [
                   "PITCH_DOWN",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_endpointDirection_pitchDown_inline",
                   "Pitch (also called tilt) endpoint setting in the downwards direction.",
            ],
            [
                   "Pitch (also called tilt) endpoint setting in the downwards direction.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_endpointDirection_pitchDown_inline",
                   "",
            ],
            [
                   "YAW_LEFT",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_endpointDirection_yawLeft_inline",
                   "Yaw (also called pan) endpoint setting in the left direction.",
            ],
            [
                   "Yaw (also called pan) endpoint setting in the left direction.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_endpointDirection_yawLeft_inline",
                   "",
            ],
            [
                   "YAW_RIGHT",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_endpointDirection_yawRight_inline",
                   "Yaw (also called pan) endpoint setting in the right direction.",
            ],
            [
                   "Yaw (also called pan) endpoint setting in the right direction.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_endpointDirection_yawRight_inline",
                   "",
            ],
            [
                   "ControllerMode",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_controllerMode_inline",
                   "The control mode for the gimbal physical controller (joystick for Osmo). The total controller  deflection is a combination of horizontal and vertical deflection. This translates to gimbal  movement around the yaw and pitch axes. The gimbal can be set to either move in both yaw and  pitch simultaneously based on horizontal and vertical deflection of the controller, or move in  only yaw or pitch exclusively based on whether horizontal or vertical deflection is larger.",
            ],
            [
                   "The control mode for the gimbal physical controller (joystick for Osmo). The total controller  deflection is a combination of horizontal and vertical deflection. This translates to gimbal  movement around the yaw and pitch axes. The gimbal can be set to either move in both yaw and  pitch simultaneously based on horizontal and vertical deflection of the controller, or move in  only yaw or pitch exclusively based on whether horizontal or vertical deflection is larger.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_controllerMode_inline",
                   "",
            ],
            [
                   "ONE_AXIS",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_controllerMode_horizontalVertical_inline",
                   "Gimbal movement will be exclusively in yaw or pitch depending on whether the controller  horizontal or vertical deflection is greater respectively.",
            ],
            [
                   "Gimbal movement will be exclusively in yaw or pitch depending on whether the controller  horizontal or vertical deflection is greater respectively.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_controllerMode_horizontalVertical_inline",
                   "",
            ],
            [
                   "TWO_AXIS",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_controllerMode_free_inline",
                   "Gimbal movement will be in both yaw and pitch simultaneously relative to the horizontal and  vertical deflection of the controller respectively.",
            ],
            [
                   "Gimbal movement will be in both yaw and pitch simultaneously relative to the horizontal and  vertical deflection of the controller respectively.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_controllerMode_free_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_controllerMode_unknown_inline",
                   "The gimbal controller control mode is unknown.",
            ],
            [
                   "The gimbal controller control mode is unknown.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_controllerMode_unknown_inline",
                   "",
            ],
            [
                   "BalanceState",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_loadingBalanceStatus_inline",
                   "The loading balance status of the gimbal. The gimbal loading is changeable for Osmo Mobile.  When the mounted mobile device is changed, in order to  optimize the gimbal performance, user can  adjust the gimbal physically based on the status.",
            ],
            [
                   "The loading balance status of the gimbal. The gimbal loading is changeable for Osmo Mobile.  When the mounted mobile device is changed, in order to  optimize the gimbal performance, user can  adjust the gimbal physically based on the status.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_loadingBalanceStatus_inline",
                   "",
            ],
            [
                   "BALANCED",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_loadingBalanceStatus_balanced_inline",
                   "The gimbal is balanced.",
            ],
            [
                   "The gimbal is balanced.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_loadingBalanceStatus_balanced_inline",
                   "",
            ],
            [
                   "TILTING_LEFT",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_loadingBalanceStatus_tiltingLeft_inline",
                   "The gimbal is tilting left. Adjust the photo to the right hand side to balance the gimbal.",
            ],
            [
                   "The gimbal is tilting left. Adjust the photo to the right hand side to balance the gimbal.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_loadingBalanceStatus_tiltingLeft_inline",
                   "",
            ],
            [
                   "TILTING_RIGHT",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_loadingBalanceStatus_tiltingRight_inline",
                   "The gimbal is tilting right. Adjust the photo to the left hand side to balance the gimbal.",
            ],
            [
                   "The gimbal is tilting right. Adjust the photo to the left hand side to balance the gimbal.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_loadingBalanceStatus_tiltingRight_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_loadingBalanceStatus_unknown_inline",
                   "The balance status is unknown.",
            ],
            [
                   "The balance status is unknown.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_loadingBalanceStatus_unknown_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_stateUpdateCallbackInterface_inline",
                   "Callback for updating the gimbal's current state.",
            ],
            [
                   "Callback for updating the gimbal's current state.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_stateUpdateCallbackInterface_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_movementSettingsStateUpdateCallbackInterface_inline",
                   "This interface provides the method to receive the updated state and user configuration.",
            ],
            [
                   "This interface provides the method to receive the updated state and user configuration.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_movementSettingsStateUpdateCallbackInterface_inline",
                   "",
            ],
            [
                   "BatteryChargeRemainingCallback",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_batteryRemainingEnergyUpdateCallbackInterface_inline",
                   "Gimbal energy remaining of Ronin MX in percent.",
            ],
            [
                   "Gimbal energy remaining of Ronin MX in percent.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_batteryRemainingEnergyUpdateCallbackInterface_inline",
                   "",
            ],
            [
                   "CapabilityKey",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_GimbalCapabilityKey_inline",
                   "These enums are keys for gimbal capability map.",
            ],
            [
                   "These enums are keys for gimbal capability map.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_GimbalCapabilityKey_inline",
                   "",
            ],
            [
                   "ADJUST_PITCH",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamAdjustPitch_inline",
                   "Key enum in the `getCapabilities` dictionary that holds  the complete capability of the gimbal. A negative value in the valid range represents  counter-clockwise rotation. A positive value in the valid range represents clockwise rotation.",
            ],
            [
                   "Key enum in the `getCapabilities` dictionary that holds  the complete capability of the gimbal. A negative value in the valid range represents  counter-clockwise rotation. A positive value in the valid range represents clockwise rotation.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamAdjustPitch_inline",
                   "",
            ],
            [
                   "ADJUST_YAW",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamAdjustYaw_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal supports yaw axis adjustment. The corresponding value in `getCapabilities` is  an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible  range in degrees is returned. A negative value in the valid range represents counter-clockwise rotation.  A positive value in the valid range represents clockwise rotation. For Gimbal's that allow a pitch range  extension (see `PITCH_RANGE_EXTENSION`, the range will be representative of the  extended range whether it is enabled or not.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal supports yaw axis adjustment. The corresponding value in `getCapabilities` is  an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible  range in degrees is returned. A negative value in the valid range represents counter-clockwise rotation.  A positive value in the valid range represents clockwise rotation. For Gimbal's that allow a pitch range  extension (see `PITCH_RANGE_EXTENSION`, the range will be representative of the  extended range whether it is enabled or not.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamAdjustYaw_inline",
                   "",
            ],
            [
                   "ADJUST_ROLL",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamAdjustRoll_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal supports roll axis adjustment. The corresponding value in `getCapabilities`  is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range in degrees is returned. A negative value in the valid range represents  counter-clockwise rotation. A positive value in the valid range represents clockwise rotation.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal supports roll axis adjustment. The corresponding value in `getCapabilities`  is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range in degrees is returned. A negative value in the valid range represents  counter-clockwise rotation. A positive value in the valid range represents clockwise rotation.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamAdjustRoll_inline",
                   "",
            ],
            [
                   "MOVEMENT_SETTINGS",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMovementSettingsProfile_inline",
                   "Key enum string in `getCapabilities` associated with whether the gimbal supports Advanced Settings Profiles. The corresponding value in `getCapabilities` is an instance of `DJIParamCapability`.",
            ],
            [
                   "Key enum string in `getCapabilities` associated with whether the gimbal supports Advanced Settings Profiles. The corresponding value in `getCapabilities` is an instance of `DJIParamCapability`.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMovementSettingsProfile_inline",
                   "",
            ],
            [
                   "PITCH_RANGE_EXTENSION",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamPitchRangeExtensionEnabled_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal supports a range extension in pitch. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the  feature's existence as well as its possible range in degrees is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal supports a range extension in pitch. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the  feature's existence as well as its possible range in degrees is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamPitchRangeExtensionEnabled_inline",
                   "",
            ],
            [
                   "PITCH_CONTROLLER_SPEED_COEFFICIENT",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamControllerSpeedPitch_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis response speed to manual control can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis response speed to manual control can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamControllerSpeedPitch_inline",
                   "",
            ],
            [
                   "YAW_CONTROLLER_SPEED_COEFFICIENT",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamControllerSpeedYaw_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis response speed to manual control can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis response speed to manual control can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamControllerSpeedYaw_inline",
                   "",
            ],
            [
                   "PITCH_CONTROLLER_SMOOTHING_FACTOR",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamControllerSmoothingPitch_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis smoothing can be adjusted when using manual control. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis smoothing can be adjusted when using manual control. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamControllerSmoothingPitch_inline",
                   "",
            ],
            [
                   "YAW_CONTROLLER_SMOOTHING_FACTOR",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamControllerSmoothingYaw_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis smoothing can be adjusted when using manual control. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis smoothing can be adjusted when using manual control. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamControllerSmoothingYaw_inline",
                   "",
            ],
            [
                   "PITCH_CONTROLLER_DEADBAND",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamControllerDeadbandPitch_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's manual control pitch axis deadband can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's manual control pitch axis deadband can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamControllerDeadbandPitch_inline",
                   "",
            ],
            [
                   "YAW_CONTROLLER_DEADBAND",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamControllerDeadbandYaw_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's manual control yaw axis deadband can be adjusted. The corresponding value  in `getCapabilities` is an instance  of `DJIParamMinMaxCapability` meaning both the feature's existence as well as  its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's manual control yaw axis deadband can be adjusted. The corresponding value  in `getCapabilities` is an instance  of `DJIParamMinMaxCapability` meaning both the feature's existence as well as  its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamControllerDeadbandYaw_inline",
                   "",
            ],
            [
                   "PITCH_SMOOTH_TRACK_ENABLED",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamSmoothTrackEnabledPitch_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis SmoothTrack can be toggled. The corresponding value  in `getCapabilities` is an instance of `DJIParamCapability`. Ronin-MX cannot toggle  the SmoothTrack functionality and it is always enabled.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis SmoothTrack can be toggled. The corresponding value  in `getCapabilities` is an instance of `DJIParamCapability`. Ronin-MX cannot toggle  the SmoothTrack functionality and it is always enabled.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamSmoothTrackEnabledPitch_inline",
                   "",
            ],
            [
                   "YAW_SMOOTH_TRACK_ENABLED",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamSmoothTrackEnabledYaw_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis SmoothTrack can be toggled. The corresponding value  in `getCapabilities` is an instance of `DJIParamCapability`. Ronin-MX cannot toggle the  SmoothTrack functionality and it is always enabled.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis SmoothTrack can be toggled. The corresponding value  in `getCapabilities` is an instance of `DJIParamCapability`. Ronin-MX cannot toggle the  SmoothTrack functionality and it is always enabled.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamSmoothTrackEnabledYaw_inline",
                   "",
            ],
            [
                   "PITCH_SMOOTH_TRACK_ACCELERATION",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamSmoothTrackAccelerationPitch_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis SmoothTrack acceleration can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis SmoothTrack acceleration can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamSmoothTrackAccelerationPitch_inline",
                   "",
            ],
            [
                   "YAW_SMOOTH_TRACK_ACCELERATION",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamSmoothTrackAccelerationYaw_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis SmoothTrack acceleration can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis SmoothTrack acceleration can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamSmoothTrackAccelerationYaw_inline",
                   "",
            ],
            [
                   "PITCH_SMOOTH_TRACK_SPEED",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamSmoothTrackSpeedPitch_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis SmoothTrack speed can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the  feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis SmoothTrack speed can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the  feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamSmoothTrackSpeedPitch_inline",
                   "",
            ],
            [
                   "YAW_SMOOTH_TRACK_SPEED",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamSmoothTrackSpeedYaw_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis SmoothTrack speed can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the  feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis SmoothTrack speed can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the  feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamSmoothTrackSpeedYaw_inline",
                   "",
            ],
            [
                   "PITCH_SMOOTH_TRACK_DEADBAND",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamSmoothTrackDeadbandPitch_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis SmoothTrack deadband can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis SmoothTrack deadband can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamSmoothTrackDeadbandPitch_inline",
                   "",
            ],
            [
                   "YAW_SMOOTH_TRACK_DEADBAND",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamSmoothTrackDeadbandYaw_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis SmoothTrack deadband can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis SmoothTrack deadband can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamSmoothTrackDeadbandYaw_inline",
                   "",
            ],
            [
                   "PITCH_UP_ENDPOINT",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamEndpointPitchUp_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch up endpoint can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the  feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch up endpoint can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the  feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamEndpointPitchUp_inline",
                   "",
            ],
            [
                   "PITCH_DOWN_ENDPOINT",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamEndpointPitchDown_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch down endpoint can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the  feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch down endpoint can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the  feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamEndpointPitchDown_inline",
                   "",
            ],
            [
                   "YAW_LEFT_ENDPOINT",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamEndpointYawLeft_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw left endpoint can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the  feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw left endpoint can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the  feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamEndpointYawLeft_inline",
                   "",
            ],
            [
                   "YAW_RIGHT_ENDPOINT",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamEndpointYawRight_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw right endpoint can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the  feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw right endpoint can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the  feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamEndpointYawRight_inline",
                   "",
            ],
            [
                   "PITCH_MOTOR_CONTROL_STIFFNESS",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlStiffnessPitch_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis motor control stiffness can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis motor control stiffness can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlStiffnessPitch_inline",
                   "",
            ],
            [
                   "YAW_MOTOR_CONTROL_STIFFNESS",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlStiffnessYaw_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis motor control stiffness can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis motor control stiffness can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlStiffnessYaw_inline",
                   "",
            ],
            [
                   "ROLL_MOTOR_CONTROL_STIFFNESS",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlStiffnessRoll_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's roll axis motor control stiffness can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's roll axis motor control stiffness can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlStiffnessRoll_inline",
                   "",
            ],
            [
                   "PITCH_MOTOR_CONTROL_STRENGTH",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlStrengthPitch_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis motor control strength can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis motor control strength can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlStrengthPitch_inline",
                   "",
            ],
            [
                   "YAW_MOTOR_CONTROL_STRENGTH",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlStrengthYaw_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis motor control strength can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis motor control strength can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlStrengthYaw_inline",
                   "",
            ],
            [
                   "ROLL_MOTOR_CONTROL_STRENGTH",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlStrengthRoll_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's roll axis motor control strength can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's roll axis motor control strength can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlStrengthRoll_inline",
                   "",
            ],
            [
                   "PITCH_MOTOR_CONTROL_GYRO_FILTERING_FACTOR",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlGyroFilteringPitch_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis motor control gyro filtering can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis motor control gyro filtering can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlGyroFilteringPitch_inline",
                   "",
            ],
            [
                   "YAW_MOTOR_CONTROL_GYRO_FILTERING_FACTOR",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlGyroFilteringYaw_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis motor control gyro filtering can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis motor control gyro filtering can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlGyroFilteringYaw_inline",
                   "",
            ],
            [
                   "ROLL_MOTOR_CONTROL_GYRO_FILTERING_FACTOR",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlGyroFilteringRoll_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's roll axis motor control gyro filtering can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's roll axis motor control gyro filtering can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlGyroFilteringRoll_inline",
                   "",
            ],
            [
                   "PITCH_MOTOR_CONTROL_PRE_CONTROL",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlPrecontrolPitch_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis motor control precontrol can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's pitch axis motor control precontrol can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlPrecontrolPitch_inline",
                   "",
            ],
            [
                   "YAW_MOTOR_CONTROL_PRE_CONTROL",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlPrecontrolYaw_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis motor control precontrol can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's yaw axis motor control precontrol can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlPrecontrolYaw_inline",
                   "",
            ],
            [
                   "ROLL_MOTOR_CONTROL_PRE_CONTROL",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlPrecontrolRoll_inline",
                   "Key enum in `getCapabilities` associated with whether the  gimbal's roll axis motor control precontrol can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
            ],
            [
                   "Key enum in `getCapabilities` associated with whether the  gimbal's roll axis motor control precontrol can be adjusted. The corresponding value  in `getCapabilities` is an instance of `DJIParamMinMaxCapability` meaning both the feature's existence as well as its possible range (unitless) is returned.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "#DJIGimbal_ParamMotorControlPrecontrolRoll_inline",
                   "",
            ],
            [
                   "Rotation",
                   2,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "",
                   "Represents a gimbal speed or angular rotation operation. If you don't want a specific axis to get rotated, invoke the `rotate` method and set the value of the axis to `NO_ROTATION` in the `Rotation` object. By default, the values of pitch, roll, and yaw in the `Rotation` are set to `NO_ROTATION`.",
            ],
            [
                   "Represents a gimbal speed or angular rotation operation. If you don't want a specific axis to get rotated, invoke the `rotate` method and set the value of the axis to `NO_ROTATION` in the `Rotation` object. By default, the values of pitch, roll, and yaw in the `Rotation` are set to `NO_ROTATION`.",
                   1,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "",
                   "",
            ],
            [
                   "getMode",
                   2,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "#DJIGimbal_DJIGimbalRotation_mode_inline",
                   "Type of gimbal rotation operation mode.  @return A `RotationMode` enum value.",
            ],
            [
                   "Type of gimbal rotation operation mode.  @return A `RotationMode` enum value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "#DJIGimbal_DJIGimbalRotation_mode_inline",
                   "",
            ],
            [
                   "getPitch",
                   2,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "#DJIGimbal_DJIGimbalRotation_pitch_inline",
                   "The pitch property of a gimbal rotation operation, how much the gimbal rotates on the pitch axis.  @return A float value.",
            ],
            [
                   "The pitch property of a gimbal rotation operation, how much the gimbal rotates on the pitch axis.  @return A float value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "#DJIGimbal_DJIGimbalRotation_pitch_inline",
                   "",
            ],
            [
                   "getRoll",
                   2,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "#DJIGimbal_DJIGimbalRotation_roll_inline",
                   "The roll property of a gimbal rotation operation, how much the gimbal rotates on the roll axis.  @return A float value.",
            ],
            [
                   "The roll property of a gimbal rotation operation, how much the gimbal rotates on the roll axis.  @return A float value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "#DJIGimbal_DJIGimbalRotation_roll_inline",
                   "",
            ],
            [
                   "getYaw",
                   2,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "#DJIGimbal_DJIGimbalRotation_yaw_inline",
                   "The yaw property of a gimbal rotation operation, how much the gimbal rotates on the yaw axis.  @return A float value.",
            ],
            [
                   "The yaw property of a gimbal rotation operation, how much the gimbal rotates on the yaw axis.  @return A float value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "#DJIGimbal_DJIGimbalRotation_yaw_inline",
                   "",
            ],
            [
                   "getTime",
                   2,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "#DJIGimbal_DJIGimbalRotation_time_inline",
                   "The time of the gimbal speed rotation operation.  @return A double value.",
            ],
            [
                   "The time of the gimbal speed rotation operation.  @return A double value.",
                   1,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "#DJIGimbal_DJIGimbalRotation_time_inline",
                   "",
            ],
            [
                   "Builder",
                   2,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation_Constructor.html",
                   "",
                   "Object builder.",
            ],
            [
                   "Object builder.",
                   1,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation_Constructor.html",
                   "",
                   "",
            ],
            [
                   "Builder",
                   2,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation_Constructor.html",
                   "#DJIGimbal_DJIGimbalRotation_Constructor_builder_void_inline",
                   "Default rotation constructor method.",
            ],
            [
                   "Default rotation constructor method.",
                   1,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation_Constructor.html",
                   "#DJIGimbal_DJIGimbalRotation_Constructor_builder_void_inline",
                   "",
            ],
            [
                   "Builder",
                   2,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation_Constructor.html",
                   "#DJIGimbal_DJIGimbalRotation_Constructor_builder_rotation_inline",
                   "Constructor method that clones a rotation object.  @param rotation An instance of `Rotation`.",
            ],
            [
                   "Constructor method that clones a rotation object.  @param rotation An instance of `Rotation`.",
                   1,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation_Constructor.html",
                   "#DJIGimbal_DJIGimbalRotation_Constructor_builder_rotation_inline",
                   "",
            ],
            [
                   "mode",
                   2,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation_Constructor.html",
                   "#DJIGimbal_DJIGimbalRotation_Constructor_mode_inline",
                   "Constructor method.  @param mode An enum value of `RotationMode`.  @return Builder object for mode",
            ],
            [
                   "Constructor method.  @param mode An enum value of `RotationMode`.  @return Builder object for mode",
                   1,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation_Constructor.html",
                   "#DJIGimbal_DJIGimbalRotation_Constructor_mode_inline",
                   "",
            ],
            [
                   "pitch",
                   2,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation_Constructor.html",
                   "#DJIGimbal_DJIGimbalRotation_Constructor_pitch_inline",
                   "Constructor method.  @param pitch A float value of pitch.  @return Builder object for pitch",
            ],
            [
                   "Constructor method.  @param pitch A float value of pitch.  @return Builder object for pitch",
                   1,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation_Constructor.html",
                   "#DJIGimbal_DJIGimbalRotation_Constructor_pitch_inline",
                   "",
            ],
            [
                   "roll",
                   2,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation_Constructor.html",
                   "#DJIGimbal_DJIGimbalRotation_Constructor_roll_inline",
                   "Constructor method.  @param roll A float value of roll.  @return Builder object for roll",
            ],
            [
                   "Constructor method.  @param roll A float value of roll.  @return Builder object for roll",
                   1,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation_Constructor.html",
                   "#DJIGimbal_DJIGimbalRotation_Constructor_roll_inline",
                   "",
            ],
            [
                   "yaw",
                   2,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation_Constructor.html",
                   "#DJIGimbal_DJIGimbalRotation_Constructor_yaw_inline",
                   "Constructor method.  @param yaw A float value of yaw.  @return Builder object for yaw",
            ],
            [
                   "Constructor method.  @param yaw A float value of yaw.  @return Builder object for yaw",
                   1,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation_Constructor.html",
                   "#DJIGimbal_DJIGimbalRotation_Constructor_yaw_inline",
                   "",
            ],
            [
                   "time",
                   2,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation_Constructor.html",
                   "#DJIGimbal_DJIGimbalRotation_Constructor_time_inline",
                   "Sets the completion time in seconds to complete an action to control the gimbal. If the the rotation mode is `ABSOLUTE_ANGLE` then the time determines the duration of time the gimbal should rotate to its new position. For example, if a value of 2.0 is used, then the gimbal will rotate to its target position in 2.0 seconds. Range is [0.1,25.5] seconds.  @param time A double value of time.  @return Builder object for time",
            ],
            [
                   "Sets the completion time in seconds to complete an action to control the gimbal. If the the rotation mode is `ABSOLUTE_ANGLE` then the time determines the duration of time the gimbal should rotate to its new position. For example, if a value of 2.0 is used, then the gimbal will rotate to its target position in 2.0 seconds. Range is [0.1,25.5] seconds.  @param time A double value of time.  @return Builder object for time",
                   1,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation_Constructor.html",
                   "#DJIGimbal_DJIGimbalRotation_Constructor_time_inline",
                   "",
            ],
            [
                   "build",
                   2,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation_Constructor.html",
                   "#DJIGimbal_DJIGimbalRotation_Constructor_build_inline",
                   "Build the object.  @return Instance of `Rotation`.",
            ],
            [
                   "Build the object.  @return Instance of `Rotation`.",
                   1,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation_Constructor.html",
                   "#DJIGimbal_DJIGimbalRotation_Constructor_build_inline",
                   "",
            ],
            [
                   "RotationMode",
                   2,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "#DJIGimbal_DJIGimbalRotation_DJIGimbalRotationMode_inline",
                   "The mode of the gimbal rotation operation.",
            ],
            [
                   "The mode of the gimbal rotation operation.",
                   1,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "#DJIGimbal_DJIGimbalRotation_DJIGimbalRotationMode_inline",
                   "",
            ],
            [
                   "RELATIVE_ANGLE",
                   2,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "#DJIGimbal_DJIGimbalRotation_DJIGimbalRotationMode_RelativeAngle_inline",
                   "The angle value, when the gimbal is rotating, relative to the current angle.",
            ],
            [
                   "The angle value, when the gimbal is rotating, relative to the current angle.",
                   1,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "#DJIGimbal_DJIGimbalRotation_DJIGimbalRotationMode_RelativeAngle_inline",
                   "",
            ],
            [
                   "ABSOLUTE_ANGLE",
                   2,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "#DJIGimbal_DJIGimbalRotation_DJIGimbalRotationMode_AbsoluteAngle_inline",
                   "The angle value, when the gimbal is rotating, relative to 0 degrees (aircraft heading).",
            ],
            [
                   "The angle value, when the gimbal is rotating, relative to 0 degrees (aircraft heading).",
                   1,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "#DJIGimbal_DJIGimbalRotation_DJIGimbalRotationMode_AbsoluteAngle_inline",
                   "",
            ],
            [
                   "SPEED",
                   2,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "#DJIGimbal_DJIGimbalRotation_DJIGimbalRotationMode_Speed_inline",
                   "Rotate the gimbal's pitch, roll, and yaw in SPEED Mode. The direction can either be set to clockwise or  counter-clockwise.  For Phantom 3 Professional, Phantom 3 Advanced and Phantom 3 Standard, roll and yaw rotations are not available.  For Inspire 1, Inspire Pro and M100, pitch, roll and yaw rotations  are available.  For Osmo, roll rotation is not available. The yaw angleVelocity of DJIGimbalSpeedRotation range is (-120, 120).",
            ],
            [
                   "Rotate the gimbal's pitch, roll, and yaw in SPEED Mode. The direction can either be set to clockwise or  counter-clockwise.  For Phantom 3 Professional, Phantom 3 Advanced and Phantom 3 Standard, roll and yaw rotations are not available.  For Inspire 1, Inspire Pro and M100, pitch, roll and yaw rotations  are available.  For Osmo, roll rotation is not available. The yaw angleVelocity of DJIGimbalSpeedRotation range is (-120, 120).",
                   1,
                   "/Components/Gimbal/DJIGimbal_DJIGimbalRotation.html",
                   "#DJIGimbal_DJIGimbalRotation_DJIGimbalRotationMode_Speed_inline",
                   "",
            ],
            [
                   "getHandHeldController",
                   2,
                   "/Products/Handheld/DJIHandheld.html",
                   "#DJIHandheld_handheldController_inline",
                   "Returns an instance of the handheld device's handheld controller.  @return An instance of the `HandheldController`",
            ],
            [
                   "Returns an instance of the handheld device's handheld controller.  @return An instance of the `HandheldController`",
                   1,
                   "/Products/Handheld/DJIHandheld.html",
                   "#DJIHandheld_handheldController_inline",
                   "",
            ],
            [
                   "UNKNOWN_HANDHELD",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIHandheld_DJIHandheldModelNameUnknownHandheld_inline",
                   "Handheld device model name unknown.",
            ],
            [
                   "Handheld device model name unknown.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIHandheld_DJIHandheldModelNameUnknownHandheld_inline",
                   "",
            ],
            [
                   "OSMO",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIHandheld_DJIHandheldModelNameOsmo_inline",
                   "Handheld device model name Osmo.",
            ],
            [
                   "Handheld device model name Osmo.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIHandheld_DJIHandheldModelNameOsmo_inline",
                   "",
            ],
            [
                   "OSMO_PRO",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIHandheld_DJIHandheldModelNameOsmoPro_inline",
                   "Handheld device model name Osmo Pro.",
            ],
            [
                   "Handheld device model name Osmo Pro.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIHandheld_DJIHandheldModelNameOsmoPro_inline",
                   "",
            ],
            [
                   "OSMO_RAW",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIHandheld_DJIHandheldModelNameOsmoRAW_inline",
                   "Handheld device model name Osmo RAW.",
            ],
            [
                   "Handheld device model name Osmo RAW.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIHandheld_DJIHandheldModelNameOsmoRAW_inline",
                   "",
            ],
            [
                   "OSMO_MOBILE",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIHandheld_DJIHandheldModelNameOsmoMobile_inline",
                   "Handheld device model name Osmo Mobile.",
            ],
            [
                   "Handheld device model name Osmo Mobile.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIHandheld_DJIHandheldModelNameOsmoMobile_inline",
                   "",
            ],
            [
                   "OSMO_PLUS",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIHandheld_DJIHandheldModelNameOsmoPlus_inline",
                   "Handheld device model name Osmo+.",
            ],
            [
                   "Handheld device model name Osmo+.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "#DJIHandheld_DJIHandheldModelNameOsmoPlus_inline",
                   "",
            ],
            [
                   "setPowerModeCallback",
                   2,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_setDJIHandheldPowerModeListener_inline",
                   "Setup the callback that returns changed power mode state information.  @param callback The callback for the power mode state.",
            ],
            [
                   "Setup the callback that returns changed power mode state information.  @param callback The callback for the power mode state.",
                   1,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_setDJIHandheldPowerModeListener_inline",
                   "",
            ],
            [
                   "setHardwareStateCallback",
                   2,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_setUpdateHardwareStateCallback_inline",
                   "Set up the callback for the handheld's hardware state.  @param callback Callback for the handheld controller's current hardware state (e.g. the state of the physical  buttons and joysticks).",
            ],
            [
                   "Set up the callback for the handheld's hardware state.  @param callback Callback for the handheld controller's current hardware state (e.g. the state of the physical  buttons and joysticks).",
                   1,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_setUpdateHardwareStateCallback_inline",
                   "",
            ],
            [
                   "setPowerMode",
                   2,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_setHandheldPowerMode_inline",
                   "Set the power mode for the handheld controller.  @param mode The power mode to set. CAUTION! When the mode  is `OFF`,  the handheld product will be shut down and the connection will  be broken. The user must then power on the device manually. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Set the power mode for the handheld controller.  @param mode The power mode to set. CAUTION! When the mode  is `OFF`,  the handheld product will be shut down and the connection will  be broken. The user must then power on the device manually. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_setHandheldPowerMode_inline",
                   "",
            ],
            [
                   "controlLEDWithCommand",
                   2,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_controlLEDWithCommand_inline",
                   "Controls the LED of the handheld controller.  @param command The command to control the LED. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Controls the LED of the handheld controller.  @param command The command to control the LED. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_controlLEDWithCommand_inline",
                   "",
            ],
            [
                   "setStickGimbalControlEnabled",
                   2,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_setStickGimbalControlEnabled_inline",
                   "Enables/disables the gimbal control with the joystick. By default, it is enabled. The handheld  will be reset to the default value  when it reboots or SDK reinitializes. When gimbal control is  disabled, the joystick can be used for other purposes in an SDK application by reading its position  values with `StickVerticalDirection`  and `StickHorizontalDirection`.  Only supported in firmware version 1.2.0.40 or above.  @param enabled `true` to enable the gimbal control. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Enables/disables the gimbal control with the joystick. By default, it is enabled. The handheld  will be reset to the default value  when it reboots or SDK reinitializes. When gimbal control is  disabled, the joystick can be used for other purposes in an SDK application by reading its position  values with `StickVerticalDirection`  and `StickHorizontalDirection`.  Only supported in firmware version 1.2.0.40 or above.  @param enabled `true` to enable the gimbal control. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_setStickGimbalControlEnabled_inline",
                   "",
            ],
            [
                   "getStickGimbalControlEnabled",
                   2,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_getStickGimbalControlEnabled_inline",
                   "`true` if gimbal control with the joystick is enabled. Only supported in firmware  version 1.2.0.40 or above.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "`true` if gimbal control with the joystick is enabled. Only supported in firmware  version 1.2.0.40 or above.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_getStickGimbalControlEnabled_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_updatePowerMode_inline",
                   "Called when the handheld controller's power mode has been updated.  @param powerMode Handheld controller's current power mode.",
            ],
            [
                   "Called when the handheld controller's power mode has been updated.  @param powerMode Handheld controller's current power mode.",
                   1,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_updatePowerMode_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_updateHardwareState_inline",
                   "Called when the handheld controller's current hardware state (e.g. the state of the physical  buttons and joysticks) has been updated.  @param state An object of `HardwareState`.",
            ],
            [
                   "Called when the handheld controller's current hardware state (e.g. the state of the physical  buttons and joysticks) has been updated.  @param state An object of `HardwareState`.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_updateHardwareState_inline",
                   "",
            ],
            [
                   "ON",
                   2,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_DJIHandheldPowerMode_Awake_inline",
                   "The handheld product is awake. For Osmo, when it is in this mode, all the components  in `HandHeld` are accessible.",
            ],
            [
                   "The handheld product is awake. For Osmo, when it is in this mode, all the components  in `HandHeld` are accessible.",
                   1,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_DJIHandheldPowerMode_Awake_inline",
                   "",
            ],
            [
                   "SLEEPING",
                   2,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_DJIHandheldPowerMode_Sleeping_inline",
                   "The handheld product is sleeping. The handheld controller keeps  the wireless connection to the mobile device alive but most other  components are off. The power consumption is low in this mode.  For Osmo in this mode, only the `HandheldController`,  `AirLink`, and `Battery` are accessible.",
            ],
            [
                   "The handheld product is sleeping. The handheld controller keeps  the wireless connection to the mobile device alive but most other  components are off. The power consumption is low in this mode.  For Osmo in this mode, only the `HandheldController`,  `AirLink`, and `Battery` are accessible.",
                   1,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_DJIHandheldPowerMode_Sleeping_inline",
                   "",
            ],
            [
                   "OFF",
                   2,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_DJIHandheldPowerMode_PowerOff_inline",
                   "The handheld product is powered off. Once this mode is set the  callback will receive this mode until  the handheld device is shut down completely.  It is not supported by Osmo Mobile.",
            ],
            [
                   "The handheld product is powered off. Once this mode is set the  callback will receive this mode until  the handheld device is shut down completely.  It is not supported by Osmo Mobile.",
                   1,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_DJIHandheldPowerMode_PowerOff_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_DJIHandheldPowerMode_Unknown_inline",
                   "The Handheld Power Mode in unknown.",
            ],
            [
                   "The Handheld Power Mode in unknown.",
                   1,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_DJIHandheldPowerMode_Unknown_inline",
                   "",
            ],
            [
                   "getRecordAndShutterButtons",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_handheldButtonStatus_inline",
                   "Status of the shutter button and record button.  @return A `RecordAndShutterButtons` enum value.",
            ],
            [
                   "Status of the shutter button and record button.  @return A `RecordAndShutterButtons` enum value.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_handheldButtonStatus_inline",
                   "",
            ],
            [
                   "getTriggerButton",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_triggerState_inline",
                   "Status of the trigger button.  @return A `TriggerButton` enum value.",
            ],
            [
                   "Status of the trigger button.  @return A `TriggerButton` enum value.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_triggerState_inline",
                   "",
            ],
            [
                   "isTriggerBeingPressed",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_isTriggerBeingPressed_inline",
                   "`true` when the trigger is being pressed. It is only supported in firmware version 1.2.0.40 or above.  @return A boolean value.",
            ],
            [
                   "`true` when the trigger is being pressed. It is only supported in firmware version 1.2.0.40 or above.  @return A boolean value.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_isTriggerBeingPressed_inline",
                   "",
            ],
            [
                   "getStickVerticalDirection",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_joystickVerticalDirection_inline",
                   "Status of the joystick in vertical direction.  @return A `StickVerticalDirection` enum value.",
            ],
            [
                   "Status of the joystick in vertical direction.  @return A `StickVerticalDirection` enum value.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_joystickVerticalDirection_inline",
                   "",
            ],
            [
                   "getStickHorizontalDirection",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_joystickHorizontalDirection_inline",
                   "Status of the joystick in horizontal direction.  @return A `StickHorizontalDirection` enum value.",
            ],
            [
                   "Status of the joystick in horizontal direction.  @return A `StickHorizontalDirection` enum value.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_joystickHorizontalDirection_inline",
                   "",
            ],
            [
                   "getStick",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandhelpControllerHardwareState_stickPosition_inline",
                   "Position of the stick in both vertical and horizontal direction. Only supported in firmware version 1.2.0.40 or above.  @return An object of `Stick`.",
            ],
            [
                   "Position of the stick in both vertical and horizontal direction. Only supported in firmware version 1.2.0.40 or above.  @return An object of `Stick`.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandhelpControllerHardwareState_stickPosition_inline",
                   "",
            ],
            [
                   "IDLE",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldButtonStatus_Idle_inline",
                   "No buttons have been pressed.",
            ],
            [
                   "No buttons have been pressed.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldButtonStatus_Idle_inline",
                   "",
            ],
            [
                   "SHUTTER_CLICK",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldButtonStatus_ShutterButtonPressed_inline",
                   "Only the shutter button was pressed and released.",
            ],
            [
                   "Only the shutter button was pressed and released.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldButtonStatus_ShutterButtonPressed_inline",
                   "",
            ],
            [
                   "RECORD_CLICK",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldButtonStatus_RecordButtonPressed_inline",
                   "Only the record button was pressed and released.",
            ],
            [
                   "Only the record button was pressed and released.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldButtonStatus_RecordButtonPressed_inline",
                   "",
            ],
            [
                   "SHUTTER_LONG_CLICK",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldButtonStatus_ShutterButtonLongPress_inline",
                   "The shutter button is being pressed without release.",
            ],
            [
                   "The shutter button is being pressed without release.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldButtonStatus_ShutterButtonLongPress_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldButtonStatus_ModeUnknown_inline",
                   "The button status is unknown.",
            ],
            [
                   "The button status is unknown.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldButtonStatus_ModeUnknown_inline",
                   "",
            ],
            [
                   "IDLE",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldTriggerStatus_Idle_inline",
                   "Trigger button status is idle.",
            ],
            [
                   "Trigger button status is idle.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldTriggerStatus_Idle_inline",
                   "",
            ],
            [
                   "SINGLE_CLICK",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldTriggerStatus_SingleClick_inline",
                   "Trigger button is pressed and released.",
            ],
            [
                   "Trigger button is pressed and released.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldTriggerStatus_SingleClick_inline",
                   "",
            ],
            [
                   "DOUBLE_CLICK",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldTriggerStatus_DoubleClick_inline",
                   "Trigger button is pressed twice quickly.",
            ],
            [
                   "Trigger button is pressed twice quickly.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldTriggerStatus_DoubleClick_inline",
                   "",
            ],
            [
                   "TRIPLE_CLICK",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldTriggerStatus_TripleClick_inline",
                   "Trigger button is pressed three times quickly.",
            ],
            [
                   "Trigger button is pressed three times quickly.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldTriggerStatus_TripleClick_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldTriggerStatus_Unknown_inline",
                   "Trigger button status is unknown.",
            ],
            [
                   "Trigger button status is unknown.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldTriggerStatus_Unknown_inline",
                   "",
            ],
            [
                   "CENTER",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickVerticalDirection_Middle_inline",
                   "Joystick has no movement in the vertical direction.",
            ],
            [
                   "Joystick has no movement in the vertical direction.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickVerticalDirection_Middle_inline",
                   "",
            ],
            [
                   "UP",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickVerticalDirection_Up_inline",
                   "Joystick is moved up in the vertical direction.",
            ],
            [
                   "Joystick is moved up in the vertical direction.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickVerticalDirection_Up_inline",
                   "",
            ],
            [
                   "DOWN",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickVerticalDirection_Down_inline",
                   "Joystick is moved down in the vertical direction.",
            ],
            [
                   "Joystick is moved down in the vertical direction.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickVerticalDirection_Down_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickVerticalDirection_Unknown_inline",
                   "Joystick status in the vertical direction is unknown.",
            ],
            [
                   "Joystick status in the vertical direction is unknown.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickVerticalDirection_Unknown_inline",
                   "",
            ],
            [
                   "CENTER",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickHorizontalDirection_Middle_inline",
                   "Joystick has no movement in the horizontal direction.",
            ],
            [
                   "Joystick has no movement in the horizontal direction.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickHorizontalDirection_Middle_inline",
                   "",
            ],
            [
                   "LEFT",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickHorizontalDirection_Left_inline",
                   "Joystick is moved left in the horizontal direction.",
            ],
            [
                   "Joystick is moved left in the horizontal direction.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickHorizontalDirection_Left_inline",
                   "",
            ],
            [
                   "RIGHT",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickHorizontalDirection_Right_inline",
                   "Joystick is moved right in the horizontal direction.",
            ],
            [
                   "Joystick is moved right in the horizontal direction.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickHorizontalDirection_Right_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickHorizontalDirection_Unknown_inline",
                   "Joystick status in the horizontal direction is unknown.",
            ],
            [
                   "Joystick status in the horizontal direction is unknown.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickHorizontalDirection_Unknown_inline",
                   "",
            ],
            [
                   "red",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerLEDCommand.html",
                   "#DJIHandheldController_DJIHandheldControllerLEDCommand_red_inline",
                   "Pattern to control the red color.",
            ],
            [
                   "Pattern to control the red color.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerLEDCommand.html",
                   "#DJIHandheldController_DJIHandheldControllerLEDCommand_red_inline",
                   "",
            ],
            [
                   "green",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerLEDCommand.html",
                   "#DJIHandheldController_DJIHandheldControllerLEDCommand_green_inline",
                   "Pattern to control the green color.",
            ],
            [
                   "Pattern to control the green color.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerLEDCommand.html",
                   "#DJIHandheldController_DJIHandheldControllerLEDCommand_green_inline",
                   "",
            ],
            [
                   "blue",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerLEDCommand.html",
                   "#DJIHandheldController_DJIHandheldControllerLEDCommand_blue_inline",
                   "Pattern to control the blue color.",
            ],
            [
                   "Pattern to control the blue color.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerLEDCommand.html",
                   "#DJIHandheldController_DJIHandheldControllerLEDCommand_blue_inline",
                   "",
            ],
            [
                   "pattern",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerLEDCommand_DJIHandheldControllerLEDColorPattern.html",
                   "#DJIHandheldController_DJIHandheldControllerLEDCommand_DJIHandheldControllerLEDColorPattern_pattern_inline",
                   "Pattern to control the time varying behaviour of the LED color. Each element of pattern</code> is a boolean  representing the LED on/off state for 0.125 seconds where  `true` means the LED is on. The length of the pattern cannot exceed 32. By default, the array is empty,  which will turn the LED color off.",
            ],
            [
                   "Pattern to control the time varying behaviour of the LED color. Each element of pattern</code> is a boolean  representing the LED on/off state for 0.125 seconds where  `true` means the LED is on. The length of the pattern cannot exceed 32. By default, the array is empty,  which will turn the LED color off.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerLEDCommand_DJIHandheldControllerLEDColorPattern.html",
                   "#DJIHandheldController_DJIHandheldControllerLEDCommand_DJIHandheldControllerLEDColorPattern_pattern_inline",
                   "",
            ],
            [
                   "repeatTimes",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerLEDCommand_DJIHandheldControllerLEDColorPattern.html",
                   "#DJIHandheldController_DJIHandheldControllerLEDCommand_DJIHandheldControllerLEDColorPattern_repeatTimes_inline",
                   "The number of times to repeat the sequence with range [1, 255]. A value of 255 will repeat the  sequence indefinitely until a new  command is sent. The default value is 255.",
            ],
            [
                   "The number of times to repeat the sequence with range [1, 255]. A value of 255 will repeat the  sequence indefinitely until a new  command is sent. The default value is 255.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerLEDCommand_DJIHandheldControllerLEDColorPattern.html",
                   "#DJIHandheldController_DJIHandheldControllerLEDCommand_DJIHandheldControllerLEDColorPattern_repeatTimes_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_DJIHandheldPowerModeListenerInterface_inline",
                   "Callback to receive the updated power mode of the handheld controller.",
            ],
            [
                   "Callback to receive the updated power mode of the handheld controller.",
                   1,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_DJIHandheldPowerModeListenerInterface_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIUpdateHardwareStateCallbackInterface_inline",
                   "Callback for the handheld controller's current hardware state (e.g. the state of the physical  buttons and joysticks).",
            ],
            [
                   "Callback for the handheld controller's current hardware state (e.g. the state of the physical  buttons and joysticks).",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIUpdateHardwareStateCallbackInterface_inline",
                   "",
            ],
            [
                   "PowerMode",
                   2,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_DJIHandheldPowerMode_inline",
                   "Handheld Power Mode.",
            ],
            [
                   "Handheld Power Mode.",
                   1,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "#DJIHandheldController_DJIHandheldPowerMode_inline",
                   "",
            ],
            [
                   "HardwareState",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "",
                   "The status of the shutter button and record button on the handheld controller. Used by Osmo Mobile only.",
            ],
            [
                   "The status of the shutter button and record button on the handheld controller. Used by Osmo Mobile only.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "",
                   "",
            ],
            [
                   "RecordAndShutterButtons",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldButtonStatus_inline",
                   "The status of the shutter button and record button on the handheld controller.",
            ],
            [
                   "The status of the shutter button and record button on the handheld controller.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldButtonStatus_inline",
                   "",
            ],
            [
                   "TriggerButton",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldTriggerStatus_inline",
                   "The status of the shutter button and record button on the handheld controller.",
            ],
            [
                   "The status of the shutter button and record button on the handheld controller.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldTriggerStatus_inline",
                   "",
            ],
            [
                   "StickVerticalDirection",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickVerticalDirection_inline",
                   "Status of the handheld joystick in vertical direction.",
            ],
            [
                   "Status of the handheld joystick in vertical direction.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickVerticalDirection_inline",
                   "",
            ],
            [
                   "StickHorizontalDirection",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickHorizontalDirection_inline",
                   "Status of the handheld joystick in horizontal direction.",
            ],
            [
                   "Status of the handheld joystick in horizontal direction.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerHardwareState.html",
                   "#DJIHandheldController_DJIHandheldControllerHardwareState_DJIHandheldJoystickHorizontalDirection_inline",
                   "",
            ],
            [
                   "LEDCommand",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerLEDCommand.html",
                   "",
                   "Command used to control different colors (red, green and blue) of the handheld controller's LED.",
            ],
            [
                   "Command used to control different colors (red, green and blue) of the handheld controller's LED.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerLEDCommand.html",
                   "",
                   "",
            ],
            [
                   "LEDColorPattern",
                   2,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerLEDCommand_DJIHandheldControllerLEDColorPattern.html",
                   "",
                   "Pattern used to control a single color (red, green or blue) of the handheld controller's LED.",
            ],
            [
                   "Pattern used to control a single color (red, green or blue) of the handheld controller's LED.",
                   1,
                   "/Components/HandheldController/DJIHandheldController_DJIHandheldControllerLEDCommand_DJIHandheldControllerLEDColorPattern.html",
                   "",
                   "",
            ],
            [
                   "setLeftStickVertical",
                   2,
                   "/Components/MobileRemoteController/DJIMobileRemoteController.html",
                   "#DJIMobileRemoteController_leftStickVertical_inline",
                   "Simulates the vertical movement of the left stick, which changes the aircraft's thrust causing it to raise or  lower in elevation. The valid range is [-1, 1].  @param data A float value of the left stick vertical movement.",
            ],
            [
                   "Simulates the vertical movement of the left stick, which changes the aircraft's thrust causing it to raise or  lower in elevation. The valid range is [-1, 1].  @param data A float value of the left stick vertical movement.",
                   1,
                   "/Components/MobileRemoteController/DJIMobileRemoteController.html",
                   "#DJIMobileRemoteController_leftStickVertical_inline",
                   "",
            ],
            [
                   "setLeftStickHorizontal",
                   2,
                   "/Components/MobileRemoteController/DJIMobileRemoteController.html",
                   "#DJIMobileRemoteController_leftStickHorizontal_inline",
                   "Simulates the horizontal movement of the left stick, which changes the yaw of the aircraft causing it to rotate  horizontally. The valid range is [-1, 1].  @param data A float value of the left stick horizontal movement.",
            ],
            [
                   "Simulates the horizontal movement of the left stick, which changes the yaw of the aircraft causing it to rotate  horizontally. The valid range is [-1, 1].  @param data A float value of the left stick horizontal movement.",
                   1,
                   "/Components/MobileRemoteController/DJIMobileRemoteController.html",
                   "#DJIMobileRemoteController_leftStickHorizontal_inline",
                   "",
            ],
            [
                   "setRightStickVertical",
                   2,
                   "/Components/MobileRemoteController/DJIMobileRemoteController.html",
                   "#DJIMobileRemoteController_rightStickVertical_inline",
                   "Simulates the vertical movement of the right stick, which changes the the aircraft's pitch causing it to fly  forward or backward. The valid range is [-1, 1].  @param data A float value of the right stick vertical movement.",
            ],
            [
                   "Simulates the vertical movement of the right stick, which changes the the aircraft's pitch causing it to fly  forward or backward. The valid range is [-1, 1].  @param data A float value of the right stick vertical movement.",
                   1,
                   "/Components/MobileRemoteController/DJIMobileRemoteController.html",
                   "#DJIMobileRemoteController_rightStickVertical_inline",
                   "",
            ],
            [
                   "setRightStickHorizontal",
                   2,
                   "/Components/MobileRemoteController/DJIMobileRemoteController.html",
                   "#DJIMobileRemoteController_rightStickHorizontal_inline",
                   "Simulates the horizontal movement of the right stick, which changes the the aircraft's roll causing it to fly  left or right. The valid range is  [-1, 1].  @param data A float value of the left stick horizontal movement.",
            ],
            [
                   "Simulates the horizontal movement of the right stick, which changes the the aircraft's roll causing it to fly  left or right. The valid range is  [-1, 1].  @param data A float value of the left stick horizontal movement.",
                   1,
                   "/Components/MobileRemoteController/DJIMobileRemoteController.html",
                   "#DJIMobileRemoteController_rightStickHorizontal_inline",
                   "",
            ],
            [
                   "getLeftStickVertical",
                   2,
                   "/Components/MobileRemoteController/DJIMobileRemoteController.html",
                   "#DJIMobileRemoteController_getLeftStickVertical_inline",
                   "Gets the vertical movement value of the left stick.  @return A float value.",
            ],
            [
                   "Gets the vertical movement value of the left stick.  @return A float value.",
                   1,
                   "/Components/MobileRemoteController/DJIMobileRemoteController.html",
                   "#DJIMobileRemoteController_getLeftStickVertical_inline",
                   "",
            ],
            [
                   "getLeftStickHorizontal",
                   2,
                   "/Components/MobileRemoteController/DJIMobileRemoteController.html",
                   "#DJIMobileRemoteController_getLeftStickHorizontal_inline",
                   "Gets the horizontal movement value of the left stick.  @return A float value.",
            ],
            [
                   "Gets the horizontal movement value of the left stick.  @return A float value.",
                   1,
                   "/Components/MobileRemoteController/DJIMobileRemoteController.html",
                   "#DJIMobileRemoteController_getLeftStickHorizontal_inline",
                   "",
            ],
            [
                   "getRightStickVertical",
                   2,
                   "/Components/MobileRemoteController/DJIMobileRemoteController.html",
                   "#DJIMobileRemoteController_getRightStickVertical_inline",
                   "Gets the vertical movement value of the right stick.  @return A float value.",
            ],
            [
                   "Gets the vertical movement value of the right stick.  @return A float value.",
                   1,
                   "/Components/MobileRemoteController/DJIMobileRemoteController.html",
                   "#DJIMobileRemoteController_getRightStickVertical_inline",
                   "",
            ],
            [
                   "getRightStickHorizontal",
                   2,
                   "/Components/MobileRemoteController/DJIMobileRemoteController.html",
                   "#DJIMobileRemoteController_getRightStickHorizontal_inline",
                   "Gets the horizontal movement value of the right stick.  @return A float value.",
            ],
            [
                   "Gets the horizontal movement value of the right stick.  @return A float value.",
                   1,
                   "/Components/MobileRemoteController/DJIMobileRemoteController.html",
                   "#DJIMobileRemoteController_getRightStickHorizontal_inline",
                   "",
            ],
            [
                   "isSupported",
                   2,
                   "/Components/ParamCapability/DJIParamCapability.html",
                   "#DJIParamCapability_isSupported_inline",
                   "`true` if the component or product supports the parameter.  @return A boolean value.",
            ],
            [
                   "`true` if the component or product supports the parameter.  @return A boolean value.",
                   1,
                   "/Components/ParamCapability/DJIParamCapability.html",
                   "#DJIParamCapability_isSupported_inline",
                   "",
            ],
            [
                   "DJIParamMinMaxCapability",
                   2,
                   "/Components/ParamCapability/DJIParamCapability_DJIParamCapabilityMinMax.html",
                   "",
                   "Adds the maximum and minimum possible values of the parameter to  the `DJIParamCapability` base class.",
            ],
            [
                   "Adds the maximum and minimum possible values of the parameter to  the `DJIParamCapability` base class.",
                   1,
                   "/Components/ParamCapability/DJIParamCapability_DJIParamCapabilityMinMax.html",
                   "",
                   "",
            ],
            [
                   "getMin",
                   2,
                   "/Components/ParamCapability/DJIParamCapability_DJIParamCapabilityMinMax.html",
                   "#DJIParamCapability_DJIParamCapabilityMinMax_min_inline",
                   "Return the valid minimum value of the  parameter for the product. If `isSupported`  returns `false`, the value is undefined.  @return A Number object.",
            ],
            [
                   "Return the valid minimum value of the  parameter for the product. If `isSupported`  returns `false`, the value is undefined.  @return A Number object.",
                   1,
                   "/Components/ParamCapability/DJIParamCapability_DJIParamCapabilityMinMax.html",
                   "#DJIParamCapability_DJIParamCapabilityMinMax_min_inline",
                   "",
            ],
            [
                   "getMax",
                   2,
                   "/Components/ParamCapability/DJIParamCapability_DJIParamCapabilityMinMax.html",
                   "#DJIParamCapability_DJIParamCapabilityMinMax_max_inline",
                   "Return the valid maximum value of the  parameter for the product. If `isSupported`  returns `false`, the value is undefined.  @return A Number object.",
            ],
            [
                   "Return the valid maximum value of the  parameter for the product. If `isSupported`  returns `false`, the value is undefined.  @return A Number object.",
                   1,
                   "/Components/ParamCapability/DJIParamCapability_DJIParamCapabilityMinMax.html",
                   "#DJIParamCapability_DJIParamCapabilityMinMax_max_inline",
                   "",
            ],
            [
                   "getSDKVersion",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_getSDKVersion_inline",
                   "Gets the DJI Mobile SDK Version. Returns SDK version as a string.  @return A SDK version String instance.",
            ],
            [
                   "Gets the DJI Mobile SDK Version. Returns SDK version as a string.  @return A SDK version String instance.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_getSDKVersion_inline",
                   "",
            ],
            [
                   "registerApp",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_registerApp_inline",
                   "The first time the app is initialized after installation, the app connects to a DJI Server through the  internet to verify the Application Key. Subsequent app starts will use locally cached verification  information to register the app.  @param context Android context. @param callback Callback used for both the registration result, and when the products changes.",
            ],
            [
                   "The first time the app is initialized after installation, the app connects to a DJI Server through the  internet to verify the Application Key. Subsequent app starts will use locally cached verification  information to register the app.  @param context Android context. @param callback Callback used for both the registration result, and when the products changes.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_registerApp_inline",
                   "",
            ],
            [
                   "hasSDKRegistered",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_hasSDKRegistered_inline",
                   "Registration state.  @return `true` if SDK is registered.",
            ],
            [
                   "Registration state.  @return `true` if SDK is registered.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_hasSDKRegistered_inline",
                   "",
            ],
            [
                   "getInstance",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_getInstance_inline",
                   "Accessor for `DJISDKManager` object.  @return An instance of `DJISDKManager` object.",
            ],
            [
                   "Accessor for `DJISDKManager` object.  @return An instance of `DJISDKManager` object.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_getInstance_inline",
                   "",
            ],
            [
                   "destroy",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_destroy_inline",
                   "Releases the resources held by the DJISDKManager.",
            ],
            [
                   "Releases the resources held by the DJISDKManager.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_destroy_inline",
                   "",
            ],
            [
                   "setCallbackRunInUIThread",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_setCallbackRunInUIThread_inline",
                   "Determines whether ansynchronous getter and setter method callbacks  should be invoked in UIThread or BackgroundThread. This method is only  for setters and getters, as push data callbacks (typically state data)  always return in the BackgroundThread.  @param enable A boolean value.",
            ],
            [
                   "Determines whether ansynchronous getter and setter method callbacks  should be invoked in UIThread or BackgroundThread. This method is only  for setters and getters, as push data callbacks (typically state data)  always return in the BackgroundThread.  @param enable A boolean value.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_setCallbackRunInUIThread_inline",
                   "",
            ],
            [
                   "closeAOAConnection",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_closeAoaConnection_inline",
                   "This method is used to close the AOA connection during development and should not be used in the final application. When using AS or Eclipse to build and run the application, the AOA  connection is not properly closed if the application is terminated. As a result, the next time the application is run, the SDK will not  be able to connect to the product without first disconnecting and reconnecting the USB cable. AS and Eclipse can be configured to  invoke this method before compiling the application, closing the link before the application is run, and overcoming this problem.",
            ],
            [
                   "This method is used to close the AOA connection during development and should not be used in the final application. When using AS or Eclipse to build and run the application, the AOA  connection is not properly closed if the application is terminated. As a result, the next time the application is run, the SDK will not  be able to connect to the product without first disconnecting and reconnecting the USB cable. AS and Eclipse can be configured to  invoke this method before compiling the application, closing the link before the application is run, and overcoming this problem.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_closeAoaConnection_inline",
                   "",
            ],
            [
                   "setDisableCountryCodeCheck",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_setDisableCountryCodeCheck_inline",
                   "The SDK will automatically try to determine the country in which the product is operating and decide  the behaviour accordingly. The process of determining in which country the product is flying uses  location information. This method can be used to disable this check, but must be called before `registerAppWithDelegate` to take effect. Influenced features includes:  - Some products (e.g.  Mavic Pro, Inspire 2, Phantom 4 Pro) make use of both 2.4 GHz and 5 GHz spectrums for wireless  communication. While 5 GHz will not necessarily have the same range as 2.4 GHz, it can be useful  if the 2.4 GHz band has a lot of existing interference. However, as some countries do not permit  the use of the 5 GHz spectrum. If country code check is disabled, only 2.4 GHz will be available  as an option.  - `getAppActivationManager` uses country information to  determine whether the user needs to log into their DJI account to activate the application. If  the country code check is disabled, the user will need to log into their DJI account by default.",
            ],
            [
                   "The SDK will automatically try to determine the country in which the product is operating and decide  the behaviour accordingly. The process of determining in which country the product is flying uses  location information. This method can be used to disable this check, but must be called before `registerAppWithDelegate` to take effect. Influenced features includes:  - Some products (e.g.  Mavic Pro, Inspire 2, Phantom 4 Pro) make use of both 2.4 GHz and 5 GHz spectrums for wireless  communication. While 5 GHz will not necessarily have the same range as 2.4 GHz, it can be useful  if the 2.4 GHz band has a lot of existing interference. However, as some countries do not permit  the use of the 5 GHz spectrum. If country code check is disabled, only 2.4 GHz will be available  as an option.  - `getAppActivationManager` uses country information to  determine whether the user needs to log into their DJI account to activate the application. If  the country code check is disabled, the user will need to log into their DJI account by default.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_setDisableCountryCodeCheck_inline",
                   "",
            ],
            [
                   "getAppActivationManager",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_appActivationManager_inline",
                   "Used to check the states related to the App Activation.  @return A instance of `AppActivationManager`.",
            ],
            [
                   "Used to check the states related to the App Activation.  @return A instance of `AppActivationManager`.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_appActivationManager_inline",
                   "",
            ],
            [
                   "getProduct",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_product_inline",
                   "The DJI product which is connected to the mobile device, only available after successful registration of the app.  @return A instance of `BaseProduct`.",
            ],
            [
                   "The DJI product which is connected to the mobile device, only available after successful registration of the app.  @return A instance of `BaseProduct`.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_product_inline",
                   "",
            ],
            [
                   "getBluetoothProductConnector",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_bluetoothConnector_inline",
                   "Used to establish the Bluetooth connection between the mobile device and the DJI product. The Bluetooth connection needs to be established before a connection between the SDK and the DJI product can be made using `startConnectionToProduct`.  @return A `BluetoothProductConnector` instance.",
            ],
            [
                   "Used to establish the Bluetooth connection between the mobile device and the DJI product. The Bluetooth connection needs to be established before a connection between the SDK and the DJI product can be made using `startConnectionToProduct`.  @return A `BluetoothProductConnector` instance.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_bluetoothConnector_inline",
                   "",
            ],
            [
                   "startConnectionToProduct",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_startConnectionToProduct_inline",
                   "Starts a connection between the SDK and the DJI product. This method should be called  after successful registration of the app and once there is a data connection between the mobile device and DJI product. This data connection is either a USB cable connection, a WiFi connection (that needs to be established outside of the SDK) or a Bluetooth connection (that needs to be established with `getBluetoothProductConnector`). If the connection succeeds, `onProductChange` will be called if the connection succeeded. Returns `true` if the connection is started successfully. For products which connect to the mobile device using Bluetooth, `getBluetoothProductConnector` should be used to get a `BluetoothProductConnector` object which can handle Bluetooth device connection.  @return `true` if the connection is started successfully.",
            ],
            [
                   "Starts a connection between the SDK and the DJI product. This method should be called  after successful registration of the app and once there is a data connection between the mobile device and DJI product. This data connection is either a USB cable connection, a WiFi connection (that needs to be established outside of the SDK) or a Bluetooth connection (that needs to be established with `getBluetoothProductConnector`). If the connection succeeds, `onProductChange` will be called if the connection succeeded. Returns `true` if the connection is started successfully. For products which connect to the mobile device using Bluetooth, `getBluetoothProductConnector` should be used to get a `BluetoothProductConnector` object which can handle Bluetooth device connection.  @return `true` if the connection is started successfully.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_startConnectionToProduct_inline",
                   "",
            ],
            [
                   "stopConnectionToProduct",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_stopConnectionToProduct_inline",
                   "Disconnect from the connected DJI product.",
            ],
            [
                   "Disconnect from the connected DJI product.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_stopConnectionToProduct_inline",
                   "",
            ],
            [
                   "setSupportOnlyForBluetoothDevice",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_setSupportOnlyForBluetoothDevice_inline",
                   "If only Bluetooth devices will be connected, then this should be set to `true`.  @param isBluetoothDevice `true` if only Bluetooth devices will be connected.",
            ],
            [
                   "If only Bluetooth devices will be connected, then this should be set to `true`.  @param isBluetoothDevice `true` if only Bluetooth devices will be connected.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_setSupportOnlyForBluetoothDevice_inline",
                   "",
            ],
            [
                   "enableBridgeModeWithBridgeAppIP",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_enterDebugMode_inline",
                   "Enter debug mode with debug IP.  @param bridgeAppIP Debug IP of the DJI Bridge App.",
            ],
            [
                   "Enter debug mode with debug IP.  @param bridgeAppIP Debug IP of the DJI Bridge App.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_enterDebugMode_inline",
                   "",
            ],
            [
                   "archiveLogs",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_archiveLogs_inline",
                   "The DJI Mobile SDK collects logs that are related to flight. These logs can be used to help diagnose the cause  of a product's flight failure at the SDK and mobile application layers. They are predominantly used by a DJI  service facility, who will combine them with the product's flight logs (stored on the product) to better  understand the root cause of a crash and determine whether the incident is covered under warranty. They can  also be used by developers to debug their application. SDK Logs record commands from the application to the SDK, and information from the SDK to the application that are related to flight. Logs are cached to the mobile  device, and will overwrite themselves to limit storage footprint. `archiveLogs` will move the logs to an archive  folder. Logs in the archive, will only be overwritten by newer archives that go beyond the storage limit and not  normal log generation. The storage limit for normal log generation is 400 MB (about 500 minutes of flight). The  storage limit for the archive is an additional 400 MB. The logs have an encrypted and unencrypted portion. The  unencrypted portion can be used by developers to see all commands and information sent to and received from the  SDK by the mobile application that is related to flight. The encrypted portion can only be used by a DJI service  facility as it includes proprietary hardware protocols and is used to tie the SDK logs and product flight logs  together. Logs can be transferred to the DJI service facility either by manually downloading from the mobile  device using iTunes, or the application can send archived logs to a DJI endpoint using `uploadArchivedLogs`.  Developers should be careful to upload logs directly when the user is on a cellular connection as the archive  can be up to 400 MB. Return path of archived logs, nil if a problem occurred.  @param callback The execution callback.  @return A String instance for the archive logs.",
            ],
            [
                   "The DJI Mobile SDK collects logs that are related to flight. These logs can be used to help diagnose the cause  of a product's flight failure at the SDK and mobile application layers. They are predominantly used by a DJI  service facility, who will combine them with the product's flight logs (stored on the product) to better  understand the root cause of a crash and determine whether the incident is covered under warranty. They can  also be used by developers to debug their application. SDK Logs record commands from the application to the SDK, and information from the SDK to the application that are related to flight. Logs are cached to the mobile  device, and will overwrite themselves to limit storage footprint. `archiveLogs` will move the logs to an archive  folder. Logs in the archive, will only be overwritten by newer archives that go beyond the storage limit and not  normal log generation. The storage limit for normal log generation is 400 MB (about 500 minutes of flight). The  storage limit for the archive is an additional 400 MB. The logs have an encrypted and unencrypted portion. The  unencrypted portion can be used by developers to see all commands and information sent to and received from the  SDK by the mobile application that is related to flight. The encrypted portion can only be used by a DJI service  facility as it includes proprietary hardware protocols and is used to tie the SDK logs and product flight logs  together. Logs can be transferred to the DJI service facility either by manually downloading from the mobile  device using iTunes, or the application can send archived logs to a DJI endpoint using `uploadArchivedLogs`.  Developers should be careful to upload logs directly when the user is on a cellular connection as the archive  can be up to 400 MB. Return path of archived logs, nil if a problem occurred.  @param callback The execution callback.  @return A String instance for the archive logs.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_archiveLogs_inline",
                   "",
            ],
            [
                   "uploadArchivedLogs",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_uploadArchivedLogs_inline",
                   "Upload the archive to DJI. The archive will not be deleted when calling this method.  @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Upload the archive to DJI. The archive will not be deleted when calling this method.  @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_uploadArchivedLogs_inline",
                   "",
            ],
            [
                   "getFlyZoneManager",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_flyZoneManager_inline",
                   "Provide access to `FlyZoneManager` used to manage DJI's GEO system for no fly zones.  @return An instance of `FlyZoneManager`.",
            ],
            [
                   "Provide access to `FlyZoneManager` used to manage DJI's GEO system for no fly zones.  @return An instance of `FlyZoneManager`.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_flyZoneManager_inline",
                   "",
            ],
            [
                   "getKeyManager",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_keyManager_inline",
                   "Provide access to the SDK Key interface.  @return An instance of `KeyManager`.",
            ],
            [
                   "Provide access to the SDK Key interface.  @return An instance of `KeyManager`.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_keyManager_inline",
                   "",
            ],
            [
                   "getMissionControl",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_missionControl_inline",
                   "Provide access to `MissionControl` used to manage missions.  @return An instance of `MissionControl`.",
            ],
            [
                   "Provide access to `MissionControl` used to manage missions.  @return An instance of `MissionControl`.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_missionControl_inline",
                   "",
            ],
            [
                   "SDKManagerCallback",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_DJISDKManagerCallbackInterface_inline",
                   "Callback interface for SDK manager.",
            ],
            [
                   "Callback interface for SDK manager.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_DJISDKManagerCallbackInterface_inline",
                   "",
            ],
            [
                   "BluetoothProductConnector",
                   2,
                   "/Components/SDKManager/DJIBluetoothProductConnector.html",
                   "",
                   "Some DJI products can be controlled using the Mobile SDK over a Bluetooth wireless  connection. This class contains methods to search for, connect to, and disconnect from such products.",
            ],
            [
                   "Some DJI products can be controlled using the Mobile SDK over a Bluetooth wireless  connection. This class contains methods to search for, connect to, and disconnect from such products.",
                   1,
                   "/Components/SDKManager/DJIBluetoothProductConnector.html",
                   "",
                   "",
            ],
            [
                   "onRegister",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_didRegisterAppWithError_inline",
                   "Callback method after the application attempts to register.  @param error `REGISTRATION_SUCCESS` if registration is successful.",
            ],
            [
                   "Callback method after the application attempts to register.  @param error `REGISTRATION_SUCCESS` if registration is successful.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_didRegisterAppWithError_inline",
                   "",
            ],
            [
                   "onProductChange",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_productDidChangeFromTo_inline",
                   "Called when the connected product changes, or connectivity changes.  @param oldProduct Old product object. `null` if starting up. @param newProduct New product object. `null` if the USB link or WiFi link between the product and mobile device is disconnected.",
            ],
            [
                   "Called when the connected product changes, or connectivity changes.  @param oldProduct Old product object. `null` if starting up. @param newProduct New product object. `null` if the USB link or WiFi link between the product and mobile device is disconnected.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "#DJISDKManager_productDidChangeFromTo_inline",
                   "",
            ],
            [
                   "DJISDKManager",
                   2,
                   "/Components/SDKManager/DJISDKManager.html",
                   "",
                   "This class is the entry point for using the SDK with a DJI product.  Most importantly, this class is used to register the SDK, and to connect  to and access the product. This class also provides access to important feature managers (such as `getKeyManager`), debugging tools, and threading control of asynchronous callbacks. SDK Registration using `registerApp` must be successful before the SDK can be used with a DJI product.",
            ],
            [
                   "This class is the entry point for using the SDK with a DJI product.  Most importantly, this class is used to register the SDK, and to connect  to and access the product. This class also provides access to important feature managers (such as `getKeyManager`), debugging tools, and threading control of asynchronous callbacks. SDK Registration using `registerApp` must be successful before the SDK can be used with a DJI product.",
                   1,
                   "/Components/SDKManager/DJISDKManager.html",
                   "",
                   "",
            ],
            [
                   "KeyManager",
                   2,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "",
                   "`KeyManager` provides access to the keyed interface using  `DJIKey` and corresponding subclass objects. `KeyManager` is accessed from `getKeyManager` in `DJISDKManager`.",
            ],
            [
                   "`KeyManager` provides access to the keyed interface using  `DJIKey` and corresponding subclass objects. `KeyManager` is accessed from `getKeyManager` in `DJISDKManager`.",
                   1,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "",
                   "",
            ],
            [
                   "FlyZoneManager",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "",
                   "Fly Zone Manager gives information about nearby fly zones, and APIs to unlock zones that can be unlocked. Depending on location, there are three types of fly zones possible:  - NFZ: Cylinder or truncated cone volume where flight is restricted  - Poly: Fly zone that consists of one or more sub fly zones that are cylinders or complex volumes with different height limitations. A height limitation of 0 means flight is completely restricted. This is used by Mavic, Phantom 4 Pro, Inspire 2 and Phantom 4  - GEO: Cylinder volume with four levels of restriction:     - Warning Zones - no restriction     - Enhanced warning zones - Flight restricted, can be unlocked for         flight when the user logs into their DJI account     - Authorization zones - Flight restricted, can be unlocked for         flight when the user logs into their DJI account and the account         has been authorized to unlock authorization zones.     - Restricted zones - Flight restricted  On the Phantom 3, Inspire 1, M100, M600, A3/N3 series of products there can also be  a 4km buffer around an NFZ fly zone where flight height is limited to 120m. If the  aircraft is in such a buffer area, `FlyZoneState` will be `IN_WARNING_ZONE_WITH_HEIGHT_LIMITATION`.",
            ],
            [
                   "Fly Zone Manager gives information about nearby fly zones, and APIs to unlock zones that can be unlocked. Depending on location, there are three types of fly zones possible:  - NFZ: Cylinder or truncated cone volume where flight is restricted  - Poly: Fly zone that consists of one or more sub fly zones that are cylinders or complex volumes with different height limitations. A height limitation of 0 means flight is completely restricted. This is used by Mavic, Phantom 4 Pro, Inspire 2 and Phantom 4  - GEO: Cylinder volume with four levels of restriction:     - Warning Zones - no restriction     - Enhanced warning zones - Flight restricted, can be unlocked for         flight when the user logs into their DJI account     - Authorization zones - Flight restricted, can be unlocked for         flight when the user logs into their DJI account and the account         has been authorized to unlock authorization zones.     - Restricted zones - Flight restricted  On the Phantom 3, Inspire 1, M100, M600, A3/N3 series of products there can also be  a 4km buffer around an NFZ fly zone where flight height is limited to 120m. If the  aircraft is in such a buffer area, `FlyZoneState` will be `IN_WARNING_ZONE_WITH_HEIGHT_LIMITATION`.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "",
                   "",
            ],
            [
                   "AppActivationManager",
                   2,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "",
                   "DJI aircraft firmware require mobile applications that control DJI aircraft to be activated  with the user's DJI account, if that application is being used in China. This will ensure  operators use the correct set of geospatial information and flight functions for their  aircraft, as determined by their geographical location and user profile.  A summary  of the activation system is:  - Users in China are required to activate their application  by logging into their DJI account at least once every three months within the application  - Activation will be persistent in the application until the user logs out  - A data  connection will be required to log into a DJI account  - Outside of China, the SDK will  automatically activate the application without requiring the user to log in  - Additionally, users in china are required to bind their aircraft to their user account  in DJI Go. This is required only once.  If an application is not activated, the aircraft  not bound (if required), or a legacy version of the SDK (<4.1) is being used, all camera live  streams will be disabled, and flight will be limited to a cylinder of 100m diameter and 30m height to ensure the aircraft stays within line of sight.  This class is used to check the  state of application activation and aircraft binding.",
            ],
            [
                   "DJI aircraft firmware require mobile applications that control DJI aircraft to be activated  with the user's DJI account, if that application is being used in China. This will ensure  operators use the correct set of geospatial information and flight functions for their  aircraft, as determined by their geographical location and user profile.  A summary  of the activation system is:  - Users in China are required to activate their application  by logging into their DJI account at least once every three months within the application  - Activation will be persistent in the application until the user logs out  - A data  connection will be required to log into a DJI account  - Outside of China, the SDK will  automatically activate the application without requiring the user to log in  - Additionally, users in china are required to bind their aircraft to their user account  in DJI Go. This is required only once.  If an application is not activated, the aircraft  not bound (if required), or a legacy version of the SDK (<4.1) is being used, all camera live  streams will be disabled, and flight will be limited to a cylinder of 100m diameter and 30m height to ensure the aircraft stays within line of sight.  This class is used to check the  state of application activation and aircraft binding.",
                   1,
                   "/Components/AppActivationManager/DJIAppActivationManager.html",
                   "",
                   "",
            ],
            [
                   "UserAccountManager",
                   2,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "",
                   "Class used to manage the DJI account.",
            ],
            [
                   "Class used to manage the DJI account.",
                   1,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "",
                   "",
            ],
            [
                   "BaseProduct",
                   2,
                   "/BaseClasses/DJIBaseProduct.html",
                   "",
                   "Abstract class for all DJI Products. `Aircraft` and `HandHeld` objects  are subclasses of `BaseProduct` and can be accessed from `getProduct` in `DJISDKManager`. Additional components can be found in `Aircraft` and `HandHeld` that are unique to those products only.",
            ],
            [
                   "Abstract class for all DJI Products. `Aircraft` and `HandHeld` objects  are subclasses of `BaseProduct` and can be accessed from `getProduct` in `DJISDKManager`. Additional components can be found in `Aircraft` and `HandHeld` that are unique to those products only.",
                   1,
                   "/BaseClasses/DJIBaseProduct.html",
                   "",
                   "",
            ],
            [
                   "BaseComponent",
                   2,
                   "/Components/BaseComponent/DJIBaseComponent.html",
                   "",
                   "Abstract class for components in a DJI Product. A component can be a camera, gimbal, remote controller, etc.  A DJI product consists of several components. All components of a product are subclasses of `BaseComponent` and can be accessed directly from the product objects (`Aircraft` or `HandHeld`).",
            ],
            [
                   "Abstract class for components in a DJI Product. A component can be a camera, gimbal, remote controller, etc.  A DJI product consists of several components. All components of a product are subclasses of `BaseComponent` and can be accessed directly from the product objects (`Aircraft` or `HandHeld`).",
                   1,
                   "/Components/BaseComponent/DJIBaseComponent.html",
                   "",
                   "",
            ],
            [
                   "Aircraft",
                   2,
                   "/Products/Aircraft/DJIAircraft.html",
                   "",
                   "Aircraft product class, which includes basic product information and access to all components (such as flight controller, battery etc.). This object is accessed  from `getProduct` in `DJISDKManager`.",
            ],
            [
                   "Aircraft product class, which includes basic product information and access to all components (such as flight controller, battery etc.). This object is accessed  from `getProduct` in `DJISDKManager`.",
                   1,
                   "/Products/Aircraft/DJIAircraft.html",
                   "",
                   "",
            ],
            [
                   "HandHeld",
                   2,
                   "/Products/Handheld/DJIHandheld.html",
                   "",
                   "Handheld product class, which includes basic product information and access to all components (such as camera, battery etc.). This object is accessed  from `getProduct` in `DJISDKManager`.",
            ],
            [
                   "Handheld product class, which includes basic product information and access to all components (such as camera, battery etc.). This object is accessed  from `getProduct` in `DJISDKManager`.",
                   1,
                   "/Products/Handheld/DJIHandheld.html",
                   "",
                   "",
            ],
            [
                   "FlightController",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "",
                   "This class contains components of the flight controller and provides methods to send different commands to the flight controller. This object is available from the `Aircraft` object which is a subclass of `BaseProduct`.",
            ],
            [
                   "This class contains components of the flight controller and provides methods to send different commands to the flight controller. This object is available from the `Aircraft` object which is a subclass of `BaseProduct`.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "",
                   "",
            ],
            [
                   "Battery",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "",
                   "This class manages information and real-time status of the connected product's batteries. This object is available from the `Aircraft` or `HandHeld` object which is a subclass of `BaseProduct`.",
            ],
            [
                   "This class manages information and real-time status of the connected product's batteries. This object is available from the `Aircraft` or `HandHeld` object which is a subclass of `BaseProduct`.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "",
                   "",
            ],
            [
                   "Camera",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "",
                   "This class contains the media manager and playback manager, which manage the camera's media content. It provides  methods to change camera settings and perform camera actions. This object is available from the `Aircraft` or `HandHeld` object, which is a subclass of `BaseProduct`.",
            ],
            [
                   "This class contains the media manager and playback manager, which manage the camera's media content. It provides  methods to change camera settings and perform camera actions. This object is available from the `Aircraft` or `HandHeld` object, which is a subclass of `BaseProduct`.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "",
                   "",
            ],
            [
                   "Gimbal",
                   2,
                   "/Components/Gimbal/DJIGimbal.html",
                   "",
                   "This class provides multiple methods to control the gimbal. These include setting the gimbal work mode,  rotating the gimbal with angle, starting the gimbal auto calibration, etc. This object is available from the `Aircraft` or `HandHeld` object which is a subclass of `BaseProduct`.",
            ],
            [
                   "This class provides multiple methods to control the gimbal. These include setting the gimbal work mode,  rotating the gimbal with angle, starting the gimbal auto calibration, etc. This object is available from the `Aircraft` or `HandHeld` object which is a subclass of `BaseProduct`.",
                   1,
                   "/Components/Gimbal/DJIGimbal.html",
                   "",
                   "",
            ],
            [
                   "AirLink",
                   2,
                   "/Components/AirLink/DJIAirLink.html",
                   "",
                   "This class contains information about the wireless link between the aircraft and the remote controller, the aircraft and the mobile device or the handheld product and the mobile device. To determine whether a particular wireless link is supported, check the isSupported flag. This object is available from the `Aircraft` or `HandHeld` object which is a subclass of `BaseProduct`.",
            ],
            [
                   "This class contains information about the wireless link between the aircraft and the remote controller, the aircraft and the mobile device or the handheld product and the mobile device. To determine whether a particular wireless link is supported, check the isSupported flag. This object is available from the `Aircraft` or `HandHeld` object which is a subclass of `BaseProduct`.",
                   1,
                   "/Components/AirLink/DJIAirLink.html",
                   "",
                   "",
            ],
            [
                   "RemoteController",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "",
                   "This class represents the remote controller of the aircraft. It provides methods to change the settings of the  physical remote controller. For some products (e.g. Inspire 1 and Matrice 100), the class provides methods to  manager the slave/master mode of the remote controllers. A remote controller is a device that can have a GPS,  battery, radio, buttons, sticks, wheels, and output ports for video. The mobile device is connected to the  remote controller, which is always sending out information about what everything is doing. The normal remote controller is called the master. A slave wirelessly connects to the master remote controller at 5 GHz, and  the aircraft can also download information to the slave. The slave can send gimbal control commands to the  master. This configuration allows one person to fly the aircraft while another person controls the gimbal. This object is available from the `Aircraft` subclass off `BaseProduct`.",
            ],
            [
                   "This class represents the remote controller of the aircraft. It provides methods to change the settings of the  physical remote controller. For some products (e.g. Inspire 1 and Matrice 100), the class provides methods to  manager the slave/master mode of the remote controllers. A remote controller is a device that can have a GPS,  battery, radio, buttons, sticks, wheels, and output ports for video. The mobile device is connected to the  remote controller, which is always sending out information about what everything is doing. The normal remote controller is called the master. A slave wirelessly connects to the master remote controller at 5 GHz, and  the aircraft can also download information to the slave. The slave can send gimbal control commands to the  master. This configuration allows one person to fly the aircraft while another person controls the gimbal. This object is available from the `Aircraft` subclass off `BaseProduct`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "",
                   "",
            ],
            [
                   "HandheldController",
                   2,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "",
                   "This class contains interfaces related to the hand controller of a  handheld device (such as Osmo). This object is available from the  `HandHeld` subclass off `BaseProduct`.",
            ],
            [
                   "This class contains interfaces related to the hand controller of a  handheld device (such as Osmo). This object is available from the  `HandHeld` subclass off `BaseProduct`.",
                   1,
                   "/Components/HandheldController/DJIHandheldController.html",
                   "",
                   "",
            ],
            [
                   "MobileRemoteController",
                   2,
                   "/Components/MobileRemoteController/DJIMobileRemoteController.html",
                   "",
                   "A simulated remote controller on the mobile device to control the aircraft when the physical remote controller  is absent. The mobile remote controller only supports Mode 2 control style and flight mode P. It is supported  by Mavic Pro using WiFi. This object is available from the `Aircraft` subclass off `BaseProduct`.",
            ],
            [
                   "A simulated remote controller on the mobile device to control the aircraft when the physical remote controller  is absent. The mobile remote controller only supports Mode 2 control style and flight mode P. It is supported  by Mavic Pro using WiFi. This object is available from the `Aircraft` subclass off `BaseProduct`.",
                   1,
                   "/Components/MobileRemoteController/DJIMobileRemoteController.html",
                   "",
                   "",
            ],
            [
                   "MissionControl",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "",
                   "Mission Control handles execution of missions. Either single missions can be run through dedicated mission operators, or a series of missions and actions can be run serially using the Timeline.  Mission operators look after execution of a single mission. A mission operator has APIs to control the mission (e.g. start, stop, pause etc.) and provides mission state through listeners.  Mission Control's Timeline is made up of a series of Timeline elements which can be Waypoint missions,  Hotpoint missions (through the Hotpoint action `HotpointAction`) or objects that follow the  `TimelineElement` protocol. `MissionAction` is a Timeline element, with  `AircraftYawAction` and `GimbalAttitudeAction` subclasses being examples of specific actions.  If a mission is being executed in a Timeline, the mission operator can still be used to get state  information of the mission as well as change mission execution parameters.  Timeline elements can also have triggers (`Trigger`) associated with them. Triggers are separate objects that are run in parallel with a Timeline element. The trigger object is used to initiate actions if a set of criteria are met. For example, a trigger could be used to monitor battery level, and then initiate an action once a threshold is passed.  > Mission Control is accessed from `getMissionControl` in `DJISDKManager`.",
            ],
            [
                   "Mission Control handles execution of missions. Either single missions can be run through dedicated mission operators, or a series of missions and actions can be run serially using the Timeline.  Mission operators look after execution of a single mission. A mission operator has APIs to control the mission (e.g. start, stop, pause etc.) and provides mission state through listeners.  Mission Control's Timeline is made up of a series of Timeline elements which can be Waypoint missions,  Hotpoint missions (through the Hotpoint action `HotpointAction`) or objects that follow the  `TimelineElement` protocol. `MissionAction` is a Timeline element, with  `AircraftYawAction` and `GimbalAttitudeAction` subclasses being examples of specific actions.  If a mission is being executed in a Timeline, the mission operator can still be used to get state  information of the mission as well as change mission execution parameters.  Timeline elements can also have triggers (`Trigger`) associated with them. Triggers are separate objects that are run in parallel with a Timeline element. The trigger object is used to initiate actions if a set of criteria are met. For example, a trigger could be used to monitor battery level, and then initiate an action once a threshold is passed.  > Mission Control is accessed from `getMissionControl` in `DJISDKManager`.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "",
                   "",
            ],
            [
                   "MissionAction",
                   2,
                   "/Components/Missions/DJIMissionAction.html",
                   "",
                   "Base class for all Mission Control Timeline based actions.",
            ],
            [
                   "Base class for all Mission Control Timeline based actions.",
                   1,
                   "/Components/Missions/DJIMissionAction.html",
                   "",
                   "",
            ],
            [
                   "Trigger",
                   2,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "",
                   "Mission Triggers can be used to trigger an action during the execution of a Timeline element if a set of criteria is met. The subclass of `Trigger` should implement the logic for collecting and judging the criteria, and then executing the action. Mission Triggers are  used in the Timeline element `TimelineElement`.  Trigger actions can be listened to, so when subclassing this class, `notifyListenersOfEvent` should be used to notify listeners of trigger events.  See Also: DJIMissionControl",
            ],
            [
                   "Mission Triggers can be used to trigger an action during the execution of a Timeline element if a set of criteria is met. The subclass of `Trigger` should implement the logic for collecting and judging the criteria, and then executing the action. Mission Triggers are  used in the Timeline element `TimelineElement`.  Trigger actions can be listened to, so when subclassing this class, `notifyListenersOfEvent` should be used to notify listeners of trigger events.  See Also: DJIMissionControl",
                   1,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "",
                   "",
            ],
            [
                   "WaypointMissionOperator",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "",
                   "The waypoint operator is the only object that controls, runs and monitors Waypoint Missions. It can be accessed from `MissionControl`.",
            ],
            [
                   "The waypoint operator is the only object that controls, runs and monitors Waypoint Missions. It can be accessed from `MissionControl`.",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "",
                   "",
            ],
            [
                   "FollowMeMissionOperator",
                   2,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "",
                   "The follow me mission operator is the only object that controls, runs and monitors FollowMe Missions. It can be accessed from `MissionControl`.",
            ],
            [
                   "The follow me mission operator is the only object that controls, runs and monitors FollowMe Missions. It can be accessed from `MissionControl`.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "",
                   "",
            ],
            [
                   "PanoramaMissionOperator",
                   2,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "",
                   "The panorama mission operator is the only object that controls, runs and monitors Panorama Missions. It can be accessed from `MissionControl`.",
            ],
            [
                   "The panorama mission operator is the only object that controls, runs and monitors Panorama Missions. It can be accessed from `MissionControl`.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "",
                   "",
            ],
            [
                   "HotpointMissionOperator",
                   2,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "",
                   "The hotpoint mission operator is the only object that controls, runs and monitors Hotpoint Missions. It can be accessed from `MissionControl`.",
            ],
            [
                   "The hotpoint mission operator is the only object that controls, runs and monitors Hotpoint Missions. It can be accessed from `MissionControl`.",
                   1,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "",
                   "",
            ],
            [
                   "TapFlyMissionOperator",
                   2,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "",
                   "The operator for TapFly mission. It is used to execute a TapFly mission.",
            ],
            [
                   "The operator for TapFly mission. It is used to execute a TapFly mission.",
                   1,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "",
                   "",
            ],
            [
                   "ActiveTrackOperator",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "",
                   "The active track mission operator is the only object that controls, runs and monitors ActiveTrack Missions. It can be accessed from `MissionControl`.  An ActiveTrack Mission allows an aircraft to track a moving subject using the vision system and without a GPS tracker on the subject. To use an ActiveTrack mission:  - Prepare a mission with the rectangle that best represents the  target to track  - Start the mission to initiate tracking of the object and  begin the state updates (DJIMissionProgressStatus)  - At this point, the  aircraft will track the target while hovering in place.  - Give confirmation that the tracked target is correct  with `acceptConfirmation` and the aircraft will begin flying  relative to the target.  - If the tracking algorithm looses sufficient  confidence in tracking the target, then the aircraft will stop flying relative  to the object and either notify the user (through execution state) that the  target is lost or it needs another confirmation that the target is correct.  - If the mission is paused, the aircraft will hover in place, but continue tracking the target by adjusting gimbal pitch and aircraft yaw.  - If mission is resumed, confirmation of tracking rectangle will need to be sent through to  start flying relative to target.  - The mission can be canceled with `stopTracking`  at any time.  - `stopTracking` should also be used to reject tracking confirmation if the camera is tracking the wrong target. After stopping the mission, the mission needs to be recreated with a new rectangle and loaded into the operator.  - The main camera is used to track the target, so gimbal cannot be adjusted during an  ActiveTrack mission.  - During the mission  the aircraft can be manually flown with pitch, roll and throttle. Yaw and gimbal are  automatically controlled to continue tracking the target.  - If the mission is  executing, and after confirmation of the tracking rectangle has been sent, the  aircraft can be manually controlled horizontally similar to a  `HOME_LOCK` where the home is the tracked target. If aircraft  is manually controlled upward, the aircraft will lift and retreat, and if it is controlled downward, it will go down and get closer to the target.",
            ],
            [
                   "The active track mission operator is the only object that controls, runs and monitors ActiveTrack Missions. It can be accessed from `MissionControl`.  An ActiveTrack Mission allows an aircraft to track a moving subject using the vision system and without a GPS tracker on the subject. To use an ActiveTrack mission:  - Prepare a mission with the rectangle that best represents the  target to track  - Start the mission to initiate tracking of the object and  begin the state updates (DJIMissionProgressStatus)  - At this point, the  aircraft will track the target while hovering in place.  - Give confirmation that the tracked target is correct  with `acceptConfirmation` and the aircraft will begin flying  relative to the target.  - If the tracking algorithm looses sufficient  confidence in tracking the target, then the aircraft will stop flying relative  to the object and either notify the user (through execution state) that the  target is lost or it needs another confirmation that the target is correct.  - If the mission is paused, the aircraft will hover in place, but continue tracking the target by adjusting gimbal pitch and aircraft yaw.  - If mission is resumed, confirmation of tracking rectangle will need to be sent through to  start flying relative to target.  - The mission can be canceled with `stopTracking`  at any time.  - `stopTracking` should also be used to reject tracking confirmation if the camera is tracking the wrong target. After stopping the mission, the mission needs to be recreated with a new rectangle and loaded into the operator.  - The main camera is used to track the target, so gimbal cannot be adjusted during an  ActiveTrack mission.  - During the mission  the aircraft can be manually flown with pitch, roll and throttle. Yaw and gimbal are  automatically controlled to continue tracking the target.  - If the mission is  executing, and after confirmation of the tracking rectangle has been sent, the  aircraft can be manually controlled horizontally similar to a  `HOME_LOCK` where the home is the tracked target. If aircraft  is manually controlled upward, the aircraft will lift and retreat, and if it is controlled downward, it will go down and get closer to the target.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "",
                   "",
            ],
            [
                   "CommonCallbacks",
                   2,
                   "/Utils/DJICommonCallbacks.html",
                   "",
                   "Interfaces of common callbacks used to return results of  asynchronous operations.",
            ],
            [
                   "Interfaces of common callbacks used to return results of  asynchronous operations.",
                   1,
                   "/Utils/DJICommonCallbacks.html",
                   "",
                   "",
            ],
            [
                   "DJIParamCapability",
                   2,
                   "/Components/ParamCapability/DJIParamCapability.html",
                   "",
                   "Represents the capability of a parameter of a component or product. This class can be sub-classed to include  additional information on the parameter. `DJIParamMinMaxCapability` includes the maximum  and minimum possible values of the parameter.",
            ],
            [
                   "Represents the capability of a parameter of a component or product. This class can be sub-classed to include  additional information on the parameter. `DJIParamMinMaxCapability` includes the maximum  and minimum possible values of the parameter.",
                   1,
                   "/Components/ParamCapability/DJIParamCapability.html",
                   "",
                   "",
            ],
            [
                   "DJIError",
                   2,
                   "/Components/SDKError/DJIError.html",
                   "",
                   "Class that handles all errors that are not handled by individual components.",
            ],
            [
                   "Class that handles all errors that are not handled by individual components.",
                   1,
                   "/Components/SDKError/DJIError.html",
                   "",
                   "",
            ],
            [
                   "DJIDiagnostics",
                   2,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "",
                   "Product Diagnostics.",
            ],
            [
                   "Product Diagnostics.",
                   1,
                   "/Components/Diagnostics/DJIDiagnostics.html",
                   "",
                   "",
            ],
            [
                   "DJICodecManager",
                   2,
                   "/Components/CodecManager/DJICodecManager.html",
                   "",
                   "Class that handles encoding and decoding of media.",
            ],
            [
                   "Class that handles encoding and decoding of media.",
                   1,
                   "/Components/CodecManager/DJICodecManager.html",
                   "",
                   "",
            ],
            [
                   "Stick",
                   2,
                   "/Components/Stick/DJIStick.html",
                   "#DJIStick_constructor_inline",
                   "Constructor of the stick object.  @param horizontalPosition stick's horizontal position value, the value it's in the range of [-660, 660]. @param verticalPosition stick's vertical position value, the value it's in the range of [-660, 660].",
            ],
            [
                   "Constructor of the stick object.  @param horizontalPosition stick's horizontal position value, the value it's in the range of [-660, 660]. @param verticalPosition stick's vertical position value, the value it's in the range of [-660, 660].",
                   1,
                   "/Components/Stick/DJIStick.html",
                   "#DJIStick_constructor_inline",
                   "",
            ],
            [
                   "getHorizontalPosition",
                   2,
                   "/Components/Stick/DJIStick.html",
                   "#DJIStick_getHorizontalPosition_inline",
                   "Get the stick's horizontal position value, the value it's in the range of [-660, 660].  @return An int value.",
            ],
            [
                   "Get the stick's horizontal position value, the value it's in the range of [-660, 660].  @return An int value.",
                   1,
                   "/Components/Stick/DJIStick.html",
                   "#DJIStick_getHorizontalPosition_inline",
                   "",
            ],
            [
                   "getVerticalPosition",
                   2,
                   "/Components/Stick/DJIStick.html",
                   "#DJIStick_getVerticalPosition_inline",
                   "Get the stick's vertical position value, the value it's in the range of [-660, 660].  @return An int value.",
            ],
            [
                   "Get the stick's vertical position value, the value it's in the range of [-660, 660].  @return An int value.",
                   1,
                   "/Components/Stick/DJIStick.html",
                   "#DJIStick_getVerticalPosition_inline",
                   "",
            ],
            [
                   "getLoggedInDJIUserAccountName",
                   2,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_loggedInDJIUserAccountName_inline",
                   "The name of the currently logged in user account.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "The name of the currently logged in user account.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_loggedInDJIUserAccountName_inline",
                   "",
            ],
            [
                   "getUserAccountState",
                   2,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_getUserAccountState_inline",
                   "Gets the DJI user account state.  @return An enum value of `UserAccountState`.",
            ],
            [
                   "Gets the DJI user account state.  @return An enum value of `UserAccountState`.",
                   1,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_getUserAccountState_inline",
                   "",
            ],
            [
                   "logIntoDJIUserAccount",
                   2,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_logIntoDJIUserAccountWithAuthorizationRequired_inline",
                   "After invoking this method, a dialog redirecting users to log into their DJI account  will be shown. For users outside of China, authorization is required to unlock  authorization zones. After the login process, if `authorizationRequired` is `true`,  and the user is currently out of China and the account has not been authorized to  unlock authorization zones, the dialog will then redirect users to authorize their account.  @param context The android activity's or view's context. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "After invoking this method, a dialog redirecting users to log into their DJI account  will be shown. For users outside of China, authorization is required to unlock  authorization zones. After the login process, if `authorizationRequired` is `true`,  and the user is currently out of China and the account has not been authorized to  unlock authorization zones, the dialog will then redirect users to authorize their account.  @param context The android activity's or view's context. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_logIntoDJIUserAccountWithAuthorizationRequired_inline",
                   "",
            ],
            [
                   "logoutOfDJIUserAccount",
                   2,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_logOutOfDJIUserAccount_inline",
                   "Logs out the DJI user that is logged in.  @param callback The `completion callback` with the returned execution result.",
            ],
            [
                   "Logs out the DJI user that is logged in.  @param callback The `completion callback` with the returned execution result.",
                   1,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_logOutOfDJIUserAccount_inline",
                   "",
            ],
            [
                   "UserAccountState",
                   2,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_DJIUserAccountState_inline",
                   "User account status. Users need to be logged in.",
            ],
            [
                   "User account status. Users need to be logged in.",
                   1,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_DJIUserAccountState_inline",
                   "",
            ],
            [
                   "NOT_LOGGED_IN",
                   2,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_DJIUserAccountState_NotLoggedIn_inline",
                   "User is not logged in. User needs to be logged in to retrieve currently unlocked,  and unlock authorization zones.",
            ],
            [
                   "User is not logged in. User needs to be logged in to retrieve currently unlocked,  and unlock authorization zones.",
                   1,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_DJIUserAccountState_NotLoggedIn_inline",
                   "",
            ],
            [
                   "NOT_AUTHORIZED",
                   2,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_DJIUserAccountState_NotAuthorized_inline",
                   "User is logged in but has not been authorized to unlock authorization zones.",
            ],
            [
                   "User is logged in but has not been authorized to unlock authorization zones.",
                   1,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_DJIUserAccountState_NotAuthorized_inline",
                   "",
            ],
            [
                   "AUTHORIZED",
                   2,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_DJIUserAccountState_Authorized_inline",
                   "User is logged in and has been authorized to unlock authorization zones.",
            ],
            [
                   "User is logged in and has been authorized to unlock authorization zones.",
                   1,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_DJIUserAccountState_Authorized_inline",
                   "",
            ],
            [
                   "TOKEN_OUT_OF_DATE",
                   2,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_DJIUserAccountState_TokenOutOfDate_inline",
                   "The token of the user account is out of date.",
            ],
            [
                   "The token of the user account is out of date.",
                   1,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_DJIUserAccountState_TokenOutOfDate_inline",
                   "",
            ],
            [
                   "INVALID_TOKEN",
                   2,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_DJIUserAccountState_InvalidToken_inline",
                   "The token of the signed in account is invalid.",
            ],
            [
                   "The token of the signed in account is invalid.",
                   1,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_DJIUserAccountState_InvalidToken_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_DJIUserAccountState_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/UserAccountManager/DJIUserAccountManager.html",
                   "#DJIUserAccountManager_DJIUserAccountState_Unknown_inline",
                   "",
            ],
            [
                   "getInstance",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_getInstance_inline",
                   "The instance of `VideoFeeder`.  @return An object of `VideoFeeder`.",
            ],
            [
                   "The instance of `VideoFeeder`.  @return An object of `VideoFeeder`.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_getInstance_inline",
                   "",
            ],
            [
                   "addPhysicalSourceListener",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_addPhysicalSourceListener_inline",
                   "Add physical source listener.  @param listener An interface of `PhysicalSourceListener`.",
            ],
            [
                   "Add physical source listener.  @param listener An interface of `PhysicalSourceListener`.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_addPhysicalSourceListener_inline",
                   "",
            ],
            [
                   "removePhysicalSourceListener",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_removePhysicalSourceListener_inline",
                   "Remove physical source listener.  @param listener An interface of `PhysicalSourceListener`.",
            ],
            [
                   "Remove physical source listener.  @param listener An interface of `PhysicalSourceListener`.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_removePhysicalSourceListener_inline",
                   "",
            ],
            [
                   "getPrimaryVideoFeed",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_primaryVideoFeed_inline",
                   "The primary video feed.  The possible physical sources for the primary video feed include:  - `MAIN_CAM`  -  `LB`  -  `HDMI`  -  `LEFT_CAM`  -  `RIGHT_CAM` For M210 and M210 RTK, the  physical sources are controlled by the bandwidth allocation between the port (left) and starboard  (right) main cameras (`setBandwidthAllocationForLeftCamera`):  - When bandwidth  is 100% on the left camera, the primary source is  `LEFT_CAM` and the secondary source is  `FPV_CAM`.  - When bandwidth is 0%  on the left camera, the primary source is `RIGHT_CAM` and the secondary source is `FPV_CAM`.  - When  bandwidth is neither 0% nor 100% on the left camera, the primary source is  `LEFT_CAM` and the secondary source is  `RIGHT_CAM`.  @return An object of `VideoFeed`.",
            ],
            [
                   "The primary video feed.  The possible physical sources for the primary video feed include:  - `MAIN_CAM`  -  `LB`  -  `HDMI`  -  `LEFT_CAM`  -  `RIGHT_CAM` For M210 and M210 RTK, the  physical sources are controlled by the bandwidth allocation between the port (left) and starboard  (right) main cameras (`setBandwidthAllocationForLeftCamera`):  - When bandwidth  is 100% on the left camera, the primary source is  `LEFT_CAM` and the secondary source is  `FPV_CAM`.  - When bandwidth is 0%  on the left camera, the primary source is `RIGHT_CAM` and the secondary source is `FPV_CAM`.  - When  bandwidth is neither 0% nor 100% on the left camera, the primary source is  `LEFT_CAM` and the secondary source is  `RIGHT_CAM`.  @return An object of `VideoFeed`.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_primaryVideoFeed_inline",
                   "",
            ],
            [
                   "getSecondaryVideoFeed",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_secondaryVideoFeed_inline",
                   "The secondary video feed.  The possible physical sources for the secondary video feed include:  - `FPV_CAM`  -  `EXT`  -  `AV`  - `RIGHT_CAM`. For M210 and M210 RTK, the physical  sources are controlled by the bandwidth allocation between the port (left) and starboard (right) main cameras  (`setBandwidthAllocationForLeftCamera`):  - When bandwidth is 100% on the left camera, the primary  source is `LEFT_CAM` and the secondary source is  `FPV_CAM`.  - When bandwidth is 0% on the left camera,  the primary source is `RIGHT_CAM` and the secondary source is  `FPV_CAM`.  - When bandwidth is neither 0% nor 100% on  the left camera, the primary source is `LEFT_CAM` and the  secondary source is `RIGHT_CAM`.  @return A `VideoFeed` object.",
            ],
            [
                   "The secondary video feed.  The possible physical sources for the secondary video feed include:  - `FPV_CAM`  -  `EXT`  -  `AV`  - `RIGHT_CAM`. For M210 and M210 RTK, the physical  sources are controlled by the bandwidth allocation between the port (left) and starboard (right) main cameras  (`setBandwidthAllocationForLeftCamera`):  - When bandwidth is 100% on the left camera, the primary  source is `LEFT_CAM` and the secondary source is  `FPV_CAM`.  - When bandwidth is 0% on the left camera,  the primary source is `RIGHT_CAM` and the secondary source is  `FPV_CAM`.  - When bandwidth is neither 0% nor 100% on  the left camera, the primary source is `LEFT_CAM` and the  secondary source is `RIGHT_CAM`.  @return A `VideoFeed` object.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_secondaryVideoFeed_inline",
                   "",
            ],
            [
                   "VideoFeed",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_inline",
                   "Video feed. Use it to receive video data from a physical source.",
            ],
            [
                   "Video feed. Use it to receive video data from a physical source.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_inline",
                   "",
            ],
            [
                   "PhysicalSource",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_inline",
                   "The physical source of a video feed.",
            ],
            [
                   "The physical source of a video feed.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_inline",
                   "",
            ],
            [
                   "MAIN_CAM",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_MainCamera_inline",
                   "The video feed is from the main camera. It is the physical source used by most of DJI products.  For M210 and M210 RTK, `LEFT_CAM`  and `RIGHT_CAM` are used instead.",
            ],
            [
                   "The video feed is from the main camera. It is the physical source used by most of DJI products.  For M210 and M210 RTK, `LEFT_CAM`  and `RIGHT_CAM` are used instead.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_MainCamera_inline",
                   "",
            ],
            [
                   "FPV_CAM",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_FPVCamera_inline",
                   "The video feed is from the FPV camera on Inspire 2 or M200 series.",
            ],
            [
                   "The video feed is from the FPV camera on Inspire 2 or M200 series.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_FPVCamera_inline",
                   "",
            ],
            [
                   "EXT",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_EXT_inline",
                   "The video feed is from EXT port while EXT port is enabled. It is only used for Lightbridge 2 or aircrafts with Lightbridge 2 (e.g. M600).",
            ],
            [
                   "The video feed is from EXT port while EXT port is enabled. It is only used for Lightbridge 2 or aircrafts with Lightbridge 2 (e.g. M600).",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_EXT_inline",
                   "",
            ],
            [
                   "LB",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_LB_inline",
                   "The video feed is from one of the LB ports (AV or HDMI) while EXT Port is enabled.  It is only used for stand-alone Lightbridge 2 or aircraft with stand- alone Lightbridge 2 modules (e.g. M600).",
            ],
            [
                   "The video feed is from one of the LB ports (AV or HDMI) while EXT Port is enabled.  It is only used for stand-alone Lightbridge 2 or aircraft with stand- alone Lightbridge 2 modules (e.g. M600).",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_LB_inline",
                   "",
            ],
            [
                   "HDMI",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_HDMI_inline",
                   "The video feed is from the HDMI port while EXT port is disabled.  It is only used for stand-alone Lightbridge 2 or aircraft with stand-alone Lightbridge 2 modules.",
            ],
            [
                   "The video feed is from the HDMI port while EXT port is disabled.  It is only used for stand-alone Lightbridge 2 or aircraft with stand-alone Lightbridge 2 modules.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_HDMI_inline",
                   "",
            ],
            [
                   "AV",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_AV_inline",
                   "The video feed is from AV port while EXT port is disabled. It is only used for stand-alone Lightbridge 2 or aircraft with stand-alone Lightbridge 2 modules.",
            ],
            [
                   "The video feed is from AV port while EXT port is disabled. It is only used for stand-alone Lightbridge 2 or aircraft with stand-alone Lightbridge 2 modules.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_AV_inline",
                   "",
            ],
            [
                   "LEFT_CAM",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_LeftCamera_inline",
                   "The video feed is from the port (left) main camera. It is only used for M210 and M210 RTK.",
            ],
            [
                   "The video feed is from the port (left) main camera. It is only used for M210 and M210 RTK.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_LeftCamera_inline",
                   "",
            ],
            [
                   "RIGHT_CAM",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_RightCamera_inline",
                   "The video feed is from the starboard (right) main camera. It is only used for M210 and M210 RTK.",
            ],
            [
                   "The video feed is from the starboard (right) main camera. It is only used for M210 and M210 RTK.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_RightCamera_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_Unknown_inline",
                   "Unknown video physical source.",
            ],
            [
                   "Unknown video physical source.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_DJIVideoFeedPhysicalSource_Unknown_inline",
                   "",
            ],
            [
                   "PhysicalSourceListener",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_PhysicalSourceListener_inline",
                   "Physical source listener.",
            ],
            [
                   "Physical source listener.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_PhysicalSourceListener_inline",
                   "",
            ],
            [
                   "onChange",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_PhysicalSourceListener_onChange_inline",
                   "Called when the physical source changes.  @param videoFeed An interface of `VideoFeed`. @param newPhysicalSource An int value.",
            ],
            [
                   "Called when the physical source changes.  @param videoFeed An interface of `VideoFeed`. @param newPhysicalSource An int value.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_PhysicalSourceListener_onChange_inline",
                   "",
            ],
            [
                   "VideoDataCallback",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_VideoDataCallback_inline",
                   "Video data callback.",
            ],
            [
                   "Video data callback.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_VideoDataCallback_inline",
                   "",
            ],
            [
                   "onReceive",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_VideoDataCallback_onReceive_inline",
                   "Callback that is called when video data is received  @param videoBuffer An array containing video buffer @param size The size of the buffer that contains valid data",
            ],
            [
                   "Callback that is called when video data is received  @param videoBuffer An array containing video buffer @param size The size of the buffer that contains valid data",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_VideoDataCallback_onReceive_inline",
                   "",
            ],
            [
                   "setCallback",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_setCallback_inline",
                   "Start listening to video data.  @param callback The execution callback with the returned value.",
            ],
            [
                   "Start listening to video data.  @param callback The execution callback with the returned value.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_setCallback_inline",
                   "",
            ],
            [
                   "setCallback",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_getCallback_inline",
                   "Get the callback object.",
            ],
            [
                   "Get the callback object.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_getCallback_inline",
                   "",
            ],
            [
                   "getVideoSource",
                   2,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_getVideoSource_inline",
                   "Gets the physical sources of the video data.  @return An int value.",
            ],
            [
                   "Gets the physical sources of the video data.  @return An int value.",
                   1,
                   "/BaseClasses/DJIVideoFeeder.html",
                   "#DJIVideoFeeder_DJIVideoFeed_getVideoSource_inline",
                   "",
            ],
            [
                   "setUplinkSignalQualityCallback",
                   2,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirLink_setUplinkSignalQualityCallback_inline",
                   "Define a callback to listen for updates on the uplink signal  @param callback The `SignalQualityCallback` interface.",
            ],
            [
                   "Define a callback to listen for updates on the uplink signal  @param callback The `SignalQualityCallback` interface.",
                   1,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirLink_setUplinkSignalQualityCallback_inline",
                   "",
            ],
            [
                   "setDownlinkSignalQualityCallback",
                   2,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirLink_setDownlinkSignalQualityCallback_inline",
                   "Define a callback to listen for updates on the downlink signal  @param callback The `SignalQualityCallback` interface.",
            ],
            [
                   "Define a callback to listen for updates on the downlink signal  @param callback The `SignalQualityCallback` interface.",
                   1,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirLink_setDownlinkSignalQualityCallback_inline",
                   "",
            ],
            [
                   "isLightbridgeLinkSupported",
                   2,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirLink_isLBAirLinkSupported_inline",
                   "`true` if Lightbridge Air Link is supported.  @return A boolean value.",
            ],
            [
                   "`true` if Lightbridge Air Link is supported.  @return A boolean value.",
                   1,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirLink_isLBAirLinkSupported_inline",
                   "",
            ],
            [
                   "getLightbridgeLink",
                   2,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirLink_lbAirLink_inline",
                   "Returns the Lightbridge Air Link if it is available.  @return An instance of `LightbridgeLink`.",
            ],
            [
                   "Returns the Lightbridge Air Link if it is available.  @return An instance of `LightbridgeLink`.",
                   1,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirLink_lbAirLink_inline",
                   "",
            ],
            [
                   "isOcuSyncLinkSupported",
                   2,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirLink_isOcuSyncLinkSupported_inline",
                   "`true` if the OcuSync Link is supported. OcuSync Link is only supported by Mavic Pro.  @return A boolean value.",
            ],
            [
                   "`true` if the OcuSync Link is supported. OcuSync Link is only supported by Mavic Pro.  @return A boolean value.",
                   1,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirLink_isOcuSyncLinkSupported_inline",
                   "",
            ],
            [
                   "getOcuSyncLink",
                   2,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirLink_ocuSyncLink_inline",
                   "Returns the OcuSync Link if it is available.  @return An instance of `OcuSyncLink`.",
            ],
            [
                   "Returns the OcuSync Link if it is available.  @return An instance of `OcuSyncLink`.",
                   1,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirLink_ocuSyncLink_inline",
                   "",
            ],
            [
                   "isWiFiLinkSupported",
                   2,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirLink_isWifiLinkSupported_inline",
                   "`true` if WiFi Air Link is supported.  @return A boolean value.",
            ],
            [
                   "`true` if WiFi Air Link is supported.  @return A boolean value.",
                   1,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirLink_isWifiLinkSupported_inline",
                   "",
            ],
            [
                   "getWiFiLink",
                   2,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirLink_wifiLink_inline",
                   "Returns the WiFi Air Link if it is available.  @return An instance of `WiFiLink`.",
            ],
            [
                   "Returns the WiFi Air Link if it is available.  @return An instance of `WiFiLink`.",
                   1,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirLink_wifiLink_inline",
                   "",
            ],
            [
                   "SignalQualityCallback",
                   2,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirlink_SignalQualityCallbackInterface_inline",
                   "Updated signal quality in percent for the wireless link. Signal quality is a function of signal strength, interference and data rate. Signal  quality will be more susceptible to weak signal strengths or high  interference when the data rate is high.",
            ],
            [
                   "Updated signal quality in percent for the wireless link. Signal quality is a function of signal strength, interference and data rate. Signal  quality will be more susceptible to weak signal strengths or high  interference when the data rate is high.",
                   1,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirlink_SignalQualityCallbackInterface_inline",
                   "",
            ],
            [
                   "LightbridgeLink",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "",
                   "This class contains methods to change settings of the Lightbridge Air Link.",
            ],
            [
                   "This class contains methods to change settings of the Lightbridge Air Link.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "",
                   "",
            ],
            [
                   "OcuSyncLink",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "",
                   "This class contains methods to change OcuSync link settings.",
            ],
            [
                   "This class contains methods to change OcuSync link settings.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "",
                   "",
            ],
            [
                   "WiFiLink",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "",
                   "This class provides methods to change the setting of the product's WiFi. Rebooting WiFi is required in order to make new settings take effect.",
            ],
            [
                   "This class provides methods to change the setting of the product's WiFi. Rebooting WiFi is required in order to make new settings take effect.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirlink_SignalQualityCallbackUpdate_inline",
                   "Update signal quality.  @param quality The signal quality in percent with range [0, 100], where 100 is the best quality.",
            ],
            [
                   "Update signal quality.  @param quality The signal quality in percent with range [0, 100], where 100 is the best quality.",
                   1,
                   "/Components/AirLink/DJIAirLink.html",
                   "#DJIAirlink_SignalQualityCallbackUpdate_inline",
                   "",
            ],
            [
                   "setChannelSelectionMode",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setChannelSelectionMode_inline",
                   "Sets the downlink channel selection mode (automatic or manual).  @param mode Channel selection mode for the air link. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the downlink channel selection mode (automatic or manual).  @param mode Channel selection mode for the air link. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setChannelSelectionMode_inline",
                   "",
            ],
            [
                   "getChannelSelectionMode",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getChannelSelectionMode_inline",
                   "Gets the downlink channel selection mode.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the downlink channel selection mode.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getChannelSelectionMode_inline",
                   "",
            ],
            [
                   "getChannelRange",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getChannelRange_inline",
                   "Gets the channels available for the current frequency band.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the channels available for the current frequency band.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getChannelRange_inline",
                   "",
            ],
            [
                   "setChannelNumber",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setChannel_inline",
                   "Sets the fixed downlink channel. Channel selection mode should be set  to `MANUAL`. The valid range  of channel can be obtained from `getChannelRange`.  @param channelNumber Specific channel for the air link. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the fixed downlink channel. Channel selection mode should be set  to `MANUAL`. The valid range  of channel can be obtained from `getChannelRange`.  @param channelNumber Specific channel for the air link. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setChannel_inline",
                   "",
            ],
            [
                   "getChannelNumber",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getChannel_inline",
                   "Gets current downlink channel of air link.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets current downlink channel of air link.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getChannel_inline",
                   "",
            ],
            [
                   "setDataRate",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setDataRate_inline",
                   "Sets the downlink data rate (throughput). Higher data rates increase the quality of video transmission, but can  only be used at shorter ranges.  @param rate Fixed rate (throughput). @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the downlink data rate (throughput). Higher data rates increase the quality of video transmission, but can  only be used at shorter ranges.  @param rate Fixed rate (throughput). @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setDataRate_inline",
                   "",
            ],
            [
                   "getDataRate",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getDataRate_inline",
                   "Gets the current downlink data rate (throughput).  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the current downlink data rate (throughput).  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getDataRate_inline",
                   "",
            ],
            [
                   "setTransmissionMode",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setFPVQualityLatency_inline",
                   "Sets FPV video quality vs latency preference. This mode only effects the FPV camera and not the camera on the HD Gimbal.  @param mode Quality vs Latency tradeoff for the FPV video @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets FPV video quality vs latency preference. This mode only effects the FPV camera and not the camera on the HD Gimbal.  @param mode Quality vs Latency tradeoff for the FPV video @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setFPVQualityLatency_inline",
                   "",
            ],
            [
                   "getTransmissionMode",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getFPVQualityLatency_inline",
                   "Gets FPV video quality vs latency preference. This mode only effects the FPV camera and not the camera on the HD Gimbal.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets FPV video quality vs latency preference. This mode only effects the FPV camera and not the camera on the HD Gimbal.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getFPVQualityLatency_inline",
                   "",
            ],
            [
                   "setBandwidthAllocationForLBVideoInputPort",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setFPVVideoBandwidthPercent_inline",
                   "Sets the percentage downlink video bandwidth dedicated to the video  feed from one of the LB input ports. The remaining percentage is dedicated  to the video feed from EXT input port. Setting 100% dedicates all the video bandwidth to LB.  @param percent Percentage downlink bandwidth for video feed from LB port. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the percentage downlink video bandwidth dedicated to the video  feed from one of the LB input ports. The remaining percentage is dedicated  to the video feed from EXT input port. Setting 100% dedicates all the video bandwidth to LB.  @param percent Percentage downlink bandwidth for video feed from LB port. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setFPVVideoBandwidthPercent_inline",
                   "",
            ],
            [
                   "getBandwidthAllocationForLBVideoInputPort",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getFPVVideoBandwidthPercent_inline",
                   "Gets the percentage downlink video bandwidth dedicated to the video feed from one of  the LB input ports. The remaining percentage is dedicated to the video feed from EXT input port.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the percentage downlink video bandwidth dedicated to the video feed from one of  the LB input ports. The remaining percentage is dedicated to the video feed from EXT input port.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getFPVVideoBandwidthPercent_inline",
                   "",
            ],
            [
                   "setBandwidthAllocationForMainCamera",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setBandwidthAllocationForMainCamera_inline",
                   "Sets the percentage downlink video bandwidth dedicated to the main camera or main cameras (for  M210 and M210 RTK). The remaining percentage is dedicated to the FPV camera. For M210 and M210  RTK, the bandwidth for main cameras can be further divided by calling  `setBandwidthAllocationForLeftCamera`. It is only supported by Inspire 2  and M200 series.  @param percent Percentage downlink bandwidth for main camera(s). @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Sets the percentage downlink video bandwidth dedicated to the main camera or main cameras (for  M210 and M210 RTK). The remaining percentage is dedicated to the FPV camera. For M210 and M210  RTK, the bandwidth for main cameras can be further divided by calling  `setBandwidthAllocationForLeftCamera`. It is only supported by Inspire 2  and M200 series.  @param percent Percentage downlink bandwidth for main camera(s). @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setBandwidthAllocationForMainCamera_inline",
                   "",
            ],
            [
                   "getBandwidthAllocationForMainCamera",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getBandwidthAllocationForMainCamera_inline",
                   "Gets the percentage downlink video bandwidth dedicated to the main camera or main cameras  (for M210 and M210 RTK). The remaining percentage is dedicated to the FPV camera. It is  only supported by Inspire 2 and M200 series.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the percentage downlink video bandwidth dedicated to the main camera or main cameras  (for M210 and M210 RTK). The remaining percentage is dedicated to the FPV camera. It is  only supported by Inspire 2 and M200 series.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getBandwidthAllocationForMainCamera_inline",
                   "",
            ],
            [
                   "setBandwidthAllocationForLeftCamera",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setBandwidthAllocationForLeftCamera_inline",
                   "Sets the percentage of the main cameras' bandwidth dedicated to the left camera. The remaining percentage  is dedicated to the right camera. The main cameras' bandwidth is determined by  `setBandwidthAllocationForMainCamera`.  This setting will influnce the physical sources  of video feeds (`getPrimaryVideoFeed` and `getSecondaryVideoFeed`):  - When  bandwidth is 100% on the left camera, the primary source is `LEFT_CAM` and the secondary source is `FPV_CAM`.  - When bandwidth 0% on  the left camera, the primary source is `RIGHT_CAM` and the secondary  source is `FPV_CAM`.  - When bandwidth is neither 0% nor 100% on  the left camera, the primary source is `LEFT_CAM` and the secondary  source is `RIGHT_CAM`. It is only supported by M210 and M210 RTK.  @param percent Percentage downlink bandwidth for FPV camera. @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Sets the percentage of the main cameras' bandwidth dedicated to the left camera. The remaining percentage  is dedicated to the right camera. The main cameras' bandwidth is determined by  `setBandwidthAllocationForMainCamera`.  This setting will influnce the physical sources  of video feeds (`getPrimaryVideoFeed` and `getSecondaryVideoFeed`):  - When  bandwidth is 100% on the left camera, the primary source is `LEFT_CAM` and the secondary source is `FPV_CAM`.  - When bandwidth 0% on  the left camera, the primary source is `RIGHT_CAM` and the secondary  source is `FPV_CAM`.  - When bandwidth is neither 0% nor 100% on  the left camera, the primary source is `LEFT_CAM` and the secondary  source is `RIGHT_CAM`. It is only supported by M210 and M210 RTK.  @param percent Percentage downlink bandwidth for FPV camera. @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setBandwidthAllocationForLeftCamera_inline",
                   "",
            ],
            [
                   "getBandwidthAllocationForLeftCamera",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getBandwidthAllocationForLeftCamera_inline",
                   "When a product has multiple main cameras, this method gets the percentage bandwidth allocation  dedicated to the port (left) camera. The remaining percentage is dedicated to the starboard  (right) camera. The total bandwidth allocated to both main cameras (vs the FPV camera) is  determined by `setBandwidthAllocationForMainCamera`.  This setting will  influence the physical sources of video feeds (`getPrimaryVideoFeed`  and `getSecondaryVideoFeed`):  - When bandwidth is 100% on the left camera,  the primary source is `LEFT_CAM` and the secondary source is `FPV_CAM`.  - When bandwidth is 0% on the left camera, the primary source is  `RIGHT_CAM` and the secondary source  is `FPV_CAM`.  - When bandwidth is  neither 0% nor 100% on the left camera, the primary source is  `LEFT_CAM` and the secondary source is  `RIGHT_CAM`.  It is only supported  by M210 and M210 RTK.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "When a product has multiple main cameras, this method gets the percentage bandwidth allocation  dedicated to the port (left) camera. The remaining percentage is dedicated to the starboard  (right) camera. The total bandwidth allocated to both main cameras (vs the FPV camera) is  determined by `setBandwidthAllocationForMainCamera`.  This setting will  influence the physical sources of video feeds (`getPrimaryVideoFeed`  and `getSecondaryVideoFeed`):  - When bandwidth is 100% on the left camera,  the primary source is `LEFT_CAM` and the secondary source is `FPV_CAM`.  - When bandwidth is 0% on the left camera, the primary source is  `RIGHT_CAM` and the secondary source  is `FPV_CAM`.  - When bandwidth is  neither 0% nor 100% on the left camera, the primary source is  `LEFT_CAM` and the secondary source is  `RIGHT_CAM`.  It is only supported  by M210 and M210 RTK.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getBandwidthAllocationForLeftCamera_inline",
                   "",
            ],
            [
                   "isSecondaryVideoOutputSupported",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_isSecondaryVideoOutputSupported_inline",
                   "Return whether secondary video output supported.  @return A boolean value.",
            ],
            [
                   "Return whether secondary video output supported.  @return A boolean value.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_isSecondaryVideoOutputSupported_inline",
                   "",
            ],
            [
                   "setSecondaryVideoOutputEnabled",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setSecondaryVideoOutputEnabled_inline",
                   "Enable secondary video output on Remote Controller. The remote controller outputs video to the Mobile Device by  default. This will enable a secondary video stream to one of the Remote Controller's physical HDMI and SDI ports.  @param enabled Enables secondary video output. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Enable secondary video output on Remote Controller. The remote controller outputs video to the Mobile Device by  default. This will enable a secondary video stream to one of the Remote Controller's physical HDMI and SDI ports.  @param enabled Enables secondary video output. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setSecondaryVideoOutputEnabled_inline",
                   "",
            ],
            [
                   "getSecondaryVideoOutputEnabled",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getSecondaryVideoOutputEnabled_inline",
                   "Gets whether secondary video output on Remote Controller is enabled. The Remote Controller outputs video to the  Mobile Device by default, but a secondary video can be routed to its HDMI or SDI port.  Use `setSecondaryVideoOutputEnabled` to enable or disable,  and `setSecondaryVideoOutputPort` to choose the port.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets whether secondary video output on Remote Controller is enabled. The Remote Controller outputs video to the  Mobile Device by default, but a secondary video can be routed to its HDMI or SDI port.  Use `setSecondaryVideoOutputEnabled` to enable or disable,  and `setSecondaryVideoOutputPort` to choose the port.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getSecondaryVideoOutputEnabled_inline",
                   "",
            ],
            [
                   "setSecondaryVideoOutputPort",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setSecondaryVideoOutputPort_inline",
                   "Sets secondary video output port on Remote Controller. HDMI or SDI are possible. Only one port can be active at once.  @param port Secondary video output port. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets secondary video output port on Remote Controller. HDMI or SDI are possible. Only one port can be active at once.  @param port Secondary video output port. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setSecondaryVideoOutputPort_inline",
                   "",
            ],
            [
                   "getSecondaryVideoOutputPort",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getSecondaryVideoOutputPort_inline",
                   "Gets the secondary video output port on Remote Controller. HDMI or SDI are possible. Only one port can be active at once.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the secondary video output port on Remote Controller. HDMI or SDI are possible. Only one port can be active at once.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getSecondaryVideoOutputPort_inline",
                   "",
            ],
            [
                   "setSecondaryVideoDisplay",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setPIPDisplay_inline",
                   "Sets the secondary video output Picture in Picture (PIP) display mode. The air link module can connect to both  an FPV camera (through the HDMI and AV ports) and a camera mounted on the HD Gimbal (through the Gimbal port).  The output video can then be a combination of the two video sources. Either a single video source can be  displayed, or one can be displayed within the other (as a Picture in Picture, or PIP). If the mode is set  incorrectly,  then no output video will be displayed.  @param mode Picture in Picture (PIP) display mode. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the secondary video output Picture in Picture (PIP) display mode. The air link module can connect to both  an FPV camera (through the HDMI and AV ports) and a camera mounted on the HD Gimbal (through the Gimbal port).  The output video can then be a combination of the two video sources. Either a single video source can be  displayed, or one can be displayed within the other (as a Picture in Picture, or PIP). If the mode is set  incorrectly,  then no output video will be displayed.  @param mode Picture in Picture (PIP) display mode. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setPIPDisplay_inline",
                   "",
            ],
            [
                   "getSecondaryVideoDisplay",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getPIPDisplay_inline",
                   "Gets the secondary video output Picture in Picture (PIP) display mode. The air link module can connect to both an  FPV camera (through the HDMI and AV ports) and a camera mounted on the HD Gimbal (through the Gimbal port). The  output video can then be a combination of the two video sources. Either a single video source can be displayed, or  one can be displayed within the other (as a Picture in Picture, or PIP).  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the secondary video output Picture in Picture (PIP) display mode. The air link module can connect to both an  FPV camera (through the HDMI and AV ports) and a camera mounted on the HD Gimbal (through the Gimbal port). The  output video can then be a combination of the two video sources. Either a single video source can be displayed, or  one can be displayed within the other (as a Picture in Picture, or PIP).  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getPIPDisplay_inline",
                   "",
            ],
            [
                   "setSecondaryVideoOSDEnabled",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setDisplayOSDEnabled_inline",
                   "Enables and disables On Screen Display (OSD) overlay on the secondary video. OSD is flight data like altitude,  attitude etc. and can be overlayed on the PIP video.  @param enabled Determines whether to display OSD on screen. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Enables and disables On Screen Display (OSD) overlay on the secondary video. OSD is flight data like altitude,  attitude etc. and can be overlayed on the PIP video.  @param enabled Determines whether to display OSD on screen. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setDisplayOSDEnabled_inline",
                   "",
            ],
            [
                   "getSecondaryVideoOSDEnabled",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getDisplayOSDEnabled_inline",
                   "Determines whether On Screen Display (OSD) is overlayed on the video feed.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Determines whether On Screen Display (OSD) is overlayed on the video feed.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getDisplayOSDEnabled_inline",
                   "",
            ],
            [
                   "setSecondaryVideoOSDTopMargin",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setOSDTopMargin_inline",
                   "Sets the OSD top margin in video pixels.  @param margin Top margin of OSD. The range is [0, 50]. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the OSD top margin in video pixels.  @param margin Top margin of OSD. The range is [0, 50]. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setOSDTopMargin_inline",
                   "",
            ],
            [
                   "getSecondaryVideoOSDTopMargin",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getOSDTopMargin_inline",
                   "Gets the OSD top margin in video pixels.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the OSD top margin in video pixels.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getOSDTopMargin_inline",
                   "",
            ],
            [
                   "setSecondaryVideoOSDLeftMargin",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setOSDLeftMargin_inline",
                   "Sets the OSD left margin in video pixels.  @param margin Left margin of OSD. The range is [0, 50]. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the OSD left margin in video pixels.  @param margin Left margin of OSD. The range is [0, 50]. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setOSDLeftMargin_inline",
                   "",
            ],
            [
                   "getSecondaryVideoOSDLeftMargin",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getOSDLeftMargin_inline",
                   "Gets the OSD left margin in video pixels.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the OSD left margin in video pixels.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getOSDLeftMargin_inline",
                   "",
            ],
            [
                   "setSecondaryVideoOSDBottomMargin",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setOSDBottomMargin_inline",
                   "Sets the OSD bottom margin in video pixels.  @param margin Bottom margin of OSD. The range is [0, 50]. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the OSD bottom margin in video pixels.  @param margin Bottom margin of OSD. The range is [0, 50]. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setOSDBottomMargin_inline",
                   "",
            ],
            [
                   "getSecondaryVideoOSDBottomMargin",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getOSDBottomMargin_inline",
                   "Gets the OSD bottom margin in video pixels.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the OSD bottom margin in video pixels.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getOSDBottomMargin_inline",
                   "",
            ],
            [
                   "setSecondaryVideoOSDRightMargin",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setOSDRightMargin_inline",
                   "Sets the OSD right margin in video pixels.  @param margin Right margin of OSD. The range is [0, 50]. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the OSD right margin in video pixels.  @param margin Right margin of OSD. The range is [0, 50]. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setOSDRightMargin_inline",
                   "",
            ],
            [
                   "getSecondaryVideoOSDRightMargin",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getOSDRightMargin_inline",
                   "Gets the OSD right margin in video pixels.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the OSD right margin in video pixels.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getOSDRightMargin_inline",
                   "",
            ],
            [
                   "setSecondaryVideoOSDUnit",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setOSDUnits_inline",
                   "Sets the OSD units to either metric or imperial.  @param unit OSD units. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the OSD units to either metric or imperial.  @param unit OSD units. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setOSDUnits_inline",
                   "",
            ],
            [
                   "getSecondaryVideoOSDUnit",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getOSDUnits_inline",
                   "Gets the OSD units (metric or imperial).  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the OSD units (metric or imperial).  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getOSDUnits_inline",
                   "",
            ],
            [
                   "setSecondaryVideoOutputFormat",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setSecondaryVideoOutputFormat_inline",
                   "Sets the Remote Controller HDMI video port output video format.  @param port The value of the `LightbridgeSecondaryVideoOutputPort` Enum. @param format The value of the `LightbridgeSecondaryVideoFormat` Enum. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the Remote Controller HDMI video port output video format.  @param port The value of the `LightbridgeSecondaryVideoOutputPort` Enum. @param format The value of the `LightbridgeSecondaryVideoFormat` Enum. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setSecondaryVideoOutputFormat_inline",
                   "",
            ],
            [
                   "getSecondaryVideoOutputFormatForPort",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getSecondaryVideoOutputFormat_inline",
                   "Gets the Remote Controller HDMI video port output video format.  @param port The value of the `LightbridgeSecondaryVideoOutputPort` Enum. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Gets the Remote Controller HDMI video port output video format.  @param port The value of the `LightbridgeSecondaryVideoOutputPort` Enum. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getSecondaryVideoOutputFormat_inline",
                   "",
            ],
            [
                   "setSecondaryVideoPIPPosition",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setPIPPosition_inline",
                   "Sets the PIP (Picture In Picture) position relative to the top left corner of the main subject video feed.  @param position Position of the PIP on the screen. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the PIP (Picture In Picture) position relative to the top left corner of the main subject video feed.  @param position Position of the PIP on the screen. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setPIPPosition_inline",
                   "",
            ],
            [
                   "getSecondaryVideoPIPPosition",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getPIPPosition_inline",
                   "Gets the PIP (Picture In Picture) position relative to the top left corner of the main subject video feed.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the PIP (Picture In Picture) position relative to the top left corner of the main subject video feed.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getPIPPosition_inline",
                   "",
            ],
            [
                   "isDualEncodeModeSupported",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_isDualEncodeModeSupported_inline",
                   "`true` if Lightbridge 2 device supports dual encode mode. Dual encode mode allows the  Lightbridge module to encode and transmit both it's AV and HDMI inputs simultaneously.  @return A boolean value.",
            ],
            [
                   "`true` if Lightbridge 2 device supports dual encode mode. Dual encode mode allows the  Lightbridge module to encode and transmit both it's AV and HDMI inputs simultaneously.  @return A boolean value.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_isDualEncodeModeSupported_inline",
                   "",
            ],
            [
                   "setEXTVideoInputPortEnabled",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setEncodeMode_inline",
                   "Sets Lightbridge 2 encode mode. It is only available when `isDualEncodeModeSupported` returns  `true`. For Lightbridge 2 modules that don't support dual encode mode, the encode mode is  always single.  @param enabled The encode mode to set. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets Lightbridge 2 encode mode. It is only available when `isDualEncodeModeSupported` returns  `true`. For Lightbridge 2 modules that don't support dual encode mode, the encode mode is  always single.  @param enabled The encode mode to set. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setEncodeMode_inline",
                   "",
            ],
            [
                   "getEXTVideoInputPortEnabled",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getEncodeMode_inline",
                   "Gets Lightbridge 2 encode mode. It is only available when `isDualEncodeModeSupported` returns  `true`. For Lightbridge 2 modules that don't support dual encode mode, the encode mode is  always single.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets Lightbridge 2 encode mode. It is only available when `isDualEncodeModeSupported` returns  `true`. For Lightbridge 2 modules that don't support dual encode mode, the encode mode is  always single.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getEncodeMode_inline",
                   "",
            ],
            [
                   "setBandwidthAllocationForHDMIVideoInputPort",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setDualEncodeModePercent_inline",
                   "Sets the computational power and bandwidth balance between AV and HDMI inputs on the Lightbridge 2 module when  dual encode mode is enabled. Balance is in percent [0.0,  1.0]. It is only available  when `isDualEncodeModeSupported` returns `true`. When percent</code> is 0.0,  all resources are allocated for video data from AV port. When percent</code> is 1.0, all resources are allocated for video data from HDMI port.  @param percent Percentage resources dedicated to HDMI encoding and transmission. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the computational power and bandwidth balance between AV and HDMI inputs on the Lightbridge 2 module when  dual encode mode is enabled. Balance is in percent [0.0,  1.0]. It is only available  when `isDualEncodeModeSupported` returns `true`. When percent</code> is 0.0,  all resources are allocated for video data from AV port. When percent</code> is 1.0, all resources are allocated for video data from HDMI port.  @param percent Percentage resources dedicated to HDMI encoding and transmission. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setDualEncodeModePercent_inline",
                   "",
            ],
            [
                   "getBandwidthAllocationForHDMIVideoInputPort",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getDualEncodeModePercent_inline",
                   "Gets the computational power and bandwidth balance between AV and HDMI inputs on the Lightbridge 2 module when  dual encode mode is enabled. It is only available when `isDualEncodeModeSupported` returns  `true`. When percent</code> is 0.0, all resources are allocated for video data from AV  port. When percent</code> is 1.0, all resources are allocated for video data from HDMI port.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the computational power and bandwidth balance between AV and HDMI inputs on the Lightbridge 2 module when  dual encode mode is enabled. It is only available when `isDualEncodeModeSupported` returns  `true`. When percent</code> is 0.0, all resources are allocated for video data from AV  port. When percent</code> is 1.0, all resources are allocated for video data from HDMI port.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getDualEncodeModePercent_inline",
                   "",
            ],
            [
                   "getSupportedFrequencyBands",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getSupportedFrequencyBand_inline",
                   "Gets the frequency bands supported by the product in the current area. It is only supported by Inspire 2 and  Phantom 4 Pro. For the other products with LB air link, the frequency band is always 2.4 GHz.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the frequency bands supported by the product in the current area. It is only supported by Inspire 2 and  Phantom 4 Pro. For the other products with LB air link, the frequency band is always 2.4 GHz.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getSupportedFrequencyBand_inline",
                   "",
            ],
            [
                   "setFrequencyBand",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setFrequencyBand_inline",
                   "Sets the LB air link frequency band. It is only supported by Inspire 2 and Phantom 4 Pro. For the other products  with LB air link, the frequency band is always 2.4 GHz.  @param frequencyBand LBAirLink frequency band to change to. @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Sets the LB air link frequency band. It is only supported by Inspire 2 and Phantom 4 Pro. For the other products  with LB air link, the frequency band is always 2.4 GHz.  @param frequencyBand LBAirLink frequency band to change to. @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setFrequencyBand_inline",
                   "",
            ],
            [
                   "getFrequencyBand",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getFrequencyBand_inline",
                   "Gets the LB air link frequency band. It is only supported by Inspire 2 and Phantom 4 Pro. For the other products  with LB air link, the frequency band is always 2.4 GHz.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the LB air link frequency band. It is only supported by Inspire 2 and Phantom 4 Pro. For the other products  with LB air link, the frequency band is always 2.4 GHz.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_getFrequencyBand_inline",
                   "",
            ],
            [
                   "ChannelInterference",
                   2,
                   "/Components/LBAirLink/DJILBAirLink_DJILBAirLinkChannelInterference.html",
                   "",
                   "The interference power of a LBAirLink channel.",
            ],
            [
                   "The interference power of a LBAirLink channel.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink_DJILBAirLinkChannelInterference.html",
                   "",
                   "",
            ],
            [
                   "getPower",
                   2,
                   "/Components/LBAirLink/DJILBAirLink_DJILBAirLinkChannelInterference.html",
                   "#DJILBAirLink_DJILBAirLinkChannelInterference_power_inline",
                   "The interference power with range from [-60, -100] dBm. A smaller, more negative value represents less  interference and better communication quality.  @return An int value.",
            ],
            [
                   "The interference power with range from [-60, -100] dBm. A smaller, more negative value represents less  interference and better communication quality.  @return An int value.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink_DJILBAirLinkChannelInterference.html",
                   "#DJILBAirLink_DJILBAirLinkChannelInterference_power_inline",
                   "",
            ],
            [
                   "getChannel",
                   2,
                   "/Components/LBAirLink/DJILBAirLink_DJILBAirLinkChannelInterference.html",
                   "#DJILBAirLink_DJILBAirLinkChannelInterference_channel_inline",
                   "The channel number. Different frequency bands have different channel index ranges.  @return An int value.",
            ],
            [
                   "The channel number. Different frequency bands have different channel index ranges.  @return An int value.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink_DJILBAirLinkChannelInterference.html",
                   "#DJILBAirLink_DJILBAirLinkChannelInterference_channel_inline",
                   "",
            ],
            [
                   "LightbridgeFrequencyBand",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkFrequencyBand_inline",
                   "LBAirLink frequency band. Supported only by Phantom 4 Professional.",
            ],
            [
                   "LBAirLink frequency band. Supported only by Phantom 4 Professional.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkFrequencyBand_inline",
                   "",
            ],
            [
                   "FREQUENCY_BAND_2_DOT_4_GHZ",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkFrequencyBand_2Dot4G_inline",
                   "The LBAirLink Frequency band is 2.4 GHz.",
            ],
            [
                   "The LBAirLink Frequency band is 2.4 GHz.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkFrequencyBand_2Dot4G_inline",
                   "",
            ],
            [
                   "FREQUENCY_BAND_5_DOT_7_GHZ",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkFrequencyBand_5Dot7G_inline",
                   "The LBAirLink Frequency band is 5.7 GHz.",
            ],
            [
                   "The LBAirLink Frequency band is 5.7 GHz.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkFrequencyBand_5Dot7G_inline",
                   "",
            ],
            [
                   "FREQUENCY_BAND_5_DOT_8_GHZ",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkFrequencyBand_5Dot8G_inline",
                   "The LBAirLink Frequency band is 5.8 GHz.",
            ],
            [
                   "The LBAirLink Frequency band is 5.8 GHz.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkFrequencyBand_5Dot8G_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkFrequencyBand_Unknown_inline",
                   "The LBAirLink Frequency is unknown.",
            ],
            [
                   "The LBAirLink Frequency is unknown.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkFrequencyBand_Unknown_inline",
                   "",
            ],
            [
                   "ChannelSelectionMode",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkChannelSelectionMode_inline",
                   "Downlink channel selection mode (manual or automatic) for the wireless link.",
            ],
            [
                   "Downlink channel selection mode (manual or automatic) for the wireless link.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkChannelSelectionMode_inline",
                   "",
            ],
            [
                   "AUTO",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkChannelSelectionMode_Auto_inline",
                   "Air link will automatically select the best physical channel based on the signal environment.",
            ],
            [
                   "Air link will automatically select the best physical channel based on the signal environment.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkChannelSelectionMode_Auto_inline",
                   "",
            ],
            [
                   "MANUAL",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkChannelSelectionMode_Manual_inline",
                   "Manually select the physical channel.",
            ],
            [
                   "Manually select the physical channel.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkChannelSelectionMode_Manual_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkChannelSelectionMode_Unknown_inline",
                   "Unknown physical channel selection mode.",
            ],
            [
                   "Unknown physical channel selection mode.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkChannelSelectionMode_Unknown_inline",
                   "",
            ],
            [
                   "LightbridgeUnit",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkOSDUnits_inline",
                   "OSD data units.",
            ],
            [
                   "OSD data units.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkOSDUnits_inline",
                   "",
            ],
            [
                   "IMPERIAL",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkOSDUnits_Imperial_inline",
                   "Imperial.",
            ],
            [
                   "Imperial.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkOSDUnits_Imperial_inline",
                   "",
            ],
            [
                   "METRIC",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkOSDUnits_Metric_inline",
                   "Metric.",
            ],
            [
                   "Metric.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkOSDUnits_Metric_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkOSDUnits_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkOSDUnits_Unknown_inline",
                   "",
            ],
            [
                   "LightbridgeSecondaryVideoOutputPort",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoOutputPort_inline",
                   "Remote Controller port to which to send secondary video (in addition to USB video sent to the Mobile Device).",
            ],
            [
                   "Remote Controller port to which to send secondary video (in addition to USB video sent to the Mobile Device).",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoOutputPort_inline",
                   "",
            ],
            [
                   "HDMI",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoOutputPort_HDMI_inline",
                   "HDMI port.",
            ],
            [
                   "HDMI port.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoOutputPort_HDMI_inline",
                   "",
            ],
            [
                   "SDI",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoOutputPort_SDI_inline",
                   "SDI port.",
            ],
            [
                   "SDI port.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoOutputPort_SDI_inline",
                   "",
            ],
            [
                   "Unknown",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoOutputPort_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoOutputPort_Unknown_inline",
                   "",
            ],
            [
                   "LightbridgeSecondaryVideoDisplayMode",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPDisplayMode_inline",
                   "Defines the combination of video sources to form the secondary output video. The secondary output can display  video streams from one or two input sources. When the encode mode is single:</br> Source 1 represents video from  one of the Source1Only input ports (HDMI or AV).</br> Source 2 represents video from EXT input port  (HD Gimbal Camera).</br> When the encode mode is dual:</br> Source 1 represents video from HDMI input port.</br>  Source 2 represents video from AV input port.",
            ],
            [
                   "Defines the combination of video sources to form the secondary output video. The secondary output can display  video streams from one or two input sources. When the encode mode is single:</br> Source 1 represents video from  one of the Source1Only input ports (HDMI or AV).</br> Source 2 represents video from EXT input port  (HD Gimbal Camera).</br> When the encode mode is dual:</br> Source 1 represents video from HDMI input port.</br>  Source 2 represents video from AV input port.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPDisplayMode_inline",
                   "",
            ],
            [
                   "SOURCE_1_ONLY",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPDisplayMode_Source1Only_inline",
                   "Displays video from Source 1 only. When the current encode mode is single, the secondary output will display  video from HDMI or AV input. When the current encode mode is dual, the secondary output will display video from  HDMI input.",
            ],
            [
                   "Displays video from Source 1 only. When the current encode mode is single, the secondary output will display  video from HDMI or AV input. When the current encode mode is dual, the secondary output will display video from  HDMI input.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPDisplayMode_Source1Only_inline",
                   "",
            ],
            [
                   "SOURCE_2_ONLY",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPDisplayMode_Source2Only_inline",
                   "Displays video from Source 2 only. When the current encode mode is single, the secondary output will display  video from HD Gimbal camera. When the current encode mode is dual, the secondary output will display video from  AV input.",
            ],
            [
                   "Displays video from Source 2 only. When the current encode mode is single, the secondary output will display  video from HD Gimbal camera. When the current encode mode is dual, the secondary output will display video from  AV input.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPDisplayMode_Source2Only_inline",
                   "",
            ],
            [
                   "SOURCE_1_MAIN",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPDisplayMode_PIPSource1Main_inline",
                   "Displays the video from Source 1 as the main subject, and the video from Source 2 in a mini window (Picture in  Picture, or PIP).",
            ],
            [
                   "Displays the video from Source 1 as the main subject, and the video from Source 2 in a mini window (Picture in  Picture, or PIP).",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPDisplayMode_PIPSource1Main_inline",
                   "",
            ],
            [
                   "SOURCE_2_MAIN",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPDisplayMode_PIPSource2Main_inline",
                   "Displays the video from Source 2 as the main subject, and the video from Source 1 in a mini window (Picture in  Picture, or PIP).",
            ],
            [
                   "Displays the video from Source 2 as the main subject, and the video from Source 1 in a mini window (Picture in  Picture, or PIP).",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPDisplayMode_PIPSource2Main_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPDisplayMode_Unknown_inline",
                   "Unknown output mode.",
            ],
            [
                   "Unknown output mode.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPDisplayMode_Unknown_inline",
                   "",
            ],
            [
                   "LightbridgeSecondaryVideoFormat",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_inline",
                   "Secondary output video resolution and frame rate.",
            ],
            [
                   "Secondary output video resolution and frame rate.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_inline",
                   "",
            ],
            [
                   "RESOLUTION_1080I_60FPS",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_1080I60FPS_inline",
                   "1080I 60FPS.",
            ],
            [
                   "1080I 60FPS.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_1080I60FPS_inline",
                   "",
            ],
            [
                   "RESOLUTION_1080I_50FPS",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_1080I50FPS_inline",
                   "1080I 50FPS.",
            ],
            [
                   "1080I 50FPS.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_1080I50FPS_inline",
                   "",
            ],
            [
                   "RESOLUTION_1080P_60FPS",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_1080P60FPS_inline",
                   "1080P 60FPS.",
            ],
            [
                   "1080P 60FPS.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_1080P60FPS_inline",
                   "",
            ],
            [
                   "RESOLUTION_1080P_50FPS",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_1080P50FPS_inline",
                   "1080P 50FPS.",
            ],
            [
                   "1080P 50FPS.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_1080P50FPS_inline",
                   "",
            ],
            [
                   "RESOLUTION_1080P_30FPS",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_1080P30FPS_inline",
                   "1080P 30FPS.",
            ],
            [
                   "1080P 30FPS.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_1080P30FPS_inline",
                   "",
            ],
            [
                   "RESOLUTION_1080P_25FPS",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_1080P25FPS_inline",
                   "1080P 25FPS.",
            ],
            [
                   "1080P 25FPS.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_1080P25FPS_inline",
                   "",
            ],
            [
                   "RESOLUTION_1080P_24FPS",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_1080P24FPS_inline",
                   "1080P 24FPS.",
            ],
            [
                   "1080P 24FPS.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_1080P24FPS_inline",
                   "",
            ],
            [
                   "RESOLUTION_720P_60FPS",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_720P60FPS_inline",
                   "720P 60FPS.",
            ],
            [
                   "720P 60FPS.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_720P60FPS_inline",
                   "",
            ],
            [
                   "RESOLUTION_720P_50FPS",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_720P50FPS_inline",
                   "720P 50FPS.",
            ],
            [
                   "720P 50FPS.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_720P50FPS_inline",
                   "",
            ],
            [
                   "RESOLUTION_720P_30FPS",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_720P30FPS_inline",
                   "720P 30FPS.",
            ],
            [
                   "720P 30FPS.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_720P30FPS_inline",
                   "",
            ],
            [
                   "RESOLUTION_720P_25FPS",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_720P25FPS_inline",
                   "720P 25FPS.",
            ],
            [
                   "720P 25FPS.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_720P25FPS_inline",
                   "",
            ],
            [
                   "RESOLUTION_720P_24FPS",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_720P24FPS_inline",
                   "720P 24FPS.",
            ],
            [
                   "720P 24FPS.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_720P24FPS_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkSecondaryVideoFormat_Unknown_inline",
                   "",
            ],
            [
                   "LightbridgePIPPosition",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPPosition_inline",
                   "PIP (Picture In Picture) position on the screen relative to the main subject video.",
            ],
            [
                   "PIP (Picture In Picture) position on the screen relative to the main subject video.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPPosition_inline",
                   "",
            ],
            [
                   "TOP_LEFT",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPPosition_TopLeft_inline",
                   "PIP is on the screen's top left.",
            ],
            [
                   "PIP is on the screen's top left.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPPosition_TopLeft_inline",
                   "",
            ],
            [
                   "TOP_RIGHT",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPPosition_TopRight_inline",
                   "PIP is on the screen's top right.",
            ],
            [
                   "PIP is on the screen's top right.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPPosition_TopRight_inline",
                   "",
            ],
            [
                   "BOTTOM_LEFT",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPPosition_BottomLeft_inline",
                   "PIP is on the screen's bottom left.",
            ],
            [
                   "PIP is on the screen's bottom left.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPPosition_BottomLeft_inline",
                   "",
            ],
            [
                   "BOTTOM_RIGHT",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPPosition_BottomRight_inline",
                   "PIP is on the screen's bottom right.",
            ],
            [
                   "PIP is on the screen's bottom right.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPPosition_BottomRight_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPPosition_Unknown_inline",
                   "Unknown PIP position.",
            ],
            [
                   "Unknown PIP position.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkPIPPosition_Unknown_inline",
                   "",
            ],
            [
                   "LightbridgeTransmissionMode",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkFPVVideoQualityLatency_inline",
                   "FPV(First-person view) Video can prioritize either quality or latency.",
            ],
            [
                   "FPV(First-person view) Video can prioritize either quality or latency.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkFPVVideoQualityLatency_inline",
                   "",
            ],
            [
                   "HIGH_QUALITY",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkFPVVideoQualityLatency_HighQuality_inline",
                   "High quality priority.",
            ],
            [
                   "High quality priority.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkFPVVideoQualityLatency_HighQuality_inline",
                   "",
            ],
            [
                   "LOW_LATENCY",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkFPVVideoQualityLatency_LowLatency_inline",
                   "Low latency priority.",
            ],
            [
                   "Low latency priority.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkFPVVideoQualityLatency_LowLatency_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkFPVVideoQualityLatency_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkFPVVideoQualityLatency_Unknown_inline",
                   "",
            ],
            [
                   "LightbridgeDataRate",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkDataRate_inline",
                   "Wireless downlink data rate. Lower rates are used for longer ranges, but will have lower video quality.",
            ],
            [
                   "Wireless downlink data rate. Lower rates are used for longer ranges, but will have lower video quality.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkDataRate_inline",
                   "",
            ],
            [
                   "BANDWIDTH_4_MBPS",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkDataRate_4Mbps_inline",
                   "4 Mbps (Potential range up to 3 km)",
            ],
            [
                   "4 Mbps (Potential range up to 3 km)",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkDataRate_4Mbps_inline",
                   "",
            ],
            [
                   "BANDWIDTH_6_MBPS",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkDataRate_6Mbps_inline",
                   "6 Mbps (Potential range up to 2 km)",
            ],
            [
                   "6 Mbps (Potential range up to 2 km)",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkDataRate_6Mbps_inline",
                   "",
            ],
            [
                   "BANDWIDTH_8_MBPS",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkDataRate_8Mbps_inline",
                   "8 Mbps (Potential range up to 1.5 km)",
            ],
            [
                   "8 Mbps (Potential range up to 1.5 km)",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkDataRate_8Mbps_inline",
                   "",
            ],
            [
                   "BANDWIDTH_10_MBPS",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkDataRate_10Mbps_inline",
                   "10 Mbps (Potential range up to 0.7 km)",
            ],
            [
                   "10 Mbps (Potential range up to 0.7 km)",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkDataRate_10Mbps_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkDataRate_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_DJILBAirLinkDataRate_Unknown_inline",
                   "",
            ],
            [
                   "LightbridgeAntennaRSSI",
                   2,
                   "/Components/LBAirLink/DJILBAirLink_DJILightbridgeAntennaRSSI.html",
                   "",
                   "RSSI object (received signal strength indicator).",
            ],
            [
                   "RSSI object (received signal strength indicator).",
                   1,
                   "/Components/LBAirLink/DJILBAirLink_DJILightbridgeAntennaRSSI.html",
                   "",
                   "",
            ],
            [
                   "getAntenna1",
                   2,
                   "/Components/LBAirLink/DJILBAirLink_DJILightbridgeAntennaRSSI.html",
                   "#DJILBAirLink_DJILightbridgeAntennaRSSI_antenna1_inline",
                   "Antenna1 RSSI value  @return An int value of antenna RSSI.",
            ],
            [
                   "Antenna1 RSSI value  @return An int value of antenna RSSI.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink_DJILightbridgeAntennaRSSI.html",
                   "#DJILBAirLink_DJILightbridgeAntennaRSSI_antenna1_inline",
                   "",
            ],
            [
                   "getAntenna2",
                   2,
                   "/Components/LBAirLink/DJILBAirLink_DJILightbridgeAntennaRSSI.html",
                   "#DJILBAirLink_DJILightbridgeAntennaRSSI_antenna2_inline",
                   "Antenna2 RSSI value  @return An int value of antenna RSSI.",
            ],
            [
                   "Antenna2 RSSI value  @return An int value of antenna RSSI.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink_DJILightbridgeAntennaRSSI.html",
                   "#DJILBAirLink_DJILightbridgeAntennaRSSI_antenna2_inline",
                   "",
            ],
            [
                   "setAircraftAntennaRSSICallback",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setAircraftAntennaRSSICallback_inline",
                   "Set callback to receive RSSI information on each antenna of aircraft.  @param callback The interface of `AntennaRSSICallback`.",
            ],
            [
                   "Set callback to receive RSSI information on each antenna of aircraft.  @param callback The interface of `AntennaRSSICallback`.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setAircraftAntennaRSSICallback_inline",
                   "",
            ],
            [
                   "setRemoteControllerAntennaRSSICallback",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setRemoteControllerAntennaRSSICallback_inline",
                   "Set callback to receive RSSI information on each antenna of remote controller.  @param callback The interface of `AntennaRSSICallback`.",
            ],
            [
                   "Set callback to receive RSSI information on each antenna of remote controller.  @param callback The interface of `AntennaRSSICallback`.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_setRemoteControllerAntennaRSSICallback_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_AntennaRSSIOnUpdateCallback_inline",
                   "Method called when antenna RSSI information has updated.  @param antennaRSSI An instance of `LightbridgeAntennaRSSI`.",
            ],
            [
                   "Method called when antenna RSSI information has updated.  @param antennaRSSI An instance of `LightbridgeAntennaRSSI`.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_AntennaRSSIOnUpdateCallback_inline",
                   "",
            ],
            [
                   "setChannelInterferenceCallback",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_UpdateAllChannelInterferenceCallback_inline",
                   "Sets up the DJILBAirLinkUpdatedAllChannelInterferenceCallback.  @param callback The `ChannelInterferenceCallback`.",
            ],
            [
                   "Sets up the DJILBAirLinkUpdatedAllChannelInterferenceCallback.  @param callback The `ChannelInterferenceCallback`.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_UpdateAllChannelInterferenceCallback_inline",
                   "",
            ],
            [
                   "onResult",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_UpdateAllChannelInterference_inline",
                   "Signal strength of all signals present on all available downlink channels. Signals  that are not the communication signal are considered interference.  @param channelInterferences The updated interference information. The elements in the array  of `ChannelInterference` objects each hold the  interference signal strength of a channel. Elements are sorted by increasing  channel number.",
            ],
            [
                   "Signal strength of all signals present on all available downlink channels. Signals  that are not the communication signal are considered interference.  @param channelInterferences The updated interference information. The elements in the array  of `ChannelInterference` objects each hold the  interference signal strength of a channel. Elements are sorted by increasing  channel number.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_UpdateAllChannelInterference_inline",
                   "",
            ],
            [
                   "AntennaRSSICallback",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_AntennaRSSICallbackInterface_inline",
                   "Callback of antenna RSSI information for each antenna.",
            ],
            [
                   "Callback of antenna RSSI information for each antenna.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_AntennaRSSICallbackInterface_inline",
                   "",
            ],
            [
                   "ChannelInterferenceCallback",
                   2,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_UpdateAllChannelInterferenceCallbackInterface_inline",
                   "Callback of signal strength of all signals present on all available downlink channels. Signals that are not the  communication signal are considered interference.",
            ],
            [
                   "Callback of signal strength of all signals present on all available downlink channels. Signals that are not the  communication signal are considered interference.",
                   1,
                   "/Components/LBAirLink/DJILBAirLink.html",
                   "#DJILBAirLink_UpdateAllChannelInterferenceCallbackInterface_inline",
                   "",
            ],
            [
                   "setVideoDataRateCallback",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_setVideoDataRateUpdatedCallback_inline",
                   "Sets the callback for VideoDataRateUpdatedCallback.  @param videoDataRateCallback An interface of `VideoDataRateCallback`.",
            ],
            [
                   "Sets the callback for VideoDataRateUpdatedCallback.  @param videoDataRateCallback An interface of `VideoDataRateCallback`.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_setVideoDataRateUpdatedCallback_inline",
                   "",
            ],
            [
                   "setWarningMessagesCallback",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_setReceivedWarningMessageCallback_inline",
                   "Sets the callback for ReceivedWarningMessageCallback.  @param warningMessagesCallback Your implementation of `WarningMessagesCallback`.",
            ],
            [
                   "Sets the callback for ReceivedWarningMessageCallback.  @param warningMessagesCallback Your implementation of `WarningMessagesCallback`.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_setReceivedWarningMessageCallback_inline",
                   "",
            ],
            [
                   "setChannelInterferenceCallback",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_setFrequencyInterferenceUpdatedCallback_inline",
                   "Sets the FrequencyInterferenceUpdatedCallback.  @param callback Your implementation of `ChannelInterferenceCallback`.",
            ],
            [
                   "Sets the FrequencyInterferenceUpdatedCallback.  @param callback Your implementation of `ChannelInterferenceCallback`.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_setFrequencyInterferenceUpdatedCallback_inline",
                   "",
            ],
            [
                   "setChannelSelectionMode",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_setChannelSelectionMode_inline",
                   "Sets the channel selection mode. Both channel number and bandwidth can be changed. If the 5 GHz band is available,  then channels from that band can also be used.  @param mode Selection mode to set. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the channel selection mode. Both channel number and bandwidth can be changed. If the 5 GHz band is available,  then channels from that band can also be used.  @param mode Selection mode to set. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_setChannelSelectionMode_inline",
                   "",
            ],
            [
                   "getChannelSelectionMode",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_getChannelSelectionMode_inline",
                   "Gets the channel selection mode.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the channel selection mode.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_getChannelSelectionMode_inline",
                   "",
            ],
            [
                   "setChannelBandwidth",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_setChannelBandwidth_inline",
                   "Sets the channel bandwidth of the OcuSync link. It can be set only when the selection mode is  `MANUAL`.  @param bandwidth Bandwidth to set. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the channel bandwidth of the OcuSync link. It can be set only when the selection mode is  `MANUAL`.  @param bandwidth Bandwidth to set. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_setChannelBandwidth_inline",
                   "",
            ],
            [
                   "getChannelBandwidth",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_getChannelBandwidth_inline",
                   "Gets the channel bandwidth of the OcuSync link.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the channel bandwidth of the OcuSync link.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_getChannelBandwidth_inline",
                   "",
            ],
            [
                   "setChannelNumber",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_setChannelNumber_inline",
                   "Selects the channel number. The OcuSync link operates on a  10 MHz or 20 MHz channel between 2400.5 MHz and 2482.5 MHz. The channel can be centered at 1 MHz steps within the  band. Therefore for a 10 MHz bandwidth, the OcuSync channel can be centered at 2405.5 MHz, 2406.5 MHz and every 1  MHz to 2477.5 MHz. For a 20 MHz bandwidth, channel center can be at 2410.5 MHz to 2472.5 MHz in 1 MHz steps. The  channel location within the band is specified using the Channel Number. Channel Number is defined as the integer  of 0.5 MHz less than the channel center frequency. E.g. Channel Number 2406 represents the 10 MHz channel centered  at 2406.5 MHz (this is only for the 10 MHz bandwidth as 20 MHz bandwidth channels start at 2410.5 MHz). Channel  Number 2450 represents the channel centered at 2450.5 MHz (of any bandwidth).  Use `getChannelNumberValidRange` to check the valid Channel Numbers for a given bandwidth. Channel  Number can only be set when the channel selection mode is `MANUAL`.  @param channelNumber Channel number to set OcuSync channel to. @param callback Completion block that receives the setter result.",
            ],
            [
                   "Selects the channel number. The OcuSync link operates on a  10 MHz or 20 MHz channel between 2400.5 MHz and 2482.5 MHz. The channel can be centered at 1 MHz steps within the  band. Therefore for a 10 MHz bandwidth, the OcuSync channel can be centered at 2405.5 MHz, 2406.5 MHz and every 1  MHz to 2477.5 MHz. For a 20 MHz bandwidth, channel center can be at 2410.5 MHz to 2472.5 MHz in 1 MHz steps. The  channel location within the band is specified using the Channel Number. Channel Number is defined as the integer  of 0.5 MHz less than the channel center frequency. E.g. Channel Number 2406 represents the 10 MHz channel centered  at 2406.5 MHz (this is only for the 10 MHz bandwidth as 20 MHz bandwidth channels start at 2410.5 MHz). Channel  Number 2450 represents the channel centered at 2450.5 MHz (of any bandwidth).  Use `getChannelNumberValidRange` to check the valid Channel Numbers for a given bandwidth. Channel  Number can only be set when the channel selection mode is `MANUAL`.  @param channelNumber Channel number to set OcuSync channel to. @param callback Completion block that receives the setter result.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_setChannelNumber_inline",
                   "",
            ],
            [
                   "getChannelNumber",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_getChannelNumber_inline",
                   "Gets the current OcuSync Link Channel Number. The OcuSync link operates on a 10 MHz or 20 MHz channel between  2400.5 MHz and 2482.5 MHz. The channel can be centered at 1 MHz steps within the band. Therefore for a 10 MHz  bandwidth, the OcuSync channel can be centered at 2405.5 MHz, 2406.5 MHz and every 1 MHz to 2477.5 MHz. For a  20 MHz bandwidth, channel center can be at 2410.5 MHz to 2472.5 MHz in 1 MHz steps. The channel location within  the band is specified using the Channel Number. Channel Number is defined as the integer of 0.5 MHz less than the  channel center frequency. E.g. Channel Number 2406 represents the 10 MHz channel centered at 2406.5 MHz (this is  only for the 10 MHz bandwidth as 20 MHz bandwidth channels start at 2410.5 MHz). Channel Number 2450 represents the channel centered at 2450.5 MHz (of any bandwidth).  @param callback Completion block that receives the getter result.",
            ],
            [
                   "Gets the current OcuSync Link Channel Number. The OcuSync link operates on a 10 MHz or 20 MHz channel between  2400.5 MHz and 2482.5 MHz. The channel can be centered at 1 MHz steps within the band. Therefore for a 10 MHz  bandwidth, the OcuSync channel can be centered at 2405.5 MHz, 2406.5 MHz and every 1 MHz to 2477.5 MHz. For a  20 MHz bandwidth, channel center can be at 2410.5 MHz to 2472.5 MHz in 1 MHz steps. The channel location within  the band is specified using the Channel Number. Channel Number is defined as the integer of 0.5 MHz less than the  channel center frequency. E.g. Channel Number 2406 represents the 10 MHz channel centered at 2406.5 MHz (this is  only for the 10 MHz bandwidth as 20 MHz bandwidth channels start at 2410.5 MHz). Channel Number 2450 represents the channel centered at 2450.5 MHz (of any bandwidth).  @param callback Completion block that receives the getter result.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_getChannelNumber_inline",
                   "",
            ],
            [
                   "getChannelNumberValidRange",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_getChannelNumberValidRange_inline",
                   "Gets the valid range of Channel Numbers. The OcuSync link operates on a 10 MHz or 20 MHz channel between  2400.5 MHz and 2482.5 MHz. The channel can be centered at 1 MHz steps within the band. Therefore for a 10 MHz  bandwidth, the OcuSync channel can be centered at 2405.5 MHz, 2406.5 MHz and every 1 MHz to 2477.5 MHz. For a  20 MHz bandwidth, channel center can be at 2410.5 MHz to 2472.5 MHz in 1 MHz steps. The channel location within  the band is specified using the Channel Number. Channel Number is defined as the integer of 0.5 MHz less than the  channel center frequency. E.g. Channel Number 2406 represents the 10 MHz channel centered at 2406.5 MHz (this is  only for the 10 MHz bandwidth as 20 MHz bandwidth channels start at 2410.5 MHz). Channel Number 2450 represents the channel centered at 2450.5 MHz (of any bandwidth). This method should be used to confirm the Channel Number  to be set with `setChannelNumber` is valid.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the valid range of Channel Numbers. The OcuSync link operates on a 10 MHz or 20 MHz channel between  2400.5 MHz and 2482.5 MHz. The channel can be centered at 1 MHz steps within the band. Therefore for a 10 MHz  bandwidth, the OcuSync channel can be centered at 2405.5 MHz, 2406.5 MHz and every 1 MHz to 2477.5 MHz. For a  20 MHz bandwidth, channel center can be at 2410.5 MHz to 2472.5 MHz in 1 MHz steps. The channel location within  the band is specified using the Channel Number. Channel Number is defined as the integer of 0.5 MHz less than the  channel center frequency. E.g. Channel Number 2406 represents the 10 MHz channel centered at 2406.5 MHz (this is  only for the 10 MHz bandwidth as 20 MHz bandwidth channels start at 2410.5 MHz). Channel Number 2450 represents the channel centered at 2450.5 MHz (of any bandwidth). This method should be used to confirm the Channel Number  to be set with `setChannelNumber` is valid.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_getChannelNumberValidRange_inline",
                   "",
            ],
            [
                   "VideoDataRateCallback",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_VideoDataRateUpdatedCallbackInterface_inline",
                   "Updated data rate in Mbps for the wireless downlink (from aircraft to remote controller). This link transfers all information from aircraft to remote controller, which is predominantly video information.",
            ],
            [
                   "Updated data rate in Mbps for the wireless downlink (from aircraft to remote controller). This link transfers all information from aircraft to remote controller, which is predominantly video information.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_VideoDataRateUpdatedCallbackInterface_inline",
                   "",
            ],
            [
                   "WarningMessagesCallback",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_ReceivedWarningMessageCallbackInterface_inline",
                   "Updated OcuSync link warning messages. This delegate method is called only when there are new warning messages on  the OcuSync link (either uplink or downlink). If the array has no elements, then all previous warning messages are  no longer in effect.",
            ],
            [
                   "Updated OcuSync link warning messages. This delegate method is called only when there are new warning messages on  the OcuSync link (either uplink or downlink). If the array has no elements, then all previous warning messages are  no longer in effect.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_ReceivedWarningMessageCallbackInterface_inline",
                   "",
            ],
            [
                   "ChannelInterferenceCallback",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_FrequencyInterferenceUpdatedCallbackInterface_inline",
                   "Updated power for interference signals with frequencies in the 2.4 GHz (2400MHz to 2482 MHz) frequency band incident  on the remote controller. Note, measuring the interference reduces effective data rate as the radio is spending time listening to frequencies outside of the communication channel. Interference measurements will only be made if  the `setChannelInterferenceCallback` property in OcuSyncLink is assigned to a method that  implements this callback.",
            ],
            [
                   "Updated power for interference signals with frequencies in the 2.4 GHz (2400MHz to 2482 MHz) frequency band incident  on the remote controller. Note, measuring the interference reduces effective data rate as the radio is spending time listening to frequencies outside of the communication channel. Interference measurements will only be made if  the `setChannelInterferenceCallback` property in OcuSyncLink is assigned to a method that  implements this callback.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_FrequencyInterferenceUpdatedCallbackInterface_inline",
                   "",
            ],
            [
                   "FrequencyInterference",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink_DJIOcuSyncFrequencyInterference.html",
                   "",
                   "This class represents the power spectral density of a frequency slice. Only supported by Mavic Pro.",
            ],
            [
                   "This class represents the power spectral density of a frequency slice. Only supported by Mavic Pro.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink_DJIOcuSyncFrequencyInterference.html",
                   "",
                   "",
            ],
            [
                   "OcuSyncWarningMessage",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncWarningMessage_inline",
                   "OcuSync link warning messages.",
            ],
            [
                   "OcuSync link warning messages.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncWarningMessage_inline",
                   "",
            ],
            [
                   "frequencyFrom",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink_DJIOcuSyncFrequencyInterference.html",
                   "#DJIOcuSyncLink_DJIOcuSyncFrequencyInterference_frequencyFrom_inline",
                   "Start frequency.",
            ],
            [
                   "Start frequency.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink_DJIOcuSyncFrequencyInterference.html",
                   "#DJIOcuSyncLink_DJIOcuSyncFrequencyInterference_frequencyFrom_inline",
                   "",
            ],
            [
                   "frequencyTo",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink_DJIOcuSyncFrequencyInterference.html",
                   "#DJIOcuSyncLink_DJIOcuSyncFrequencyInterference_frequencyTo_inline",
                   "Stop frequency.",
            ],
            [
                   "Stop frequency.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink_DJIOcuSyncFrequencyInterference.html",
                   "#DJIOcuSyncLink_DJIOcuSyncFrequencyInterference_frequencyTo_inline",
                   "",
            ],
            [
                   "rssi",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink_DJIOcuSyncFrequencyInterference.html",
                   "#DJIOcuSyncLink_DJIOcuSyncFrequencyInterference_rssi_inline",
                   "Signal strength within the band defined by the start and stop frequencies.",
            ],
            [
                   "Signal strength within the band defined by the start and stop frequencies.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink_DJIOcuSyncFrequencyInterference.html",
                   "#DJIOcuSyncLink_DJIOcuSyncFrequencyInterference_rssi_inline",
                   "",
            ],
            [
                   "OcuSyncBandwidth",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncBandwidth_inline",
                   "The channel bandwidth for the OcuSync downlink (from the aircraft to the remote controller). Setting a smaller  bandwidth will reduce the data rate, but make the connection more robust.",
            ],
            [
                   "The channel bandwidth for the OcuSync downlink (from the aircraft to the remote controller). Setting a smaller  bandwidth will reduce the data rate, but make the connection more robust.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncBandwidth_inline",
                   "",
            ],
            [
                   "Bandwidth20MHz",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncBandwidth_20MHz_inline",
                   "The frequency band of the OcuSync link is 20 MHz (up to 46 Mbps).",
            ],
            [
                   "The frequency band of the OcuSync link is 20 MHz (up to 46 Mbps).",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncBandwidth_20MHz_inline",
                   "",
            ],
            [
                   "Bandwidth10MHz",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncBandwidth_10MHz_inline",
                   "The frequency band of the OcuSync link is 10 MHz (up to 23 Mbps).",
            ],
            [
                   "The frequency band of the OcuSync link is 10 MHz (up to 23 Mbps).",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncBandwidth_10MHz_inline",
                   "",
            ],
            [
                   "Unknown",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncBandwidth_Unknown_inline",
                   "Unknown frequency band.",
            ],
            [
                   "Unknown frequency band.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncBandwidth_Unknown_inline",
                   "",
            ],
            [
                   "STRONG_TAKE_OFF_INTERFERENCE",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncWarningMessage_StrongTakeoffInterference_inline",
                   "Warning that interference is high for take-off. When the signal gets weaker as separation between remote  controller and aircraft get larger, there is a change the link will fail.",
            ],
            [
                   "Warning that interference is high for take-off. When the signal gets weaker as separation between remote  controller and aircraft get larger, there is a change the link will fail.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncWarningMessage_StrongTakeoffInterference_inline",
                   "",
            ],
            [
                   "STRONG_DOWN_LINK_INTERFERENCE",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncWarningMessage_StrongDownlinkInterference_inline",
                   "There is strong interference on the downlink signal incident on the remote controller. If the channel selection  mode  `MANUAL` is being used, consider changing to   `AUTO` as the OcuSync link can automatically select  Channel Numbers and bandwidth to mitigate interference on the fly.",
            ],
            [
                   "There is strong interference on the downlink signal incident on the remote controller. If the channel selection  mode  `MANUAL` is being used, consider changing to   `AUTO` as the OcuSync link can automatically select  Channel Numbers and bandwidth to mitigate interference on the fly.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncWarningMessage_StrongDownlinkInterference_inline",
                   "",
            ],
            [
                   "STRONG_UP_LINK_INTERFERENCE",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncWarningMessage_StrongUplinkInterference_inline",
                   "There is strong interference on the uplink signal incident on the aircraft.",
            ],
            [
                   "There is strong interference on the uplink signal incident on the aircraft.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncWarningMessage_StrongUplinkInterference_inline",
                   "",
            ],
            [
                   "WEAK_SIGNAL",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncWarningMessage_WeakSignal_inline",
                   "Weak OcuSync signal strength. Be aware of anything blocking the signal between the remote controller and aircraft,  adjust the orientation of the antennas on the remote controller, or reduce the distance between remote controller  and aircraft to increase signal strength.",
            ],
            [
                   "Weak OcuSync signal strength. Be aware of anything blocking the signal between the remote controller and aircraft,  adjust the orientation of the antennas on the remote controller, or reduce the distance between remote controller  and aircraft to increase signal strength.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncWarningMessage_WeakSignal_inline",
                   "",
            ],
            [
                   "AIRCRAFT_LINK_REBOOT",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncWarningMessage_AircraftLinkReboot_inline",
                   "The OcuSync link on the aircraft is rebooting.",
            ],
            [
                   "The OcuSync link on the aircraft is rebooting.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncWarningMessage_AircraftLinkReboot_inline",
                   "",
            ],
            [
                   "UP_LINK_BROKEN",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncWarningMessage_UplinkBroken_inline",
                   "The uplink from the remote controller to the aircraft is broken. Usually if only the uplink disconnects, it is due  to interference on the aircraft's OcuSync antennas. Try changing the channel number if the interference source  cannot be removed.",
            ],
            [
                   "The uplink from the remote controller to the aircraft is broken. Usually if only the uplink disconnects, it is due  to interference on the aircraft's OcuSync antennas. Try changing the channel number if the interference source  cannot be removed.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncWarningMessage_UplinkBroken_inline",
                   "",
            ],
            [
                   "DOWN_LINK_BROKEN",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncWarningMessage_DownlinkBroken_inline",
                   "The downlink from the aircraft to the remote controller is broken. Usually if only the downlink disconnects, it is  due to interference on the remote controller's OcuSync antennas. Try changing channel number, or reducing the bandwidth of the channel to make it more robust.",
            ],
            [
                   "The downlink from the aircraft to the remote controller is broken. Usually if only the downlink disconnects, it is  due to interference on the remote controller's OcuSync antennas. Try changing channel number, or reducing the bandwidth of the channel to make it more robust.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncWarningMessage_DownlinkBroken_inline",
                   "",
            ],
            [
                   "LINK_UNUSABLE",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncWarningMessage_LinkUnusable_inline",
                   "The link between the remote controller and the aircraft is unusable. It is determined to be unusable if signal is  too weak. Check to see if the antennas are setup correctly and the path from remote controller to aircraft is unobstructed.",
            ],
            [
                   "The link between the remote controller and the aircraft is unusable. It is determined to be unusable if signal is  too weak. Check to see if the antennas are setup correctly and the path from remote controller to aircraft is unobstructed.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_DJIOcuSyncWarningMessage_LinkUnusable_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_didUpdateVideoDataRate_inline",
                   "Updated data rate in Mbps for the wireless downlink (from aircraft to remote controller). This link transfers  all information from aircraft to remote controller, which is predominantly video information.  @param newValue The data rate of the downlink in Mbps.",
            ],
            [
                   "Updated data rate in Mbps for the wireless downlink (from aircraft to remote controller). This link transfers  all information from aircraft to remote controller, which is predominantly video information.  @param newValue The data rate of the downlink in Mbps.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_didUpdateVideoDataRate_inline",
                   "",
            ],
            [
                   "onReceive",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_didReceiveWarningMessages_inline",
                   "Updated OcuSync link warning messages. This delegate method is called only when there are new warning messages  on the OcuSync link (either uplink or downlink). If the array has no elements, then all previous warning  messages are no longer in effect.  @param messages The array of `OcuSyncWarningMessage` representation of the current Warning Messages.",
            ],
            [
                   "Updated OcuSync link warning messages. This delegate method is called only when there are new warning messages  on the OcuSync link (either uplink or downlink). If the array has no elements, then all previous warning  messages are no longer in effect.  @param messages The array of `OcuSyncWarningMessage` representation of the current Warning Messages.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_didReceiveWarningMessages_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_didUpdateDownlinkInterference_inline",
                   "Updated power for interference signals with frequencies in the 2.4 GHz (2400MHz to 2482 MHz) frequency band  incident on the remote controller. Note, measuring the interference reduces effective data rate as the radio  is spending time listening to frequencies outside of the communication channel.  @param rssis The updated interference information. The elements in the array  of `FrequencyInterference` objects each hold interference information about a small  part of the frequency band. Elements are sorted by increasing frequency.",
            ],
            [
                   "Updated power for interference signals with frequencies in the 2.4 GHz (2400MHz to 2482 MHz) frequency band  incident on the remote controller. Note, measuring the interference reduces effective data rate as the radio  is spending time listening to frequencies outside of the communication channel.  @param rssis The updated interference information. The elements in the array  of `FrequencyInterference` objects each hold interference information about a small  part of the frequency band. Elements are sorted by increasing frequency.",
                   1,
                   "/Components/OcuSyncLink/DJIOcuSyncLink.html",
                   "#DJIOcuSyncLink_didUpdateDownlinkInterference_inline",
                   "",
            ],
            [
                   "setMagneticInterferenceCallback",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_setDJIWiFiSignalQualityChangedCallback_inline",
                   "Sets up the callback for WiFi magnetic inteference level.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Sets up the callback for WiFi magnetic inteference level.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_setDJIWiFiSignalQualityChangedCallback_inline",
                   "",
            ],
            [
                   "setChannelInterferenceCallback",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_setRSSICallback_inline",
                   "Setter for RSSI callback  @param channelInterferenceCallback your implementation of `ChannelInterferenceCallback`.",
            ],
            [
                   "Setter for RSSI callback  @param channelInterferenceCallback your implementation of `ChannelInterferenceCallback`.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_setRSSICallback_inline",
                   "",
            ],
            [
                   "reboot",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_rebootWiFi_inline",
                   "Reboot WiFi to enable new settings to take effect.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Reboot WiFi to enable new settings to take effect.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_rebootWiFi_inline",
                   "",
            ],
            [
                   "setSSID",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_setWiFiSSID_inline",
                   "Sets the WiFi SSID. The setting will take effect only after the product reboots.  @param ssid The WiFi SSID to change. It should only include alphabetic characters, numbers, spaces, '-' and should not be  more than 30 characters. @param callback Remote execution result error callback.",
            ],
            [
                   "Sets the WiFi SSID. The setting will take effect only after the product reboots.  @param ssid The WiFi SSID to change. It should only include alphabetic characters, numbers, spaces, '-' and should not be  more than 30 characters. @param callback Remote execution result error callback.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_setWiFiSSID_inline",
                   "",
            ],
            [
                   "getSSID",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_getWiFiSSID_inline",
                   "Gets the WiFi SSID.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the WiFi SSID.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_getWiFiSSID_inline",
                   "",
            ],
            [
                   "setPassword",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_setWiFiPassword_inline",
                   "Sets the WiFi Password.  @param password The new WiFi password. It must be at least 8 characters and can only includes alphabetic characters and numbers. @param callback Remote execution result error callback.",
            ],
            [
                   "Sets the WiFi Password.  @param password The new WiFi password. It must be at least 8 characters and can only includes alphabetic characters and numbers. @param callback Remote execution result error callback.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_setWiFiPassword_inline",
                   "",
            ],
            [
                   "getPassword",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_getWiFiPassword_inline",
                   "Get the WiFi Password.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Get the WiFi Password.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_getWiFiPassword_inline",
                   "",
            ],
            [
                   "setFrequencyBand",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_setWiFiFrequencyBand_inline",
                   "Sets the WiFi frequency band.  @param frequencyBand WiFi frequency band to change to. @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Sets the WiFi frequency band.  @param frequencyBand WiFi frequency band to change to. @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_setWiFiFrequencyBand_inline",
                   "",
            ],
            [
                   "getFrequencyBand",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_getWiFiFrequencyBand_inline",
                   "Gets the current WiFi frequency band.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the current WiFi frequency band.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_getWiFiFrequencyBand_inline",
                   "",
            ],
            [
                   "setChannelNumber",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_setWiFiChannel_inline",
                   "Sets the WiFi channel. `getAvailableChannelNumbers` must be used to determine which channels are possible  to set. When a new channel is set, the WiFi on the product will reboot. The channel can only be changed when the  product is not flying. Supported only by Mavic Pro.  @param channelNumber Index of the channel to select. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the WiFi channel. `getAvailableChannelNumbers` must be used to determine which channels are possible  to set. When a new channel is set, the WiFi on the product will reboot. The channel can only be changed when the  product is not flying. Supported only by Mavic Pro.  @param channelNumber Index of the channel to select. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_setWiFiChannel_inline",
                   "",
            ],
            [
                   "getChannelNumber",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_getWiFiChannel_inline",
                   "Gets the WiFi channel. Channels 1-13 are in the 2.4 GHz band. Other channels are in the 5 GHz band.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the WiFi channel. Channels 1-13 are in the 2.4 GHz band. Other channels are in the 5 GHz band.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_getWiFiChannel_inline",
                   "",
            ],
            [
                   "getAvailableChannelNumbers",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_getAvailableChannels_inline",
                   "Gets the channels available for the current frequency band. When `FREQUENCY_BAND_DUAL` is  selected, channels for both 2.4GHz and 5GHz are available. Supported only by Mavic Pro.  @param callback The completion block with the returned execution result.",
            ],
            [
                   "Gets the channels available for the current frequency band. When `FREQUENCY_BAND_DUAL` is  selected, channels for both 2.4GHz and 5GHz are available. Supported only by Mavic Pro.  @param callback The completion block with the returned execution result.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_getAvailableChannels_inline",
                   "",
            ],
            [
                   "setDataRate",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_setDataRate_inline",
                   "Sets the WiFi data rate (throughput). Higher data rates increase the quality of video transmission, but can only be  used at shorter ranges.  @param rate Data rate (throughput). @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Sets the WiFi data rate (throughput). Higher data rates increase the quality of video transmission, but can only be  used at shorter ranges.  @param rate Data rate (throughput). @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_setDataRate_inline",
                   "",
            ],
            [
                   "getDataRate",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_getDataRate_inline",
                   "Gets the current data rate (throughput).  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the current data rate (throughput).  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_getDataRate_inline",
                   "",
            ],
            [
                   "MagneticInterferenceCallback",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiSignalQualityChangedCallbackInterface_inline",
                   "This interface provides a method to receive the updated WiFi signal quality.",
            ],
            [
                   "This interface provides a method to receive the updated WiFi signal quality.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiSignalQualityChangedCallbackInterface_inline",
                   "",
            ],
            [
                   "ChannelInterferenceCallback",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_RSSICallbackInterface_inline",
                   "Callback to listen to any changes in interference levels for channels that are not being used for communication.",
            ],
            [
                   "Callback to listen to any changes in interference levels for channels that are not being used for communication.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_RSSICallbackInterface_inline",
                   "",
            ],
            [
                   "WiFiFrequencyBand",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiFrequencyBand_inline",
                   "WiFi frequency band.",
            ],
            [
                   "WiFi frequency band.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiFrequencyBand_inline",
                   "",
            ],
            [
                   "WifiChannelInterference",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink_DJIWiFiChannelInterference.html",
                   "",
                   "The interference power of a WiFi channel.",
            ],
            [
                   "The interference power of a WiFi channel.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink_DJIWiFiChannelInterference.html",
                   "",
                   "",
            ],
            [
                   "FREQUENCY_BAND_ONLY_2_DOT_4",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiFrequencyBand_2Dot4G_inline",
                   "The WiFi Frequency band is 2.4 GHz.",
            ],
            [
                   "The WiFi Frequency band is 2.4 GHz.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiFrequencyBand_2Dot4G_inline",
                   "",
            ],
            [
                   "FREQUENCY_BAND_5_GHZ",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiFrequencyBand_5G_inline",
                   "The WiFi Frequency band is 5 GHz.",
            ],
            [
                   "The WiFi Frequency band is 5 GHz.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiFrequencyBand_5G_inline",
                   "",
            ],
            [
                   "FREQUENCY_BAND_DUAL",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiFrequencyBand_DualBand_inline",
                   "Dual frequency band mode. The WiFi frequency band can be either 2.4 GHz or 5 GHz.",
            ],
            [
                   "Dual frequency band mode. The WiFi frequency band can be either 2.4 GHz or 5 GHz.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiFrequencyBand_DualBand_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiFrequencyBand_Unknown_inline",
                   "The WiFi Frequency is unknown.",
            ],
            [
                   "The WiFi Frequency is unknown.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiFrequencyBand_Unknown_inline",
                   "",
            ],
            [
                   "WiFiMagneticInterferenceLevel",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiSignalQuality_inline",
                   "WiFi magnetic interference - as measured by Osmo, Phantom 3 4K and Phantom 3 Standard.",
            ],
            [
                   "WiFi magnetic interference - as measured by Osmo, Phantom 3 4K and Phantom 3 Standard.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiSignalQuality_inline",
                   "",
            ],
            [
                   "LOW",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiSignalQuality_Good_inline",
                   "WiFi magnetic interference is low.",
            ],
            [
                   "WiFi magnetic interference is low.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiSignalQuality_Good_inline",
                   "",
            ],
            [
                   "MEDIUM",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiSignalQuality_Medium_inline",
                   "WiFi magnetic interference is medium. At this level, the video quality will be degraded compared to when the signal quality is low.",
            ],
            [
                   "WiFi magnetic interference is medium. At this level, the video quality will be degraded compared to when the signal quality is low.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiSignalQuality_Medium_inline",
                   "",
            ],
            [
                   "HIGH",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiSignalQuality_Bad_inline",
                   "WiFi magnetic interference is high. At this level, the video quality will be degraded compared to when the signal quality is medium.",
            ],
            [
                   "WiFi magnetic interference is high. At this level, the video quality will be degraded compared to when the signal quality is medium.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiSignalQuality_Bad_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiSignalQuality_Unknown_inline",
                   "WiFi magnetic interference is Unknown.",
            ],
            [
                   "WiFi magnetic interference is Unknown.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiSignalQuality_Unknown_inline",
                   "",
            ],
            [
                   "WifiDataRate",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiDataRate_inline",
                   "WiFi data rate. Lower rates are used for longer ranges, but will have lower video quality.",
            ],
            [
                   "WiFi data rate. Lower rates are used for longer ranges, but will have lower video quality.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiDataRate_inline",
                   "",
            ],
            [
                   "RATE_1_MBPS",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiDataRate_1Mbps_inline",
                   "1 Mbps.",
            ],
            [
                   "1 Mbps.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiDataRate_1Mbps_inline",
                   "",
            ],
            [
                   "RATE_2_MBPS",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiDataRate_2Mbps_inline",
                   "2 Mbps.",
            ],
            [
                   "2 Mbps.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiDataRate_2Mbps_inline",
                   "",
            ],
            [
                   "RATE_4_MBPS",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiDataRate_4Mbps_inline",
                   "4 Mbps.",
            ],
            [
                   "4 Mbps.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiDataRate_4Mbps_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiDataRate_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_DJIWiFiDataRate_Unknown_inline",
                   "",
            ],
            [
                   "getPower",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink_DJIWiFiChannelInterference.html",
                   "#DJIWiFiLink_DJIWiFiChannelInterference_power_inline",
                   "The interference power with range from [-60, -100] dBm. A smaller, more negative value represents less interference and better communication quality.  @return An int value of the interference power.",
            ],
            [
                   "The interference power with range from [-60, -100] dBm. A smaller, more negative value represents less interference and better communication quality.  @return An int value of the interference power.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink_DJIWiFiChannelInterference.html",
                   "#DJIWiFiLink_DJIWiFiChannelInterference_power_inline",
                   "",
            ],
            [
                   "getChannel",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink_DJIWiFiChannelInterference.html",
                   "#DJIWiFiLink_DJIWiFiChannelInterference_channel_inline",
                   "The channel index.  @return An int value of the channel index.",
            ],
            [
                   "The channel index.  @return An int value of the channel index.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink_DJIWiFiChannelInterference.html",
                   "#DJIWiFiLink_DJIWiFiChannelInterference_channel_inline",
                   "",
            ],
            [
                   "getBand",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink_DJIWiFiChannelInterference.html",
                   "#DJIWiFiLink_DJIWiFiChannelInterference_band_inline",
                   "The frequency band that the channel belongs to.  @return A value of `WiFiFrequencyBand` Enum.",
            ],
            [
                   "The frequency band that the channel belongs to.  @return A value of `WiFiFrequencyBand` Enum.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink_DJIWiFiChannelInterference.html",
                   "#DJIWiFiLink_DJIWiFiChannelInterference_band_inline",
                   "",
            ],
            [
                   "onResult",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_didUpdateWiFiSignalQuality_inline",
                   "Updates the WiFi Signal Quality.  @param level The WiFi magnetic interference level.",
            ],
            [
                   "Updates the WiFi Signal Quality.  @param level The WiFi magnetic interference level.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_didUpdateWiFiSignalQuality_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_didUpdateChannelInterferencePowers_inline",
                   "This will be invoked when there is a change in RSSI. Interference power of the available channels.  @param channelInterferences An array of all the current RSSIs.",
            ],
            [
                   "This will be invoked when there is a change in RSSI. Interference power of the available channels.  @param channelInterferences An array of all the current RSSIs.",
                   1,
                   "/Components/WiFiLink/DJIWiFiLink.html",
                   "#DJIWiFiLink_didUpdateChannelInterferencePowers_inline",
                   "",
            ],
            [
                   "setStateCallback",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_setStateUpdateCallback_inline",
                   "Sets the callback that updates battery state.  @param callback Callback method.",
            ],
            [
                   "Sets the callback that updates battery state.  @param callback Callback method.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_setStateUpdateCallback_inline",
                   "",
            ],
            [
                   "setAggregationStateCallback",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_Aggregation_setStateUpdateCallback_inline",
                   "Sets the callback that updates aggregated battery state.  @param callback Callback method.",
            ],
            [
                   "Sets the callback that updates aggregated battery state.  @param callback Callback method.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_Aggregation_setStateUpdateCallback_inline",
                   "",
            ],
            [
                   "getCellVoltages",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_getCellVoltages_inline",
                   "Gets the battery's cell voltages. There will be a voltage for each cell in the battery.  @param callback Asynchronous execution result callback.",
            ],
            [
                   "Gets the battery's cell voltages. There will be a voltage for each cell in the battery.  @param callback Asynchronous execution result callback.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_getCellVoltages_inline",
                   "",
            ],
            [
                   "getNumberOfCells",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_numberOfCells_inline",
                   "Returns the number of battery cells.  @return An int value.",
            ],
            [
                   "Returns the number of battery cells.  @return An int value.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_numberOfCells_inline",
                   "",
            ],
            [
                   "setNumberOfCells",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_setNumberOfCells_inline",
                   "When the connected battery is not a smart battery, the number of cells needs to be set manually. The flight controller uses the number of cells and the cell voltage threshold to determine if the aircraft should go home or land. The valid range is [3, 12] cells.  @param numberOfCells Number of cells inside the battery. @param callback Asynchronous execution result callback.",
            ],
            [
                   "When the connected battery is not a smart battery, the number of cells needs to be set manually. The flight controller uses the number of cells and the cell voltage threshold to determine if the aircraft should go home or land. The valid range is [3, 12] cells.  @param numberOfCells Number of cells inside the battery. @param callback Asynchronous execution result callback.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_setNumberOfCells_inline",
                   "",
            ],
            [
                   "isSmartBattery",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_isSmartBattery_inline",
                   "`true` if the battery is a smart battery. When the connected battery is a DJI smart battery, more information can be obtained by communicating with the battery.  @return >true</code> if battery is smart battery.",
            ],
            [
                   "`true` if the battery is a smart battery. When the connected battery is a DJI smart battery, more information can be obtained by communicating with the battery.  @return >true</code> if battery is smart battery.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_isSmartBattery_inline",
                   "",
            ],
            [
                   "pairBatteries",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_pairBatteries_inline",
                   "A battery's full charge capacity reduces a little every time it goes through a discharge and recharge cycle. Therefore, older batteries that have gone through many cycles will have lower full charge capacity than newer batteries. When multiple batteries are used simultaneously in a product, the aggregate full charge capacity will be limited by the battery with the lowest full charge capacity.  To optimize the amount of energy delivered by a battery over its lifetime to a product, batteries should be matched or paired with other batteries of similar full charge capacity. The operational challenges of always using paired batteries can be alleviated using the battery pairing interfaces. This method will pair two batteries by recording the aggregate of their serial numbers in each of their firmwares. `getPairingState` can then be used to determine if the installed battery combination is a previously assigned pair or not. Batteries can be repaired.  @param callback Completion block that receives the execution result.",
            ],
            [
                   "A battery's full charge capacity reduces a little every time it goes through a discharge and recharge cycle. Therefore, older batteries that have gone through many cycles will have lower full charge capacity than newer batteries. When multiple batteries are used simultaneously in a product, the aggregate full charge capacity will be limited by the battery with the lowest full charge capacity.  To optimize the amount of energy delivered by a battery over its lifetime to a product, batteries should be matched or paired with other batteries of similar full charge capacity. The operational challenges of always using paired batteries can be alleviated using the battery pairing interfaces. This method will pair two batteries by recording the aggregate of their serial numbers in each of their firmwares. `getPairingState` can then be used to determine if the installed battery combination is a previously assigned pair or not. Batteries can be repaired.  @param callback Completion block that receives the execution result.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_pairBatteries_inline",
                   "",
            ],
            [
                   "getPairingState",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_getBatteryPairStatus_inline",
                   "A battery's full charge capacity reduces a little every time it goes through a discharge and recharge cycle. Therefore, older batteries that have gone through many cycles will have lower full charge capacity than newer batteries. When multiple batteries are used simultaneously in a product, the aggregate full charge capacity will be limited by the battery with lowest full charge capacity.  To optimize the amount of energy delivered by a battery over its lifetime to a product, batteries should be matched or paired with other batteries of similar full charge capacity. The operational challenges of always using paired batteries can be alleviated using the battery pairing interfaces. This method can then be used to determine if the installed battery combination is a previously assigned pair or not.  @param callback Callback that receives the pairing state.",
            ],
            [
                   "A battery's full charge capacity reduces a little every time it goes through a discharge and recharge cycle. Therefore, older batteries that have gone through many cycles will have lower full charge capacity than newer batteries. When multiple batteries are used simultaneously in a product, the aggregate full charge capacity will be limited by the battery with lowest full charge capacity.  To optimize the amount of energy delivered by a battery over its lifetime to a product, batteries should be matched or paired with other batteries of similar full charge capacity. The operational challenges of always using paired batteries can be alleviated using the battery pairing interfaces. This method can then be used to determine if the installed battery combination is a previously assigned pair or not.  @param callback Callback that receives the pairing state.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_getBatteryPairStatus_inline",
                   "",
            ],
            [
                   "setLevel1CellVoltageThreshold",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_setLevel1CellVoltageThreshold_inline",
                   "Sets the Level 1 cell voltage threshold in mV. When the cell voltage of the battery crosses below the threshold, Level 1 behavior will be executed. The valid range is [3600, 4000] mV. When the new value is not 100 mV higher than the Level 2 cell voltage threshold, the Level 2 threshold will be set to (new value - 100) mV.  @param voltage Level 1 cell voltage threshold to set in mV. @param callback Completion block that receives the setter execution result.",
            ],
            [
                   "Sets the Level 1 cell voltage threshold in mV. When the cell voltage of the battery crosses below the threshold, Level 1 behavior will be executed. The valid range is [3600, 4000] mV. When the new value is not 100 mV higher than the Level 2 cell voltage threshold, the Level 2 threshold will be set to (new value - 100) mV.  @param voltage Level 1 cell voltage threshold to set in mV. @param callback Completion block that receives the setter execution result.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_setLevel1CellVoltageThreshold_inline",
                   "",
            ],
            [
                   "getLevel1CellVoltageThreshold",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_getLevel1CellVoltageThreshold_inline",
                   "Gets the Level 1 cell voltage threshold in mV. When the cell voltage of the battery crosses below the threshold, Level 1 behavior will be executed. The valid range is [3600, 4000] mV.  @param callback Asynchronous execution result callback that contains the voltage threshold.",
            ],
            [
                   "Gets the Level 1 cell voltage threshold in mV. When the cell voltage of the battery crosses below the threshold, Level 1 behavior will be executed. The valid range is [3600, 4000] mV.  @param callback Asynchronous execution result callback that contains the voltage threshold.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_getLevel1CellVoltageThreshold_inline",
                   "",
            ],
            [
                   "setLevel2CellVoltageThreshold",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_setLevel2CellVoltageThreshold_inline",
                   "Sets the Level 2 cell voltage threshold in mV. When the cell voltage of the battery crosses below the threshold, Level 2 behavior will be executed. The valid range is [3500, 3800] mV and must be at least 100 mV lower than the Level 1 voltage threshold.  @param voltage Level 2 cell voltage threshold to set in mV. @param callback Asynchronous execution result callback.",
            ],
            [
                   "Sets the Level 2 cell voltage threshold in mV. When the cell voltage of the battery crosses below the threshold, Level 2 behavior will be executed. The valid range is [3500, 3800] mV and must be at least 100 mV lower than the Level 1 voltage threshold.  @param voltage Level 2 cell voltage threshold to set in mV. @param callback Asynchronous execution result callback.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_setLevel2CellVoltageThreshold_inline",
                   "",
            ],
            [
                   "getLevel2CellVoltageThreshold",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_getLevel2CellVoltageThreshold_inline",
                   "Gets the Level 2 cell voltage threshold in mV. When the cell voltage of the battery crosses below the threshold, Level 2 behavior will be executed.  @param callback Asynchronous execution result callback that contains the voltage threshold.",
            ],
            [
                   "Gets the Level 2 cell voltage threshold in mV. When the cell voltage of the battery crosses below the threshold, Level 2 behavior will be executed.  @param callback Asynchronous execution result callback that contains the voltage threshold.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_getLevel2CellVoltageThreshold_inline",
                   "",
            ],
            [
                   "setLevel1CellVoltageBehavior",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_setLevel1CellVoltageBehavior_inline",
                   "Sets the behavior that will be executed when the cell voltage crosses under the Level 1 threshold. It can only be set when the motors are off.  @param behavior Level 1 behavior. @param callback Completion block that receives the setter execution result.",
            ],
            [
                   "Sets the behavior that will be executed when the cell voltage crosses under the Level 1 threshold. It can only be set when the motors are off.  @param behavior Level 1 behavior. @param callback Completion block that receives the setter execution result.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_setLevel1CellVoltageBehavior_inline",
                   "",
            ],
            [
                   "getLevel1CellVoltageBehavior",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_getLevel1CellVoltageBehavior_inline",
                   "Gets the behavior that will be executed when the cell voltage crosses under the Level 1 threshold.  @param callback Asynchronous execution result callback that contains the voltage threshold behavior.",
            ],
            [
                   "Gets the behavior that will be executed when the cell voltage crosses under the Level 1 threshold.  @param callback Asynchronous execution result callback that contains the voltage threshold behavior.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_getLevel1CellVoltageBehavior_inline",
                   "",
            ],
            [
                   "setLevel2CellVoltageBehavior",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_setLevel2CellVoltageBehavior_inline",
                   "Sets the operation that will be executed when the cell voltage crosses under Level 2 threshold. It can only be set when motors are off.  @param behavior Level 2 behavior. @param callback Asynchronous execution result callback.",
            ],
            [
                   "Sets the operation that will be executed when the cell voltage crosses under Level 2 threshold. It can only be set when motors are off.  @param behavior Level 2 behavior. @param callback Asynchronous execution result callback.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_setLevel2CellVoltageBehavior_inline",
                   "",
            ],
            [
                   "getLevel2CellVoltageBehavior",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_getLevel2CellVoltageBehavior_inline",
                   "Sets the behavior that will be executed when the cell voltage crosses under the Level 2 threshold.  @param callback Asynchronous execution result callback that contains the voltage threshold behavior.",
            ],
            [
                   "Sets the behavior that will be executed when the cell voltage crosses under the Level 2 threshold.  @param callback Asynchronous execution result callback that contains the voltage threshold behavior.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_getLevel2CellVoltageBehavior_inline",
                   "",
            ],
            [
                   "getLatestWarningRecord",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_getLatestWarningRecord_inline",
                   "Gets the battery's most recent warning record. Anytime the battery experiences a significant exception, it will get recorded as a warning record.  @param callback Asynchronous execution result callback that contains the latest warning record.",
            ],
            [
                   "Gets the battery's most recent warning record. Anytime the battery experiences a significant exception, it will get recorded as a warning record.  @param callback Asynchronous execution result callback that contains the latest warning record.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_getLatestWarningRecord_inline",
                   "",
            ],
            [
                   "getWarningRecords",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_getHistoricalWarningRecords_inline",
                   "Gets the battery's warning records, which are kept for 30 days using objects of type WarningRecord</code>. Call the isSmartBattery()</code> method before using this method. Not supported by Osmo and non-smart batteries.  @param callback Asynchronous execution result callback that contains the batteries warning records.",
            ],
            [
                   "Gets the battery's warning records, which are kept for 30 days using objects of type WarningRecord</code>. Call the isSmartBattery()</code> method before using this method. Not supported by Osmo and non-smart batteries.  @param callback Asynchronous execution result callback that contains the batteries warning records.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_getHistoricalWarningRecords_inline",
                   "",
            ],
            [
                   "setSelfDischargeInDays",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_setSelfDischargeInDays_inline",
                   "Smart batteries can be setup to automatically discharge over a custom period of time. This method sets the battery's self discharge period in days with range [1, 10]. For Inspire 2 and M200 series products, the max range value  can be 20. Not supported by non-smart batteries and the Osmo series.  @param days Day for self-discharge @param callback Asynchronous execution result callback.",
            ],
            [
                   "Smart batteries can be setup to automatically discharge over a custom period of time. This method sets the battery's self discharge period in days with range [1, 10]. For Inspire 2 and M200 series products, the max range value  can be 20. Not supported by non-smart batteries and the Osmo series.  @param days Day for self-discharge @param callback Asynchronous execution result callback.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_setSelfDischargeInDays_inline",
                   "",
            ],
            [
                   "getSelfDischargeInDays",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_getSelfDischargeInDays_inline",
                   "Smart batteries can be setup to automatically discharge over a custom period of time. This method gets the battery's self discharge period in days with range [1, 10]. Not supported by non-smart batteries and the Osmo series.  @param callback Asynchronous execution result callback that contains the number of days to discharge over.",
            ],
            [
                   "Smart batteries can be setup to automatically discharge over a custom period of time. This method gets the battery's self discharge period in days with range [1, 10]. Not supported by non-smart batteries and the Osmo series.  @param callback Asynchronous execution result callback that contains the number of days to discharge over.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_getSelfDischargeInDays_inline",
                   "",
            ],
            [
                   "BatteryState",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "",
                   "Supported by both smart and non-smart batteries, this class keeps track of the real-time state of the battery. Non-smart batteries only support the following properties:  - When the connected product is A3 and N3, only `getVoltage` and `getCellVoltageLevel` are valid.  - When the connected product is A2, only `getVoltage` is valid.",
            ],
            [
                   "Supported by both smart and non-smart batteries, this class keeps track of the real-time state of the battery. Non-smart batteries only support the following properties:  - When the connected product is A3 and N3, only `getVoltage` and `getCellVoltageLevel` are valid.  - When the connected product is A2, only `getVoltage` is valid.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "",
                   "",
            ],
            [
                   "AggregationState",
                   2,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "",
                   "Provides a real time summary of the aggregated battery system.",
            ],
            [
                   "Provides a real time summary of the aggregated battery system.",
                   1,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "",
                   "",
            ],
            [
                   "WarningRecord",
                   2,
                   "/Components/Battery/DJIBattery_WarningRecord.html",
                   "",
                   "Used to keep a record of any unusual battery statues in the past 30 discharges. For all the properties below, monitor these values frequently to ensure the battery's state is normal. If any of the properties below indicate there is an issue with the battery, notifying the user is recommended. </br></br> NOTE: No automatic action will be taken if any of the properties below return `true`, which is why it is imperative that the user is notified of the issue.",
            ],
            [
                   "Used to keep a record of any unusual battery statues in the past 30 discharges. For all the properties below, monitor these values frequently to ensure the battery's state is normal. If any of the properties below indicate there is an issue with the battery, notifying the user is recommended. </br></br> NOTE: No automatic action will be taken if any of the properties below return `true`, which is why it is imperative that the user is notified of the issue.",
                   1,
                   "/Components/Battery/DJIBattery_WarningRecord.html",
                   "",
                   "",
            ],
            [
                   "LowVoltageBehavior",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_DJIBatteryCellVoltageThresholdBehavior_inline",
                   "Defines aircraft's behavior when the cell voltage is low.",
            ],
            [
                   "Defines aircraft's behavior when the cell voltage is low.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_DJIBatteryCellVoltageThresholdBehavior_inline",
                   "",
            ],
            [
                   "PairingState",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_DJIBatteryPairStatus_inline",
                   "Battery pairing state for batteries that can be paired.",
            ],
            [
                   "Battery pairing state for batteries that can be paired.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_DJIBatteryPairStatus_inline",
                   "",
            ],
            [
                   "FLASH_LED",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_DJIBatteryCellVoltageThresholdBehavior_FlashLEDWarning_inline",
                   "LED lights go into warning mode.",
            ],
            [
                   "LED lights go into warning mode.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_DJIBatteryCellVoltageThresholdBehavior_FlashLEDWarning_inline",
                   "",
            ],
            [
                   "GO_HOME",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_DJIBatteryCellVoltageThresholdBehavior_GoHome_inline",
                   "Return-to-Home.",
            ],
            [
                   "Return-to-Home.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_DJIBatteryCellVoltageThresholdBehavior_GoHome_inline",
                   "",
            ],
            [
                   "LAND",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_DJIBatteryCellVoltageThresholdBehavior_Land_inline",
                   "Land aircraft immediately.",
            ],
            [
                   "Land aircraft immediately.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_DJIBatteryCellVoltageThresholdBehavior_Land_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_DJIBatteryCellVoltageThresholdBehavior_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_DJIBatteryCellVoltageThresholdBehavior_Unknown_inline",
                   "",
            ],
            [
                   "UNPAIRED",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_DJIBatteryPairStatus_Unpaired_inline",
                   "The batteries didn't match; they're not paired.",
            ],
            [
                   "The batteries didn't match; they're not paired.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_DJIBatteryPairStatus_Unpaired_inline",
                   "",
            ],
            [
                   "PAIRED",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_DJIBatteryPairStatus_Paired_inline",
                   "Batteries are paired.",
            ],
            [
                   "Batteries are paired.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_DJIBatteryPairStatus_Paired_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_DJIBatteryPairStatus_Unknown_inline",
                   "Can't get the pair state or the batteries.",
            ],
            [
                   "Can't get the pair state or the batteries.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_DJIBatteryPairStatus_Unknown_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_UpdateBatteryState_inline",
                   "Callback to update battery state.  @param batteryState The battery's state.",
            ],
            [
                   "Callback to update battery state.  @param batteryState The battery's state.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_UpdateBatteryState_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_UpdateAggregationState_inline",
                   "Callback to update aggregated battery state.  @param aggregationState The aggregated battery state.",
            ],
            [
                   "Callback to update aggregated battery state.  @param aggregationState The aggregated battery state.",
                   1,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_UpdateAggregationState_inline",
                   "",
            ],
            [
                   "getNumberOfConnectedBatteries",
                   2,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_numberOfConnectedBatteries_inline",
                   "The number of currently connected batteries.  @return An int value.",
            ],
            [
                   "The number of currently connected batteries.  @return An int value.",
                   1,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_numberOfConnectedBatteries_inline",
                   "",
            ],
            [
                   "getBatteryOverviews",
                   2,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_batteryOverviews_inline",
                   "Returns the overview of batteries in the battery group. When a battery is not connected, the `isConnected` property is `false` and the `getChargeRemainingInPercent` is zero. For Matrice 600, there are 6 elements in this array.  @return The `BatteryOverview` instance.",
            ],
            [
                   "Returns the overview of batteries in the battery group. When a battery is not connected, the `isConnected` property is `false` and the `getChargeRemainingInPercent` is zero. For Matrice 600, there are 6 elements in this array.  @return The `BatteryOverview` instance.",
                   1,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_batteryOverviews_inline",
                   "",
            ],
            [
                   "isAnyBatteryDisconnected",
                   2,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_isDisconnected_inline",
                   "`true` if one of the batteries in the group is disconnected. When `true`, the aircraft is not allowed to take off.  @return A boolean value.",
            ],
            [
                   "`true` if one of the batteries in the group is disconnected. When `true`, the aircraft is not allowed to take off.  @return A boolean value.",
                   1,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_isDisconnected_inline",
                   "",
            ],
            [
                   "getCurrent",
                   2,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_current_inline",
                   "Returns the real time current draw through the batteries. A negative value means the batteries are being discharged.  @return An int value.",
            ],
            [
                   "Returns the real time current draw through the batteries. A negative value means the batteries are being discharged.  @return An int value.",
                   1,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_current_inline",
                   "",
            ],
            [
                   "getVoltage",
                   2,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_voltage_inline",
                   "Returns the current voltage (mV) provided by the battery group.  @return An int value.",
            ],
            [
                   "Returns the current voltage (mV) provided by the battery group.  @return An int value.",
                   1,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_voltage_inline",
                   "",
            ],
            [
                   "isVoltageDifferenceDetected",
                   2,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_isVoltageDifferenceDetected_inline",
                   "`true` if there is significant difference between the voltage (above 1.5V) of two batteries. When  `true`, the aircraft is not allowed to take off.  @return A boolean value.",
            ],
            [
                   "`true` if there is significant difference between the voltage (above 1.5V) of two batteries. When  `true`, the aircraft is not allowed to take off.  @return A boolean value.",
                   1,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_isVoltageDifferenceDetected_inline",
                   "",
            ],
            [
                   "isLowCellVoltageDetected",
                   2,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_isLowCellVoltageDetected_inline",
                   "`true` if one of the batteries in the group has cells with low voltage. When `true`, the aircraft is not allowed to take off.  @return A boolean value.",
            ],
            [
                   "`true` if one of the batteries in the group has cells with low voltage. When `true`, the aircraft is not allowed to take off.  @return A boolean value.",
                   1,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_isLowCellVoltageDetected_inline",
                   "",
            ],
            [
                   "isCellDamaged",
                   2,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_isCellDamaged_inline",
                   "`true` if one of the batteries in the group has damaged cells. When `true`, the aircraft is not allowed to take off.  @return A boolean value.",
            ],
            [
                   "`true` if one of the batteries in the group has damaged cells. When `true`, the aircraft is not allowed to take off.  @return A boolean value.",
                   1,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_isCellDamaged_inline",
                   "",
            ],
            [
                   "getFullChargeCapacity",
                   2,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_fullChargeCapacity_inline",
                   "Returns the the total amount of energy, in mAh (milliamp hours), stored in the batteries when the batteries are fully charged.  @return An int value.",
            ],
            [
                   "Returns the the total amount of energy, in mAh (milliamp hours), stored in the batteries when the batteries are fully charged.  @return An int value.",
                   1,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_fullChargeCapacity_inline",
                   "",
            ],
            [
                   "getChargeRemaining",
                   2,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_chargeRemaining_inline",
                   "Returns the remaining energy stored in the batteries in mAh (milliamp hours).  @return An int value.",
            ],
            [
                   "Returns the remaining energy stored in the batteries in mAh (milliamp hours).  @return An int value.",
                   1,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_chargeRemaining_inline",
                   "",
            ],
            [
                   "getChargeRemainingInPercent",
                   2,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_chargeRemainingInPercent_inline",
                   "Returns the percentage of energy left in the battery group with range [0,100].  @return An int value.",
            ],
            [
                   "Returns the percentage of energy left in the battery group with range [0,100].  @return An int value.",
                   1,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_chargeRemainingInPercent_inline",
                   "",
            ],
            [
                   "getHighestTemperature",
                   2,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_highestTemperature_inline",
                   "Returns the highest temperature (in Celsius) among the batteries in the group, with range [-128, 127] degrees.  @return An int value.",
            ],
            [
                   "Returns the highest temperature (in Celsius) among the batteries in the group, with range [-128, 127] degrees.  @return An int value.",
                   1,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_highestTemperature_inline",
                   "",
            ],
            [
                   "isFirmwareDifferenceDetected",
                   2,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_isFirmwareDifferenceDetected_inline",
                   "`true` if one of the batteries in the group has a firmware version different from the others. When it is `true`, the aircraft is not allowed to take off.  @return A boolean value.",
            ],
            [
                   "`true` if one of the batteries in the group has a firmware version different from the others. When it is `true`, the aircraft is not allowed to take off.  @return A boolean value.",
                   1,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_AggregationState_isFirmwareDifferenceDetected_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_Aggregation_StateUpdateCallbackInterface_inline",
                   "This interface provides a callback to update the current aggregated battery state.",
            ],
            [
                   "This interface provides a callback to update the current aggregated battery state.",
                   1,
                   "/Components/Battery/DJIBattery_AggregationState.html",
                   "#DJIBattery_Aggregation_StateUpdateCallbackInterface_inline",
                   "",
            ],
            [
                   "BatteryOverview",
                   2,
                   "/Components/Battery/DJIBattery_BatteryOverview.html",
                   "",
                   "Provides an overview of a battery when aircraft is using multiple batteries.",
            ],
            [
                   "Provides an overview of a battery when aircraft is using multiple batteries.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryOverview.html",
                   "",
                   "",
            ],
            [
                   "BatteryConnectionState",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_BatteryConnectionState_inline",
                   "Battery connection status. 0 means NORMAL, 1 means INVALID, and 2 means EXCEPTION in communication.",
            ],
            [
                   "Battery connection status. 0 means NORMAL, 1 means INVALID, and 2 means EXCEPTION in communication.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_BatteryConnectionState_inline",
                   "",
            ],
            [
                   "NORMAL",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_BatteryConnectionState_Normal_inline",
                   "Normal.",
            ],
            [
                   "Normal.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_BatteryConnectionState_Normal_inline",
                   "",
            ],
            [
                   "INVALID",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_BatteryConnectionState_Invalid_inline",
                   "Invalid.",
            ],
            [
                   "Invalid.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_BatteryConnectionState_Invalid_inline",
                   "",
            ],
            [
                   "EXCEPTION",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_BatteryConnectionState_Exception_inline",
                   "Exception.",
            ],
            [
                   "Exception.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_BatteryConnectionState_Exception_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_BatteryConnectionState_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/Battery/DJIBattery.html",
                   "#DJIBattery_BatteryConnectionState_Unknown_inline",
                   "",
            ],
            [
                   "getIndex",
                   2,
                   "/Components/Battery/DJIBattery_BatteryOverview.html",
                   "#DJIBattery_BatteryOverview_index_inline",
                   "Index of the battery. Index starts from 0. For Matrice 600, the number 1 battery compartment relates to index 0.  @return An int value.",
            ],
            [
                   "Index of the battery. Index starts from 0. For Matrice 600, the number 1 battery compartment relates to index 0.  @return An int value.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryOverview.html",
                   "#DJIBattery_BatteryOverview_index_inline",
                   "",
            ],
            [
                   "isConnected",
                   2,
                   "/Components/Battery/DJIBattery_BatteryOverview.html",
                   "#DJIBattery_BatteryOverview_isConnected_inline",
                   "`true` if the battery is currently connected to the aircraft.  @return A boolean value.",
            ],
            [
                   "`true` if the battery is currently connected to the aircraft.  @return A boolean value.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryOverview.html",
                   "#DJIBattery_BatteryOverview_isConnected_inline",
                   "",
            ],
            [
                   "getChargeRemainingInPercent",
                   2,
                   "/Components/Battery/DJIBattery_BatteryOverview.html",
                   "#DJIBattery_BatteryOverview_chargeRemainingInPercent_inline",
                   "The remaining percentage energy of the battery with range [0, 100].  @return An int value.",
            ],
            [
                   "The remaining percentage energy of the battery with range [0, 100].  @return An int value.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryOverview.html",
                   "#DJIBattery_BatteryOverview_chargeRemainingInPercent_inline",
                   "",
            ],
            [
                   "getFullChargeCapacity",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_fullChargeCapacity_inline",
                   "Returns the total amount of energy, in mAh (milliamp hours), stored in the battery when the battery is fully charged. The energy of the battery at full charge changes over time as the battery continues to get used. Over time, as the battery continues to be recharged, the value of `getFullChargeCapacity` will decrease.  @return An int value.",
            ],
            [
                   "Returns the total amount of energy, in mAh (milliamp hours), stored in the battery when the battery is fully charged. The energy of the battery at full charge changes over time as the battery continues to get used. Over time, as the battery continues to be recharged, the value of `getFullChargeCapacity` will decrease.  @return An int value.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_fullChargeCapacity_inline",
                   "",
            ],
            [
                   "getChargeRemaining",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_chargeRemaining_inline",
                   "Returns the remaining energy stored in the battery in mAh (milliamp hours).  @return An int value.",
            ],
            [
                   "Returns the remaining energy stored in the battery in mAh (milliamp hours).  @return An int value.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_chargeRemaining_inline",
                   "",
            ],
            [
                   "getChargeRemainingInPercent",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_chargeRemainingInPercent_inline",
                   "Returns the percentage of battery energy left with range [0, 100].  @return An int value.",
            ],
            [
                   "Returns the percentage of battery energy left with range [0, 100].  @return An int value.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_chargeRemainingInPercent_inline",
                   "",
            ],
            [
                   "getVoltage",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_voltage_inline",
                   "Returns the current battery voltage (mV).  @return An int value.",
            ],
            [
                   "Returns the current battery voltage (mV).  @return An int value.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_voltage_inline",
                   "",
            ],
            [
                   "getCurrent",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_current_inline",
                   "Returns the real time current draw of the battery (mA). A negative value means the battery is being discharged, and a positive value means it is being charged.  @return An int value.",
            ],
            [
                   "Returns the real time current draw of the battery (mA). A negative value means the battery is being discharged, and a positive value means it is being charged.  @return An int value.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_current_inline",
                   "",
            ],
            [
                   "getLifetimeRemaining",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_lifetimeRemaining_inline",
                   "Returns the battery's remaining lifetime as a percentage, with range [0, 100]. A new battery will be close to 100%. As a battery experiences charge/discharge cycles, the value will go down.  @return An int value.",
            ],
            [
                   "Returns the battery's remaining lifetime as a percentage, with range [0, 100]. A new battery will be close to 100%. As a battery experiences charge/discharge cycles, the value will go down.  @return An int value.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_lifetimeRemaining_inline",
                   "",
            ],
            [
                   "getTemperature",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_temperature_inline",
                   "Returns the battery's temperature, in Celsius, with range [-128, 127] degrees.  @return A float value.",
            ],
            [
                   "Returns the battery's temperature, in Celsius, with range [-128, 127] degrees.  @return A float value.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_temperature_inline",
                   "",
            ],
            [
                   "getNumberOfDischarges",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_numberOfDischarges_inline",
                   "Returns the total number of discharges the battery has gone through over its lifetime. The total number of discharges includes discharges that happen through normal use and discharges that are manually set.  @return An int value.",
            ],
            [
                   "Returns the total number of discharges the battery has gone through over its lifetime. The total number of discharges includes discharges that happen through normal use and discharges that are manually set.  @return An int value.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_numberOfDischarges_inline",
                   "",
            ],
            [
                   "getCellVoltageLevel",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_cellVoltageLevel_inline",
                   "Current cell voltage level of the battery. It is only supported when the connected product is stand-alone A3 or N3.  @return An enum value of the `BatteryCellVoltageLevel`.",
            ],
            [
                   "Current cell voltage level of the battery. It is only supported when the connected product is stand-alone A3 or N3.  @return An enum value of the `BatteryCellVoltageLevel`.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_cellVoltageLevel_inline",
                   "",
            ],
            [
                   "isBeingCharged",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_isBeingCharged_inline",
                   "`true` if the battery is being charged.  @return The boolean value.",
            ],
            [
                   "`true` if the battery is being charged.  @return The boolean value.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_isBeingCharged_inline",
                   "",
            ],
            [
                   "isInSingleBatteryMode",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_isInSingleBatteryMode_inline",
                   "`true` if only one battery is inserted on the the right or starboard side of the aircraft. The aircraft can still take off but the flight time will be shorter. It is only supported by Inspire 2: Inspire 2 must always have a battery in the right/starboard slot.  @return A boolean value.",
            ],
            [
                   "`true` if only one battery is inserted on the the right or starboard side of the aircraft. The aircraft can still take off but the flight time will be shorter. It is only supported by Inspire 2: Inspire 2 must always have a battery in the right/starboard slot.  @return A boolean value.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_BatteryState_isInSingleBatteryMode_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_StateUpdateCallbackInterface_inline",
                   "This interface provides a callback to update the battery's current state.",
            ],
            [
                   "This interface provides a callback to update the battery's current state.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_StateUpdateCallbackInterface_inline",
                   "",
            ],
            [
                   "BatteryCellVoltageLevel",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_DJIBatteryCellVoltageLevel_inline",
                   "Battery cell voltage level threshold. Different thresholds will initiate different aircraft behaviors or operations. Level 3 is the lowest level. It is only supported when the connected product is stand-alone A3 and N3.",
            ],
            [
                   "Battery cell voltage level threshold. Different thresholds will initiate different aircraft behaviors or operations. Level 3 is the lowest level. It is only supported when the connected product is stand-alone A3 and N3.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_DJIBatteryCellVoltageLevel_inline",
                   "",
            ],
            [
                   "LEVEL_0",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_DJIBatteryCellVoltageLevel_Level0_inline",
                   "The cell voltage is at a safe level; the aircraft can fly normally.",
            ],
            [
                   "The cell voltage is at a safe level; the aircraft can fly normally.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_DJIBatteryCellVoltageLevel_Level0_inline",
                   "",
            ],
            [
                   "LEVEL_1",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_DJIBatteryCellVoltageLevel_Level1_inline",
                   "The cell voltage is equal to or lower than threshold Level 1. At this level the Level 1 operation will be executed. The threshold value and operation for Level 1 can be configured by the user.",
            ],
            [
                   "The cell voltage is equal to or lower than threshold Level 1. At this level the Level 1 operation will be executed. The threshold value and operation for Level 1 can be configured by the user.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_DJIBatteryCellVoltageLevel_Level1_inline",
                   "",
            ],
            [
                   "LEVEL_2",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_DJIBatteryCellVoltageLevel_Level2_inline",
                   "The cell voltage is equal to or lower than threshold Level 2. At this level the Level 2 operation will be executed. The threshold value and operation for Level 2 can be configured by the user.",
            ],
            [
                   "The cell voltage is equal to or lower than threshold Level 2. At this level the Level 2 operation will be executed. The threshold value and operation for Level 2 can be configured by the user.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_DJIBatteryCellVoltageLevel_Level2_inline",
                   "",
            ],
            [
                   "LEVEL_3",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_DJIBatteryCellVoltageLevel_Level3_inline",
                   "The cell voltage is equal to or lower than Level 3. At this level, the aircraft will start landing. The threshold for Level 3 cannot be configured by the user and is fixed at 3400mV.",
            ],
            [
                   "The cell voltage is equal to or lower than Level 3. At this level, the aircraft will start landing. The threshold for Level 3 cannot be configured by the user and is fixed at 3400mV.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_DJIBatteryCellVoltageLevel_Level3_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_DJIBatteryCellVoltageLevel_Unknown_inline",
                   "The cell voltage level is unknown.",
            ],
            [
                   "The cell voltage level is unknown.",
                   1,
                   "/Components/Battery/DJIBattery_BatteryState.html",
                   "#DJIBattery_DJIBatteryCellVoltageLevel_Unknown_inline",
                   "",
            ],
            [
                   "isCurrentOverloaded",
                   2,
                   "/Components/Battery/DJIBattery_WarningRecord.html",
                   "#DJIBattery_WarningRecord_isCurrentOverloaded_inline",
                   "`true` if the battery should be discharged due to a current overload.  @return A boolean value.",
            ],
            [
                   "`true` if the battery should be discharged due to a current overload.  @return A boolean value.",
                   1,
                   "/Components/Battery/DJIBattery_WarningRecord.html",
                   "#DJIBattery_WarningRecord_isCurrentOverloaded_inline",
                   "",
            ],
            [
                   "isOverHeated",
                   2,
                   "/Components/Battery/DJIBattery_WarningRecord.html",
                   "#DJIBattery_WarningRecord_isOverHeated_inline",
                   "`true` if the battery has overheated.  @return A boolean value.",
            ],
            [
                   "`true` if the battery has overheated.  @return A boolean value.",
                   1,
                   "/Components/Battery/DJIBattery_WarningRecord.html",
                   "#DJIBattery_WarningRecord_isOverHeated_inline",
                   "",
            ],
            [
                   "isLowTemperature",
                   2,
                   "/Components/Battery/DJIBattery_WarningRecord.html",
                   "#DJIBattery_WarningRecord_isLowTemperature_inline",
                   "`true` if the battery has experienced a temperature that is too low.  @return A boolean value.",
            ],
            [
                   "`true` if the battery has experienced a temperature that is too low.  @return A boolean value.",
                   1,
                   "/Components/Battery/DJIBattery_WarningRecord.html",
                   "#DJIBattery_WarningRecord_isLowTemperature_inline",
                   "",
            ],
            [
                   "isShortCircuited",
                   2,
                   "/Components/Battery/DJIBattery_WarningRecord.html",
                   "#DJIBattery_WarningRecord_isShortCircuited_inline",
                   "`true` if the battery has been or is short circuited.  @return A boolean value.",
            ],
            [
                   "`true` if the battery has been or is short circuited.  @return A boolean value.",
                   1,
                   "/Components/Battery/DJIBattery_WarningRecord.html",
                   "#DJIBattery_WarningRecord_isShortCircuited_inline",
                   "",
            ],
            [
                   "isCustomDischargeEnabled",
                   2,
                   "/Components/Battery/DJIBattery_WarningRecord.html",
                   "#DJIBattery_WarningRecord_isCustomDischargeEnabled_inline",
                   "`true` if the battery has been configured to be discharged over a specific number of days. Once the battery is fully recharged, the battery will again discharge over the number of days set here. This process is cyclical.  @return A boolean value.",
            ],
            [
                   "`true` if the battery has been configured to be discharged over a specific number of days. Once the battery is fully recharged, the battery will again discharge over the number of days set here. This process is cyclical.  @return A boolean value.",
                   1,
                   "/Components/Battery/DJIBattery_WarningRecord.html",
                   "#DJIBattery_WarningRecord_isCustomDischargeEnabled_inline",
                   "",
            ],
            [
                   "getLowVoltageCellIndex",
                   2,
                   "/Components/Battery/DJIBattery_WarningRecord.html",
                   "#DJIBattery_WarningRecord_lowVoltageCellIndex_inline",
                   "Returns the index at which one of the cells in the battery is below the normal voltage. The first cell has an index of 0.  -1 represents no battery cells under voltage. Phantom Series Aircraft have four cell batteries. Inspire series aircraft and the M100 have 6 cell batteries.  @return An int value.",
            ],
            [
                   "Returns the index at which one of the cells in the battery is below the normal voltage. The first cell has an index of 0.  -1 represents no battery cells under voltage. Phantom Series Aircraft have four cell batteries. Inspire series aircraft and the M100 have 6 cell batteries.  @return An int value.",
                   1,
                   "/Components/Battery/DJIBattery_WarningRecord.html",
                   "#DJIBattery_WarningRecord_lowVoltageCellIndex_inline",
                   "",
            ],
            [
                   "getDamagedCellIndex",
                   2,
                   "/Components/Battery/DJIBattery_WarningRecord.html",
                   "#DJIBattery_WarningRecord_damagedCellIndex_inline",
                   "Returns the index at which one of the cells in the battery is damaged. The first cell has an index of 0. -1 represents no damaged battery cells. Phantom 3 aircraft have 4 cell batteries. Inspire series aircraft and the M100 have 6 cell batteries.  @return An int value.",
            ],
            [
                   "Returns the index at which one of the cells in the battery is damaged. The first cell has an index of 0. -1 represents no damaged battery cells. Phantom 3 aircraft have 4 cell batteries. Inspire series aircraft and the M100 have 6 cell batteries.  @return An int value.",
                   1,
                   "/Components/Battery/DJIBattery_WarningRecord.html",
                   "#DJIBattery_WarningRecord_damagedCellIndex_inline",
                   "",
            ],
            [
                   "setSystemStateCallback",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setDJICameraUpdatedSystemStateCallback_inline",
                   "Sets the camera's system state callback. The onUpdate function has a CameraSystemState object as  its parameter.  Precondition:  A Callback object must be implemented and passed  in as a parameter.  Postcondition:  The Callback object that was passed in as a  parameter will call its onUpdate function at regular intervals.  @param updatedSystemStateCallBack The Callback object to set as the callback. <br> Callback  implements an `onUpdate` method.</br>  The CameraSDCardState object contains information about the SD card  inserted into the aircraft's camera.",
            ],
            [
                   "Sets the camera's system state callback. The onUpdate function has a CameraSystemState object as  its parameter.  Precondition:  A Callback object must be implemented and passed  in as a parameter.  Postcondition:  The Callback object that was passed in as a  parameter will call its onUpdate function at regular intervals.  @param updatedSystemStateCallBack The Callback object to set as the callback. <br> Callback  implements an `onUpdate` method.</br>  The CameraSDCardState object contains information about the SD card  inserted into the aircraft's camera.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setDJICameraUpdatedSystemStateCallback_inline",
                   "",
            ],
            [
                   "setExposureSettingsCallback",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setCameraUpdatedCurrentExposureValuesCallback_inline",
                   "Sets the callback for updated exposure parameters. The callback's  `onUpdate` method will be called  each time the exposure parameters (ISO, Exposure Compensation, Shutter Speed and Aperture) are updated.  @param callback The execution callback.",
            ],
            [
                   "Sets the callback for updated exposure parameters. The callback's  `onUpdate` method will be called  each time the exposure parameters (ISO, Exposure Compensation, Shutter Speed and Aperture) are updated.  @param callback The execution callback.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setCameraUpdatedCurrentExposureValuesCallback_inline",
                   "",
            ],
            [
                   "setMediaFileCallback",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setDJICameraGeneratedNewMediaFileCallback_inline",
                   "Sets the camera's new generated media file callback.  @param callback The Callback object to set as the callback. The callback's method `onNewFile` has a `MediaFile` object as it's parameter from which information about  the media type, index, file size and the created time can be obtained.",
            ],
            [
                   "Sets the camera's new generated media file callback.  @param callback The Callback object to set as the callback. The callback's method `onNewFile` has a `MediaFile` object as it's parameter from which information about  the media type, index, file size and the created time can be obtained.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setDJICameraGeneratedNewMediaFileCallback_inline",
                   "",
            ],
            [
                   "setTimeLapsePreviewCallback",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setDJICameraGeneratedTimeLapsePreviewCallback_inline",
                   "Sets the generated preview image callback. The callback's `onGenerate` method will be called each time a photo  has been taken.  @param generatedTimeLapseCallBack The execution callback.",
            ],
            [
                   "Sets the generated preview image callback. The callback's `onGenerate` method will be called each time a photo  has been taken.  @param generatedTimeLapseCallBack The execution callback.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setDJICameraGeneratedTimeLapsePreviewCallback_inline",
                   "",
            ],
            [
                   "setFocusStateCallback",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setDJIUpdateCameraLensStateCallBack_inline",
                   "Callback for updating the lens state.  @param updatedLensStateCallback The callback.",
            ],
            [
                   "Callback for updating the lens state.  @param updatedLensStateCallback The callback.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setDJIUpdateCameraLensStateCallBack_inline",
                   "",
            ],
            [
                   "setSDCardStateCallBack",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setDJIUpdateCameraSDCardStateCallBack_inline",
                   "Sets the camera's SD card information callback.  @param updatedSDCardStateCallback The Callback object to set as the callback.",
            ],
            [
                   "Sets the camera's SD card information callback.  @param updatedSDCardStateCallback The Callback object to set as the callback.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setDJIUpdateCameraSDCardStateCallBack_inline",
                   "",
            ],
            [
                   "setSSDStateCallback",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setDJIUpdateCameraSSDStateCallBack_inline",
                   "Callback for updating the SSD state.  @param updatedSSDStateCallback The Callback.",
            ],
            [
                   "Callback for updating the SSD state.  @param updatedSSDStateCallback The Callback.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setDJIUpdateCameraSSDStateCallBack_inline",
                   "",
            ],
            [
                   "setThermalTemperatureCallback",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setDJIThermalCameraTemperatureDataCallback_inline",
                   "Sets the thermal camera's temperature update callback. Callback is used when there is a new temperature value available for the set spot metering target point.  Supported only by thermal imaging cameras with installed firmware version of 1.20.0.00 or higher.  @param updateCenterTemperatureCallback The Callback object to set as the callback. <br>  Callback implements an `onUpdate` method.</br>  The Float object contains information about the updated temperature value.",
            ],
            [
                   "Sets the thermal camera's temperature update callback. Callback is used when there is a new temperature value available for the set spot metering target point.  Supported only by thermal imaging cameras with installed firmware version of 1.20.0.00 or higher.  @param updateCenterTemperatureCallback The Callback object to set as the callback. <br>  Callback implements an `onUpdate` method.</br>  The Float object contains information about the updated temperature value.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setDJIThermalCameraTemperatureDataCallback_inline",
                   "",
            ],
            [
                   "setThermalAreaTemperatureAggregationsCallback",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setThermalCameraAreaTemperatureAggregationsUpdatedCallback_inline",
                   "Sets the thermal camera's temperature aggregation update callback.   Callback will be called when there are new min,  max, and average values available for the set spot metering area.  Supported only by thermal imaging  cameras with installed firmware version of 1.20.0.00 or higher.  @param areaTemperatureAggregationsUpdatedCallback The Callback object to set as the callback.",
            ],
            [
                   "Sets the thermal camera's temperature aggregation update callback.   Callback will be called when there are new min,  max, and average values available for the set spot metering area.  Supported only by thermal imaging  cameras with installed firmware version of 1.20.0.00 or higher.  @param areaTemperatureAggregationsUpdatedCallback The Callback object to set as the callback.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setThermalCameraAreaTemperatureAggregationsUpdatedCallback_inline",
                   "",
            ],
            [
                   "setThermalExternalSceneSettingsCallback",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setThermalCameraExternalSceneSettingsUpdatedCallback_inline",
                   "Sets the thermal camera's external scene settings update callback.  Callback will get called when updated external scene settings are available.  Supported only by thermal imaging cameras with installed firmware version of 1.20.0.00 or higher.  @param thermalExternalSceneSettingsUpdatedCallback The Callback object to set as the callback.",
            ],
            [
                   "Sets the thermal camera's external scene settings update callback.  Callback will get called when updated external scene settings are available.  Supported only by thermal imaging cameras with installed firmware version of 1.20.0.00 or higher.  @param thermalExternalSceneSettingsUpdatedCallback The Callback object to set as the callback.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setThermalCameraExternalSceneSettingsUpdatedCallback_inline",
                   "",
            ],
            [
                   "getDisplayName",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_displayName_inline",
                   "Return string that represents name of the camera.  @return An instance of display name String.",
            ],
            [
                   "Return string that represents name of the camera.  @return An instance of display name String.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_displayName_inline",
                   "",
            ],
            [
                   "getCapabilities",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_capabilities_inline",
                   "Camera capabilities.  @return An object of `Capabilities`.",
            ],
            [
                   "Camera capabilities.  @return An object of `Capabilities`.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_capabilities_inline",
                   "",
            ],
            [
                   "setMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setCameraMode_inline",
                   "Sets the camera's work mode to taking pictures, video, playback or download. Please note that you cannot  change the mode when a certain task is executing, such as taking photo(s), recording video, or downloading  and saving files. Also supported by thermal imaging camera.  @param mode Camera work mode. See enum named CameraMode in SettingsDefinitions to find details on camera work modes. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the camera's work mode to taking pictures, video, playback or download. Please note that you cannot  change the mode when a certain task is executing, such as taking photo(s), recording video, or downloading  and saving files. Also supported by thermal imaging camera.  @param mode Camera work mode. See enum named CameraMode in SettingsDefinitions to find details on camera work modes. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setCameraMode_inline",
                   "",
            ],
            [
                   "getMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_getCameraMode_inline",
                   "Gets the camera's current work mode. Also supported by thermal imaging camera.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's current work mode. Also supported by thermal imaging camera.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_getCameraMode_inline",
                   "",
            ],
            [
                   "startRecordVideo",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_startRecordVideo_inline",
                   "Starts recording video.  Precondition:  Camera must be in `RECORD_VIDEO` mode. For thermal imaging camera, user can take Single photo when recording video.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Starts recording video.  Precondition:  Camera must be in `RECORD_VIDEO` mode. For thermal imaging camera, user can take Single photo when recording video.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_startRecordVideo_inline",
                   "",
            ],
            [
                   "stopRecordVideo",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_stopRecordVideo_inline",
                   "Stops recording video.  Precondition:  The camera is recording currently.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Stops recording video.  Precondition:  The camera is recording currently.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_stopRecordVideo_inline",
                   "",
            ],
            [
                   "startShootPhoto",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_startShootPhoto_inline",
                   "Camera starts to take photo with one of the camera capture modes (shoot photo modes).Also,   Precondition:  1. Camera must be in ShootPhoto mode. Check the enum named CameraShootPhotoMode in  DJICameraSettingsDef to find all possible camera capture modes. For thermal imaging camera,  Single photo can be taken while recording video. 2. The SD card state should be checked before this  method is used to ensure sufficient space exists.  Post condition:  If the capture mode is either  Burst or Interval, calling stopShootPhoto will be required for the camera to stop taking photos.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Camera starts to take photo with one of the camera capture modes (shoot photo modes).Also,   Precondition:  1. Camera must be in ShootPhoto mode. Check the enum named CameraShootPhotoMode in  DJICameraSettingsDef to find all possible camera capture modes. For thermal imaging camera,  Single photo can be taken while recording video. 2. The SD card state should be checked before this  method is used to ensure sufficient space exists.  Post condition:  If the capture mode is either  Burst or Interval, calling stopShootPhoto will be required for the camera to stop taking photos.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_startShootPhoto_inline",
                   "",
            ],
            [
                   "stopShootPhoto",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_stopShootPhoto_inline",
                   "Camera stops taking photos.  Precondition:  1. `startShootPhoto` has been invoked  and the shoot mode is either Interval or Time-lapse.  2. If the capture mode is set to Single, the  camera will automatically stop taking the photo once the individual photo is taken.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Camera stops taking photos.  Precondition:  1. `startShootPhoto` has been invoked  and the shoot mode is either Interval or Time-lapse.  2. If the capture mode is set to Single, the  camera will automatically stop taking the photo once the individual photo is taken.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_stopShootPhoto_inline",
                   "",
            ],
            [
                   "setShootPhotoMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setShootPhotoMode_inline",
                   "Sets the photo shooting mode for the camera.  @param mode `ShootPhotoMode` enum value. @param callback Asynchronous execution result.",
            ],
            [
                   "Sets the photo shooting mode for the camera.  @param mode `ShootPhotoMode` enum value. @param callback Asynchronous execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setShootPhotoMode_inline",
                   "",
            ],
            [
                   "getShootPhotoMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_getShootPhotoMode_inline",
                   "Returns the current photo shooting mode of the camera.  @param callback Asynchronous execution result.",
            ],
            [
                   "Returns the current photo shooting mode of the camera.  @param callback Asynchronous execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_getShootPhotoMode_inline",
                   "",
            ],
            [
                   "isTimeLapseSupported",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_isTimeLapseSupported_inline",
                   "Check if the current device supports time-lapse shoot mode. Supported only on the Osmo camera.  @return `true` if timelapse is supported.",
            ],
            [
                   "Check if the current device supports time-lapse shoot mode. Supported only on the Osmo camera.  @return `true` if timelapse is supported.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_isTimeLapseSupported_inline",
                   "",
            ],
            [
                   "isMediaDownloadModeSupported",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_Media_isMediaDownloadModeSupported_inline",
                   "Check if the current device supports Media Download Mode.  @return `true` if the current device supports Media Download Mode, `false` otherwise.",
            ],
            [
                   "Check if the current device supports Media Download Mode.  @return `true` if the current device supports Media Download Mode, `false` otherwise.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_Media_isMediaDownloadModeSupported_inline",
                   "",
            ],
            [
                   "getMediaManager",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_mediaManager_inline",
                   "Media Manager is used for interaction when camera is in `MEDIA_DOWNLOAD`.  The user can only access the manager when `isMediaDownloadModeSupported` returns `true`. @return The `MediaManager` object if the aircraft supports media list feature.  Otherwise, returns `null`.  @return An instance of `MediaManager`.",
            ],
            [
                   "Media Manager is used for interaction when camera is in `MEDIA_DOWNLOAD`.  The user can only access the manager when `isMediaDownloadModeSupported` returns `true`. @return The `MediaManager` object if the aircraft supports media list feature.  Otherwise, returns `null`.  @return An instance of `MediaManager`.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_mediaManager_inline",
                   "",
            ],
            [
                   "isPlaybackSupported",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_Media_isPlaybackSupported_inline",
                   "Check if the current device supports Playback Mode.  @return A boolean value.",
            ],
            [
                   "Check if the current device supports Playback Mode.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_Media_isPlaybackSupported_inline",
                   "",
            ],
            [
                   "getPlaybackManager",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_playbackManager_inline",
                   "Gets the playback manager object. Playback Manager is used for interaction when camera is in  `PLAYBACK`. User can only access to the manager when `isPlaybackSupported`  returns `true`.  @return An instance of `PlaybackManager`.",
            ],
            [
                   "Gets the playback manager object. Playback Manager is used for interaction when camera is in  `PLAYBACK`. User can only access to the manager when `isPlaybackSupported`  returns `true`.  @return An instance of `PlaybackManager`.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_playbackManager_inline",
                   "",
            ],
            [
                   "setExposureMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setExposureMode_inline",
                   "Sets the camera's exposure mode. Check `ExposureMode` to view all possible camera exposure  modes. Please note that in different exposure mode, it will have different values for the same setting.  @param mode Camera exposure mode to set. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the camera's exposure mode. Check `ExposureMode` to view all possible camera exposure  modes. Please note that in different exposure mode, it will have different values for the same setting.  @param mode Camera exposure mode to set. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setExposureMode_inline",
                   "",
            ],
            [
                   "getExposureMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getExposureMode_inline",
                   "Gets the camera's exposure mode.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's exposure mode.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getExposureMode_inline",
                   "",
            ],
            [
                   "setISO",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setISO_inline",
                   "Sets the camera's ISO value. See `ISO` to view all possible ISO settings  for the camera. For the X5, X5R, Phantom 4 Pro camera, X4S and X5S, the ISO value can be set for all modes.  For the other cameras, the ISO value can only be set when the camera exposure mode is in Manual mode.  See the `setExposureMode` method for how to set exposure mode.  @param iso The ISO value to set the camera to use. Please check the enum CameraISOe in  DJICameraSettingsDef to find all possible ISO values that the camera can be set to. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the camera's ISO value. See `ISO` to view all possible ISO settings  for the camera. For the X5, X5R, Phantom 4 Pro camera, X4S and X5S, the ISO value can be set for all modes.  For the other cameras, the ISO value can only be set when the camera exposure mode is in Manual mode.  See the `setExposureMode` method for how to set exposure mode.  @param iso The ISO value to set the camera to use. Please check the enum CameraISOe in  DJICameraSettingsDef to find all possible ISO values that the camera can be set to. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setISO_inline",
                   "",
            ],
            [
                   "getISO",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getISO_inline",
                   "Gets the camera's ISO value.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's ISO value.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getISO_inline",
                   "",
            ],
            [
                   "setShutterSpeed",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setShutterSpeed_inline",
                   "Sets the camera shutter speed. To see all available shutterSpeed</code> value settings,  see `ShutterSpeed`. The shutter speed should not be set slower than the video frame rate  when the camera's mode is `RECORD_VIDEO`. For example, if the video  frame rate is 30fps, the shutterSpeed</code> must be <= 1/30. Precondition: The shutter speed can be  set only when the camera exposure mode is Shutter mode or Manual mode.  @param shutterSpeed The ISO value to set the camera to use. Please check the enum CameraISOe in DJICameraSettingsDef to find  all possible ISO values that the camera can be set to. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the camera shutter speed. To see all available shutterSpeed</code> value settings,  see `ShutterSpeed`. The shutter speed should not be set slower than the video frame rate  when the camera's mode is `RECORD_VIDEO`. For example, if the video  frame rate is 30fps, the shutterSpeed</code> must be <= 1/30. Precondition: The shutter speed can be  set only when the camera exposure mode is Shutter mode or Manual mode.  @param shutterSpeed The ISO value to set the camera to use. Please check the enum CameraISOe in DJICameraSettingsDef to find  all possible ISO values that the camera can be set to. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setShutterSpeed_inline",
                   "",
            ],
            [
                   "getShutterSpeed",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getShutterSpeed_inline",
                   "Gets the camera's shutter speed.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's shutter speed.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getShutterSpeed_inline",
                   "",
            ],
            [
                   "isAdjustableApertureSupported",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_isAdjustableApertureSupported_inline",
                   "Gets whether the camera supports an adjustable aperture. Currently adjustable aperture is supported only by the X5, X5R, X4S and X5S cameras.  @return A boolean value.",
            ],
            [
                   "Gets whether the camera supports an adjustable aperture. Currently adjustable aperture is supported only by the X5, X5R, X4S and X5S cameras.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_isAdjustableApertureSupported_inline",
                   "",
            ],
            [
                   "setAperture",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setAperture_inline",
                   "Sets the aperture value. This feature is available only when `isAdjustableApertureSupported` returns  `true`.  Precondition:  The exposure mode `ExposureMode` must be in  `MANUAL` or  `APERTURE_PRIORITY`. </br> Supported only by the X5, X5R, X4S and X5S camera.  @param aperture The aperture to set. Check enum CameraLensFocusMode in DJICameraSettingsDef. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the aperture value. This feature is available only when `isAdjustableApertureSupported` returns  `true`.  Precondition:  The exposure mode `ExposureMode` must be in  `MANUAL` or  `APERTURE_PRIORITY`. </br> Supported only by the X5, X5R, X4S and X5S camera.  @param aperture The aperture to set. Check enum CameraLensFocusMode in DJICameraSettingsDef. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setAperture_inline",
                   "",
            ],
            [
                   "getAperture",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getAperture_inline",
                   "Gets the lens aperture. This feature is available only when `isAdjustableApertureSupported` returns `true`.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the lens aperture. This feature is available only when `isAdjustableApertureSupported` returns `true`.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getAperture_inline",
                   "",
            ],
            [
                   "setMeteringMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setMeteringMode_inline",
                   "Sets the camera's exposure metering. See `MeteringMode` to view all possible exposure  metering settings for the camera.  @param mode Exposure metering to be set. Check the enum `MeteringMode` to find all possible  exposure metering the camera can be set to. @param callback The execution callback with the execution result",
            ],
            [
                   "Sets the camera's exposure metering. See `MeteringMode` to view all possible exposure  metering settings for the camera.  @param mode Exposure metering to be set. Check the enum `MeteringMode` to find all possible  exposure metering the camera can be set to. @param callback The execution callback with the execution result",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setMeteringMode_inline",
                   "",
            ],
            [
                   "getMeteringMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getMeteringMode_inline",
                   "Gets the camera's exposure metering.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's exposure metering.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getMeteringMode_inline",
                   "",
            ],
            [
                   "setSpotMeteringTarget",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setSpotMeteringAreaIndex_inline",
                   "Sets the spot metering area index. The camera image is divided into 96 spots defined by 12 columns and 8 rows.  The row index range is [0,7], where the values increase top to bottom across the image. The column index range  is [0, 11], where the values increase left to right. In order to make the method work, The camera exposure mode  should be Program</code>, Shutter</code> or Aperture</code>, the exposure metering mode must  be `SPOT`, and `setAELock` must be  `false`.  @param spotIndex Spot metering point coordinate (x, y).  x is column index to be set. The value should falls in [0, 11], where the values increase left to right.  y is row index to be set. The value should falls in [0, 7], where the values increase top to bottom across the image. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the spot metering area index. The camera image is divided into 96 spots defined by 12 columns and 8 rows.  The row index range is [0,7], where the values increase top to bottom across the image. The column index range  is [0, 11], where the values increase left to right. In order to make the method work, The camera exposure mode  should be Program</code>, Shutter</code> or Aperture</code>, the exposure metering mode must  be `SPOT`, and `setAELock` must be  `false`.  @param spotIndex Spot metering point coordinate (x, y).  x is column index to be set. The value should falls in [0, 11], where the values increase left to right.  y is row index to be set. The value should falls in [0, 7], where the values increase top to bottom across the image. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setSpotMeteringAreaIndex_inline",
                   "",
            ],
            [
                   "getSpotMeteringTarget",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getSpotMeteringAreaIndex_inline",
                   "Gets the spot metering area row index and column index. In order to make the method work, The camera exposure  mode should be `PROGRAM`, `SHUTTER_PRIORITY` or `APERTURE_PRIORITY`, the exposure metering mode must be `SPOT`,  and `getAELock` must be `false`.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the spot metering area row index and column index. In order to make the method work, The camera exposure  mode should be `PROGRAM`, `SHUTTER_PRIORITY` or `APERTURE_PRIORITY`, the exposure metering mode must be `SPOT`,  and `getAELock` must be `false`.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getSpotMeteringAreaIndex_inline",
                   "",
            ],
            [
                   "setExposureCompensation",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setExposureCompensation_inline",
                   "Sets the camera's exposure compensation. See `ExposureCompensation` to view all possible  exposure compensations to which the camera can be set. In order to use this function, set the camera exposure  mode to shutter</code>, program</code> or aperture</code>.  @param compensation Exposure compensation value to be set for the camera. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the camera's exposure compensation. See `ExposureCompensation` to view all possible  exposure compensations to which the camera can be set. In order to use this function, set the camera exposure  mode to shutter</code>, program</code> or aperture</code>.  @param compensation Exposure compensation value to be set for the camera. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setExposureCompensation_inline",
                   "",
            ],
            [
                   "getExposureCompensation",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getExposureCompensation_inline",
                   "Gets the camera's exposure compensation.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's exposure compensation.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getExposureCompensation_inline",
                   "",
            ],
            [
                   "setAELock",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setAELock_inline",
                   "Locks or unlocks the camera's AE (auto exposure).  Post condition:  If the AE lock is enabled, the  spot metering area cannot be set.  @param isLocked `true` if the camera AE is locked, `false` if it is unlocked. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Locks or unlocks the camera's AE (auto exposure).  Post condition:  If the AE lock is enabled, the  spot metering area cannot be set.  @param isLocked `true` if the camera AE is locked, `false` if it is unlocked. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setAELock_inline",
                   "",
            ],
            [
                   "getAELock",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getAELock_inline",
                   "Determines if the camera's AE (auto exposure) is locked.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Determines if the camera's AE (auto exposure) is locked.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getAELock_inline",
                   "",
            ],
            [
                   "setAutoAEUnlockEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setAutoAEUnlockEnabled_inline",
                   "Enables/disables auto-unlocking of AE lock after shooting a photo. If it is enabled,  the Auto Exposure will unlock after each shot. If disabled,  Auto Exposure will change when calling `setAELock`.  Only supported by X4S, X5S and Phantom 4 Pro cameras.  For the other products, auto-unlocking is always enabled.  @param enabled `true` if the camera AE will automatically unlock. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Enables/disables auto-unlocking of AE lock after shooting a photo. If it is enabled,  the Auto Exposure will unlock after each shot. If disabled,  Auto Exposure will change when calling `setAELock`.  Only supported by X4S, X5S and Phantom 4 Pro cameras.  For the other products, auto-unlocking is always enabled.  @param enabled `true` if the camera AE will automatically unlock. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setAutoAEUnlockEnabled_inline",
                   "",
            ],
            [
                   "getAutoAEUnlockEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getAutoAEUnlockEnabled_inline",
                   "Gets if auto-unlocking of AE lock is enabled. It is only supported by X4S, X5S and Phantom 4 Pro cameras.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets if auto-unlocking of AE lock is enabled. It is only supported by X4S, X5S and Phantom 4 Pro cameras.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getAutoAEUnlockEnabled_inline",
                   "",
            ],
            [
                   "setPhotoAEBCount",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setPhotoAEBParam_inline",
                   "Sets the camera's auto exposure bracketing (AEB) capture parameters.  @param count AEB capture count to be set for the camera. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the camera's auto exposure bracketing (AEB) capture parameters.  @param count AEB capture count to be set for the camera. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setPhotoAEBParam_inline",
                   "",
            ],
            [
                   "getPhotoAEBCount",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getPhotoAEBParam_inline",
                   "Gets the camera's AEB capture parameters.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's AEB capture parameters.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getPhotoAEBParam_inline",
                   "",
            ],
            [
                   "setWhiteBalance",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setWhiteBalanceAndColorTemperature_inline",
                   "Sets the camera's white balance (color temperature). When white balance is `CUSTOM`,  the colorTemperature argument is used. For all other values, the colorTemperature argument is ignored.  @param whiteBalance White balance value to be set. @param callback The execution callback with the returned execution result.  See Also: `WhiteBalancePreset` to view all possible white balance setting options for the camera.",
            ],
            [
                   "Sets the camera's white balance (color temperature). When white balance is `CUSTOM`,  the colorTemperature argument is used. For all other values, the colorTemperature argument is ignored.  @param whiteBalance White balance value to be set. @param callback The execution callback with the returned execution result.  See Also: `WhiteBalancePreset` to view all possible white balance setting options for the camera.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setWhiteBalanceAndColorTemperature_inline",
                   "",
            ],
            [
                   "getWhiteBalance",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getWhiteBalanceAndColorTemperature_inline",
                   "Gets the camera's white balance and color temperature.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's white balance and color temperature.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getWhiteBalanceAndColorTemperature_inline",
                   "",
            ],
            [
                   "isInterchangeableLensSupported",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_isChangeableLensSupported_inline",
                   "`true` if the changeable lens is supported by the camera. Currently a changeable lens is supported  only by the X5, X5R and X5S cameras.  @return A boolean value.",
            ],
            [
                   "`true` if the changeable lens is supported by the camera. Currently a changeable lens is supported  only by the X5, X5R and X5S cameras.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_isChangeableLensSupported_inline",
                   "",
            ],
            [
                   "getLensInformation",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getLensInformation_inline",
                   "Gets details of the installed lens. Supported only by the X5, X5R  and X5S cameras. This is available only when  `isInterchangeableLensSupported` returns `true`.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets details of the installed lens. Supported only by the X5, X5R  and X5S cameras. This is available only when  `isInterchangeableLensSupported` returns `true`.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getLensInformation_inline",
                   "",
            ],
            [
                   "isDigitalZoomSupported",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_isDigitalZoomScaleSupported_inline",
                   "Check if the current device supports digital zoom scale. It is supported by Osmo with X3 camera, Phantom 4  camera, Z3 camera, Mavic Pro camera and Z30 camera.  @return A boolean value.",
            ],
            [
                   "Check if the current device supports digital zoom scale. It is supported by Osmo with X3 camera, Phantom 4  camera, Z3 camera, Mavic Pro camera and Z30 camera.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_isDigitalZoomScaleSupported_inline",
                   "",
            ],
            [
                   "setDigitalZoomFactor",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setDigitalZoomScale_inline",
                   "Adjusts the digital zoom. It is supported by Osmo with X3 camera, Phantom 4 camera, Z3 camera and Mavic Pro camera.  @param factor The valid range is from 1.0 to 2.0. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Adjusts the digital zoom. It is supported by Osmo with X3 camera, Phantom 4 camera, Z3 camera and Mavic Pro camera.  @param factor The valid range is from 1.0 to 2.0. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setDigitalZoomScale_inline",
                   "",
            ],
            [
                   "getDigitalZoomFactor",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getDigitalZoomScale_inline",
                   "Gets current digital zoom. It is supported by Osmo with X3 camera, Phantom 4 camera,  Z3 camera, Mavic Pro camera and Z30 camera. Note Z30 cannot set the digital zoom scale,  but will use digital zoom when using `startContinuousOpticalZoom` and the optical zoom has reached its limit.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets current digital zoom. It is supported by Osmo with X3 camera, Phantom 4 camera,  Z3 camera, Mavic Pro camera and Z30 camera. Note Z30 cannot set the digital zoom scale,  but will use digital zoom when using `startContinuousOpticalZoom` and the optical zoom has reached its limit.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getDigitalZoomScale_inline",
                   "",
            ],
            [
                   "isOpticalZoomSupported",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_isOpticalZoomSupported_inline",
                   "Check if camera supports optical zoom. It is only supported by X5, X5R and X5S camera with the Olympus M.Zuiko ED 14-42mm f/3.5-5.6 EZ lens, Z3 camera and Z30 camera. @return `true` if camera supports optical zoom.  @return A boolean value.",
            ],
            [
                   "Check if camera supports optical zoom. It is only supported by X5, X5R and X5S camera with the Olympus M.Zuiko ED 14-42mm f/3.5-5.6 EZ lens, Z3 camera and Z30 camera. @return `true` if camera supports optical zoom.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_isOpticalZoomSupported_inline",
                   "",
            ],
            [
                   "getOpticalZoomSpec",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getOpticalZoomSpec_inline",
                   "Gets the specification of the zoom lens. It is only supported by X5, X5R and X5S camera with lens Olympus M.Zuiko ED 14-42mm f/3.5-5.6 EZ, Z3 camera and Z30 camera.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the specification of the zoom lens. It is only supported by X5, X5R and X5S camera with lens Olympus M.Zuiko ED 14-42mm f/3.5-5.6 EZ, Z3 camera and Z30 camera.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getOpticalZoomSpec_inline",
                   "",
            ],
            [
                   "setOpticalZoomFocalLength",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setOpticalZoomFocalLength_inline",
                   "Sets focal length of the zoom lens. It is only supported by X5, X5R and X5S camera with lens Olympus M.Zuiko ED  14-42mm f/3.5-5.6 EZ, Z3 camera and Z30 camera.  @param focalLength Focal length of zoom lens. Valid range is [`getMinFocalLength`, `getMaxFocalLength`] and must be a multiple of `getFocalLengthStep`. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets focal length of the zoom lens. It is only supported by X5, X5R and X5S camera with lens Olympus M.Zuiko ED  14-42mm f/3.5-5.6 EZ, Z3 camera and Z30 camera.  @param focalLength Focal length of zoom lens. Valid range is [`getMinFocalLength`, `getMaxFocalLength`] and must be a multiple of `getFocalLengthStep`. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setOpticalZoomFocalLength_inline",
                   "",
            ],
            [
                   "getOpticalZoomFocalLength",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getOpticalZoomFocalLength_inline",
                   "Gets zoom lens focal length in units of 0.1mm. It is only supported by X5, X5R and X5S camera with lens Olympus  M.Zuiko ED 14-42mm f/3.5-5.6 EZ, Z3 camera and Z30 camera.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets zoom lens focal length in units of 0.1mm. It is only supported by X5, X5R and X5S camera with lens Olympus  M.Zuiko ED 14-42mm f/3.5-5.6 EZ, Z3 camera and Z30 camera.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getOpticalZoomFocalLength_inline",
                   "",
            ],
            [
                   "getOpticalZoomFactor",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getOpticalZoomScale_inline",
                   "Gets current optical zoom factor with range [1, 30]. Only supported by Z30 camera. The Z30 zoom factor can be changed with `setOpticalZoomFocalLength` and `startContinuousOpticalZoom`. The zoom factor is then calculated and given through this method.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets current optical zoom factor with range [1, 30]. Only supported by Z30 camera. The Z30 zoom factor can be changed with `setOpticalZoomFocalLength` and `startContinuousOpticalZoom`. The zoom factor is then calculated and given through this method.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getOpticalZoomScale_inline",
                   "",
            ],
            [
                   "startContinuousOpticalZoom",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_startContinuousOpticalZoom_inline",
                   "Start changing the focal length of the lens in specified direction with specified speed. Focal length change  (zooming) will halt when maximum or minimum focal lengths are reached,  or `stopContinuousOpticalZoom` is called. It is only supported by X5, X5R and X5S camera on Osmo with lens Olympus M.Zuiko ED 14-42mm f/3.5-5.6 EZ, Z3 camera and Z30 camera.  @param direction Direction to zoom. @param speed Zoom speed. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Start changing the focal length of the lens in specified direction with specified speed. Focal length change  (zooming) will halt when maximum or minimum focal lengths are reached,  or `stopContinuousOpticalZoom` is called. It is only supported by X5, X5R and X5S camera on Osmo with lens Olympus M.Zuiko ED 14-42mm f/3.5-5.6 EZ, Z3 camera and Z30 camera.  @param direction Direction to zoom. @param speed Zoom speed. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_startContinuousOpticalZoom_inline",
                   "",
            ],
            [
                   "stopContinuousOpticalZoom",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_stopContinuousOpticalZoom_inline",
                   "Called to stop focal length changing, when it currently is from calling `startContinuousOpticalZoom`.  It is only supported by X5, X5R and X5S camera on Osmo with lens Olympus M.Zuiko ED 14-42mm f/3.5-5.6 EZ, Z3 camera and  Z30 camera.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Called to stop focal length changing, when it currently is from calling `startContinuousOpticalZoom`.  It is only supported by X5, X5R and X5S camera on Osmo with lens Olympus M.Zuiko ED 14-42mm f/3.5-5.6 EZ, Z3 camera and  Z30 camera.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_stopContinuousOpticalZoom_inline",
                   "",
            ],
            [
                   "isTapZoomSupported",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_isTapZoomSupported_inline",
                   "Determines whether the current camera supports TapZoom feature. TapZoom is only supported by Z30 camera.  @return `true` if the camera supports TapZoom.  @return A boolean value.",
            ],
            [
                   "Determines whether the current camera supports TapZoom feature. TapZoom is only supported by Z30 camera.  @return `true` if the camera supports TapZoom.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_isTapZoomSupported_inline",
                   "",
            ],
            [
                   "setTapZoomEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setTapZoomEnabled_inline",
                   "Enable/disable TapZoom. `tapZoomAtTarget` can only be called when TapZoom is enabled.  Only supported by Z30 camera.  @param enabled The execution callback with the returned execution result. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Enable/disable TapZoom. `tapZoomAtTarget` can only be called when TapZoom is enabled.  Only supported by Z30 camera.  @param enabled The execution callback with the returned execution result. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setTapZoomEnabled_inline",
                   "",
            ],
            [
                   "getTapZoomEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getTapZoomEnabled_inline",
                   "Gets if TapZoom is enabled. It is only supported by Z30 camera.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets if TapZoom is enabled. It is only supported by Z30 camera.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getTapZoomEnabled_inline",
                   "",
            ],
            [
                   "setTapZoomMultiplier",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setTapZoomMultiplier_inline",
                   "TapZoom uses a multiplier to change the zoom scale when called. The final zoom scale for a TapZoom will be:  Current Zoom Scale x Multiplier. The multiplier range is [1,5]. A multiplier of 1 will not change the zoom.  When the multiplier is 1, the zoom scale will not change during TapZoom. It is only supported by Z30 camera.  @param multiplier Multiplier of TapZoom. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "TapZoom uses a multiplier to change the zoom scale when called. The final zoom scale for a TapZoom will be:  Current Zoom Scale x Multiplier. The multiplier range is [1,5]. A multiplier of 1 will not change the zoom.  When the multiplier is 1, the zoom scale will not change during TapZoom. It is only supported by Z30 camera.  @param multiplier Multiplier of TapZoom. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setTapZoomMultiplier_inline",
                   "",
            ],
            [
                   "getTapZoomMultiplier",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getTapZoomMultiplier_inline",
                   "Gets the multiplier for TapZoom. It is only supported by Z30 camera.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the multiplier for TapZoom. It is only supported by Z30 camera.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getTapZoomMultiplier_inline",
                   "",
            ],
            [
                   "tapZoomAtTarget",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_tapZoomAtTarget_inline",
                   "TapZoom at the target. It can be called only when TapZoom is enabled.  When a new target is set, the gimbal  will rotate and locate the target in the center of the screen. At the same time, the camera will zoom by  multiplying the TapZoom multiplier. Only supported by Z30 camera.  @param target The CameraTapZoomTargetPoint to zoom. The range for x and y is from 0.0 to 1.0.  The point [0.0, 0.0] represents the top-left corner of the screen. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "TapZoom at the target. It can be called only when TapZoom is enabled.  When a new target is set, the gimbal  will rotate and locate the target in the center of the screen. At the same time, the camera will zoom by  multiplying the TapZoom multiplier. Only supported by Z30 camera.  @param target The CameraTapZoomTargetPoint to zoom. The range for x and y is from 0.0 to 1.0.  The point [0.0, 0.0] represents the top-left corner of the screen. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_tapZoomAtTarget_inline",
                   "",
            ],
            [
                   "isAdjustableFocalPointSupported",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_isAdjustableFocalPointSupported_inline",
                   "Determines whether the camera supports an adjustable focal point. Currently, the adjustable focal point is  supported by the X5, X5R, Z3, Mavic Pro camera, Z30, Phantom 4 Pro camera, X4S and X5S.  @return A boolean value.",
            ],
            [
                   "Determines whether the camera supports an adjustable focal point. Currently, the adjustable focal point is  supported by the X5, X5R, Z3, Mavic Pro camera, Z30, Phantom 4 Pro camera, X4S and X5S.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_isAdjustableFocalPointSupported_inline",
                   "",
            ],
            [
                   "setFocusMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setLensFocusMode_inline",
                   "Sets the lens focus mode. See `FocusMode`. It is available only  when `isAdjustableFocalPointSupported` returns `true`.  Supported by the X5, X5R, Z3 cameras (Z3 camera can only support `AUTO`),  the Mavic Pro camera, Z30, Phantom 4 Pro camera, X4S and X5S.  @param focusMode Focus mode to set. Check `FocusMode` for more detail. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the lens focus mode. See `FocusMode`. It is available only  when `isAdjustableFocalPointSupported` returns `true`.  Supported by the X5, X5R, Z3 cameras (Z3 camera can only support `AUTO`),  the Mavic Pro camera, Z30, Phantom 4 Pro camera, X4S and X5S.  @param focusMode Focus mode to set. Check `FocusMode` for more detail. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setLensFocusMode_inline",
                   "",
            ],
            [
                   "getFocusMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getLensFocusMode_inline",
                   "Gets the lens focus mode. Please check `FocusMode`. It is available only  when `isAdjustableFocalPointSupported` returns `true`.  Supported only by the X5, X5R, Z3 cameras, Mavic Pro camera, Z30, Phantom 4 Pro camera, X4S, X5S.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the lens focus mode. Please check `FocusMode`. It is available only  when `isAdjustableFocalPointSupported` returns `true`.  Supported only by the X5, X5R, Z3 cameras, Mavic Pro camera, Z30, Phantom 4 Pro camera, X4S, X5S.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getLensFocusMode_inline",
                   "",
            ],
            [
                   "setFocusTarget",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setLensFocusTarget_inline",
                   "Sets the lens focus target point. When the focus mode is auto, the target point is the focal point. When the  focus mode is manual, the target point is the zoom out area if the focus assistant is enabled for the manual  mode. It is available only when `isAdjustableFocalPointSupported` returns  `true`. Supported only by the X5, X5R, Z3 cameras, Mavic Pro camera and Phantom 4 Pro  camera, X4S and X5S.  @param focusTarget The focus target to set. The range for x and y is from 0.0 to 1.0. The point [0.0, 0.0] represents the top-left angle of the screen. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the lens focus target point. When the focus mode is auto, the target point is the focal point. When the  focus mode is manual, the target point is the zoom out area if the focus assistant is enabled for the manual  mode. It is available only when `isAdjustableFocalPointSupported` returns  `true`. Supported only by the X5, X5R, Z3 cameras, Mavic Pro camera and Phantom 4 Pro  camera, X4S and X5S.  @param focusTarget The focus target to set. The range for x and y is from 0.0 to 1.0. The point [0.0, 0.0] represents the top-left angle of the screen. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setLensFocusTarget_inline",
                   "",
            ],
            [
                   "getFocusTarget",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getLensFocusTarget_inline",
                   "Gets the lens focus target point. It is available only when `isAdjustableFocalPointSupported`  returns `true`. Supported only by the X5, X5R, Z3 cameras, Mavic Pro camera and Phantom 4 Pro camera,  X4S and X5S.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the lens focus target point. It is available only when `isAdjustableFocalPointSupported`  returns `true`. Supported only by the X5, X5R, Z3 cameras, Mavic Pro camera and Phantom 4 Pro camera,  X4S and X5S.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getLensFocusTarget_inline",
                   "",
            ],
            [
                   "setFocusAssistantSettings",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setLensFocusAssistantEnabled_inline",
                   "Used to enable/disable the lens focus assistant. When the focus assistant is enabled,  the camera live view will digitally zoom into the focus target area so the user can see the quality of focus. Focus assistant can be used for both manual focus (MF) and auto focus (AF). It is available only when `isAdjustableFocalPointSupported` returns  `true`. Supported only by the X5, X5R, Z3, Phantom 4 Pro camera, X4S and X5S.  Because Z3 only supports AF mode, `isEnabledMF` will be ignored.  @param settings Sets whether the lens focus assistant for AF and MF mode is enabled. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Used to enable/disable the lens focus assistant. When the focus assistant is enabled,  the camera live view will digitally zoom into the focus target area so the user can see the quality of focus. Focus assistant can be used for both manual focus (MF) and auto focus (AF). It is available only when `isAdjustableFocalPointSupported` returns  `true`. Supported only by the X5, X5R, Z3, Phantom 4 Pro camera, X4S and X5S.  Because Z3 only supports AF mode, `isEnabledMF` will be ignored.  @param settings Sets whether the lens focus assistant for AF and MF mode is enabled. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setLensFocusAssistantEnabled_inline",
                   "",
            ],
            [
                   "getFocusAssistantSettings",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getLensFocusAssistantEnabled_inline",
                   "Determines whether the lens focus assistant is enabled.  When the focus assistant is enabled,  the camera live view will digitally zoom into the focus target area so the user can see the quality of focus. Focus assistant can be used for both manual focus (MF) and auto focus (AF). It is available only when `isAdjustableFocalPointSupported`  returns `true`. Supported only by the X5, X5R, Z3 cameras, Phantom 4 Pro. X4s and X5S.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Determines whether the lens focus assistant is enabled.  When the focus assistant is enabled,  the camera live view will digitally zoom into the focus target area so the user can see the quality of focus. Focus assistant can be used for both manual focus (MF) and auto focus (AF). It is available only when `isAdjustableFocalPointSupported`  returns `true`. Supported only by the X5, X5R, Z3 cameras, Phantom 4 Pro. X4s and X5S.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getLensFocusAssistantEnabled_inline",
                   "",
            ],
            [
                   "getFocusRingValueUpperBound",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getLensFocusRingValueUpperBound_inline",
                   "Gets the lens focusing ring value's max value. It is available only when `isAdjustableFocalPointSupported`  returns `true`. Supported only by the X5, X5R, Z3 cameras, Phantom 4 Pro, X4S and X5S.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the lens focusing ring value's max value. It is available only when `isAdjustableFocalPointSupported`  returns `true`. Supported only by the X5, X5R, Z3 cameras, Phantom 4 Pro, X4S and X5S.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getLensFocusRingValueUpperBound_inline",
                   "",
            ],
            [
                   "setFocusRingValue",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setLensFocusRingValue_inline",
                   "Set the focal distance by simulating the focus ring adjustment. Value  can have a range of  0, `getFocusRingValueUpperBound`],  which represents infinity and the closest possible focal distance. It is available only when `isAdjustableFocalPointSupported` returns `true`.  For some lenses, the minimum focus  ring value is larger than 0. For example the minimum of DJI MFT 15mm f/1.7 ASPH is 270.  To retrieve the minimum value, perform the  following steps: - Call `setFocusMode`  with `AUTO`.  - Call `setFocusTarget` with the  furthest target (>30m).  - Call `getFocusRingValue` to get the  current focus ring value. This is the minimum value.  The maximum value can be retrieved using `getFocusRingValueUpperBound`. Supported only by X5, X5R, Z3 cameras, Phantom 4 Pro. X4S and X5S.  @param value Value to adjust focus ring to. The minimum value is 0, the maximum value depends on the installed lens. Please use  method `getFocusRingValueUpperBound` to ensure the input argument is valid. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Set the focal distance by simulating the focus ring adjustment. Value  can have a range of  0, `getFocusRingValueUpperBound`],  which represents infinity and the closest possible focal distance. It is available only when `isAdjustableFocalPointSupported` returns `true`.  For some lenses, the minimum focus  ring value is larger than 0. For example the minimum of DJI MFT 15mm f/1.7 ASPH is 270.  To retrieve the minimum value, perform the  following steps: - Call `setFocusMode`  with `AUTO`.  - Call `setFocusTarget` with the  furthest target (>30m).  - Call `getFocusRingValue` to get the  current focus ring value. This is the minimum value.  The maximum value can be retrieved using `getFocusRingValueUpperBound`. Supported only by X5, X5R, Z3 cameras, Phantom 4 Pro. X4S and X5S.  @param value Value to adjust focus ring to. The minimum value is 0, the maximum value depends on the installed lens. Please use  method `getFocusRingValueUpperBound` to ensure the input argument is valid. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setLensFocusRingValue_inline",
                   "",
            ],
            [
                   "getFocusRingValue",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getLensFocusRingValue_inline",
                   "Gets the lens focus ring value. It is available only when `isAdjustableFocalPointSupported`  returns `true`. Supported only by the X5, X5R, Z3 cameras, Phantom 4 Pro, X4S and X5S.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the lens focus ring value. It is available only when `isAdjustableFocalPointSupported`  returns `true`. Supported only by the X5, X5R, Z3 cameras, Phantom 4 Pro, X4S and X5S.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getLensFocusRingValue_inline",
                   "",
            ],
            [
                   "restoreFactorySettings",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_loadFactorySettings_inline",
                   "Load the camera's factory settings.  Post condition: The camera will reboot itself.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Load the camera's factory settings.  Post condition: The camera will reboot itself.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_loadFactorySettings_inline",
                   "",
            ],
            [
                   "saveSettingsToProfile",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_saveSettings_inline",
                   "Saves the current camera settings permanently to the specified profile. See `CustomSettingsProfile`  to view all possible camera users.  @param profile Camera profile for which to store camera settings. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Saves the current camera settings permanently to the specified profile. See `CustomSettingsProfile`  to view all possible camera users.  @param profile Camera profile for which to store camera settings. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_saveSettings_inline",
                   "",
            ],
            [
                   "loadSettingsFromProfile",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_loadSettings_inline",
                   "Load camera settings from the specified user.  Post condition:  The camera will reboot itself.  @param profile Camera profile to load camera settings from. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Load camera settings from the specified user.  Post condition:  The camera will reboot itself.  @param profile Camera profile to load camera settings from. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_loadSettings_inline",
                   "",
            ],
            [
                   "setPhotoAspectRatio",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setPhotoRatio_inline",
                   "Sets the camera's aspect ratio for photos. See `PhotoAspectRatio` to view all possible ratios. Not supported by Z30 camera as the aspect ratio of Z30 is always `RATIO_16_9`.  @param aspectRatio Aspect ratio for photos to be taken by camera. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the camera's aspect ratio for photos. See `PhotoAspectRatio` to view all possible ratios. Not supported by Z30 camera as the aspect ratio of Z30 is always `RATIO_16_9`.  @param aspectRatio Aspect ratio for photos to be taken by camera. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setPhotoRatio_inline",
                   "",
            ],
            [
                   "getPhotoAspectRatio",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getPhotoRatio_inline",
                   "Gets the camera's aspect ratio for photos.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's aspect ratio for photos.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getPhotoRatio_inline",
                   "",
            ],
            [
                   "setPhotoFileFormat",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setPhotoFileFormat_inline",
                   "Sets the camera's photo file format. See `PhotoFileFormat`  to view all possible photo formats to which the camera can be set. Also supported by thermal imaging camera.  Not supported by Z30 camera as the photo file format for Z30 is always `JPEG`.  @param format Photo file format used when the camera takes a photo. Check the enum `PhotoFileFormat`  to find all possible photo formats the camera can be set to. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the camera's photo file format. See `PhotoFileFormat`  to view all possible photo formats to which the camera can be set. Also supported by thermal imaging camera.  Not supported by Z30 camera as the photo file format for Z30 is always `JPEG`.  @param format Photo file format used when the camera takes a photo. Check the enum `PhotoFileFormat`  to find all possible photo formats the camera can be set to. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setPhotoFileFormat_inline",
                   "",
            ],
            [
                   "getPhotoFileFormat",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getPhotoFileFormat_inline",
                   "Gets the camera's photo file format.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's photo file format.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getPhotoFileFormat_inline",
                   "",
            ],
            [
                   "setPhotoBurstCount",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setPhotoBurstCount_inline",
                   "Sets the burst shoot count for the camera when the user wants to use that feature.  Check `PhotoBurstCount` to view all possible burst count values to which the  camera can be set.  @param count The number of photos to take in one  Burst shot. Please check the  enum `PhotoBurstCount` to find all possible burst count values the camera can be set to. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the burst shoot count for the camera when the user wants to use that feature.  Check `PhotoBurstCount` to view all possible burst count values to which the  camera can be set.  @param count The number of photos to take in one  Burst shot. Please check the  enum `PhotoBurstCount` to find all possible burst count values the camera can be set to. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setPhotoBurstCount_inline",
                   "",
            ],
            [
                   "getPhotoBurstCount",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getPhotoBurstCount_inline",
                   "Gets the burst count type.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the burst count type.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getPhotoBurstCount_inline",
                   "",
            ],
            [
                   "setPhotoRAWBurstCount",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setPhotoRAWBurstCount_inline",
                   "Sets the RAW image burst shoot count for the camera when the user wants to use that feature.  See `PhotoBurstCount` to view all possible burst count values to which the camera  can be set. Only supported by Inspire 2.  @param count The number of photos to take in one RAW burst shoot. @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Sets the RAW image burst shoot count for the camera when the user wants to use that feature.  See `PhotoBurstCount` to view all possible burst count values to which the camera  can be set. Only supported by Inspire 2.  @param count The number of photos to take in one RAW burst shoot. @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setPhotoRAWBurstCount_inline",
                   "",
            ],
            [
                   "getPhotoRAWBurstCount",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getPhotoRAWBurstCount_inline",
                   "Gets the RAW image burst count. Only supported by Inspire 2.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the RAW image burst count. Only supported by Inspire 2.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getPhotoRAWBurstCount_inline",
                   "",
            ],
            [
                   "setPhotoTimeIntervalSettings",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setPhotoIntervalParam_inline",
                   "Sets the interval shoot parameters. The camera will capture a photo, wait a specified interval of time,  take another photo, and continue in this manner until it has taken the required number of photos.  Also supported by thermal imaging camera.  @param settings An instance of `PhotoTimeIntervalSettings`. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the interval shoot parameters. The camera will capture a photo, wait a specified interval of time,  take another photo, and continue in this manner until it has taken the required number of photos.  Also supported by thermal imaging camera.  @param settings An instance of `PhotoTimeIntervalSettings`. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setPhotoIntervalParam_inline",
                   "",
            ],
            [
                   "getPhotoTimeIntervalSettings",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getPhotoIntervalParam_inline",
                   "Gets the camera's interval shoot parameters. </br></br>Also supported by thermal imaging camera.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's interval shoot parameters. </br></br>Also supported by thermal imaging camera.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getPhotoIntervalParam_inline",
                   "",
            ],
            [
                   "setPhotoTimeLapseSettings",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setPhotoTimeLapse_inline",
                   "Sets the TimeLapse parameters, including interval, duration and file format when saving. Precondition: Camera  should be in `TIME_LAPSE` mode of `ShootPhotoMode`.  @param settings The time between image captures. An integer falls in the  range, [10, 1000]. The unit is 100ms. Please note that when the format is  JPEG+Video, the minimum interval is 20(2 seconds). @param callback The execution block with the returned execution result.",
            ],
            [
                   "Sets the TimeLapse parameters, including interval, duration and file format when saving. Precondition: Camera  should be in `TIME_LAPSE` mode of `ShootPhotoMode`.  @param settings The time between image captures. An integer falls in the  range, [10, 1000]. The unit is 100ms. Please note that when the format is  JPEG+Video, the minimum interval is 20(2 seconds). @param callback The execution block with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setPhotoTimeLapse_inline",
                   "",
            ],
            [
                   "getPhotoTimeLapseSettings",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getPhotoTimeLapse_inline",
                   "Gets the TimeLapse parameters including interval, duration and file format when saving. Precondition: The  camera must be in `TIME_LAPSE` mode of `ShootPhotoMode`.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the TimeLapse parameters including interval, duration and file format when saving. Precondition: The  camera must be in `TIME_LAPSE` mode of `ShootPhotoMode`.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getPhotoTimeLapse_inline",
                   "",
            ],
            [
                   "setPhotoPanoramaMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setPhotoPanoramaMode_inline",
                   "Sets the panorama mode. It is used when `setShootPhotoMode` is called with `PANORAMA`.  It is only  supported by Spark.  @param mode The panorama mode to set. @param callback `completion callback` to receive the result.",
            ],
            [
                   "Sets the panorama mode. It is used when `setShootPhotoMode` is called with `PANORAMA`.  It is only  supported by Spark.  @param mode The panorama mode to set. @param callback `completion callback` to receive the result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setPhotoPanoramaMode_inline",
                   "",
            ],
            [
                   "getPhotoPanoramaMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getPhotoPanoramaMode_inline",
                   "Gets the panorama mode. It is only supported by Spark.  @param callback `completion callback` to receive the result.",
            ],
            [
                   "Gets the panorama mode. It is only supported by Spark.  @param callback `completion callback` to receive the result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getPhotoPanoramaMode_inline",
                   "",
            ],
            [
                   "setVideoResolutionAndFrameRate",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setVideoResolutionAndFrameRate_inline",
                   "Sets the camera's video resolution and frame rate. @warning The supported resolutions and frame rates for the  two different analog television standards PAL and NTSC are below:   <b>NTSC:</b>  Resolution_4096x2160, FrameRate_24fps  Resolution_3840x2160, FrameRate_30fps  Resolution_3840x2160, FrameRate_24fps  Resolution_2704X1520, FrameRate_30fps  Resolution_2704X1520, FrameRate_24fps  Resolution_1920x1080, FrameRate_120fps (Slow Motion)  Resolution_1920x1080, FrameRate_60fps  Resolution_1920x1080, FrameRate_48fps  Resolution_1920x1080, FrameRate_30fps  Resolution_1920x1080, FrameRate_24fps  Resolution_1280x720,  FrameRate_60fps  Resolution_1280x720,  FrameRate_48fps  Resolution_1280x720,  FrameRate_30fps  Resolution_1280x720,  FrameRate_24fps  <b>PAL:</b>  Resolution_4096x2160, FrameRate_25fps  Resolution_4096x2160, FrameRate_24fps  Resolution_3840x2160, FrameRate_25fps  Resolution_3840x2160, FrameRate_24fps  Resolution_2704X1520, FrameRate_25fps  Resolution_2704X1520, FrameRate_24fps  Resolution_1920x1080, FrameRate_120fps (Slow Motion)  Resolution_1920x1080, FrameRate_50fps  Resolution_1920x1080, FrameRate_48fps  Resolution_1920x1080, FrameRate_25fps  Resolution_1920x1080, FrameRate_24fps  Resolution_1280x720, FrameRate_50fps  Resolution_1280x720, FrameRate_48fps  Resolution_1280x720, FrameRate_25fps  Resolution_1280x720, FrameRate_24fps  @param resolutionAndFrameRate Resolution to be set for the video. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the camera's video resolution and frame rate. @warning The supported resolutions and frame rates for the  two different analog television standards PAL and NTSC are below:   <b>NTSC:</b>  Resolution_4096x2160, FrameRate_24fps  Resolution_3840x2160, FrameRate_30fps  Resolution_3840x2160, FrameRate_24fps  Resolution_2704X1520, FrameRate_30fps  Resolution_2704X1520, FrameRate_24fps  Resolution_1920x1080, FrameRate_120fps (Slow Motion)  Resolution_1920x1080, FrameRate_60fps  Resolution_1920x1080, FrameRate_48fps  Resolution_1920x1080, FrameRate_30fps  Resolution_1920x1080, FrameRate_24fps  Resolution_1280x720,  FrameRate_60fps  Resolution_1280x720,  FrameRate_48fps  Resolution_1280x720,  FrameRate_30fps  Resolution_1280x720,  FrameRate_24fps  <b>PAL:</b>  Resolution_4096x2160, FrameRate_25fps  Resolution_4096x2160, FrameRate_24fps  Resolution_3840x2160, FrameRate_25fps  Resolution_3840x2160, FrameRate_24fps  Resolution_2704X1520, FrameRate_25fps  Resolution_2704X1520, FrameRate_24fps  Resolution_1920x1080, FrameRate_120fps (Slow Motion)  Resolution_1920x1080, FrameRate_50fps  Resolution_1920x1080, FrameRate_48fps  Resolution_1920x1080, FrameRate_25fps  Resolution_1920x1080, FrameRate_24fps  Resolution_1280x720, FrameRate_50fps  Resolution_1280x720, FrameRate_48fps  Resolution_1280x720, FrameRate_25fps  Resolution_1280x720, FrameRate_24fps  @param resolutionAndFrameRate Resolution to be set for the video. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setVideoResolutionAndFrameRate_inline",
                   "",
            ],
            [
                   "getVideoResolutionAndFrameRate",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getVideoResolutionAndFrameRate_inline",
                   "Gets the camera's video resolution and frame rate values.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's video resolution and frame rate values.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getVideoResolutionAndFrameRate_inline",
                   "",
            ],
            [
                   "setVideoFileFormat",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setVideoFileFormat_inline",
                   "Sets the camera's video file format. The default value is `MOV`.  @param format Video file format to be set for videos. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the camera's video file format. The default value is `MOV`.  @param format Video file format to be set for videos. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setVideoFileFormat_inline",
                   "",
            ],
            [
                   "getVideoFileFormat",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getVideoFileFormat_inline",
                   "Gets the camera's video file format.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's video file format.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getVideoFileFormat_inline",
                   "",
            ],
            [
                   "setVideoStandard",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setVideoStandard_inline",
                   "Sets the camera's analog video standard. Setting the video standard to PAL or NTSC will limit the  available resolutions and frame rates to those compatible with the chosen video standard.  @param videoStandard Video standard value to be set for the camera. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the camera's analog video standard. Setting the video standard to PAL or NTSC will limit the  available resolutions and frame rates to those compatible with the chosen video standard.  @param videoStandard Video standard value to be set for the camera. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setVideoStandard_inline",
                   "",
            ],
            [
                   "getVideoStandard",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getVideoStandard_inline",
                   "Gets the camera's video standard value.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's video standard value.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getVideoStandard_inline",
                   "",
            ],
            [
                   "setVideoCaptionEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setVideoCaptionEnabled_inline",
                   "Enables recording position, time and camera information into a video caption file (.srt) saved on the  SD card. The information is updated at 1Hz. Currently the .srt file can only be downloaded directly  from the SD card.  @param enabled `true` to enable video caption. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Enables recording position, time and camera information into a video caption file (.srt) saved on the  SD card. The information is updated at 1Hz. Currently the .srt file can only be downloaded directly  from the SD card.  @param enabled `true` to enable video caption. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setVideoCaptionEnabled_inline",
                   "",
            ],
            [
                   "getVideoCaptionEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getVideoCaptionEnabled_inline",
                   "Gets whether the video caption is enabled.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets whether the video caption is enabled.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getVideoCaptionEnabled_inline",
                   "",
            ],
            [
                   "setVideoFileCompressionStandard",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setVideoFileCompressionStandard_inline",
                   "Sets the video file compression standard. Only supported by X4S camera, X5S camera and Phantom 4 Pro.  For all other products, H.264 is used.  @param standard The compression standard to use. @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Sets the video file compression standard. Only supported by X4S camera, X5S camera and Phantom 4 Pro.  For all other products, H.264 is used.  @param standard The compression standard to use. @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setVideoFileCompressionStandard_inline",
                   "",
            ],
            [
                   "getVideoFileCompressionStandard",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getVideoFileCompressionStandard_inline",
                   "Gets the video file compression standard. Only supported by X4S camera, X5S camera and Phantom 4 Pro.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the video file compression standard. Only supported by X4S camera, X5S camera and Phantom 4 Pro.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getVideoFileCompressionStandard_inline",
                   "",
            ],
            [
                   "setSSDVideoRecordingEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setSSDVideoRecordingEnabled_inline",
                   "Enables/disables the recording of RAW video. It is supported by X5S. User can use the other SSD  interfaces only when it is enabled. For X5R, RAW recording is always enabled if there is SSD inserted.  @param enabled `true` to enable the RAW video recording. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Enables/disables the recording of RAW video. It is supported by X5S. User can use the other SSD  interfaces only when it is enabled. For X5R, RAW recording is always enabled if there is SSD inserted.  @param enabled `true` to enable the RAW video recording. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setSSDVideoRecordingEnabled_inline",
                   "",
            ],
            [
                   "getSSDVideoRecordingEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_getSSDVideoRecordingEnabled_inline",
                   "Gets if the recording of RAW video is enabled. It is supported by X5S.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets if the recording of RAW video is enabled. It is supported by X5S.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_getSSDVideoRecordingEnabled_inline",
                   "",
            ],
            [
                   "setSSDVideoResolutionAndFrameRate",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setSSDVideoResolutionAndFrameRate_inline",
                   "Set Raw Video Resolution and Frame Rate of the SSD. Note, only raw video is saved to the SSD.  Compressed video, compressed pictures and raw pictures are all saved to the SD Card. During  video capture, Raw video and compressed video are saved simultaneously to the SSD and SD Card  respectively. @warning The supported resolutions and frame rates for SSD Raw Videos are shown  below:  <b>NTSC:</b>  Resolution_4096x2160, FrameRate_24fps  Resolution_3840x2160,  FrameRate_24fps  Resolution_3840x2160, FrameRate_30fps  Resolution_2704X1520, FrameRate_24fps   Resolution_2704X1520, FrameRate_30fps  Resolution_1920x1080, FrameRate_60fps  Resolution_1920x1080,  FrameRate_48fps  Resolution_1920x1080, FrameRate_30fps  Resolution_1920x1080, FrameRate_24fps  <b>PAL:</b>  Resolution_4096x2160, FrameRate_25fps  Resolution_4096x2160, FrameRate_24fps  Resolution_3840x2160, FrameRate_25fps  Resolution_3840x2160, FrameRate_24fps  Resolution_2704X1520,  FrameRate_25fps  Resolution_2704X1520, FrameRate_24fps  Resolution_1920x1080, FrameRate_50fps   Resolution_1920x1080, FrameRate_48fps  Resolution_1920x1080, FrameRate_25fps  Resolution_1920x1080, FrameRate_24fps  For X5S, the frame rate of SSD has to be the same as the video to be stored in SD card, so frameRate</code> is ignored. The possible resolutions are determined by SD card video's frame rate and the SSD video license (`CameraSSDVideoLicense`) being used. The supported resolutions in  the current configuration can be queried by using `SSDVideoResolutionRange` in `Capabilities`.  @param resolutionAndFrameRate Resolution and frame rate to be set for the video. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Set Raw Video Resolution and Frame Rate of the SSD. Note, only raw video is saved to the SSD.  Compressed video, compressed pictures and raw pictures are all saved to the SD Card. During  video capture, Raw video and compressed video are saved simultaneously to the SSD and SD Card  respectively. @warning The supported resolutions and frame rates for SSD Raw Videos are shown  below:  <b>NTSC:</b>  Resolution_4096x2160, FrameRate_24fps  Resolution_3840x2160,  FrameRate_24fps  Resolution_3840x2160, FrameRate_30fps  Resolution_2704X1520, FrameRate_24fps   Resolution_2704X1520, FrameRate_30fps  Resolution_1920x1080, FrameRate_60fps  Resolution_1920x1080,  FrameRate_48fps  Resolution_1920x1080, FrameRate_30fps  Resolution_1920x1080, FrameRate_24fps  <b>PAL:</b>  Resolution_4096x2160, FrameRate_25fps  Resolution_4096x2160, FrameRate_24fps  Resolution_3840x2160, FrameRate_25fps  Resolution_3840x2160, FrameRate_24fps  Resolution_2704X1520,  FrameRate_25fps  Resolution_2704X1520, FrameRate_24fps  Resolution_1920x1080, FrameRate_50fps   Resolution_1920x1080, FrameRate_48fps  Resolution_1920x1080, FrameRate_25fps  Resolution_1920x1080, FrameRate_24fps  For X5S, the frame rate of SSD has to be the same as the video to be stored in SD card, so frameRate</code> is ignored. The possible resolutions are determined by SD card video's frame rate and the SSD video license (`CameraSSDVideoLicense`) being used. The supported resolutions in  the current configuration can be queried by using `SSDVideoResolutionRange` in `Capabilities`.  @param resolutionAndFrameRate Resolution and frame rate to be set for the video. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setSSDVideoResolutionAndFrameRate_inline",
                   "",
            ],
            [
                   "getSSDVideoResolutionAndFrameRate",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_getSSDVideoResolutionAndFrameRate_inline",
                   "Get Raw Video Format and Frame Rate of the SSD.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Get Raw Video Format and Frame Rate of the SSD.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_getSSDVideoResolutionAndFrameRate_inline",
                   "",
            ],
            [
                   "setSSDVideoDigitalFilter",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setSSDVideoDigitalFilter_inline",
                   "Sets the digital filter for video that will be stored in SSD. It is only applied when the selected license key is either `LicenseKeyTypeProRes422HQ`  or `LicenseKeyTypeProRes4444XQ`. Only supported by Inspire 2.  @param filter SSD Digital filter to set. @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Sets the digital filter for video that will be stored in SSD. It is only applied when the selected license key is either `LicenseKeyTypeProRes422HQ`  or `LicenseKeyTypeProRes4444XQ`. Only supported by Inspire 2.  @param filter SSD Digital filter to set. @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_setSSDVideoDigitalFilter_inline",
                   "",
            ],
            [
                   "getSSDVideoDigitalFilter",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_getSSDVideoDigitalFilter_inline",
                   "Gets the digital filter for video that will store in SSD. Only supported by Inspire 2.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the digital filter for video that will store in SSD. Only supported by Inspire 2.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_getSSDVideoDigitalFilter_inline",
                   "",
            ],
            [
                   "getSSDVideoLicenses",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_getSSDVideoLicenses_inline",
                   "Gets purchased license key(s). An Inspire 2 License Key activates the usage permission of  CinemaDNG or Apple ProRes inside CineCore 2.0. User can purchase a license key on DJI's  website. It is supported by Inspire 2. the digital filter for video that will store in SSD.  Only supported by Inspire 2.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets purchased license key(s). An Inspire 2 License Key activates the usage permission of  CinemaDNG or Apple ProRes inside CineCore 2.0. User can purchase a license key on DJI's  website. It is supported by Inspire 2. the digital filter for video that will store in SSD.  Only supported by Inspire 2.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_getSSDVideoLicenses_inline",
                   "",
            ],
            [
                   "activateSSDVideoLicense",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_activateSSDVideoLicense_inline",
                   "Sets the SSD video license to be used. If an unpurchased license is selected then only SD video will be recorded.  @param license License to used. @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Sets the SSD video license to be used. If an unpurchased license is selected then only SD video will be recorded.  @param license License to used. @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_activateSSDVideoLicense_inline",
                   "",
            ],
            [
                   "getSSDVideoLicense",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_getSSDVideoLicense_inline",
                   "Gets the license key being used. It is supported by Inspire 2.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the license key being used. It is supported by Inspire 2.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_getSSDVideoLicense_inline",
                   "",
            ],
            [
                   "setFileIndexMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setFileIndexMode_inline",
                   "Sets the camera's file index mode for the SD card. The default value of `FileIndexMode`  is set to `RESET`.  @param mode File index mode to be set for the camera's SD card. The default value of CameraFileIndexMode is set to Reset. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the camera's file index mode for the SD card. The default value of `FileIndexMode`  is set to `RESET`.  @param mode File index mode to be set for the camera's SD card. The default value of CameraFileIndexMode is set to Reset. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setFileIndexMode_inline",
                   "",
            ],
            [
                   "getFileIndexMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getFileIndexMode_inline",
                   "Gets the camera's file index mode.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's file index mode.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getFileIndexMode_inline",
                   "",
            ],
            [
                   "formatSDCard",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_SDCardOperations_formatSDCard_inline",
                   "Formats the SD card by deleting all the data on the SD card. This does not change any settings the user may have  set on the SD card.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Formats the SD card by deleting all the data on the SD card. This does not change any settings the user may have  set on the SD card.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_SDCardOperations_formatSDCard_inline",
                   "",
            ],
            [
                   "isSSDSupported",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_isSSDSupported_inline",
                   "Determines whether the SSD is supported by the camera. Currently, the SSD is supported only by X5R, X4S and X5S  camera. @return `true` if SSD is supported, otherwise `false`.  @return A boolean value.",
            ],
            [
                   "Determines whether the SSD is supported by the camera. Currently, the SSD is supported only by X5R, X4S and X5S  camera. @return `true` if SSD is supported, otherwise `false`.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_isSSDSupported_inline",
                   "",
            ],
            [
                   "formatSSD",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_formatSSD_inline",
                   "Formats the SSD by deleting all the data on the SSD. This does not change any settings the user may have set on the SSD.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Formats the SSD by deleting all the data on the SSD. This does not change any settings the user may have set on the SSD.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_formatSSD_inline",
                   "",
            ],
            [
                   "setAntiFlickerFrequency",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setAntiFlicker_inline",
                   "Sets the camera's anti-flicker frequency for video recording. Precondition: The exposure mode must be Program.  Note: for the Z30 camera, changing anti-flicker will reboot the camera before the setting takes effect.  @param antiFlickerFrequency Anti-flicker value to set for the camera. See `AntiFlickerFrequency` to view all the possible anti-flicker type settings for the camera. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the camera's anti-flicker frequency for video recording. Precondition: The exposure mode must be Program.  Note: for the Z30 camera, changing anti-flicker will reboot the camera before the setting takes effect.  @param antiFlickerFrequency Anti-flicker value to set for the camera. See `AntiFlickerFrequency` to view all the possible anti-flicker type settings for the camera. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setAntiFlicker_inline",
                   "",
            ],
            [
                   "getAntiFlickerFrequency",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getAntiFlicker_inline",
                   "Gets the camera's anti-flicker.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's anti-flicker.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getAntiFlicker_inline",
                   "",
            ],
            [
                   "setSharpness",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setSharpness_inline",
                   "Sets the camera's sharpness. The default value is 0.  @param sharpness Sharpness value to be set in the range of [-3, 3]. @param callback Asynchronous execution result.",
            ],
            [
                   "Sets the camera's sharpness. The default value is 0.  @param sharpness Sharpness value to be set in the range of [-3, 3]. @param callback Asynchronous execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setSharpness_inline",
                   "",
            ],
            [
                   "getSharpness",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getSharpness_inline",
                   "Gets the camera's sharpness.  @param callback The execution callback with the returned value of sharpness with range [-3, 3].",
            ],
            [
                   "Gets the camera's sharpness.  @param callback The execution callback with the returned value of sharpness with range [-3, 3].",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getSharpness_inline",
                   "",
            ],
            [
                   "setContrast",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setContrast_inline",
                   "Sets the camera's contrast. The default saturation value is 0.  @param contrast Contrast value to be set in the range of [-3, 3]. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the camera's contrast. The default saturation value is 0.  @param contrast Contrast value to be set in the range of [-3, 3]. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setContrast_inline",
                   "",
            ],
            [
                   "getContrast",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getContrast_inline",
                   "Gets the camera's contrast.  @param callback The execution callback with the returned value of contrast with range [-3, 3].",
            ],
            [
                   "Gets the camera's contrast.  @param callback The execution callback with the returned value of contrast with range [-3, 3].",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getContrast_inline",
                   "",
            ],
            [
                   "setDefogEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setDefogEnabled_inline",
                   "Enable/disable defog feature. When defog feature is enabled, the contrast will be enhanced extraordinarily. Only supported by Z30.  @param enabled `true` to enable defog feature. @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Enable/disable defog feature. When defog feature is enabled, the contrast will be enhanced extraordinarily. Only supported by Z30.  @param enabled `true` to enable defog feature. @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setDefogEnabled_inline",
                   "",
            ],
            [
                   "getDefogEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getDefogEnabled_inline",
                   "Gets if defog feature is enabled. It is only supported by Z30 camera.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets if defog feature is enabled. It is only supported by Z30 camera.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getDefogEnabled_inline",
                   "",
            ],
            [
                   "setIRFilterEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setIRFilterEnabled_inline",
                   "Enables/disables the IR filter (infared filter). Disabling the IR filter can enhance the image in low light  environments. Enabling the IR filter can reduce the color distortion caused by the infared light. It is only  supported by Z30 camera.  @param enabled `true` to enable IR-Cut filter. @param callback Completion block that receives the setter result.",
            ],
            [
                   "Enables/disables the IR filter (infared filter). Disabling the IR filter can enhance the image in low light  environments. Enabling the IR filter can reduce the color distortion caused by the infared light. It is only  supported by Z30 camera.  @param enabled `true` to enable IR-Cut filter. @param callback Completion block that receives the setter result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setIRFilterEnabled_inline",
                   "",
            ],
            [
                   "getIRFilterEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getIRFilterEnabled_inline",
                   "Gets if IR filter (infared filter) is enabled. Disabling the IR filter can enhance the image in low light  environments. Enabling the IR filter can reduce the color distortion caused by the infared light. It is  only supported by Z30 camera.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets if IR filter (infared filter) is enabled. Disabling the IR filter can enhance the image in low light  environments. Enabling the IR filter can reduce the color distortion caused by the infared light. It is  only supported by Z30 camera.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getIRFilterEnabled_inline",
                   "",
            ],
            [
                   "setSaturation",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setSaturation_inline",
                   "Sets the camera's saturation. The default saturation value is 0.  @param saturation Saturation value to be set in the range of [-3, 3]. The default value of the saturation value is 0. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the camera's saturation. The default saturation value is 0.  @param saturation Saturation value to be set in the range of [-3, 3]. The default value of the saturation value is 0. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setSaturation_inline",
                   "",
            ],
            [
                   "getSaturation",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getSaturation_inline",
                   "Gets the camera's saturation.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's saturation.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getSaturation_inline",
                   "",
            ],
            [
                   "setDigitalFilter",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setDigitalFilter_inline",
                   "Sets the camera's digital filter. The default value is `NONE`. For a list of all possible camera digital filters, see `DigitalFilter`.  @param filter Digital filter to be set to the camera. The default value for CameraDigitalFilter is None. Check the enum  named CameraDigitalFilter in DJICameraSettingsDef.h to find all possible digital filter the camera can be  set to. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the camera's digital filter. The default value is `NONE`. For a list of all possible camera digital filters, see `DigitalFilter`.  @param filter Digital filter to be set to the camera. The default value for CameraDigitalFilter is None. Check the enum  named CameraDigitalFilter in DJICameraSettingsDef.h to find all possible digital filter the camera can be  set to. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setDigitalFilter_inline",
                   "",
            ],
            [
                   "getDigitalFilter",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getDigitalFilter_inline",
                   "Gets the camera's digital filter value.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's digital filter value.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getDigitalFilter_inline",
                   "",
            ],
            [
                   "setOrientation",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setOrientation_inline",
                   "Sets the camera's orientation. The gimbal will rotate the roll axis based on the orientation. Supported only by Mavic Pro.  @param orientation Camera's orientation. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the camera's orientation. The gimbal will rotate the roll axis based on the orientation. Supported only by Mavic Pro.  @param orientation Camera's orientation. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setOrientation_inline",
                   "",
            ],
            [
                   "getOrientation",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getOrientation_inline",
                   "Gets the camera's orientation. Supported only by Mavic Pro.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's orientation. Supported only by Mavic Pro.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getOrientation_inline",
                   "",
            ],
            [
                   "setVisionStabilizationEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setVisionStablizationEnabled_inline",
                   "Enables vision stabilization for Z30 camera on M200 series. The vision system in the M200  series of aircraft can be used to compensate for any drift in the gimbal by analyzing the  live view when there is no gimbal movement. Drift in the gimbal will be most noticeable at  higher zoom factors. Only supported by Z30 on M200 series.  @param enable `true` to enable the vision stabilization. @param callback `completion callback` to receive the result.",
            ],
            [
                   "Enables vision stabilization for Z30 camera on M200 series. The vision system in the M200  series of aircraft can be used to compensate for any drift in the gimbal by analyzing the  live view when there is no gimbal movement. Drift in the gimbal will be most noticeable at  higher zoom factors. Only supported by Z30 on M200 series.  @param enable `true` to enable the vision stabilization. @param callback `completion callback` to receive the result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setVisionStablizationEnabled_inline",
                   "",
            ],
            [
                   "getVisionStabilizationEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getVisionStablizationEnabled_inline",
                   "Gets if vision stabilization is enabled. Only supported by Z30 on M200 series.  @param callback `completion callback` to receive the result.",
            ],
            [
                   "Gets if vision stabilization is enabled. Only supported by Z30 on M200 series.  @param callback `completion callback` to receive the result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getVisionStablizationEnabled_inline",
                   "",
            ],
            [
                   "setMediaFileCustomInformation",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setMediaFileCustomInformation_inline",
                   "Custom information can be stored in media file's XMP meta data. The custom information is written to the media file automatically after the media file  is created. This method defines the information to write. The same information will be written to all media files until the information is changed again by this  method. Custom information written to each file can be retrieved through `fetchCustomInformation`  or from the image itself  when processed on a separate system. Only supported by Phantom 4 Pro, Phantom 4  Advanced and Inspire 2 with firmware released after May 23 2017.  @param information Custom information to set. Use UTF-8 encoding with a length equal to or less  than 31 characters. @param callback Completion block to receive the result.",
            ],
            [
                   "Custom information can be stored in media file's XMP meta data. The custom information is written to the media file automatically after the media file  is created. This method defines the information to write. The same information will be written to all media files until the information is changed again by this  method. Custom information written to each file can be retrieved through `fetchCustomInformation`  or from the image itself  when processed on a separate system. Only supported by Phantom 4 Pro, Phantom 4  Advanced and Inspire 2 with firmware released after May 23 2017.  @param information Custom information to set. Use UTF-8 encoding with a length equal to or less  than 31 characters. @param callback Completion block to receive the result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setMediaFileCustomInformation_inline",
                   "",
            ],
            [
                   "getMediaFileCustomInformation",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getMediaFileCustomInformation_inline",
                   "Custom information can be stored in media file's XMP meta data. This method retrieves  the information that will be written to future media files. The information written  to individual files can be retrieved through `fetchCustomInformation`. Only supported by Phantom 4 Pro,  Phantom 4 Advanced and Inspire 2 with firmware released after May 23 2017.  @param callback Completion block to receive the result.",
            ],
            [
                   "Custom information can be stored in media file's XMP meta data. This method retrieves  the information that will be written to future media files. The information written  to individual files can be retrieved through `fetchCustomInformation`. Only supported by Phantom 4 Pro,  Phantom 4 Advanced and Inspire 2 with firmware released after May 23 2017.  @param callback Completion block to receive the result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getMediaFileCustomInformation_inline",
                   "",
            ],
            [
                   "isPhotoQuickViewSupported",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_isPhotoQuickViewSupported_inline",
                   "Determines whether the device supports the quick view. Quick view is  the period of time a photo is shown as a preview after it is taken and before the camera returns to the live  camera view.  @return A boolean value.",
            ],
            [
                   "Determines whether the device supports the quick view. Quick view is  the period of time a photo is shown as a preview after it is taken and before the camera returns to the live  camera view.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_isPhotoQuickViewSupported_inline",
                   "",
            ],
            [
                   "setPhotoQuickViewDuration",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setPhotoQuickViewDuration_inline",
                   "Sets the camera's quick view duration. The valid range is [0, 10] seconds. When duration is 0, it means that  the quick view is disabled. The default value is 0 second. Call `isPhotoQuickViewSupported`  before using this method.  @param duration Quick view duration to be set for the camera. This value defines the amount of time a photo is shown as a preview after it is taken before the camera returns back to the live camera view. This value must be set in the range of [0, 10] seconds. When the value is 0, quick view is disabled. The default value is 0 second. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the camera's quick view duration. The valid range is [0, 10] seconds. When duration is 0, it means that  the quick view is disabled. The default value is 0 second. Call `isPhotoQuickViewSupported`  before using this method.  @param duration Quick view duration to be set for the camera. This value defines the amount of time a photo is shown as a preview after it is taken before the camera returns back to the live camera view. This value must be set in the range of [0, 10] seconds. When the value is 0, quick view is disabled. The default value is 0 second. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setPhotoQuickViewDuration_inline",
                   "",
            ],
            [
                   "getPhotoQuickViewDuration",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getPhotoQuickViewDuration_inline",
                   "Gets the camera's quick view duration.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the camera's quick view duration.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getPhotoQuickViewDuration_inline",
                   "",
            ],
            [
                   "setHDLiveViewEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setHighDefinitionLiveViewEnabled_inline",
                   "Enables HD (high-definition) live view. When it is enabled, the live view resolution is 1080p with frame rate  30 fps. The settings will only take effect when the camera is in record-video mode and the video resolution is  either 1080p or 2.7k without slow-motion enabled. If recording video in 4k, then the live stream will be limited  to 720p. Supported only by Mavic Pro.  @param enabled Enable or disable HD live view. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Enables HD (high-definition) live view. When it is enabled, the live view resolution is 1080p with frame rate  30 fps. The settings will only take effect when the camera is in record-video mode and the video resolution is  either 1080p or 2.7k without slow-motion enabled. If recording video in 4k, then the live stream will be limited  to 720p. Supported only by Mavic Pro.  @param enabled Enable or disable HD live view. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setHighDefinitionLiveViewEnabled_inline",
                   "",
            ],
            [
                   "getHDLiveViewEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getHighDefinitionLiveViewEnabled_inline",
                   "`true` if 1080p live view is enabled. This will return the value of the setter, and not  necessarily the actual live view resolution. For example, if recording in 4K and HD live view has previously  been set, then this will return `true` but the actual live view resolution will be 720p.  Supported only by Mavic Pro.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "`true` if 1080p live view is enabled. This will return the value of the setter, and not  necessarily the actual live view resolution. For example, if recording in 4K and HD live view has previously  been set, then this will return `true` but the actual live view resolution will be 720p.  Supported only by Mavic Pro.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getHighDefinitionLiveViewEnabled_inline",
                   "",
            ],
            [
                   "setLEDAutoTurnOffEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setAutoTurnOffLEDEnabled_inline",
                   "Enables the automatic control of the front-arm LEDs. The camera can turn off the front-arm LEDs automatically  when it shoots photos or records videos. The LEDs will be turned on after the shooting or recording is finished.  Supported only by Mavic Pro.  @param enabled Enable the automatic control of the front-arm LEDs. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Enables the automatic control of the front-arm LEDs. The camera can turn off the front-arm LEDs automatically  when it shoots photos or records videos. The LEDs will be turned on after the shooting or recording is finished.  Supported only by Mavic Pro.  @param enabled Enable the automatic control of the front-arm LEDs. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setAutoTurnOffLEDEnabled_inline",
                   "",
            ],
            [
                   "getLEDAutoTurnOffEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getAutoTurnOffLEDEnabled_inline",
                   "Determines whether the automatic control of the front-arm LEDs is Enabled. Supported only by Mavic Pro.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Determines whether the automatic control of the front-arm LEDs is Enabled. Supported only by Mavic Pro.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getAutoTurnOffLEDEnabled_inline",
                   "",
            ],
            [
                   "isAudioRecordingSupported",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_isAudioRecordSupported_inline",
                   "Determines whether the current device supports audio recording. Currently audio recording is supported only by the Osmo camera.  @return The boolean value.",
            ],
            [
                   "Determines whether the current device supports audio recording. Currently audio recording is supported only by the Osmo camera.  @return The boolean value.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_isAudioRecordSupported_inline",
                   "",
            ],
            [
                   "setAudioRecordingEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setAudioRecordEnabled_inline",
                   "Enables audio recording when capturing video. Supported only by Osmo camera.  @param enabled Enable or disable audio recording. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Enables audio recording when capturing video. Supported only by Osmo camera.  @param enabled Enable or disable audio recording. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setAudioRecordEnabled_inline",
                   "",
            ],
            [
                   "getAudioRecordingEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getAudioRecordEnabled_inline",
                   "Determines whether the audio record is enabled.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Determines whether the audio record is enabled.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getAudioRecordEnabled_inline",
                   "",
            ],
            [
                   "setAudioGain",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setAudioGain_inline",
                   "Sets the microphone recording gain.  @param value Recording gain with range [0, 100]. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the microphone recording gain.  @param value Recording gain with range [0, 100]. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setAudioGain_inline",
                   "",
            ],
            [
                   "getAudioGain",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getAudioGain_inline",
                   "Gets the microphone recording gain.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the microphone recording gain.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getAudioGain_inline",
                   "",
            ],
            [
                   "setTurnOffFanWhenPossible",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setTurnOffFanWhenPossible_inline",
                   "This method will turn off the camera's cooling fan whenever the camera is cool enough to do so. This allows  better audio recording from the internal microphone in the camera.  @param turnOffWhenPossible `true` to turn fan off whenever possible. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "This method will turn off the camera's cooling fan whenever the camera is cool enough to do so. This allows  better audio recording from the internal microphone in the camera.  @param turnOffWhenPossible `true` to turn fan off whenever possible. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_setTurnOffFanWhenPossible_inline",
                   "",
            ],
            [
                   "getTurnOffFanWhenPossible",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getTurnOffFanWhenPossible_inline",
                   "Gets if the fan will turn off whenever it is cool enough to do so to enable better audio recordings from the  camera's internal microphone.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets if the fan will turn off whenever it is cool enough to do so to enable better audio recordings from the  camera's internal microphone.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraSettings_getTurnOffFanWhenPossible_inline",
                   "",
            ],
            [
                   "isThermalCamera",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_isThermalImagingCamera_inline",
                   "`true` if the current connected device is a thermal imaging camera.  @return BOOL `true` if current connected device is thermal imaging camera.  @return A boolean value.",
            ],
            [
                   "`true` if the current connected device is a thermal imaging camera.  @return BOOL `true` if current connected device is thermal imaging camera.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_isThermalImagingCamera_inline",
                   "",
            ],
            [
                   "setThermalROI",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalROI_inline",
                   "Sets the Region of Interest (ROI). Used to manage color range distribution across the screen to maximize  contrast for regions of highest interest. Supported only by thermal imaging cameras.  @param roi An enum type of the Region of Interest to be used. Please refer to `ThermalROI`. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the Region of Interest (ROI). Used to manage color range distribution across the screen to maximize  contrast for regions of highest interest. Supported only by thermal imaging cameras.  @param roi An enum type of the Region of Interest to be used. Please refer to `ThermalROI`. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalROI_inline",
                   "",
            ],
            [
                   "getThermalROI",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalROI_inline",
                   "Gets the Region of Interest.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the Region of Interest.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalROI_inline",
                   "",
            ],
            [
                   "setThermalPalette",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalPalette_inline",
                   "Sets the Palette. Each palette is a unique look-up table that maps 8-bit temperature values to different colors.  Different palettes can be used to help the user better visualize temperature contrast or specific temperature bands. Supported only by thermal imaging cameras.  @param palette An enum type of the CameraThermalPalette to be used. Please refer to CameraThermalPalette. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the Palette. Each palette is a unique look-up table that maps 8-bit temperature values to different colors.  Different palettes can be used to help the user better visualize temperature contrast or specific temperature bands. Supported only by thermal imaging cameras.  @param palette An enum type of the CameraThermalPalette to be used. Please refer to CameraThermalPalette. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalPalette_inline",
                   "",
            ],
            [
                   "getThermalPalette",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalPalette_inline",
                   "Gets the Palette.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the Palette.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalPalette_inline",
                   "",
            ],
            [
                   "setThermalScene",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalScene_inline",
                   "Sets the scene to instantly enhance your image. In all modes except Manual and User modes, the  DDE, ACE, SSO,  brightness and contrast are set automatically to obtain the best result. In  User modes, the contrast and brightness are set automatically to obtain the best results. Any  settings that are made in these modes are retained if the scene is changed. In Manual mode,  DDE, contrast and brightness are set manually. Supported only by thermal imaging cameras.  @param scene An enum type for the `ThermalScene` to be used. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the scene to instantly enhance your image. In all modes except Manual and User modes, the  DDE, ACE, SSO,  brightness and contrast are set automatically to obtain the best result. In  User modes, the contrast and brightness are set automatically to obtain the best results. Any  settings that are made in these modes are retained if the scene is changed. In Manual mode,  DDE, contrast and brightness are set manually. Supported only by thermal imaging cameras.  @param scene An enum type for the `ThermalScene` to be used. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalScene_inline",
                   "",
            ],
            [
                   "getThermalScene",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalScene_inline",
                   "Gets current scene.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets current scene.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalScene_inline",
                   "",
            ],
            [
                   "setThermalDDE",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalDDE_inline",
                   "Sets the Digital Data Enhancement index (for DDE dynamic mode). DDE can be used to enhance image details (sharpen,  higher index) and/or suppress fixed pattern noise (soften, lower index). It can be set manually only when the Scene  mode is Manual, User1, User2 or User3. Supported only by thermal imaging cameras.  @param value Integer in range [-20, 100]. Values less than 0 soften the image and filter fixed pattern noise. Values greater  than 0 sharpen the details in the image. Value of 0 results in no enhancement. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the Digital Data Enhancement index (for DDE dynamic mode). DDE can be used to enhance image details (sharpen,  higher index) and/or suppress fixed pattern noise (soften, lower index). It can be set manually only when the Scene  mode is Manual, User1, User2 or User3. Supported only by thermal imaging cameras.  @param value Integer in range [-20, 100]. Values less than 0 soften the image and filter fixed pattern noise. Values greater  than 0 sharpen the details in the image. Value of 0 results in no enhancement. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalDDE_inline",
                   "",
            ],
            [
                   "getThermalDDE",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalDDE_inline",
                   "Gets the value of Digital Data Enhancement. The value is available only when the Scene mode is Manual, User1,  User2 or User3. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the value of Digital Data Enhancement. The value is available only when the Scene mode is Manual, User1,  User2 or User3. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalDDE_inline",
                   "",
            ],
            [
                   "setThermalACE",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalACE_inline",
                   "Set the value of Active Contrast Enhancement. Active contrast enhancement allows for a contrast trade-off  between hotter and colder scenes when using 8-bit pixel data. It can be set manually only when the Scene  mode is User1, User2 or User3. Supported only by thermal imaging cameras.  @param value Integer in range [-8, 8]. <br> value > 0: more contrast in hotter scene content and less contrast in colder  scene content (sky, ocean etc.). <br> value < 0: more contrast in colder scene content and less contrast in  hotter scene content. <br> value = 0: neutral <br> value = 3: recommended for generic use @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Set the value of Active Contrast Enhancement. Active contrast enhancement allows for a contrast trade-off  between hotter and colder scenes when using 8-bit pixel data. It can be set manually only when the Scene  mode is User1, User2 or User3. Supported only by thermal imaging cameras.  @param value Integer in range [-8, 8]. <br> value > 0: more contrast in hotter scene content and less contrast in colder  scene content (sky, ocean etc.). <br> value < 0: more contrast in colder scene content and less contrast in  hotter scene content. <br> value = 0: neutral <br> value = 3: recommended for generic use @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalACE_inline",
                   "",
            ],
            [
                   "getThermalACE",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalACE_inline",
                   "Gets the value of Active Contrast Enhancement. The value is available only when the Scene mode is Manual, User1,  User2 or User3. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the value of Active Contrast Enhancement. The value is available only when the Scene mode is Manual, User1,  User2 or User3. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalACE_inline",
                   "",
            ],
            [
                   "setThermalSSO",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalSSO_inline",
                   "Sets the value of Smart Scene Optimization. When using non-linear histogram equalization to map the 14-bit sensor  pixel values to 8-bit pixel values, it can become difficult to determine the difference in temperature of two  objects from their different shades of gray. SSO allows a percentage of the 14-bit histogram to be mapped linearly  to the 8-bit histogram, which will compromise local contrast, but allow for more accurate visual radiometric  measurements. This is particularly useful for bi-modal scenes. It can be set manually only when the Scene mode  is User1, User2 or User3. Supported only by thermal imaging cameras.  @param value Percentage of histogram to map linearly [0, 100]. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the value of Smart Scene Optimization. When using non-linear histogram equalization to map the 14-bit sensor  pixel values to 8-bit pixel values, it can become difficult to determine the difference in temperature of two  objects from their different shades of gray. SSO allows a percentage of the 14-bit histogram to be mapped linearly  to the 8-bit histogram, which will compromise local contrast, but allow for more accurate visual radiometric  measurements. This is particularly useful for bi-modal scenes. It can be set manually only when the Scene mode  is User1, User2 or User3. Supported only by thermal imaging cameras.  @param value Percentage of histogram to map linearly [0, 100]. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalSSO_inline",
                   "",
            ],
            [
                   "getThermalSSO",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalSSO_inline",
                   "Gets the value of Smart Scene Optimization. The value is available only when the Scene mode is Manual, User1,  User2 or User3. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the value of Smart Scene Optimization. The value is available only when the Scene mode is Manual, User1,  User2 or User3. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalSSO_inline",
                   "",
            ],
            [
                   "setThermalBrightness",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalBrightness_inline",
                   "Sets the brightness of the image. It can be set manually only when the Scene mode is Manual. Supported only by thermal imaging cameras.  @param brightness The integer value falls in [0, 16383]. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the brightness of the image. It can be set manually only when the Scene mode is Manual. Supported only by thermal imaging cameras.  @param brightness The integer value falls in [0, 16383]. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalBrightness_inline",
                   "",
            ],
            [
                   "getThermalBrightness",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalBrightness_inline",
                   "Gets the value of brightness. The value is available only when the Scene mode is Manual, User1, User2 or User3. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the value of brightness. The value is available only when the Scene mode is Manual, User1, User2 or User3. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalBrightness_inline",
                   "",
            ],
            [
                   "setThermalContrast",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalContrast_inline",
                   "Sets the value of contrast, with larger values having higher contrast. It can be set manually only when  the Scene mode is Manual. Supported only by thermal imaging cameras.  @param contrast Contrast value as an integer with range [0, 255]. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the value of contrast, with larger values having higher contrast. It can be set manually only when  the Scene mode is Manual. Supported only by thermal imaging cameras.  @param contrast Contrast value as an integer with range [0, 255]. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalContrast_inline",
                   "",
            ],
            [
                   "getThermalContrast",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalContrast_inline",
                   "Gets contrast value. The value is available only when the Scene mode is Manual, User1, User2 or User3. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets contrast value. The value is available only when the Scene mode is Manual, User1, User2 or User3. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalContrast_inline",
                   "",
            ],
            [
                   "setThermalIsothermEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalIsothermEnabled_inline",
                   "Enable or disable Isotherms. Isotherms can be used to highlight specific temperature ranges: When disabled,  all 256 values (8-bits) are dedicated to the temperature histogram of the scene. When enabled, only 128 values  (0-127) are mapped linearly to temperature. Then three bands 128-175, 176-223 and 224-255 can be mapped to the  user defined temperatures to highlight them to the user. Using some of the false color palettes (like RainbowIso)  results in a thermal image that is grey scale except for three specific bands highlighted by either reds, blues or  greens. Supported only by thermal imaging cameras.  @param enabled `true` if isotherms are enabled. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Enable or disable Isotherms. Isotherms can be used to highlight specific temperature ranges: When disabled,  all 256 values (8-bits) are dedicated to the temperature histogram of the scene. When enabled, only 128 values  (0-127) are mapped linearly to temperature. Then three bands 128-175, 176-223 and 224-255 can be mapped to the  user defined temperatures to highlight them to the user. Using some of the false color palettes (like RainbowIso)  results in a thermal image that is grey scale except for three specific bands highlighted by either reds, blues or  greens. Supported only by thermal imaging cameras.  @param enabled `true` if isotherms are enabled. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalIsothermEnabled_inline",
                   "",
            ],
            [
                   "getThermalIsothermEnabled",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalIsothermEnabled_inline",
                   "Determines whether Isotherms are enabled. `true` if Isotherms are enabled. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Determines whether Isotherms are enabled. `true` if Isotherms are enabled. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalIsothermEnabled_inline",
                   "",
            ],
            [
                   "setThermalIsothermUnit",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalIsothermUnit_inline",
                   "Sets the unit of the Isotherm ranges to either Celsius or percent. Different units results in different value ranges for Isotherms. Supported only by thermal imaging cameras.  @param unit An enum type of the CameraThermalIsothermUnit to be used. Please refer to DJICameraThermalIsothermUnit. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the unit of the Isotherm ranges to either Celsius or percent. Different units results in different value ranges for Isotherms. Supported only by thermal imaging cameras.  @param unit An enum type of the CameraThermalIsothermUnit to be used. Please refer to DJICameraThermalIsothermUnit. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalIsothermUnit_inline",
                   "",
            ],
            [
                   "getThermalIsothermUnit",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalIsothermUnit_inline",
                   "Gets the units for Isotherm ranges. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the units for Isotherm ranges. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalIsothermUnit_inline",
                   "",
            ],
            [
                   "setThermalIsothermUpperValue",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalIsothermUpperValue_inline",
                   "Sets the upper threshold value for Isotherm. All temperature values above this will use colors 224-255 from  the palette. Supported only by thermal imaging cameras.  @param value If the unit is percentage, the allowed range is [0,100]. If the unit is Celsius, the allowed range is  [-40, 550]. The value can only be equal or larger than middle Isotherm threshold. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the upper threshold value for Isotherm. All temperature values above this will use colors 224-255 from  the palette. Supported only by thermal imaging cameras.  @param value If the unit is percentage, the allowed range is [0,100]. If the unit is Celsius, the allowed range is  [-40, 550]. The value can only be equal or larger than middle Isotherm threshold. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalIsothermUpperValue_inline",
                   "",
            ],
            [
                   "getThermalIsothermUpperValue",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalIsothermUpperValue_inline",
                   "Gets the upper threshold value for Isotherm. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the upper threshold value for Isotherm. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalIsothermUpperValue_inline",
                   "",
            ],
            [
                   "setThermalIsothermMiddleValue",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalIsothermMiddleValue_inline",
                   "Sets the middle threshold value for Isotherm. Temperature values between the middle and upper Isotherm threshold  will be displayed with colors 176-223 from the palette. Supported only by thermal imaging cameras.  @param value If the unit is percentage, the value falls in [0,100]. If the unit is Celsius, the value range is [-40, 550].  The value can only be equal or larger than lower threshold and equal or smaller than upper threshold. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the middle threshold value for Isotherm. Temperature values between the middle and upper Isotherm threshold  will be displayed with colors 176-223 from the palette. Supported only by thermal imaging cameras.  @param value If the unit is percentage, the value falls in [0,100]. If the unit is Celsius, the value range is [-40, 550].  The value can only be equal or larger than lower threshold and equal or smaller than upper threshold. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalIsothermMiddleValue_inline",
                   "",
            ],
            [
                   "getThermalIsothermMiddleValue",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalIsothermMiddleValue_inline",
                   "Gets the middle threshold value for Isotherm. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the middle threshold value for Isotherm. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalIsothermMiddleValue_inline",
                   "",
            ],
            [
                   "setThermalIsothermLowerValue",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalIsothermLowerValue_inline",
                   "Sets the lower threshold value for Isotherm. Temperature values between the lower and middle Isotherm threshold  will be displayed with colors 128-175 from the palette. Supported only by thermal imaging cameras.  @param value If the unit is percentage, the value falls in [0,100]. If the unit is Celsius, the value range is [-40, 550]. The value can only be equal or smaller than upper threshold. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the lower threshold value for Isotherm. Temperature values between the lower and middle Isotherm threshold  will be displayed with colors 128-175 from the palette. Supported only by thermal imaging cameras.  @param value If the unit is percentage, the value falls in [0,100]. If the unit is Celsius, the value range is [-40, 550]. The value can only be equal or smaller than upper threshold. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalIsothermLowerValue_inline",
                   "",
            ],
            [
                   "getThermalIsothermLowerValue",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalIsothermLowerValue_inline",
                   "Gets the lower threshold value for Isotherm. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the lower threshold value for Isotherm. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalIsothermLowerValue_inline",
                   "",
            ],
            [
                   "setThermalGainMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalGainMode_inline",
                   "Sets the gain mode. Low gain mode can be used for scenes with temperatures ranging from -40 to 550 degrees  Celsius. For higher contrast, the high gain mode can be used by for temperatures between -25 to 135 degrees  Celsius for the 640x512 camera and -25 to 100 degrees Celsius for 324 x 256 camera. Supported only by thermal  imaging cameras.  @param mode An enum type of the CameraThermalGainMode to be used. Please refer to CameraThermalGainMode in DJICameraSettingsDef. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the gain mode. Low gain mode can be used for scenes with temperatures ranging from -40 to 550 degrees  Celsius. For higher contrast, the high gain mode can be used by for temperatures between -25 to 135 degrees  Celsius for the 640x512 camera and -25 to 100 degrees Celsius for 324 x 256 camera. Supported only by thermal  imaging cameras.  @param mode An enum type of the CameraThermalGainMode to be used. Please refer to CameraThermalGainMode in DJICameraSettingsDef. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalGainMode_inline",
                   "",
            ],
            [
                   "getThermalGainMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalGainMode_inline",
                   "Gets the gain mode. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the gain mode. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalGainMode_inline",
                   "",
            ],
            [
                   "setThermalMeasurementMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalMeasurementMode_inline",
                   "Sets the mode for thermal measurement. Use callback  method `onUpdate` or `onUpdate` to receive  the measurement result. Supported only by thermal imaging cameras.  @param mode The desired measurement mode. @param callback Completion block that receives the getter execution result.",
            ],
            [
                   "Sets the mode for thermal measurement. Use callback  method `onUpdate` or `onUpdate` to receive  the measurement result. Supported only by thermal imaging cameras.  @param mode The desired measurement mode. @param callback Completion block that receives the getter execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalMeasurementMode_inline",
                   "",
            ],
            [
                   "getThermalMeasurementMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalMeasurementMode_inline",
                   "Gets the mode for thermal measurement. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the mode for thermal measurement. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalMeasurementMode_inline",
                   "",
            ],
            [
                   "setThermalDigitalZoomFactor",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalDigitalZoomScale_inline",
                   "Adjusts the digital zoom. Supported only by thermal imaging cameras.  @param factor For resolution 640 x 512, x1,x2,x4,x8 can be set. For resolution 336 x 256, only x1,x2,x4 can be set. Please  refer to CameraThermalDigitalZoomScale in DJICameraSettingsDef. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Adjusts the digital zoom. Supported only by thermal imaging cameras.  @param factor For resolution 640 x 512, x1,x2,x4,x8 can be set. For resolution 336 x 256, only x1,x2,x4 can be set. Please  refer to CameraThermalDigitalZoomScale in DJICameraSettingsDef. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalDigitalZoomScale_inline",
                   "",
            ],
            [
                   "getThermalDigitalZoomFactor",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalDigitalZoomScale_inline",
                   "Gets current digital zoom. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets current digital zoom. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalDigitalZoomScale_inline",
                   "",
            ],
            [
                   "getThermalProfile",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalProfile_inline",
                   "Gets the thermal imaging camera profile. The profile includes information about resolution, frame rate and focal  length. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the thermal imaging camera profile. The profile includes information about resolution, frame rate and focal  length. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalProfile_inline",
                   "",
            ],
            [
                   "setThermalSpotMeteringTargetPoint",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalSpotMeteringTargetPoint_inline",
                   "Sets the spot metering target point which then invoke the callback from `setThermalTemperatureCallback` with the  temperature at a specific coordinate in the scene. This method requires a relative point that is proportional  to the dimension of the camera video dimension, the x, and y values must all be between 0 and 1.0. Supported only  by Zenmuse XT containing Advanced Radiometry capabilities.  @param targetPoint The desired target point. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the spot metering target point which then invoke the callback from `setThermalTemperatureCallback` with the  temperature at a specific coordinate in the scene. This method requires a relative point that is proportional  to the dimension of the camera video dimension, the x, and y values must all be between 0 and 1.0. Supported only  by Zenmuse XT containing Advanced Radiometry capabilities.  @param targetPoint The desired target point. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalSpotMeteringTargetPoint_inline",
                   "",
            ],
            [
                   "getThermalSpotMeteringTargetPoint",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalSpotMeteringTargetPoint_inline",
                   "Gets the spot metering target point if one is set, if not then returns CGPointZero. Supported only by Zenmuse  XT containing Advanced Radiometry capabilities.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the spot metering target point if one is set, if not then returns CGPointZero. Supported only by Zenmuse  XT containing Advanced Radiometry capabilities.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalSpotMeteringTargetPoint_inline",
                   "",
            ],
            [
                   "setThermalMeteringArea",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalMeteringArea_inline",
                   "Set the metering area for a rectangle inside the thermal image scene, which allows the camera to transmit  aggregate temperature computations via the `onUpdate`  callback method. See `ThermalAreaTemperatureAggregations`  for the statistical values that are available. This method requires a relative rect that is proportional to  the rect of the thermal scene, the x, y, width, and height values must all be between 0 and 1.0. Supported  only by Zenmuse XT containing Advanced Radiometry capabilities.  @param area The desired thermal metering area. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Set the metering area for a rectangle inside the thermal image scene, which allows the camera to transmit  aggregate temperature computations via the `onUpdate`  callback method. See `ThermalAreaTemperatureAggregations`  for the statistical values that are available. This method requires a relative rect that is proportional to  the rect of the thermal scene, the x, y, width, and height values must all be between 0 and 1.0. Supported  only by Zenmuse XT containing Advanced Radiometry capabilities.  @param area The desired thermal metering area. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalMeteringArea_inline",
                   "",
            ],
            [
                   "getThermalMeteringArea",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalMeteringArea_inline",
                   "Get a rect representing the currently set metering area for the thermal scene. Supported only by Zenmuse XT  containing Advanced Radiometry capabilities.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Get a rect representing the currently set metering area for the thermal scene. Supported only by Zenmuse XT  containing Advanced Radiometry capabilities.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalMeteringArea_inline",
                   "",
            ],
            [
                   "setThermalFFCMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalFFCMode_inline",
                   "Set the flat-field correction (FFC) mode. Supported only by thermal imaging cameras.  @param mode The desired FFC mode. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Set the flat-field correction (FFC) mode. Supported only by thermal imaging cameras.  @param mode The desired FFC mode. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalFFCMode_inline",
                   "",
            ],
            [
                   "getThermalFFCMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalFFCMode_inline",
                   "Get the currently set flat-field correction (FFC) mode. Supported only by thermal imaging cameras with installed  firmware version of 1.15.1.60 or higher.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Get the currently set flat-field correction (FFC) mode. Supported only by thermal imaging cameras with installed  firmware version of 1.15.1.60 or higher.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalFFCMode_inline",
                   "",
            ],
            [
                   "triggerThermalFFC",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_triggerThermalFFCMode_inline",
                   "Trigger flat-field correction. Supported only by thermal imaging cameras.  @param callback The execution callback with result of the trigger action.",
            ],
            [
                   "Trigger flat-field correction. Supported only by thermal imaging cameras.  @param callback The execution callback with result of the trigger action.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_triggerThermalFFCMode_inline",
                   "",
            ],
            [
                   "setThermalCustomExternalSceneSettingsProfile",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalCustomExternalSceneSettingsProfile_inline",
                   "Set the custom user profile. This profile represents user-set external  scene parameters for the thermal scene. Supported only by thermal  imaging cameras.  @param profile The desired user profile setting. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Set the custom user profile. This profile represents user-set external  scene parameters for the thermal scene. Supported only by thermal  imaging cameras.  @param profile The desired user profile setting. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalCustomExternalSceneSettingsProfile_inline",
                   "",
            ],
            [
                   "getThermalCustomExternalSceneSettingsProfile",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalCustomExternalSceneSettingsProfile_inline",
                   "Get the currently set custom user profile. This profile represents user-set external scene parameters for the  thermal scene. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Get the currently set custom user profile. This profile represents user-set external scene parameters for the  thermal scene. Supported only by thermal imaging cameras.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_getThermalCustomExternalSceneSettingsProfile_inline",
                   "",
            ],
            [
                   "setThermalAtmosphericTemperature",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalAtmosphericTemperature_inline",
                   "Set the temperature of the atmosphere between the scene and the camera. Supported only by Zenmuse XT containing Advanced Radiometry capabilities.  @param temperature The assumed temperature of the atmosphere between the camera and the scene, can be between -50 and 327.67 degrees Celsius. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Set the temperature of the atmosphere between the scene and the camera. Supported only by Zenmuse XT containing Advanced Radiometry capabilities.  @param temperature The assumed temperature of the atmosphere between the camera and the scene, can be between -50 and 327.67 degrees Celsius. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalAtmosphericTemperature_inline",
                   "",
            ],
            [
                   "setThermalAtmosphericTransmissionCoefficient",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalAtmosphericTransmissionCoefficient_inline",
                   "Set the transmission coefficient of the atmosphere between the scene and the camera. Supported only by Zenmuse XT containing Advanced Radiometry capabilities.  @param coefficient The desired atmospheric temperature, can be between 50 and 100. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Set the transmission coefficient of the atmosphere between the scene and the camera. Supported only by Zenmuse XT containing Advanced Radiometry capabilities.  @param coefficient The desired atmospheric temperature, can be between 50 and 100. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalAtmosphericTransmissionCoefficient_inline",
                   "",
            ],
            [
                   "setThermalBackgroundTemperature",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalBackgroundTemperature_inline",
                   "Set the assumed temperature reflected by the background of the scene, can be between -50 and 327.67 degrees  Celsius. Supported only by Zenmuse XT containing Advanced Radiometry capabilities.  @param temperature The desired background reflected temperature. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Set the assumed temperature reflected by the background of the scene, can be between -50 and 327.67 degrees  Celsius. Supported only by Zenmuse XT containing Advanced Radiometry capabilities.  @param temperature The desired background reflected temperature. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalBackgroundTemperature_inline",
                   "",
            ],
            [
                   "setThermalSceneEmissivity",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalSceneEmissivity_inline",
                   "Set the emissivity of the thermal scene, can be between 50 and 100. Supported only by Zenmuse XT containing  Advanced Radiometry capabilities.  @param emissivity The desired scene emissivity. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Set the emissivity of the thermal scene, can be between 50 and 100. Supported only by Zenmuse XT containing  Advanced Radiometry capabilities.  @param emissivity The desired scene emissivity. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalSceneEmissivity_inline",
                   "",
            ],
            [
                   "setThermalWindowReflection",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalWindowReflection_inline",
                   "Set assumed window reflection coefficient, can be between 0 and X where X is the window transmission coefficient  parameter. Supported only by Zenmuse XT containing Advanced Radiometry capabilities.  @param reflection The desired window reflection coefficient. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Set assumed window reflection coefficient, can be between 0 and X where X is the window transmission coefficient  parameter. Supported only by Zenmuse XT containing Advanced Radiometry capabilities.  @param reflection The desired window reflection coefficient. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalWindowReflection_inline",
                   "",
            ],
            [
                   "setThermalWindowReflectedTemperature",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalWindowReflectedTemperature_inline",
                   "Set the temperature reflected in the window, can be between -50 and 327.67 degrees Celsius. Supported only by  Zenmuse XT containing Advanced Radiometry capabilities.  @param temperature The desired window reflected temperature. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Set the temperature reflected in the window, can be between -50 and 327.67 degrees Celsius. Supported only by  Zenmuse XT containing Advanced Radiometry capabilities.  @param temperature The desired window reflected temperature. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalWindowReflectedTemperature_inline",
                   "",
            ],
            [
                   "setThermalWindowTemperature",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalWindowTemperature_inline",
                   "Set the window temperature, can be between -50 and 327.67 degrees Celsius. Supported only by Zenmuse XT  containing Advanced Radiometry capabilities.  @param temperature The desired window temperature. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Set the window temperature, can be between -50 and 327.67 degrees Celsius. Supported only by Zenmuse XT  containing Advanced Radiometry capabilities.  @param temperature The desired window temperature. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalWindowTemperature_inline",
                   "",
            ],
            [
                   "setThermalWindowTransmissionCoefficient",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalWindowTransmissionCoefficient_inline",
                   "Set the window transmission coefficient, can be between 50 and 100-X where X is the window reflection.  Supported only by Zenmuse XT containing Advanced Radiometry capabilities.  @param coefficient The desired window transmission coefficient. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Set the window transmission coefficient, can be between 50 and 100-X where X is the window reflection.  Supported only by Zenmuse XT containing Advanced Radiometry capabilities.  @param coefficient The desired window transmission coefficient. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCamera_setThermalWindowTransmissionCoefficient_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJICamera_CameraGeneratedNewMediaFileCallbackInterface_inline",
                   "Tells that a new media file (photo or video) is generated.",
            ],
            [
                   "Tells that a new media file (photo or video) is generated.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJICamera_CameraGeneratedNewMediaFileCallbackInterface_inline",
                   "",
            ],
            [
                   "TimeLapsePreviewCallback",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraGeneratedTimeLapsePreviewCallbackInterface_inline",
                   "Tells the callback that a preview image for the Time-lapse is generated. This method is available only  when isTimeLapseSupported returns TRUE.",
            ],
            [
                   "Tells the callback that a preview image for the Time-lapse is generated. This method is available only  when isTimeLapseSupported returns TRUE.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraGeneratedTimeLapsePreviewCallbackInterface_inline",
                   "",
            ],
            [
                   "VideoDataCallback",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraReceivedVideoDataCallbackInterface_inline",
                   "Video data update callback. H.264 (also called MPEG-4 Part 10 Advanced Video Coding or MPEG-4 AVC) is a  video coding format that is currently one of the most commonly used formats for the recording, compression,  and distribution of video content.",
            ],
            [
                   "Video data update callback. H.264 (also called MPEG-4 Part 10 Advanced Video Coding or MPEG-4 AVC) is a  video coding format that is currently one of the most commonly used formats for the recording, compression,  and distribution of video content.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_CameraReceivedVideoDataCallbackInterface_inline",
                   "",
            ],
            [
                   "TemperatureDataCallback",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCameraUpdateTemperatureDataCallbackInterface_inline",
                   "Received temperature in degrees Celsius of image. For the XT, the temperature measurement data is the  average of the center four pixels of the image.",
            ],
            [
                   "Received temperature in degrees Celsius of image. For the XT, the temperature measurement data is the  average of the center four pixels of the image.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_ThermalCameraUpdateTemperatureDataCallbackInterface_inline",
                   "",
            ],
            [
                   "SystemState",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "",
                   "This class provides general information and current status of the camera.",
            ],
            [
                   "This class provides general information and current status of the camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "",
                   "",
            ],
            [
                   "FocusState",
                   2,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "",
                   "This class contains information about the lens' current state, including lens type, focus status, focus mode,  focus assistant state, and Auto Focus (AF) switch state.",
            ],
            [
                   "This class contains information about the lens' current state, including lens type, focus status, focus mode,  focus assistant state, and Auto Focus (AF) switch state.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "",
                   "",
            ],
            [
                   "SDCardState",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "",
                   "This class provides the SD card's general information and current status.",
            ],
            [
                   "This class provides the SD card's general information and current status.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "",
                   "",
            ],
            [
                   "SSDState",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "",
                   "This class contains the information about camera's Solid State Drive (SSD) information, including state,  whether it is connected, its capacity, video size and rate, etc.",
            ],
            [
                   "This class contains the information about camera's Solid State Drive (SSD) information, including state,  whether it is connected, its capacity, video size and rate, etc.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "",
                   "",
            ],
            [
                   "MediaManager",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "",
                   "The media manager is used to interact with the file system on the SD card. By using the media manager, the user  can get the metadata for all the multimedia files, and has access to each individual multimedia file.",
            ],
            [
                   "The media manager is used to interact with the file system on the SD card. By using the media manager, the user  can get the metadata for all the multimedia files, and has access to each individual multimedia file.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "",
                   "",
            ],
            [
                   "PlaybackManager",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "",
                   "The playback manager is used to interact with the playback system of the camera. By using the playback manager,  the user can control the playback system.",
            ],
            [
                   "The playback manager is used to interact with the playback system of the camera. By using the playback manager,  the user can control the playback system.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "",
                   "",
            ],
            [
                   "Capabilities",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "",
                   "Some of the camera's parameters have dynamic ranges. The `Capabilities` class allows you  to query the valid range for a parameter. Type-casting is required to get the corresponding enumerator value  for each range element.",
            ],
            [
                   "Some of the camera's parameters have dynamic ranges. The `Capabilities` class allows you  to query the valid range for a parameter. Type-casting is required to get the corresponding enumerator value  for each range element.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "",
                   "",
            ],
            [
                   "SettingsDefinitions",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "",
                   "This class contains all the enums and setting classes for the DJI Camera.",
            ],
            [
                   "This class contains all the enums and setting classes for the DJI Camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "",
                   "",
            ],
            [
                   "CameraMode",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMode_inline",
                   "Camera work modes.",
            ],
            [
                   "Camera work modes.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMode_inline",
                   "",
            ],
            [
                   "ShootPhotoMode",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_inline",
                   "The ShootPhoto mode itself can have several modes. The default value  is `SINGLE`.",
            ],
            [
                   "The ShootPhoto mode itself can have several modes. The default value  is `SINGLE`.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_inline",
                   "",
            ],
            [
                   "ExposureMode",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureMode_inline",
                   "Camera exposure modes. The default value is `PROGRAM`. The different exposure modes define whether Aperture, Shutter Speed, ISO can be set automatically or manually. Exposure compensation can  be changed in all modes except Manual mode where it is not settable. X5, X5R, Phantom 4 Pro camera, X4S and  X5S:  Program Mode:       Shutter: Auto     Aperture: Auto     ISO: Manual or Auto  Shutter Priority:   Shutter: Manual   Aperture: Auto     ISO: Manual or Auto  Aperture Priority:  Shutter: Auto     Aperture: Manual    ISO: Manual or Auto  Manual Mode:        Shutter: Manual   Aperture: Manual   ISO: Manual All  other cameras:</b>  Program Mode:       Shutter: Auto     Aperture: Fixed    ISO: Auto  Shutter Priority:    Shutter: Manual   Aperture: Fixed    ISO: Auto  Aperture Priority:  N/A  Manual Mode:        Shutter: Manual    Aperture: Manual   ISO: Manual",
            ],
            [
                   "Camera exposure modes. The default value is `PROGRAM`. The different exposure modes define whether Aperture, Shutter Speed, ISO can be set automatically or manually. Exposure compensation can  be changed in all modes except Manual mode where it is not settable. X5, X5R, Phantom 4 Pro camera, X4S and  X5S:  Program Mode:       Shutter: Auto     Aperture: Auto     ISO: Manual or Auto  Shutter Priority:   Shutter: Manual   Aperture: Auto     ISO: Manual or Auto  Aperture Priority:  Shutter: Auto     Aperture: Manual    ISO: Manual or Auto  Manual Mode:        Shutter: Manual   Aperture: Manual   ISO: Manual All  other cameras:</b>  Program Mode:       Shutter: Auto     Aperture: Fixed    ISO: Auto  Shutter Priority:    Shutter: Manual   Aperture: Fixed    ISO: Auto  Aperture Priority:  N/A  Manual Mode:        Shutter: Manual    Aperture: Manual   ISO: Manual",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureMode_inline",
                   "",
            ],
            [
                   "ShutterSpeed",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_inline",
                   "Camera's shutter speed options.",
            ],
            [
                   "Camera's shutter speed options.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_inline",
                   "",
            ],
            [
                   "ISO",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_inline",
                   "Camera ISO values.",
            ],
            [
                   "Camera ISO values.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_inline",
                   "",
            ],
            [
                   "Aperture",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_inline",
                   "Camera aperture values. X5, X5R, Z30, Phantom 4 Pro camera, X4S and X5S support this setting.",
            ],
            [
                   "Camera aperture values. X5, X5R, Z30, Phantom 4 Pro camera, X4S and X5S support this setting.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_inline",
                   "",
            ],
            [
                   "WhiteBalance",
                   2,
                   "/Components/Camera/DJICamera_DJICameraWhiteBalanceInterface.html",
                   "",
                   "This class contains current values for some camera parameters related to white balance. Values for the camera's current white balance preset and color temperature can be obtained from this class.",
            ],
            [
                   "This class contains current values for some camera parameters related to white balance. Values for the camera's current white balance preset and color temperature can be obtained from this class.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraWhiteBalanceInterface.html",
                   "",
                   "",
            ],
            [
                   "WhiteBalancePreset",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraWhiteBalance_inline",
                   "Camera white balance. The default value is Auto.",
            ],
            [
                   "Camera white balance. The default value is Auto.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraWhiteBalance_inline",
                   "",
            ],
            [
                   "MeteringMode",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMeteringMode_inline",
                   "Camera exposure metering. The default value is Center.",
            ],
            [
                   "Camera exposure metering. The default value is Center.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMeteringMode_inline",
                   "",
            ],
            [
                   "ExposureCompensation",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_inline",
                   "Camera exposure compensation.",
            ],
            [
                   "Camera exposure compensation.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_inline",
                   "",
            ],
            [
                   "ExposureSettings",
                   2,
                   "/Components/Camera/DJICamera_DJICameraExposureParameters.html",
                   "",
                   "This class contains current values for some camera parameters related to exposure, which determines how sensitive  the picture is to light and depends on the balance of the ISO value, the shutter speed, and the aperture value.  When the camera is in different exposure modes, different parameters are automatically changed by the camera to  either get the correct exposure (in Program, Shutter Priority and Aperture Priority modes), or report back the current exposure (in Manual mode). The current values of these parameters used by the camera are contained in this  class.",
            ],
            [
                   "This class contains current values for some camera parameters related to exposure, which determines how sensitive  the picture is to light and depends on the balance of the ISO value, the shutter speed, and the aperture value.  When the camera is in different exposure modes, different parameters are automatically changed by the camera to  either get the correct exposure (in Program, Shutter Priority and Aperture Priority modes), or report back the current exposure (in Manual mode). The current values of these parameters used by the camera are contained in this  class.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraExposureParameters.html",
                   "",
                   "",
            ],
            [
                   "OpticalZoomSpec",
                   2,
                   "/Components/Camera/DJICamera_DJICameraOpticalZoomSpec.html",
                   "",
                   "Zoom lens profile. Includes focal length range and minimum focal length step. Supported by X5, X5R and X5S with zoom lens,  Z3 camera and Z30 camera.",
            ],
            [
                   "Zoom lens profile. Includes focal length range and minimum focal length step. Supported by X5, X5R and X5S with zoom lens,  Z3 camera and Z30 camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraOpticalZoomSpec.html",
                   "",
                   "",
            ],
            [
                   "ZoomDirection",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomDirection_inline",
                   "The direction to adjust the camera zoom (camera focal length). Supported by X5, X5R and X5S with zoom lens, Z3 camera  and Z30 camera.",
            ],
            [
                   "The direction to adjust the camera zoom (camera focal length). Supported by X5, X5R and X5S with zoom lens, Z3 camera  and Z30 camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomDirection_inline",
                   "",
            ],
            [
                   "ZoomSpeed",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomSpeed_inline",
                   "The speed of lens to zoom. The speed of lens to zoom. Supported by X5, X5R and X5S with zoom lens, Z3 camera and Z30 camera.",
            ],
            [
                   "The speed of lens to zoom. The speed of lens to zoom. Supported by X5, X5R and X5S with zoom lens, Z3 camera and Z30 camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomSpeed_inline",
                   "",
            ],
            [
                   "FocusMode",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusMode_inline",
                   "Camera focus mode. It is settable only when `isAdjustableFocalPointSupported` returns  `true` and the physical AF switch on the camera is set to auto.",
            ],
            [
                   "Camera focus mode. It is settable only when `isAdjustableFocalPointSupported` returns  `true` and the physical AF switch on the camera is set to auto.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusMode_inline",
                   "",
            ],
            [
                   "FocusStatus",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusStatus_inline",
                   "The focusing status of the camera's lens.",
            ],
            [
                   "The focusing status of the camera's lens.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusStatus_inline",
                   "",
            ],
            [
                   "FocusAssistantSettings",
                   2,
                   "/Components/Camera/DJICamera_DJICameraFocusAssistantSettings.html",
                   "",
                   "Stores the focus settings",
            ],
            [
                   "Stores the focus settings",
                   1,
                   "/Components/Camera/DJICamera_DJICameraFocusAssistantSettings.html",
                   "",
                   "",
            ],
            [
                   "PhotoFileFormat",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoFileFormat_inline",
                   "Camera photo file formats. The default value is JPEG.",
            ],
            [
                   "Camera photo file formats. The default value is JPEG.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoFileFormat_inline",
                   "",
            ],
            [
                   "PhotoAEBCount",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPhotoAEBCount_inline",
                   "The number of pictures to continuously take at one time in AEB mode. Use with `DJICameraPhotoAEBParam`.",
            ],
            [
                   "The number of pictures to continuously take at one time in AEB mode. Use with `DJICameraPhotoAEBParam`.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPhotoAEBCount_inline",
                   "",
            ],
            [
                   "PhotoAspectRatio",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoAspectRatio_inline",
                   "Photo aspect ratio, where the first value is the width and the second value is the height. The default  value is `RATIO_4_3`.",
            ],
            [
                   "Photo aspect ratio, where the first value is the width and the second value is the height. The default  value is `RATIO_4_3`.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoAspectRatio_inline",
                   "",
            ],
            [
                   "PhotoBurstCount",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoBurstCount_inline",
                   "The number of photos taken in one burst shot (shooting photo in burst mode).",
            ],
            [
                   "The number of photos taken in one burst shot (shooting photo in burst mode).",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoBurstCount_inline",
                   "",
            ],
            [
                   "PhotoTimeLapseFileFormat",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoTimeLapseFileFormat_inline",
                   "File format for camera when it is in time-lapse mode. The default file format is video. If video+JPEG is  selected the minimum interval will be 2 seconds.",
            ],
            [
                   "File format for camera when it is in time-lapse mode. The default file format is video. If video+JPEG is  selected the minimum interval will be 2 seconds.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoTimeLapseFileFormat_inline",
                   "",
            ],
            [
                   "PhotoTimeIntervalSettings",
                   2,
                   "/Components/Camera/DJICamera_DJICameraPhotoIntervalParam.html",
                   "",
                   "Sets the number of pictures, and sets the time interval between pictures for the Interval shoot photo mode.",
            ],
            [
                   "Sets the number of pictures, and sets the time interval between pictures for the Interval shoot photo mode.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraPhotoIntervalParam.html",
                   "",
                   "",
            ],
            [
                   "PhotoTimeLapseSettings",
                   2,
                   "/Components/Camera/DJICamera_DJICameraPhotoTimeLapseSettings.html",
                   "",
                   "Stores the time lapse settings.",
            ],
            [
                   "Stores the time lapse settings.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraPhotoTimeLapseSettings.html",
                   "",
                   "",
            ],
            [
                   "PhotoPanoramaMode",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPhotoPanoramaMode_inline",
                   "Panorama photo modes.",
            ],
            [
                   "Panorama photo modes.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPhotoPanoramaMode_inline",
                   "",
            ],
            [
                   "VideoFileFormat",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFileFormat_inline",
                   "Video storage formats.",
            ],
            [
                   "Video storage formats.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFileFormat_inline",
                   "",
            ],
            [
                   "VideoResolution",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_inline",
                   "Camera video resolution values. The resolutions available for a product are in `videoResolutionAndFrameRateRange`.",
            ],
            [
                   "Camera video resolution values. The resolutions available for a product are in `videoResolutionAndFrameRateRange`.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_inline",
                   "",
            ],
            [
                   "VideoFrameRate",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_inline",
                   "Camera video frame rate values. The frame rates available for a product  are in `videoResolutionAndFrameRateRange`.",
            ],
            [
                   "Camera video frame rate values. The frame rates available for a product  are in `videoResolutionAndFrameRateRange`.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_inline",
                   "",
            ],
            [
                   "ResolutionAndFrameRate",
                   2,
                   "/Components/Camera/DJICamera_DJICameraVideoResolutionAndFrameRate.html",
                   "",
                   "This class contains current values for camera parameters related to video resolution and video frame rate.",
            ],
            [
                   "This class contains current values for camera parameters related to video resolution and video frame rate.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraVideoResolutionAndFrameRate.html",
                   "",
                   "",
            ],
            [
                   "VideoStandard",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoStandard_inline",
                   "Video standard values. The default value is NTSC.",
            ],
            [
                   "Video standard values. The default value is NTSC.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoStandard_inline",
                   "",
            ],
            [
                   "VideoFileCompressionStandard",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJIVideoFileCompressionStandard_inline",
                   "The compression standard used to store the video files. Only supported by X4S, X5S and Phantom 4 Pro cameras.",
            ],
            [
                   "The compression standard used to store the video files. Only supported by X4S, X5S and Phantom 4 Pro cameras.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJIVideoFileCompressionStandard_inline",
                   "",
            ],
            [
                   "CameraSSDVideoLicense",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoLicense_inline",
                   "DJI camera's license keys. An Inspire 2 License Key activates the usage permission of CinemaDNG or Apple ProRes inside  CineCore 2.0. License keys are obtained by by purchase from the DJI store website using the Inspire 2 serial number.  The Inspire 2 is then connected to DJI Assistant 2, and the  license keys downloaded to it. Only supported by X5S camera.",
            ],
            [
                   "DJI camera's license keys. An Inspire 2 License Key activates the usage permission of CinemaDNG or Apple ProRes inside  CineCore 2.0. License keys are obtained by by purchase from the DJI store website using the Inspire 2 serial number.  The Inspire 2 is then connected to DJI Assistant 2, and the  license keys downloaded to it. Only supported by X5S camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoLicense_inline",
                   "",
            ],
            [
                   "SSDVideoDigitalFilter",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoDigitalFilter_inline",
                   "Camera digital filters for videos that will be stored in SSD. The default value is `NONE`. Only Supported by Inspire 2.",
            ],
            [
                   "Camera digital filters for videos that will be stored in SSD. The default value is `NONE`. Only Supported by Inspire 2.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoDigitalFilter_inline",
                   "",
            ],
            [
                   "AntiFlickerFrequency",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAntiFlicker_inline",
                   "Camera anti-flickers. The default value is `MANUAL_50HZ`.",
            ],
            [
                   "Camera anti-flickers. The default value is `MANUAL_50HZ`.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAntiFlicker_inline",
                   "",
            ],
            [
                   "SSDOperationState",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_inline",
                   "Solid State Drive (SSD) State.",
            ],
            [
                   "Solid State Drive (SSD) State.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_inline",
                   "",
            ],
            [
                   "SSDCapacity",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDCapacity_inline",
                   "Solid State Drive (SSD) Capacity.",
            ],
            [
                   "Solid State Drive (SSD) Capacity.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDCapacity_inline",
                   "",
            ],
            [
                   "FileIndexMode",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraFileIndexMode_inline",
                   "File index modes.",
            ],
            [
                   "File index modes.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraFileIndexMode_inline",
                   "",
            ],
            [
                   "CustomSettingsProfile",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraCustomSettings_inline",
                   "Camera user settings. A user can save or load camera settings to or from the specified user.",
            ],
            [
                   "Camera user settings. A user can save or load camera settings to or from the specified user.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraCustomSettings_inline",
                   "",
            ],
            [
                   "DigitalFilter",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_inline",
                   "Camera digital filters. The default value is `NONE`. Z30 camera only  supports `NONE`, `BLACK_AND_WHITE`  and `INVERSE`.",
            ],
            [
                   "Camera digital filters. The default value is `NONE`. Z30 camera only  supports `NONE`, `BLACK_AND_WHITE`  and `INVERSE`.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_inline",
                   "",
            ],
            [
                   "Orientation",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOrientation_inline",
                   "Physical orientation of the camera.",
            ],
            [
                   "Physical orientation of the camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOrientation_inline",
                   "",
            ],
            [
                   "PictureStylePresetType",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPictureStylePresetType_inline",
                   "Camera preset type, a combine of Saturation, Contrast, Sharpness.",
            ],
            [
                   "Camera preset type, a combine of Saturation, Contrast, Sharpness.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPictureStylePresetType_inline",
                   "",
            ],
            [
                   "PictureStylePreset",
                   2,
                   "/Components/Camera/DJICamera_DJICameraPictureStylePreset.html",
                   "",
                   "Camera preset type that stores saturation, contrast and sharpness",
            ],
            [
                   "Camera preset type that stores saturation, contrast and sharpness",
                   1,
                   "/Components/Camera/DJICamera_DJICameraPictureStylePreset.html",
                   "",
                   "",
            ],
            [
                   "CameraLiveView",
                   2,
                   "/Components/Camera/DJICamera_CameraLiveView.html",
                   "",
                   "CameraLiveView provides a simplified main camera live view. To show the main camera live view in your activity, include it in XML  file directly. No need for any configuration.",
            ],
            [
                   "CameraLiveView provides a simplified main camera live view. To show the main camera live view in your activity, include it in XML  file directly. No need for any configuration.",
                   1,
                   "/Components/Camera/DJICamera_CameraLiveView.html",
                   "",
                   "",
            ],
            [
                   "ThermalROI",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalROI_inline",
                   "Region of interest. Use this feature to manage color range distribution across the screen to maximize contrast for  regions of highest interest.",
            ],
            [
                   "Region of interest. Use this feature to manage color range distribution across the screen to maximize contrast for  regions of highest interest.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalROI_inline",
                   "",
            ],
            [
                   "ThermalPalette",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_inline",
                   "The different colors are used to show various temperatures in the thermal imagery image. The colors are not actually  related to wavelengths of light, but rather the grayscale intensity.",
            ],
            [
                   "The different colors are used to show various temperatures in the thermal imagery image. The colors are not actually  related to wavelengths of light, but rather the grayscale intensity.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_inline",
                   "",
            ],
            [
                   "ThermalScene",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_inline",
                   "Uses the Scene option to instantly enhance your image.",
            ],
            [
                   "Uses the Scene option to instantly enhance your image.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_inline",
                   "",
            ],
            [
                   "ThermalIsothermUnit",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalIsothermUnit_inline",
                   "The unit for Isotherm.",
            ],
            [
                   "The unit for Isotherm.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalIsothermUnit_inline",
                   "",
            ],
            [
                   "ThermalGainMode",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalGainMode_inline",
                   "The gain mode.",
            ],
            [
                   "The gain mode.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalGainMode_inline",
                   "",
            ],
            [
                   "ThermalResolution",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalResolution_inline",
                   "The resolution of thermal imaging camera.",
            ],
            [
                   "The resolution of thermal imaging camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalResolution_inline",
                   "",
            ],
            [
                   "ThermalFrameRateUpperBound",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalFrameRateUpperBound_inline",
                   "The frame rate upper bound supported by the thermal camera.",
            ],
            [
                   "The frame rate upper bound supported by the thermal camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalFrameRateUpperBound_inline",
                   "",
            ],
            [
                   "ThermalLensFocalLength",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalLensModel_inline",
                   "The focal length of the thermal imaging camera.",
            ],
            [
                   "The focal length of the thermal imaging camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalLensModel_inline",
                   "",
            ],
            [
                   "ThermalVersion",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalVersion_inline",
                   "There is a standard version and version with Advanced Radiometry capabilities of the Zenmuse XT thermal camera. This  enum defines the versions.",
            ],
            [
                   "There is a standard version and version with Advanced Radiometry capabilities of the Zenmuse XT thermal camera. This  enum defines the versions.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalVersion_inline",
                   "",
            ],
            [
                   "ThermalCustomExternalSceneSettingsProfile",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalCustomExternalSceneSettings_inline",
                   "User defined parameters.",
            ],
            [
                   "User defined parameters.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalCustomExternalSceneSettings_inline",
                   "",
            ],
            [
                   "ThermalFFCMode",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalFFCMode_inline",
                   "Flat-field correction mods.",
            ],
            [
                   "Flat-field correction mods.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalFFCMode_inline",
                   "",
            ],
            [
                   "ThermalProfile",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalProfile.html",
                   "",
                   "The profile of the thermal imaging camera, which includes information about resolution, frame rate and focal length.",
            ],
            [
                   "The profile of the thermal imaging camera, which includes information about resolution, frame rate and focal length.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalProfile.html",
                   "",
                   "",
            ],
            [
                   "ThermalDigitalZoomFactor",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalDigitalZoomScale_inline",
                   "Thermal camera digital zoom scale. The default value is x1.",
            ],
            [
                   "Thermal camera digital zoom scale. The default value is x1.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalDigitalZoomScale_inline",
                   "",
            ],
            [
                   "ThermalMeasurementMode",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalMeasurementMode_inline",
                   "Thermal camera temperature measurement mode. The default value is  Disabled.",
            ],
            [
                   "Thermal camera temperature measurement mode. The default value is  Disabled.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalMeasurementMode_inline",
                   "",
            ],
            [
                   "ThermalAreaTemperatureAggregations",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalAreaTemperatureAggregations.html",
                   "",
                   "The aggregate temperature measurements for a selected metering area.",
            ],
            [
                   "The aggregate temperature measurements for a selected metering area.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalAreaTemperatureAggregations.html",
                   "",
                   "",
            ],
            [
                   "ThermalExternalSceneSettings",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "",
                   "Thermal cameras measure the apparent surface temperature of a given object. This is done by taking the amount of infrared  radiation an object emits and calculating the surface temperature by applying a formula that adjusts for external factors.   This struct includes all of the external scene parameters that the thermal camera firmware allows  to be customized.  There are two types of parameters, optical parameters which specify how much infrared  radiation is transmitted from the  surface to the thermal sensor, as well as parameters that specify sources of thermal radiance other than the object.   For a more in-depth overview of the physics behind thermal imaging, see https://en.wikipedia.org/wiki/Thermography.",
            ],
            [
                   "Thermal cameras measure the apparent surface temperature of a given object. This is done by taking the amount of infrared  radiation an object emits and calculating the surface temperature by applying a formula that adjusts for external factors.   This struct includes all of the external scene parameters that the thermal camera firmware allows  to be customized.  There are two types of parameters, optical parameters which specify how much infrared  radiation is transmitted from the  surface to the thermal sensor, as well as parameters that specify sources of thermal radiance other than the object.   For a more in-depth overview of the physics behind thermal imaging, see https://en.wikipedia.org/wiki/Thermography.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "",
                   "",
            ],
            [
                   "DisplayNamePhantom3StandardCamera",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNamePhantom3StandardCamera_inline",
                   "The display name for Phantom 3 Standard camera.",
            ],
            [
                   "The display name for Phantom 3 Standard camera.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNamePhantom3StandardCamera_inline",
                   "",
            ],
            [
                   "DisplayNamePhantom3AdvancedCamera",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNamePhantom3AdvancedCamera_inline",
                   "The display name for Phantom 3 Advanced camera.",
            ],
            [
                   "The display name for Phantom 3 Advanced camera.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNamePhantom3AdvancedCamera_inline",
                   "",
            ],
            [
                   "DisplayNamePhantom3ProfessionalCamera",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNamePhantom3ProfessionalCamera_inline",
                   "The display name for Phantom 3 Professional camera.",
            ],
            [
                   "The display name for Phantom 3 Professional camera.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNamePhantom3ProfessionalCamera_inline",
                   "",
            ],
            [
                   "DisplayNamePhantom34KCamera",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNamePhantom34KCamera_inline",
                   "The display name for Phantom 3 4K camera.",
            ],
            [
                   "The display name for Phantom 3 4K camera.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNamePhantom34KCamera_inline",
                   "",
            ],
            [
                   "DisplayNameX3",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameX3_inline",
                   "The display name for X3 camera.",
            ],
            [
                   "The display name for X3 camera.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameX3_inline",
                   "",
            ],
            [
                   "DisplayNameX5",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameX5_inline",
                   "The display name for X5 camera.",
            ],
            [
                   "The display name for X5 camera.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameX5_inline",
                   "",
            ],
            [
                   "DisplayNameX5R",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameX5R_inline",
                   "The display name for X5R camera.",
            ],
            [
                   "The display name for X5R camera.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameX5R_inline",
                   "",
            ],
            [
                   "DisplayNamePhantom4Camera",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNamePhantom4Camera_inline",
                   "The display name for Phantom 4 camera.",
            ],
            [
                   "The display name for Phantom 4 camera.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNamePhantom4Camera_inline",
                   "",
            ],
            [
                   "DisplaynamePhantom4ProCamera",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNamePhantom4ProCamera_inline",
                   "The display name for Phantom 4 Pro camera.",
            ],
            [
                   "The display name for Phantom 4 Pro camera.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNamePhantom4ProCamera_inline",
                   "",
            ],
            [
                   "DisplayNameXT",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameXT_inline",
                   "The display name for XT camera.",
            ],
            [
                   "The display name for XT camera.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameXT_inline",
                   "",
            ],
            [
                   "DisplayNameZ3",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameZ3_inline",
                   "The display name for Z3 camera.",
            ],
            [
                   "The display name for Z3 camera.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameZ3_inline",
                   "",
            ],
            [
                   "DisplayNameMavicProCamera",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameMavicProCamera_inline",
                   "The display name for Mavic Pro camera.",
            ],
            [
                   "The display name for Mavic Pro camera.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameMavicProCamera_inline",
                   "",
            ],
            [
                   "DisplayNameSparkCamera",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameSparkCamera_inline",
                   "The display name for Spark camera.",
            ],
            [
                   "The display name for Spark camera.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameSparkCamera_inline",
                   "",
            ],
            [
                   "DisplayNameZ30",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameZ30_inline",
                   "The display name for Z30 camera.",
            ],
            [
                   "The display name for Z30 camera.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameZ30_inline",
                   "",
            ],
            [
                   "DisplayNameX4S",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameX4S_inline",
                   "The display name for X4S camera.",
            ],
            [
                   "The display name for X4S camera.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameX4S_inline",
                   "",
            ],
            [
                   "DisplayNameX5S",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameX5S_inline",
                   "The display name for X5S camera.",
            ],
            [
                   "The display name for X5S camera.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNameX5S_inline",
                   "",
            ],
            [
                   "DisplaynamePhantom4AdvancedCamera",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNamePhantom4AdvancedCamera_inline",
                   "The display name for Phantom 4 Advanced camera.",
            ],
            [
                   "The display name for Phantom 4 Advanced camera.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraDisplayNamePhantom4AdvancedCamera_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalAreaTemperatureAggregations.html",
                   "#DJICamera_ThermalCameraAreaTemperatureAggregationsUpdatedCallbackInterface_inline",
                   "This interface provides information about the aggregate temperature of metering area.",
            ],
            [
                   "This interface provides information about the aggregate temperature of metering area.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalAreaTemperatureAggregations.html",
                   "#DJICamera_ThermalCameraAreaTemperatureAggregationsUpdatedCallbackInterface_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_ThermalCameraExternalSceneSettingsUpdatedCallbackInterface_inline",
                   "This interface provides information about the external scene settings.",
            ],
            [
                   "This interface provides information about the external scene settings.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_ThermalCameraExternalSceneSettingsUpdatedCallbackInterface_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/Camera/DJICamera_DJICameraExposureParameters.html",
                   "#DJICamera_CameraUpdatedCurrentExposureValuesCallbackInterface_inline",
                   "Called whenever the camera parameters change. In automatic exposure modes (Program, Shutter Priority and  Aperture Priority) the camera may be automatically changing aperture, shutter speed and ISO (depending on  the mode and camera) when lighting conditions change. In Manual mode, the exposure compensation is automatically  updated to let the user know how much compensation the exposure needs to get to an exposure the camera calculates as correct.",
            ],
            [
                   "Called whenever the camera parameters change. In automatic exposure modes (Program, Shutter Priority and  Aperture Priority) the camera may be automatically changing aperture, shutter speed and ISO (depending on  the mode and camera) when lighting conditions change. In Manual mode, the exposure compensation is automatically  updated to let the user know how much compensation the exposure needs to get to an exposure the camera calculates as correct.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraExposureParameters.html",
                   "#DJICamera_CameraUpdatedCurrentExposureValuesCallbackInterface_inline",
                   "",
            ],
            [
                   "onReceive",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_didReceiveVideoData_inline",
                   "Video data update callback. H.264 (also called MPEG-4 Part 10 Advanced Video Coding or MPEG-4 AVC) is a video  coding format that is currently one of the most commonly used formats for the recording, compression, and  distribution of video content.  @param videoBuffer H.264 video data buffer. Don't free the buffer after it has been used. The units for the video buffer are bytes. @param length Size of the address of the video data buffer in bytes.",
            ],
            [
                   "Video data update callback. H.264 (also called MPEG-4 Part 10 Advanced Video Coding or MPEG-4 AVC) is a video  coding format that is currently one of the most commonly used formats for the recording, compression, and  distribution of video content.  @param videoBuffer H.264 video data buffer. Don't free the buffer after it has been used. The units for the video buffer are bytes. @param length Size of the address of the video data buffer in bytes.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_didReceiveVideoData_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_didUpdateSystemState_inline",
                   "Called when the camera's current state has been updated.  @param systemState The system state of camera.",
            ],
            [
                   "Called when the camera's current state has been updated.  @param systemState The system state of camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_didUpdateSystemState_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "#DJICamera_didUpdateLensState_inline",
                   "Called when the camera's lens and focus state has been updated.  This callback method is only  available when `isInterchangeableLensSupported`  is `true`.  @param state The camera lens and focus state information.",
            ],
            [
                   "Called when the camera's lens and focus state has been updated.  This callback method is only  available when `isInterchangeableLensSupported`  is `true`.  @param state The camera lens and focus state information.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "#DJICamera_didUpdateLensState_inline",
                   "",
            ],
            [
                   "onNewFile",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJICamera_didGenerateNewMediaFile_inline",
                   "Called when a new media file (photo or video) has been generated.  In this callback method, the `MediaFile` instance properties `getDurationInSeconds` and  `getVideoOrientation` require special consideration. The thumbnail property normally has a  pointer to a UIImage of the thumbnail, but this is only available when the camera is in  `MEDIA_DOWNLOAD` work mode. Additionally, for this instance of  `MediaFile`, the `getDurationInSeconds` property is 0 and the  `getVideoOrientation` property is `LANDSCAPE`.  @param mediaFile The new media file.",
            ],
            [
                   "Called when a new media file (photo or video) has been generated.  In this callback method, the `MediaFile` instance properties `getDurationInSeconds` and  `getVideoOrientation` require special consideration. The thumbnail property normally has a  pointer to a UIImage of the thumbnail, but this is only available when the camera is in  `MEDIA_DOWNLOAD` work mode. Additionally, for this instance of  `MediaFile`, the `getDurationInSeconds` property is 0 and the  `getVideoOrientation` property is `LANDSCAPE`.  @param mediaFile The new media file.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJICamera_didGenerateNewMediaFile_inline",
                   "",
            ],
            [
                   "onGenerate",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_didGenerateTimeLapsePreview_inline",
                   "Called when a time-lapse preview image has been generated. This method is only available on Osmo with firmware version v1.5.2.0 or above.  @param previewImage The new generated preview image.",
            ],
            [
                   "Called when a time-lapse preview image has been generated. This method is only available on Osmo with firmware version v1.5.2.0 or above.  @param previewImage The new generated preview image.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_didGenerateTimeLapsePreview_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_didUpdateSDCardState_inline",
                   "Called when the camera's SD card state has been updated.  @param state The SDCard state of camera",
            ],
            [
                   "Called when the camera's SD card state has been updated.  @param state The SDCard state of camera",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_didUpdateSDCardState_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_didUpdateSSDState_inline",
                   "Called when the camera's SSD state has been updated. This method is available only when `isSSDSupported` is `true`.  @param state The SSD's information.",
            ],
            [
                   "Called when the camera's SSD state has been updated. This method is available only when `isSSDSupported` is `true`.  @param state The SSD's information.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_didUpdateSSDState_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalAreaTemperatureAggregations.html",
                   "#DJICamera_didUpdateAreaTemperatureAggregations_inline",
                   "Called when there are new min, max, and average temperature values available for the set spot metering area.  Supported only by Zenmuse XT containing Advanced Radiometry capabilities.  @param aggregations The ThermalAreaTemperatureAggregations.",
            ],
            [
                   "Called when there are new min, max, and average temperature values available for the set spot metering area.  Supported only by Zenmuse XT containing Advanced Radiometry capabilities.  @param aggregations The ThermalAreaTemperatureAggregations.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalAreaTemperatureAggregations.html",
                   "#DJICamera_didUpdateAreaTemperatureAggregations_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_didUpdateExternalSceneSettings_inline",
                   "Called when updated external scene settings are available. Supported only by Zenmuse XT containing Advanced Radiometry capabilities.  @param settings The ThermalExternalSceneSettings.",
            ],
            [
                   "Called when updated external scene settings are available. Supported only by Zenmuse XT containing Advanced Radiometry capabilities.  @param settings The ThermalExternalSceneSettings.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_didUpdateExternalSceneSettings_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Camera/DJICamera_DJICameraExposureParameters.html",
                   "#DJICamera_didUpdateCurrentExposureParameters_inline",
                   "Called whenever the camera parameters change. In automatic exposure modes (Program, Shutter Priority and  Aperture Priority) the camera may be automatically changing aperture, shutter speed and ISO (depending on  the mode and camera) when lighting conditions change. In Manual mode, the exposure compensation is  automatically updated to let the user know how much compensation the exposure needs to get to an exposure  the camera calculates as correct.  @param values The updated values for parameters.",
            ],
            [
                   "Called whenever the camera parameters change. In automatic exposure modes (Program, Shutter Priority and  Aperture Priority) the camera may be automatically changing aperture, shutter speed and ISO (depending on  the mode and camera) when lighting conditions change. In Manual mode, the exposure compensation is  automatically updated to let the user know how much compensation the exposure needs to get to an exposure  the camera calculates as correct.  @param values The updated values for parameters.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraExposureParameters.html",
                   "#DJICamera_didUpdateCurrentExposureParameters_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_didUpdateTemperatureData_inline",
                   "Received temperature in degrees Celsius of image. The thermal imaging camera will only update the temperature  if the temperature data is enabled. For the XT Standard version, the temperature measurement data is the  average of the center four pixels of the image. For the XT Advanced Radiometry version, the temperature  measurement point can be set using `setThermalSpotMeteringTargetPoint`.  @param temperature The camera's temperature data in degrees Celsius.",
            ],
            [
                   "Received temperature in degrees Celsius of image. The thermal imaging camera will only update the temperature  if the temperature data is enabled. For the XT Standard version, the temperature measurement data is the  average of the center four pixels of the image. For the XT Advanced Radiometry version, the temperature  measurement point can be set using `setThermalSpotMeteringTargetPoint`.  @param temperature The camera's temperature data in degrees Celsius.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_didUpdateTemperatureData_inline",
                   "",
            ],
            [
                   "SHOOT_PHOTO",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMode_DJICameraModeShootPhoto_inline",
                   "Capture mode. In this mode, the user can capture pictures.",
            ],
            [
                   "Capture mode. In this mode, the user can capture pictures.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMode_DJICameraModeShootPhoto_inline",
                   "",
            ],
            [
                   "RECORD_VIDEO",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMode_DJICameraModeRecordVideo_inline",
                   "Record mode. In this mode, the user can record videos.",
            ],
            [
                   "Record mode. In this mode, the user can record videos.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMode_DJICameraModeRecordVideo_inline",
                   "",
            ],
            [
                   "PLAYBACK",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMode_DJICameraModePlayback_inline",
                   "Playback mode. In this mode, the user can preview photos and videos, and can delete files. It is supported by  Phantom 3 Professional camera, X3, X5 and X5R cameras on aircraft and Phantom 4 camera. Playback mode is not  supported by Z30, X5S, X4S, Phantom 4 Pro, Mavic Pro, Phantom 3 Standard, Phantom 3 Advanced, Phantom 3 4K and  Osmo series.",
            ],
            [
                   "Playback mode. In this mode, the user can preview photos and videos, and can delete files. It is supported by  Phantom 3 Professional camera, X3, X5 and X5R cameras on aircraft and Phantom 4 camera. Playback mode is not  supported by Z30, X5S, X4S, Phantom 4 Pro, Mavic Pro, Phantom 3 Standard, Phantom 3 Advanced, Phantom 3 4K and  Osmo series.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMode_DJICameraModePlayback_inline",
                   "",
            ],
            [
                   "MEDIA_DOWNLOAD",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMode_DJICameraModeMediaDownload_inline",
                   "In this mode, the user can download media to the Mobile Device. Not supported by X5 camera nor X5R camera while  mounted on aircraft.",
            ],
            [
                   "In this mode, the user can download media to the Mobile Device. Not supported by X5 camera nor X5R camera while  mounted on aircraft.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMode_DJICameraModeMediaDownload_inline",
                   "",
            ],
            [
                   "BROADCAST",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMode_DJICameraModeBroadcast_inline",
                   "In this mode, live stream resolution and frame rate will be 1080i50 (PAL) or 720p60 (NTSC). In this mode videos can  be recorded. Still photos can also be taken only when video is recording. The only way to exit broadcast mode is to change modes to `RECORD_VIDEO`. Only supported by Inspire 2.",
            ],
            [
                   "In this mode, live stream resolution and frame rate will be 1080i50 (PAL) or 720p60 (NTSC). In this mode videos can  be recorded. Still photos can also be taken only when video is recording. The only way to exit broadcast mode is to change modes to `RECORD_VIDEO`. Only supported by Inspire 2.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMode_DJICameraModeBroadcast_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMode_DJICameraModeUnknown_inline",
                   "The camera work mode is unknown.",
            ],
            [
                   "The camera work mode is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMode_DJICameraModeUnknown_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_CameraUpdatedSystemStateCallbackInterface_inline",
                   "Updates the camera's current state. In order to begin updates, call the startCameraStateUpdates method  for the respective aircraft.",
            ],
            [
                   "Updates the camera's current state. In order to begin updates, call the startCameraStateUpdates method  for the respective aircraft.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_CameraUpdatedSystemStateCallbackInterface_inline",
                   "",
            ],
            [
                   "getMode",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_mode_inline",
                   "The current mode of the camera.  @return An enum value of `CameraMode`",
            ],
            [
                   "The current mode of the camera.  @return An enum value of `CameraMode`",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_mode_inline",
                   "",
            ],
            [
                   "isShootingSinglePhoto",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isShootingSinglePhoto_inline",
                   "`true` when the camera is performing any photo capture in  any `ShootPhotoMode`. Between photo capture in interval and time lapse mode, this property  will be `false`. The camera is shooting a single photo.  @return A boolean value.",
            ],
            [
                   "`true` when the camera is performing any photo capture in  any `ShootPhotoMode`. Between photo capture in interval and time lapse mode, this property  will be `false`. The camera is shooting a single photo.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isShootingSinglePhoto_inline",
                   "",
            ],
            [
                   "isShootingSinglePhotoInRAWFormat",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isShootingSinglePhotoInRAWFormat_inline",
                   "`true` when the camera is performing a photo capture in RAW or RAW+JPEG format. Between  photo capture in interval and time lapse mode, this property will be `false`. If saving  the photo in JPEG only, this property will always be `false`.  @return A boolean value.",
            ],
            [
                   "`true` when the camera is performing a photo capture in RAW or RAW+JPEG format. Between  photo capture in interval and time lapse mode, this property will be `false`. If saving  the photo in JPEG only, this property will always be `false`.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isShootingSinglePhotoInRAWFormat_inline",
                   "",
            ],
            [
                   "isShootingIntervalPhoto",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isShootingIntervalPhoto_inline",
                   "`true` when the camera is performing an interval capture. `true` after `startShootPhoto` is called, and `false` after `stopShootPhoto` is called.  @return A boolean value.",
            ],
            [
                   "`true` when the camera is performing an interval capture. `true` after `startShootPhoto` is called, and `false` after `stopShootPhoto` is called.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isShootingIntervalPhoto_inline",
                   "",
            ],
            [
                   "isShootingBurstPhoto",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isShootingBurstPhoto_inline",
                   "`true` when the camera is performing a burst capture. `true`  after `startShootPhoto` is called, and `false` after the burst is complete. The camera is shooting burst photos.  @return A boolean value.",
            ],
            [
                   "`true` when the camera is performing a burst capture. `true`  after `startShootPhoto` is called, and `false` after the burst is complete. The camera is shooting burst photos.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isShootingBurstPhoto_inline",
                   "",
            ],
            [
                   "isShootingRAWBurstPhoto",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isShootingRAWBurstPhoto_inline",
                   "`true` when the camera is performing a RAW burst capture. `true`  after `startShootPhoto` is called, and `false` after the RAW burst is complete. The camera is shooting RAW burst photos.  @return A boolean value.",
            ],
            [
                   "`true` when the camera is performing a RAW burst capture. `true`  after `startShootPhoto` is called, and `false` after the RAW burst is complete. The camera is shooting RAW burst photos.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isShootingRAWBurstPhoto_inline",
                   "",
            ],
            [
                   "getCurrentPanoramaPhotoCount",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_currentPanoramaPhotoCount_inline",
                   "The current completed photo count of the executing panorama shot.  @return An int value.",
            ],
            [
                   "The current completed photo count of the executing panorama shot.  @return An int value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_currentPanoramaPhotoCount_inline",
                   "",
            ],
            [
                   "isShootingShallowFocusPhoto",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isShootingShallowFocusPhoto_inline",
                   "`true` when the camera is performing a ShallowFocus capture.  @return A boolean value.",
            ],
            [
                   "`true` when the camera is performing a ShallowFocus capture.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isShootingShallowFocusPhoto_inline",
                   "",
            ],
            [
                   "isShootingPanoramaPhoto",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isShootingPanoramaPhoto_inline",
                   "`true` when the camera is performing a Panorama capture.  @return A boolean value.",
            ],
            [
                   "`true` when the camera is performing a Panorama capture.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isShootingPanoramaPhoto_inline",
                   "",
            ],
            [
                   "isStoringPhoto",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isStoringPhoto_inline",
                   "`true` if the camera is storing a photo. When `isStoringPhoto`  is `true`, the user cannot change the camera mode or start to shoot another photo.  @return A boolean value.",
            ],
            [
                   "`true` if the camera is storing a photo. When `isStoringPhoto`  is `true`, the user cannot change the camera mode or start to shoot another photo.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isStoringPhoto_inline",
                   "",
            ],
            [
                   "isRecording",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isRecording_inline",
                   "`true` if the camera is recording video.  @return A boolean value.",
            ],
            [
                   "`true` if the camera is recording video.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isRecording_inline",
                   "",
            ],
            [
                   "getCurrentVideoRecordingTimeInSeconds",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_currentVideoRecordingTimeInSeconds_inline",
                   "The duration, in seconds, of the video currently being recorded by the camera.  @return An int value.",
            ],
            [
                   "The duration, in seconds, of the video currently being recorded by the camera.  @return An int value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_currentVideoRecordingTimeInSeconds_inline",
                   "",
            ],
            [
                   "isOverheating",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isCameraOverHeated_inline",
                   "`true` if the camera is too hot.  @return A boolean value.",
            ],
            [
                   "`true` if the camera is too hot.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isCameraOverHeated_inline",
                   "",
            ],
            [
                   "hasError",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isCameraError_inline",
                   "`true` if there is a camera sensor error.  @return A boolean value.",
            ],
            [
                   "`true` if there is a camera sensor error.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSystemState.html",
                   "#DJICamera_DJICameraSystemState_isCameraError_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "#DJICamera_CameraUpdatedLensStateCallbackInterface_inline",
                   "This interface provides updated information about the lens and focus.",
            ],
            [
                   "This interface provides updated information about the lens and focus.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "#DJICamera_CameraUpdatedLensStateCallbackInterface_inline",
                   "",
            ],
            [
                   "isLensMounted",
                   2,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "#DJICamera_DJICameraLensState_isLensInstalled_inline",
                   "`true` if lens is installed on the camera.  @return A boolean value.",
            ],
            [
                   "`true` if lens is installed on the camera.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "#DJICamera_DJICameraLensState_isLensInstalled_inline",
                   "",
            ],
            [
                   "getFocusStatus",
                   2,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "#DJICamera_DJICameraLensState_focusStatus_inline",
                   "The current focus status of the lens.  If the lens is not installed, the value is undefined.  @return A `FocusStatus` enum value.",
            ],
            [
                   "The current focus status of the lens.  If the lens is not installed, the value is undefined.  @return A `FocusStatus` enum value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "#DJICamera_DJICameraLensState_focusStatus_inline",
                   "",
            ],
            [
                   "isAFSwitchOn",
                   2,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "#DJICamera_DJICameraLensState_isAFSwitchOn_inline",
                   "`true` if the lens Auto Focus (AF) switch is on. If the lens is not  installed, the value is undefined. If `true`, `setFocusMode`  can be used to control the focal point.  @return A boolean value.",
            ],
            [
                   "`true` if the lens Auto Focus (AF) switch is on. If the lens is not  installed, the value is undefined. If `true`, `setFocusMode`  can be used to control the focal point.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "#DJICamera_DJICameraLensState_isAFSwitchOn_inline",
                   "",
            ],
            [
                   "getFocusMode",
                   2,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "#DJICamera_DJICameraLensState_focusMode_inline",
                   "The current focus mode. If the lens is not installed, the value is undefined.  @return A `FocusMode` enum value.",
            ],
            [
                   "The current focus mode. If the lens is not installed, the value is undefined.  @return A `FocusMode` enum value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "#DJICamera_DJICameraLensState_focusMode_inline",
                   "",
            ],
            [
                   "isFocusAssistantEnabledForMF",
                   2,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "#DJICamera_DJICameraLensState_isFocusAssistantEnabledForMF_inline",
                   "`true` if the focus assistant is enabled for Manual focus mode. If the lens is not installed, the value is undefined.  @return A boolean value.",
            ],
            [
                   "`true` if the focus assistant is enabled for Manual focus mode. If the lens is not installed, the value is undefined.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "#DJICamera_DJICameraLensState_isFocusAssistantEnabledForMF_inline",
                   "",
            ],
            [
                   "isFocusAssistantEnabledForAF",
                   2,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "#DJICamera_DJICameraLensState_isFocusAssistantEnabledForAF_inline",
                   "`true` if the focus assistant is enabled for Auto focus mode. If the lens is not installed, the value is undefined.  @return A boolean value.",
            ],
            [
                   "`true` if the focus assistant is enabled for Auto focus mode. If the lens is not installed, the value is undefined.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "#DJICamera_DJICameraLensState_isFocusAssistantEnabledForAF_inline",
                   "",
            ],
            [
                   "isFocusAssistantWorking",
                   2,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "#DJICamera_DJICameraLensState_isFocusAssistantWorking_inline",
                   "`true` if the focus target is zooming out.  If the lens is not installed, the value is undefined.  @return A boolean value.",
            ],
            [
                   "`true` if the focus target is zooming out.  If the lens is not installed, the value is undefined.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraLensState.html",
                   "#DJICamera_DJICameraLensState_isFocusAssistantWorking_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_CameraUpdatedSDCardStateCallbackInterface_inline",
                   "This interface provides general information and current statuses on the SD card.",
            ],
            [
                   "This interface provides general information and current statuses on the SD card.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_CameraUpdatedSDCardStateCallbackInterface_inline",
                   "",
            ],
            [
                   "isInserted",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_isInserted_inline",
                   "`true` if the SD card is inserted in the camera.  @return A boolean value.",
            ],
            [
                   "`true` if the SD card is inserted in the camera.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_isInserted_inline",
                   "",
            ],
            [
                   "isInitializing",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_isInitializing_inline",
                   "`true` if SD card is initializing. Note that if the SD card is  initializing, the value for other properties  in `SDCardState` is undefined.  @return A boolean value.",
            ],
            [
                   "`true` if SD card is initializing. Note that if the SD card is  initializing, the value for other properties  in `SDCardState` is undefined.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_isInitializing_inline",
                   "",
            ],
            [
                   "isReadOnly",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_isReadOnly_inline",
                   "`true` if the SD card is read-only.  @return A boolean value.",
            ],
            [
                   "`true` if the SD card is read-only.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_isReadOnly_inline",
                   "",
            ],
            [
                   "isFormatted",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_isFormatted_inline",
                   "`true` if the SD card is formatted.  @return A boolean value.",
            ],
            [
                   "`true` if the SD card is formatted.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_isFormatted_inline",
                   "",
            ],
            [
                   "isFormatting",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_isFormatting_inline",
                   "`true` if the SD card is formatting.  @return A boolean value.",
            ],
            [
                   "`true` if the SD card is formatting.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_isFormatting_inline",
                   "",
            ],
            [
                   "isFull",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_isFull_inline",
                   "`true` if the SD card cannot save any more media.  @return A boolean value.",
            ],
            [
                   "`true` if the SD card cannot save any more media.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_isFull_inline",
                   "",
            ],
            [
                   "isVerified",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_isVerified_inline",
                   "`true` if the SD card is verified as genuine. The SD card is not valid if it is fake,  which can be a problem if the SD card was purchased by a non-reputable retailer.  @return A boolean value.",
            ],
            [
                   "`true` if the SD card is verified as genuine. The SD card is not valid if it is fake,  which can be a problem if the SD card was purchased by a non-reputable retailer.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_isVerified_inline",
                   "",
            ],
            [
                   "isInvalidFormat",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_isInvalidFormat_inline",
                   "`true` if SD card filesystem format is invalid.  @return A boolean value.",
            ],
            [
                   "`true` if SD card filesystem format is invalid.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_isInvalidFormat_inline",
                   "",
            ],
            [
                   "hasError",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_hasError_inline",
                   "`true` if there is an SD card error.  @return A boolean value.",
            ],
            [
                   "`true` if there is an SD card error.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_hasError_inline",
                   "",
            ],
            [
                   "getTotalSpaceInMB",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_totalSpaceInMegaBytes_inline",
                   "Total space in Megabytes (MB) available on the SD card.  @return A boolean value.",
            ],
            [
                   "Total space in Megabytes (MB) available on the SD card.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_totalSpaceInMegaBytes_inline",
                   "",
            ],
            [
                   "getRemainingSpaceInMB",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_remainingSpaceInMegaBytes_inline",
                   "Remaining space in Megabytes (MB) on the SD card.  @return An int value.",
            ],
            [
                   "Remaining space in Megabytes (MB) on the SD card.  @return An int value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_remainingSpaceInMegaBytes_inline",
                   "",
            ],
            [
                   "getAvailableCaptureCount",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_availableCaptureCount_inline",
                   "Returns the number of pictures that can be taken with the remaining space available on the SD card.  @return A long value.",
            ],
            [
                   "Returns the number of pictures that can be taken with the remaining space available on the SD card.  @return A long value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_availableCaptureCount_inline",
                   "",
            ],
            [
                   "getAvailableRecordingTimeInSeconds",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_availableRecordingTimeInSeconds_inline",
                   "Returns the number of seconds available for recording with the remaining space available on the SD card.  @return An int value.",
            ],
            [
                   "Returns the number of seconds available for recording with the remaining space available on the SD card.  @return An int value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSDCardState.html",
                   "#DJICamera_DJICameraSDCardState_availableRecordingTimeInSeconds_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_CameraUpdatedSSDStateCallbackInterface_inline",
                   "This interface provides general information and current status of the SSD.",
            ],
            [
                   "This interface provides general information and current status of the SSD.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_CameraUpdatedSSDStateCallbackInterface_inline",
                   "",
            ],
            [
                   "getSSDOperationState",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_DJICameraSSDState_operationState_inline",
                   "SSD state information for currently executing operations.  @return An instance of `SSDOperationState`.",
            ],
            [
                   "SSD state information for currently executing operations.  @return An instance of `SSDOperationState`.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_DJICameraSSDState_operationState_inline",
                   "",
            ],
            [
                   "isConnected",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_DJICameraSSDState_isConnected_inline",
                   "`true` if the SSD is connected. Note, if the camera is disconnected,  the values for other properties in `SSDState` are undefined.  @return A boolean value.",
            ],
            [
                   "`true` if the SSD is connected. Note, if the camera is disconnected,  the values for other properties in `SSDState` are undefined.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_DJICameraSSDState_isConnected_inline",
                   "",
            ],
            [
                   "getCapacity",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_DJICameraSSDState_totalSpace_inline",
                   "SSD's total capacity. @return Total SSD capacity.  @return An instance of `SSDCapacity`.",
            ],
            [
                   "SSD's total capacity. @return Total SSD capacity.  @return An instance of `SSDCapacity`.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_DJICameraSSDState_totalSpace_inline",
                   "",
            ],
            [
                   "getAvailableRecordingTimeInSeconds",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_DJICameraSSDState_availableRecordingTimeInSeconds_inline",
                   "SSD's remaining time in seconds, based on the current `VideoResolution`  and `VideoFrameRate`. @return SSD's remaining time measured in seconds.  @return An int value.",
            ],
            [
                   "SSD's remaining time in seconds, based on the current `VideoResolution`  and `VideoFrameRate`. @return SSD's remaining time measured in seconds.  @return An int value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_DJICameraSSDState_availableRecordingTimeInSeconds_inline",
                   "",
            ],
            [
                   "getRemainingSpaceInMB",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_DJICameraSSDState_remainingSpaceInMegaBytes_inline",
                   "SSD's remaining capacity in MB. @return SSD's remaining capacity measured in MB.  @return A long value.",
            ],
            [
                   "SSD's remaining capacity in MB. @return SSD's remaining capacity measured in MB.  @return A long value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_DJICameraSSDState_remainingSpaceInMegaBytes_inline",
                   "",
            ],
            [
                   "getVideoResolution",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_DJICameraSSDState_videoResolution_inline",
                   "Video resolution to be saved to SSD. @return SSD's video resolution.  @return A `VideoResolution` enum value.",
            ],
            [
                   "Video resolution to be saved to SSD. @return SSD's video resolution.  @return A `VideoResolution` enum value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_DJICameraSSDState_videoResolution_inline",
                   "",
            ],
            [
                   "getVideoFrameRate",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_DJICameraSSDState_videoFrameRate_inline",
                   "Video framerate to be saved to SSD.  @return A `VideoFrameRate` enum value.",
            ],
            [
                   "Video framerate to be saved to SSD.  @return A `VideoFrameRate` enum value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_DJICameraSSDState_videoFrameRate_inline",
                   "",
            ],
            [
                   "getRAWPhotoBurstCount",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_DJICameraSSDState_rawPhotoBurstCount_inline",
                   "Number of photos that are shot in RAW burst mode.  @return An int value.",
            ],
            [
                   "Number of photos that are shot in RAW burst mode.  @return An int value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSSDState.html",
                   "#DJICamera_DJICameraSSDState_rawPhotoBurstCount_inline",
                   "",
            ],
            [
                   "SINGLE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModeSingle_inline",
                   "Sets the camera to take a single photo.",
            ],
            [
                   "Sets the camera to take a single photo.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModeSingle_inline",
                   "",
            ],
            [
                   "HDR",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModeHDR_inline",
                   "Sets the camera to take an HDR photo. X5 camera, X5R camera, XT camera, Z30 camera, Phantom 4 Pro camera, X4S  camera and X5S camera do not support HDR mode.",
            ],
            [
                   "Sets the camera to take an HDR photo. X5 camera, X5R camera, XT camera, Z30 camera, Phantom 4 Pro camera, X4S  camera and X5S camera do not support HDR mode.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModeHDR_inline",
                   "",
            ],
            [
                   "BURST",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModeBurst_inline",
                   "Set the camera to take multiple photos at once. XT camera does not support Burst mode.",
            ],
            [
                   "Set the camera to take multiple photos at once. XT camera does not support Burst mode.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModeBurst_inline",
                   "",
            ],
            [
                   "AEB",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModeAEB_inline",
                   "Automatic Exposure Bracketing (AEB) capture. In this mode you can quickly take multiple shots (the default is 3)  at different exposures without having to manually change any settings between frames. XT camera and Z30 camera does  not support AEB mode.",
            ],
            [
                   "Automatic Exposure Bracketing (AEB) capture. In this mode you can quickly take multiple shots (the default is 3)  at different exposures without having to manually change any settings between frames. XT camera and Z30 camera does  not support AEB mode.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModeAEB_inline",
                   "",
            ],
            [
                   "INTERVAL",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModeInterval_inline",
                   "Sets the camera to take a picture (or multiple pictures) continuously at a set time interval. The minimum  interval for JPEG format of any quality is 2s. For all cameras except X4S, X5S and Phantom 4 Pro camera:  The minimum interval for RAW or RAW+JPEG format is 10s. For the X4S, X5S and Phantom 4 Pro cameras the minimum  interval for RAW or RAW+JPEG dformat is 5s.",
            ],
            [
                   "Sets the camera to take a picture (or multiple pictures) continuously at a set time interval. The minimum  interval for JPEG format of any quality is 2s. For all cameras except X4S, X5S and Phantom 4 Pro camera:  The minimum interval for RAW or RAW+JPEG format is 10s. For the X4S, X5S and Phantom 4 Pro cameras the minimum  interval for RAW or RAW+JPEG dformat is 5s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModeInterval_inline",
                   "",
            ],
            [
                   "TIME_LAPSE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModeTimeLapse_inline",
                   "Sets the camera to take a picture (or multiple pictures) continuously at a set time interval. The camera will  merge the photo sequence and the output is a video. The minimum interval for Video only format is 1 s.  The minimum interval for Video+Photo format is 2 s. For the new Osmo firmware version, no video feed will be  received if the camera is shooting photos with Time-lapse mode. Instead, user can receive a sequence of preview  images using the delegate method `onGenerate`. Supported only by Osmo camera (Z3  and X3).",
            ],
            [
                   "Sets the camera to take a picture (or multiple pictures) continuously at a set time interval. The camera will  merge the photo sequence and the output is a video. The minimum interval for Video only format is 1 s.  The minimum interval for Video+Photo format is 2 s. For the new Osmo firmware version, no video feed will be  received if the camera is shooting photos with Time-lapse mode. Instead, user can receive a sequence of preview  images using the delegate method `onGenerate`. Supported only by Osmo camera (Z3  and X3).",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModeTimeLapse_inline",
                   "",
            ],
            [
                   "PANORAMA",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModePanorama_inline",
                   "In panorama mode, the aircraft takes a series of photos with different gimbal and aircraft heading positions.  The photos can be stitched with a third-party library. It is only supported by Spark.",
            ],
            [
                   "In panorama mode, the aircraft takes a series of photos with different gimbal and aircraft heading positions.  The photos can be stitched with a third-party library. It is only supported by Spark.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModePanorama_inline",
                   "",
            ],
            [
                   "RAW_BURST",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModeRAWBurst_inline",
                   "Sets the camera to take a burst of RAW photos. Use `getRAWPhotoBurstCount` to check  how many photos have been shot. Only supported by X5S.",
            ],
            [
                   "Sets the camera to take a burst of RAW photos. Use `getRAWPhotoBurstCount` to check  how many photos have been shot. Only supported by X5S.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModeRAWBurst_inline",
                   "",
            ],
            [
                   "SHALLOW_FOCUS",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModeShallowFocus_inline",
                   "Sets the camera to take a series of photos while the aircraft moves up and down automatically. The image's depth  of field can be computed with a third-party library to produce a photo with the bokeh effect. Note:  1. It is only  suitable for shooting still scenes.  2. The aircraft will ascend about 20cm before shooting. Ensure that there is no obstacle about the aircraft.  3. The suitable range of shooting is within 30m.  It is only supported by Spark.",
            ],
            [
                   "Sets the camera to take a series of photos while the aircraft moves up and down automatically. The image's depth  of field can be computed with a third-party library to produce a photo with the bokeh effect. Note:  1. It is only  suitable for shooting still scenes.  2. The aircraft will ascend about 20cm before shooting. Ensure that there is no obstacle about the aircraft.  3. The suitable range of shooting is within 30m.  It is only supported by Spark.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModeShallowFocus_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModeUnknown_inline",
                   "The shoot photo mode is unknown.",
            ],
            [
                   "The shoot photo mode is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShootPhotoMode_DJICameraShootPhotoModeUnknown_inline",
                   "",
            ],
            [
                   "PROGRAM",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureMode_Program_inline",
                   "Program mode.",
            ],
            [
                   "Program mode.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureMode_Program_inline",
                   "",
            ],
            [
                   "SHUTTER_PRIORITY",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureMode_Shutter_inline",
                   "Shutter priority mode.",
            ],
            [
                   "Shutter priority mode.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureMode_Shutter_inline",
                   "",
            ],
            [
                   "APERTURE_PRIORITY",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureMode_Aperture_inline",
                   "Aperture priority mode.",
            ],
            [
                   "Aperture priority mode.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureMode_Aperture_inline",
                   "",
            ],
            [
                   "MANUAL",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureMode_Manual_inline",
                   "Manual mode.",
            ],
            [
                   "Manual mode.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureMode_Manual_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureMode_Unknown_inline",
                   "The camera exposure mode is unknown.",
            ],
            [
                   "The camera exposure mode is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureMode_Unknown_inline",
                   "",
            ],
            [
                   "MOV",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFileFormat_MOV_inline",
                   "The video storage format is MOV.",
            ],
            [
                   "The video storage format is MOV.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFileFormat_MOV_inline",
                   "",
            ],
            [
                   "MP4",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFileFormat_MP4_inline",
                   "The video storage format is MP4.",
            ],
            [
                   "The video storage format is MP4.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFileFormat_MP4_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFileFormat_Unknown_inline",
                   "The video storage format is unknown.",
            ],
            [
                   "The video storage format is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFileFormat_Unknown_inline",
                   "",
            ],
            [
                   "RESOLUTION_640x480",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_640x480_inline",
                   "The camera's video resolution is 640x480.",
            ],
            [
                   "The camera's video resolution is 640x480.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_640x480_inline",
                   "",
            ],
            [
                   "RESOLUTION_640x512",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_640x512_inline",
                   "The camera's video resolution is 640x512.",
            ],
            [
                   "The camera's video resolution is 640x512.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_640x512_inline",
                   "",
            ],
            [
                   "RESOLUTION_1280x720",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_1280x720_inline",
                   "The camera's video resolution is 1280x720.",
            ],
            [
                   "The camera's video resolution is 1280x720.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_1280x720_inline",
                   "",
            ],
            [
                   "RESOLUTION_1920x1080",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_1920x1080_inline",
                   "The camera's video resolution is 1920x1080.",
            ],
            [
                   "The camera's video resolution is 1920x1080.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_1920x1080_inline",
                   "",
            ],
            [
                   "RESOLUTION_2704x1520",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_2704x1520_inline",
                   "The camera's video resolution is 2704x1520.",
            ],
            [
                   "The camera's video resolution is 2704x1520.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_2704x1520_inline",
                   "",
            ],
            [
                   "RESOLUTION_2720x1530",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_2720x1530_inline",
                   "The camera's video resolution is 2720x1530.",
            ],
            [
                   "The camera's video resolution is 2720x1530.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_2720x1530_inline",
                   "",
            ],
            [
                   "RESOLUTION_3840x1572",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_3840x1572_inline",
                   "The camera's video resolution is 3840x1572.",
            ],
            [
                   "The camera's video resolution is 3840x1572.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_3840x1572_inline",
                   "",
            ],
            [
                   "RESOLUTION_3840x2160",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_3840x2160_inline",
                   "The camera's video resolution is 3840x2160.",
            ],
            [
                   "The camera's video resolution is 3840x2160.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_3840x2160_inline",
                   "",
            ],
            [
                   "RESOLUTION_4096x2160",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_4096x2160_inline",
                   "The camera's video resolution is 4096x2160.",
            ],
            [
                   "The camera's video resolution is 4096x2160.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_4096x2160_inline",
                   "",
            ],
            [
                   "RESOLUTION_4608x2160",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_4608x2160_inline",
                   "The camera's video resolution is 4608x2160.",
            ],
            [
                   "The camera's video resolution is 4608x2160.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_4608x2160_inline",
                   "",
            ],
            [
                   "RESOLUTION_4608x2592",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_4608x2592_inline",
                   "The camera's video resolution is 4608x2592.",
            ],
            [
                   "The camera's video resolution is 4608x2592.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_4608x2592_inline",
                   "",
            ],
            [
                   "RESOLUTION_5280x2160",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_5280x2160_inline",
                   "The camera's video resolution is 5280x2160.",
            ],
            [
                   "The camera's video resolution is 5280x2160.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_5280x2160_inline",
                   "",
            ],
            [
                   "RESOLUTION_MAX",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_MaxResolution_inline",
                   "The camera's video resolution will be maximum resolution supported by the camera sensor. For X5S and X4S,  the maximum resolution is 5280x2972.",
            ],
            [
                   "The camera's video resolution will be maximum resolution supported by the camera sensor. For X5S and X4S,  the maximum resolution is 5280x2972.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_MaxResolution_inline",
                   "",
            ],
            [
                   "NO_SSD_VIDEO",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_NoSSDVideo_inline",
                   "The camera's SSD video resolution is unset. When the SSD resolution is unset, camera will not store video to SSD.   SSD's resolution is determined by both license key and SD card's video frame rate. If there is no supported  resolution with the current configuration, DJICameraVideoResolutionUnset</code> will be selected and user  should adjust either the license or the frame rate.",
            ],
            [
                   "The camera's SSD video resolution is unset. When the SSD resolution is unset, camera will not store video to SSD.   SSD's resolution is determined by both license key and SD card's video frame rate. If there is no supported  resolution with the current configuration, DJICameraVideoResolutionUnset</code> will be selected and user  should adjust either the license or the frame rate.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_NoSSDVideo_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_Unknown_inline",
                   "The camera's video resolution is unknown.",
            ],
            [
                   "The camera's video resolution is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoResolution_Unknown_inline",
                   "",
            ],
            [
                   "FRAME_RATE_23_DOT_976_FPS",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_23p976fps_inline",
                   "The camera's video frame rate is 23.976fps (frames per second).",
            ],
            [
                   "The camera's video frame rate is 23.976fps (frames per second).",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_23p976fps_inline",
                   "",
            ],
            [
                   "FRAME_RATE_24_FPS",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_24fps_inline",
                   "The camera's video frame rate is 24fps (frames per second).",
            ],
            [
                   "The camera's video frame rate is 24fps (frames per second).",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_24fps_inline",
                   "",
            ],
            [
                   "FRAME_RATE_25_FPS",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_25fps_inline",
                   "The camera's video frame rate is 25fps (frames per second).",
            ],
            [
                   "The camera's video frame rate is 25fps (frames per second).",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_25fps_inline",
                   "",
            ],
            [
                   "FRAME_RATE_29_DOT_970_FPS",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_29p970fps_inline",
                   "The camera's video frame rate is 29.97fps (frames per second).",
            ],
            [
                   "The camera's video frame rate is 29.97fps (frames per second).",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_29p970fps_inline",
                   "",
            ],
            [
                   "FRAME_RATE_30_FPS",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_30fps_inline",
                   "The camera's video frame rate is 30fps (frames per second).",
            ],
            [
                   "The camera's video frame rate is 30fps (frames per second).",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_30fps_inline",
                   "",
            ],
            [
                   "FRAME_RATE_47_DOT_950_FPS",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_47p950fps_inline",
                   "The camera's video frame rate is 47.95fps (frames per second).",
            ],
            [
                   "The camera's video frame rate is 47.95fps (frames per second).",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_47p950fps_inline",
                   "",
            ],
            [
                   "FRAME_RATE_48_FPS",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_48fps_inline",
                   "The camera's video frame rate is 48fps (frames per second).",
            ],
            [
                   "The camera's video frame rate is 48fps (frames per second).",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_48fps_inline",
                   "",
            ],
            [
                   "FRAME_RATE_50_FPS",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_50fps_inline",
                   "The camera's video frame rate is 50fps (frames per second).",
            ],
            [
                   "The camera's video frame rate is 50fps (frames per second).",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_50fps_inline",
                   "",
            ],
            [
                   "FRAME_RATE_59_DOT_940_FPS",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_59p940fps_inline",
                   "The camera's video frame rate is 59.94fps (frames per second).",
            ],
            [
                   "The camera's video frame rate is 59.94fps (frames per second).",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_59p940fps_inline",
                   "",
            ],
            [
                   "FRAME_RATE_60_FPS",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_60fps_inline",
                   "The camera's video frame rate is 60fps (frames per second).",
            ],
            [
                   "The camera's video frame rate is 60fps (frames per second).",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_60fps_inline",
                   "",
            ],
            [
                   "FRAME_RATE_90_FPS",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_90fps_inline",
                   "The camera's video frame rate is 90fps (frames per second).",
            ],
            [
                   "The camera's video frame rate is 90fps (frames per second).",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_90fps_inline",
                   "",
            ],
            [
                   "FRAME_RATE_96_FPS",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_96fps_inline",
                   "The camera's video frame rate is 96fps (frames per second).",
            ],
            [
                   "The camera's video frame rate is 96fps (frames per second).",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_96fps_inline",
                   "",
            ],
            [
                   "FRAME_RATE_100_FPS",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_100fps_inline",
                   "The camera's video frame rate is 100fps (frames per second). This frame rate can only be used when  `isSlowMotionSupported` returns `true`.",
            ],
            [
                   "The camera's video frame rate is 100fps (frames per second). This frame rate can only be used when  `isSlowMotionSupported` returns `true`.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_100fps_inline",
                   "",
            ],
            [
                   "FRAME_RATE_120_FPS",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_120fps_inline",
                   "The camera's video frame rate is 120fps (frames per second). This frame rate can only be used when  `isSlowMotionSupported` returns `true`.",
            ],
            [
                   "The camera's video frame rate is 120fps (frames per second). This frame rate can only be used when  `isSlowMotionSupported` returns `true`.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_120fps_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_Unknown_inline",
                   "The camera's video frame rate is unknown.",
            ],
            [
                   "The camera's video frame rate is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoFrameRate_Unknown_inline",
                   "",
            ],
            [
                   "getResolution",
                   2,
                   "/Components/Camera/DJICamera_DJICameraVideoResolutionAndFrameRate.html",
                   "#DJICamera_DJICameraVideoResolutionAndFrameRate_resolution_inline",
                   "Returns the camera's current video resolution.  @return Returns resolution",
            ],
            [
                   "Returns the camera's current video resolution.  @return Returns resolution",
                   1,
                   "/Components/Camera/DJICamera_DJICameraVideoResolutionAndFrameRate.html",
                   "#DJICamera_DJICameraVideoResolutionAndFrameRate_resolution_inline",
                   "",
            ],
            [
                   "getFrameRate",
                   2,
                   "/Components/Camera/DJICamera_DJICameraVideoResolutionAndFrameRate.html",
                   "#DJICamera_DJICameraVideoResolutionAndFrameRate_frameRate_inline",
                   "Returns the camera's current video frame rate.  @return Returns framerate",
            ],
            [
                   "Returns the camera's current video frame rate.  @return Returns framerate",
                   1,
                   "/Components/Camera/DJICamera_DJICameraVideoResolutionAndFrameRate.html",
                   "#DJICamera_DJICameraVideoResolutionAndFrameRate_frameRate_inline",
                   "",
            ],
            [
                   "ResolutionAndFrameRate",
                   2,
                   "/Components/Camera/DJICamera_DJICameraVideoResolutionAndFrameRate.html",
                   "#DJICamera_DJICameraVideoResolutionAndFrameRate_initWithResolution_inline",
                   "Create a `ResolutionAndFrameRate` instance with a preset camera video resolution and frame rate.  @param resolution The value of `VideoResolution` Enum. @param frameRate The value of `VideoFrameRate` Enum.",
            ],
            [
                   "Create a `ResolutionAndFrameRate` instance with a preset camera video resolution and frame rate.  @param resolution The value of `VideoResolution` Enum. @param frameRate The value of `VideoFrameRate` Enum.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraVideoResolutionAndFrameRate.html",
                   "#DJICamera_DJICameraVideoResolutionAndFrameRate_initWithResolution_inline",
                   "",
            ],
            [
                   "PAL",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoStandard_PAL_inline",
                   "The camera video standard value is set to PAL.",
            ],
            [
                   "The camera video standard value is set to PAL.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoStandard_PAL_inline",
                   "",
            ],
            [
                   "NTSC",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoStandard_NTSC_inline",
                   "The camera video standard value is set to NTSC.",
            ],
            [
                   "The camera video standard value is set to NTSC.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoStandard_NTSC_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoStandard_Unknown_inline",
                   "The camera video standard value is unknown.",
            ],
            [
                   "The camera video standard value is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraVideoStandard_Unknown_inline",
                   "",
            ],
            [
                   "RAW",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoFileFormat_RAW_inline",
                   "The camera's photo storage format is RAW.",
            ],
            [
                   "The camera's photo storage format is RAW.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoFileFormat_RAW_inline",
                   "",
            ],
            [
                   "JPEG",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoFileFormat_JPEG_inline",
                   "The camera's photo storage format is JPEG.",
            ],
            [
                   "The camera's photo storage format is JPEG.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoFileFormat_JPEG_inline",
                   "",
            ],
            [
                   "RAW_AND_JPEG",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoFileFormat_RAWAndJPEG_inline",
                   "The camera stores both the RAW and JPEG formats of the photo.",
            ],
            [
                   "The camera stores both the RAW and JPEG formats of the photo.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoFileFormat_RAWAndJPEG_inline",
                   "",
            ],
            [
                   "TIFF_14_BIT",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoFileFormat_TIFF14Bit_inline",
                   "The camera's photo storage format is TIFF (14bit).",
            ],
            [
                   "The camera's photo storage format is TIFF (14bit).",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoFileFormat_TIFF14Bit_inline",
                   "",
            ],
            [
                   "RADIOMETRIC_JPEG",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoFileFormat_RadiometricJPEG_inline",
                   "The camera's photo storage format is Radiometric JPEG (a special JPEG format with temperature information).  A radiometric JPEG has the .jpg suffix and can be viewed as a normal JPEG file would. At the same time,  the temperature data is also stored in the file as meta data. PC software is required to analyze the file  and it is accessible at FLIR's website http://www.flir.com/instruments/display/?id=54865. Only supported  by XT camera with firmware version 1.16.1.70 or above.",
            ],
            [
                   "The camera's photo storage format is Radiometric JPEG (a special JPEG format with temperature information).  A radiometric JPEG has the .jpg suffix and can be viewed as a normal JPEG file would. At the same time,  the temperature data is also stored in the file as meta data. PC software is required to analyze the file  and it is accessible at FLIR's website http://www.flir.com/instruments/display/?id=54865. Only supported  by XT camera with firmware version 1.16.1.70 or above.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoFileFormat_RadiometricJPEG_inline",
                   "",
            ],
            [
                   "TIFF_14_BIT_LINEAR_LOW_TEMP_RESOLUTION",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoFileFormat_TIFF14BitLinearLowTempResolution_inline",
                   "The camera's photo storage format is TIFF Linear Low. In this mode each pixel is 14 bits and linearly  proportional with temperature, covering a high dynamic range of temperature which results in a lower  temperature resolution. Supported only by Zenmuse XT containing Advanced Radiometry capabilities with  firmware version 1.17.1.80 or lower. For newer firmwares, the temperature resolution preference is coupled  with the thermal gain mode.",
            ],
            [
                   "The camera's photo storage format is TIFF Linear Low. In this mode each pixel is 14 bits and linearly  proportional with temperature, covering a high dynamic range of temperature which results in a lower  temperature resolution. Supported only by Zenmuse XT containing Advanced Radiometry capabilities with  firmware version 1.17.1.80 or lower. For newer firmwares, the temperature resolution preference is coupled  with the thermal gain mode.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoFileFormat_TIFF14BitLinearLowTempResolution_inline",
                   "",
            ],
            [
                   "TIFF_14_BIT_LINEAR_HIGH_TEMP_RESOLUTION",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoFileFormat_TIFF14BitLinearHighTempResolution_inline",
                   "The camera's photo storage format is TIFF Linear High. In this mode each pixel is 14 bits and linearly  proportional with temperature, covering a low dynamic range of temperature which results in a higher  temperature resolution. Supported only by Zenmuse XT containing Advanced Radiometry capabilities with firmware version 1.17.1.80 or lower. For newer firmwares, the temperature resolution preference is  coupled with the thermal gain mode.",
            ],
            [
                   "The camera's photo storage format is TIFF Linear High. In this mode each pixel is 14 bits and linearly  proportional with temperature, covering a low dynamic range of temperature which results in a higher  temperature resolution. Supported only by Zenmuse XT containing Advanced Radiometry capabilities with firmware version 1.17.1.80 or lower. For newer firmwares, the temperature resolution preference is  coupled with the thermal gain mode.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoFileFormat_TIFF14BitLinearHighTempResolution_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoFileFormat_Unknown_inline",
                   "The camera's photo storage format is unknown.",
            ],
            [
                   "The camera's photo storage format is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoFileFormat_Unknown_inline",
                   "",
            ],
            [
                   "VIDEO",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoTimeLapseFileFormat_Video_inline",
                   "The camera in time-lapse mode will generate video.",
            ],
            [
                   "The camera in time-lapse mode will generate video.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoTimeLapseFileFormat_Video_inline",
                   "",
            ],
            [
                   "JPEG_AND_VIDEO",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoTimeLapseFileFormat_VideoAndJPEG_inline",
                   "The camera in time-lapse mode will generate video and JPEG.",
            ],
            [
                   "The camera in time-lapse mode will generate video and JPEG.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoTimeLapseFileFormat_VideoAndJPEG_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoTimeLapseFileFormat_Unknown_inline",
                   "The file format is unknown.",
            ],
            [
                   "The file format is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoTimeLapseFileFormat_Unknown_inline",
                   "",
            ],
            [
                   "RATIO_4_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoAspectRatio_4_3_inline",
                   "The camera's photo ratio is 4 : 3.",
            ],
            [
                   "The camera's photo ratio is 4 : 3.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoAspectRatio_4_3_inline",
                   "",
            ],
            [
                   "RATIO_16_9",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoAspectRatio_16_9_inline",
                   "The camera's photo ratio is 16 : 9.",
            ],
            [
                   "The camera's photo ratio is 16 : 9.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoAspectRatio_16_9_inline",
                   "",
            ],
            [
                   "RATIO_3_2",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoAspectRatio_3_2_inline",
                   "The camera's photo ratio is 3:2. It is only supported by Phantom 4 Pro camera.",
            ],
            [
                   "The camera's photo ratio is 3:2. It is only supported by Phantom 4 Pro camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoAspectRatio_3_2_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoAspectRatio_Unknown_inline",
                   "The camera's photo ratio is unknown.",
            ],
            [
                   "The camera's photo ratio is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoAspectRatio_Unknown_inline",
                   "",
            ],
            [
                   "BURST_COUNT_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoBurstCount_3_inline",
                   "The camera burst shoot count is set to capture 3 pictures at once when the camera shoots a photo.",
            ],
            [
                   "The camera burst shoot count is set to capture 3 pictures at once when the camera shoots a photo.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoBurstCount_3_inline",
                   "",
            ],
            [
                   "BURST_COUNT_5",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoBurstCount_5_inline",
                   "The camera burst shoot count is set to capture 5 pictures at once when the camera takes a photo.",
            ],
            [
                   "The camera burst shoot count is set to capture 5 pictures at once when the camera takes a photo.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoBurstCount_5_inline",
                   "",
            ],
            [
                   "BURST_COUNT_7",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoBurstCount_7_inline",
                   "The camera burst shoot count is set to capture 7 pictures at once when the camera takes a photo. It is not  supported by Z30 camera.",
            ],
            [
                   "The camera burst shoot count is set to capture 7 pictures at once when the camera takes a photo. It is not  supported by Z30 camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoBurstCount_7_inline",
                   "",
            ],
            [
                   "BURST_COUNT_10",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoBurstCount_10_inline",
                   "The camera burst shoot count is set to capture 10 pictures at once when the camera takes a photo. Only  supported by X4S camera, X5S camera and Phantom 4 Pro camera.",
            ],
            [
                   "The camera burst shoot count is set to capture 10 pictures at once when the camera takes a photo. Only  supported by X4S camera, X5S camera and Phantom 4 Pro camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoBurstCount_10_inline",
                   "",
            ],
            [
                   "BURST_COUNT_14",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoBurstCount_14_inline",
                   "The camera burst shoot count is set to capture 14 pictures at once when the camera takes a photo. Only  supported by X4S camera, X5S camera and Phantom 4 Pro camera.",
            ],
            [
                   "The camera burst shoot count is set to capture 14 pictures at once when the camera takes a photo. Only  supported by X4S camera, X5S camera and Phantom 4 Pro camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoBurstCount_14_inline",
                   "",
            ],
            [
                   "CONTINUOUS",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoBurstCount_Continuous_inline",
                   "The camera burst shoot count is set to capture RAW pictures continuously until `stopShootPhoto`  command is sent. It is only supported by Inspire 2 when the photo shoot mode is RAW burst.",
            ],
            [
                   "The camera burst shoot count is set to capture RAW pictures continuously until `stopShootPhoto`  command is sent. It is only supported by Inspire 2 when the photo shoot mode is RAW burst.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoBurstCount_Continuous_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoBurstCount_Unknown_inline",
                   "The camera burst shoot count value is unknown.",
            ],
            [
                   "The camera burst shoot count value is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraPhotoBurstCount_Unknown_inline",
                   "",
            ],
            [
                   "AEB_COUNT_3",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPhotoAEBCount_3_inline",
                   "The number of pictures to continuously take at one time in AEB mode is 3.",
            ],
            [
                   "The number of pictures to continuously take at one time in AEB mode is 3.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPhotoAEBCount_3_inline",
                   "",
            ],
            [
                   "AEB_COUNT_5",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPhotoAEBCount_5_inline",
                   "The number of pictures to continuously take at one time in AEB mode is 5.",
            ],
            [
                   "The number of pictures to continuously take at one time in AEB mode is 5.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPhotoAEBCount_5_inline",
                   "",
            ],
            [
                   "AEB_COUNT_7",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPhotoAEBCount_7_inline",
                   "The number of pictures to continuously take at one time in AEB mode is 7.",
            ],
            [
                   "The number of pictures to continuously take at one time in AEB mode is 7.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPhotoAEBCount_7_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPhotoAEBCount_Unknown_inline",
                   "The number of pictures to continuously take at one time in AEB mode is unknown.",
            ],
            [
                   "The number of pictures to continuously take at one time in AEB mode is unknown.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPhotoAEBCount_Unknown_inline",
                   "",
            ],
            [
                   "PhotoTimeIntervalSettings",
                   2,
                   "/Components/Camera/DJICamera_DJICameraPhotoIntervalParam.html",
                   "#DJICamera_DJICameraPhotoIntervalParam_Contstructor_inline",
                   "Constructor.  @param captureCount Number of photos to take. @param timeIntervalInSeconds Time interval in seconds between taking photos.",
            ],
            [
                   "Constructor.  @param captureCount Number of photos to take. @param timeIntervalInSeconds Time interval in seconds between taking photos.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraPhotoIntervalParam.html",
                   "#DJICamera_DJICameraPhotoIntervalParam_Contstructor_inline",
                   "",
            ],
            [
                   "getCaptureCount",
                   2,
                   "/Components/Camera/DJICamera_DJICameraPhotoIntervalParam.html",
                   "#DJICamera_DJICameraPhotoIntervalParam_captureCount_inline",
                   "The number of photos to capture. The value range is [2, 255]. If 255 is selected, then the camera will continue  to take pictures until stopShootPhotoWithCompletion is called. For thermal imaging camera and Z30 camera, it can  only be set to 255.  @return Number of photos to capture",
            ],
            [
                   "The number of photos to capture. The value range is [2, 255]. If 255 is selected, then the camera will continue  to take pictures until stopShootPhotoWithCompletion is called. For thermal imaging camera and Z30 camera, it can  only be set to 255.  @return Number of photos to capture",
                   1,
                   "/Components/Camera/DJICamera_DJICameraPhotoIntervalParam.html",
                   "#DJICamera_DJICameraPhotoIntervalParam_captureCount_inline",
                   "",
            ],
            [
                   "getTimeIntervalInSeconds",
                   2,
                   "/Components/Camera/DJICamera_DJICameraPhotoIntervalParam.html",
                   "#DJICamera_DJICameraPhotoIntervalParam_timeIntervalInSeconds_inline",
                   "The time interval between when two photos are taken. The range for this parameter depends the photo file  format(DJICameraPhotoFileFormat). For XT camera, the range is [1, 60] seconds. For all other products, when the  file format is JPEG, the range is [2, 2^16 - 1] seconds; when the file format is RAW or RAW+JPEG, the range is  [10, 2^16 - 1] seconds.  @return Time interval in seconds.",
            ],
            [
                   "The time interval between when two photos are taken. The range for this parameter depends the photo file  format(DJICameraPhotoFileFormat). For XT camera, the range is [1, 60] seconds. For all other products, when the  file format is JPEG, the range is [2, 2^16 - 1] seconds; when the file format is RAW or RAW+JPEG, the range is  [10, 2^16 - 1] seconds.  @return Time interval in seconds.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraPhotoIntervalParam.html",
                   "#DJICamera_DJICameraPhotoIntervalParam_timeIntervalInSeconds_inline",
                   "",
            ],
            [
                   "getInterval",
                   2,
                   "/Components/Camera/DJICamera_DJICameraPhotoTimeLapseSettings.html",
                   "#DJICamera_DJICameraPhotoTimeLapseSettings_interval_inline",
                   "The time interval between when two photos are taken.  @return Return interval value from settings",
            ],
            [
                   "The time interval between when two photos are taken.  @return Return interval value from settings",
                   1,
                   "/Components/Camera/DJICamera_DJICameraPhotoTimeLapseSettings.html",
                   "#DJICamera_DJICameraPhotoTimeLapseSettings_interval_inline",
                   "",
            ],
            [
                   "getDuration",
                   2,
                   "/Components/Camera/DJICamera_DJICameraPhotoTimeLapseSettings.html",
                   "#DJICamera_DJICameraPhotoTimeLapseSettings_duration_inline",
                   "The total duration for which the camera will take pictures.  @return Return duration value from settings",
            ],
            [
                   "The total duration for which the camera will take pictures.  @return Return duration value from settings",
                   1,
                   "/Components/Camera/DJICamera_DJICameraPhotoTimeLapseSettings.html",
                   "#DJICamera_DJICameraPhotoTimeLapseSettings_duration_inline",
                   "",
            ],
            [
                   "getFileFormat",
                   2,
                   "/Components/Camera/DJICamera_DJICameraPhotoTimeLapseSettings.html",
                   "#DJICamera_DJICameraPhotoTimeLapseSettings_fileFormat_inline",
                   "The file format for captured photos during time lapse.  @return Return file format value from settings",
            ],
            [
                   "The file format for captured photos during time lapse.  @return Return file format value from settings",
                   1,
                   "/Components/Camera/DJICamera_DJICameraPhotoTimeLapseSettings.html",
                   "#DJICamera_DJICameraPhotoTimeLapseSettings_fileFormat_inline",
                   "",
            ],
            [
                   "PANORAMA_MODE_3X3",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPhotoPanoramaMode_3X3_inline",
                   "Camera will shoot 3 rows of 3 photos. Each photo in a row will be taken with a different aircraft heading. Each row of photos is taken with a different gimbal pitch.",
            ],
            [
                   "Camera will shoot 3 rows of 3 photos. Each photo in a row will be taken with a different aircraft heading. Each row of photos is taken with a different gimbal pitch.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPhotoPanoramaMode_3X3_inline",
                   "",
            ],
            [
                   "PANORAMA_MODE_3X1",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPhotoPanoramaMode_3x1_inline",
                   "Camera will shoot 3 photos with the same aircraft heading and different gimbal pitch.",
            ],
            [
                   "Camera will shoot 3 photos with the same aircraft heading and different gimbal pitch.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPhotoPanoramaMode_3x1_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPhotoPanoramaMode_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPhotoPanoramaMode_Unknown_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_8000",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_8000_inline",
                   "Camera's shutter speed 1/8000 s.",
            ],
            [
                   "Camera's shutter speed 1/8000 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_8000_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_6400",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_6400_inline",
                   "Camera's shutter speed 1/6400 s.",
            ],
            [
                   "Camera's shutter speed 1/6400 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_6400_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_6000",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_6000_inline",
                   "Camera's shutter speed 1/6000 s.",
            ],
            [
                   "Camera's shutter speed 1/6000 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_6000_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_5000",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_5000_inline",
                   "Camera's shutter speed 1/5000 s.",
            ],
            [
                   "Camera's shutter speed 1/5000 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_5000_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_4000",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_4000_inline",
                   "Camera's shutter speed 1/4000 s.",
            ],
            [
                   "Camera's shutter speed 1/4000 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_4000_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_3200",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_3200_inline",
                   "Camera's shutter speed 1/3200 s.",
            ],
            [
                   "Camera's shutter speed 1/3200 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_3200_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_3000",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_3000_inline",
                   "Camera's shutter speed 1/3000 s.",
            ],
            [
                   "Camera's shutter speed 1/3000 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_3000_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_2500",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_2500_inline",
                   "Camera's shutter speed 1/2500 s.",
            ],
            [
                   "Camera's shutter speed 1/2500 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_2500_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_2000",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_2000_inline",
                   "Camera's shutter speed 1/2000 s.",
            ],
            [
                   "Camera's shutter speed 1/2000 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_2000_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_1600",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_1600_inline",
                   "Camera's shutter speed 1/1600 s.",
            ],
            [
                   "Camera's shutter speed 1/1600 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_1600_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_1500",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_1500_inline",
                   "Camera's shutter speed 1/1500 s.",
            ],
            [
                   "Camera's shutter speed 1/1500 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_1500_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_1250",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_1250_inline",
                   "Camera's shutter speed 1/1250 s.",
            ],
            [
                   "Camera's shutter speed 1/1250 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_1250_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_1000",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_1000_inline",
                   "Camera's shutter speed 1/1000 s.",
            ],
            [
                   "Camera's shutter speed 1/1000 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_1000_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_800",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_800_inline",
                   "Camera's shutter speed 1/800 s.",
            ],
            [
                   "Camera's shutter speed 1/800 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_800_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_725",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_725_inline",
                   "Camera's shutter speed 1/725 s.",
            ],
            [
                   "Camera's shutter speed 1/725 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_725_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_640",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_640_inline",
                   "Camera's shutter speed 1/640 s.",
            ],
            [
                   "Camera's shutter speed 1/640 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_640_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_500",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_500_inline",
                   "Camera's shutter speed 1/500 s.",
            ],
            [
                   "Camera's shutter speed 1/500 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_500_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_400",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_400_inline",
                   "Camera's shutter speed 1/400 s.",
            ],
            [
                   "Camera's shutter speed 1/400 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_400_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_350",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_350_inline",
                   "Camera's shutter speed 1/350 s.",
            ],
            [
                   "Camera's shutter speed 1/350 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_350_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_320",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_320_inline",
                   "Camera's shutter speed 1/320 s.",
            ],
            [
                   "Camera's shutter speed 1/320 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_320_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_250",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_250_inline",
                   "Camera's shutter speed 1/250 s.",
            ],
            [
                   "Camera's shutter speed 1/250 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_250_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_240",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_240_inline",
                   "Camera's shutter speed 1/240 s.",
            ],
            [
                   "Camera's shutter speed 1/240 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_240_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_200",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_200_inline",
                   "Camera's shutter speed 1/200 s.",
            ],
            [
                   "Camera's shutter speed 1/200 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_200_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_180",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_180_inline",
                   "Camera's shutter speed 1/180 s.",
            ],
            [
                   "Camera's shutter speed 1/180 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_180_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_160",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_160_inline",
                   "Camera's shutter speed 1/160 s.",
            ],
            [
                   "Camera's shutter speed 1/160 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_160_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_125",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_125_inline",
                   "Camera's shutter speed 1/125 s.",
            ],
            [
                   "Camera's shutter speed 1/125 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_125_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_120",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_120_inline",
                   "Camera's shutter speed 1/120 s.",
            ],
            [
                   "Camera's shutter speed 1/120 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_120_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_100",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_100_inline",
                   "Camera's shutter speed 1/100 s.",
            ],
            [
                   "Camera's shutter speed 1/100 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_100_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_90",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_90_inline",
                   "Camera's shutter speed 1/90 s.",
            ],
            [
                   "Camera's shutter speed 1/90 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_90_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_80",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_80_inline",
                   "Camera's shutter speed 1/80 s.",
            ],
            [
                   "Camera's shutter speed 1/80 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_80_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_60",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_60_inline",
                   "Camera's shutter speed 1/60 s.",
            ],
            [
                   "Camera's shutter speed 1/60 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_60_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_50",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_50_inline",
                   "Camera's shutter speed 1/50 s.",
            ],
            [
                   "Camera's shutter speed 1/50 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_50_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_40",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_40_inline",
                   "Camera's shutter speed 1/40 s.",
            ],
            [
                   "Camera's shutter speed 1/40 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_40_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_30",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_30_inline",
                   "Camera's shutter speed 1/30 s.",
            ],
            [
                   "Camera's shutter speed 1/30 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_30_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_25",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_25_inline",
                   "Camera's shutter speed 1/25 s.",
            ],
            [
                   "Camera's shutter speed 1/25 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_25_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_20",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_20_inline",
                   "Camera's shutter speed 1/20 s.",
            ],
            [
                   "Camera's shutter speed 1/20 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_20_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_15",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_15_inline",
                   "Camera's shutter speed 1/15 s.",
            ],
            [
                   "Camera's shutter speed 1/15 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_15_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_12_DOT_5",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_12p5_inline",
                   "Camera's shutter speed 1/12.5 s.",
            ],
            [
                   "Camera's shutter speed 1/12.5 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_12p5_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_10",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_10_inline",
                   "Camera's shutter speed 1/10 s.",
            ],
            [
                   "Camera's shutter speed 1/10 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_10_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_8",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_8_inline",
                   "Camera's shutter speed 1/8 s.",
            ],
            [
                   "Camera's shutter speed 1/8 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_8_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_6_DOT_25",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_6p25_inline",
                   "Camera's shutter speed 1/6.25 s.",
            ],
            [
                   "Camera's shutter speed 1/6.25 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_6p25_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_5",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_5_inline",
                   "Camera's shutter speed 1/5 s.",
            ],
            [
                   "Camera's shutter speed 1/5 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_5_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_4",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_4_inline",
                   "Camera's shutter speed 1/4 s.",
            ],
            [
                   "Camera's shutter speed 1/4 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_4_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_3_inline",
                   "Camera's shutter speed 1/3 s.",
            ],
            [
                   "Camera's shutter speed 1/3 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_3_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_2_DOT_5",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_2p5_inline",
                   "Camera's shutter speed 1/2.5 s.",
            ],
            [
                   "Camera's shutter speed 1/2.5 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_2p5_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_2",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_2_inline",
                   "Camera's shutter speed 1/2 s.",
            ],
            [
                   "Camera's shutter speed 1/2 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_2_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_1_DOT_67",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_1p67_inline",
                   "Camera's shutter speed 1/1.67 s.",
            ],
            [
                   "Camera's shutter speed 1/1.67 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_1p67_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_1_DOT_25",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_1p25_inline",
                   "Camera's shutter speed 1/1.25 s.",
            ],
            [
                   "Camera's shutter speed 1/1.25 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1_1p25_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1p0_inline",
                   "Camera's shutter speed 1.0 s.",
            ],
            [
                   "Camera's shutter speed 1.0 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1p0_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_DOT_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1p3_inline",
                   "Camera's shutter speed 1.3 s.",
            ],
            [
                   "Camera's shutter speed 1.3 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1p3_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_1_DOT_6",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1p6_inline",
                   "Camera's shutter speed 1.6 s.",
            ],
            [
                   "Camera's shutter speed 1.6 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_1p6_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_2",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_2p0_inline",
                   "Camera's shutter speed 2.0 s.",
            ],
            [
                   "Camera's shutter speed 2.0 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_2p0_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_2_DOT_5",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_2p5_inline",
                   "Camera's shutter speed 2.5 s.",
            ],
            [
                   "Camera's shutter speed 2.5 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_2p5_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_3p0_inline",
                   "Camera's shutter speed 3.0 s.",
            ],
            [
                   "Camera's shutter speed 3.0 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_3p0_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_3_DOT_2",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_3p2_inline",
                   "Camera's shutter speed 3.2 s.",
            ],
            [
                   "Camera's shutter speed 3.2 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_3p2_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_4",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_4p0_inline",
                   "Camera's shutter speed 4.0 s.",
            ],
            [
                   "Camera's shutter speed 4.0 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_4p0_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_5",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_5p0_inline",
                   "Camera's shutter speed 5.0 s.",
            ],
            [
                   "Camera's shutter speed 5.0 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_5p0_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_6",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_6p0_inline",
                   "Camera's shutter speed 6.0 s.",
            ],
            [
                   "Camera's shutter speed 6.0 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_6p0_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_7",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_7p0_inline",
                   "Camera's shutter speed 7.0 s.",
            ],
            [
                   "Camera's shutter speed 7.0 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_7p0_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_8",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_8p0_inline",
                   "Camera's shutter speed 8.0 s.",
            ],
            [
                   "Camera's shutter speed 8.0 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_8p0_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_9",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_9p0_inline",
                   "Camera's shutter speed 9.0 s.",
            ],
            [
                   "Camera's shutter speed 9.0 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_9p0_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_10",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_10p0_inline",
                   "Camera's shutter speed 10.0 s.",
            ],
            [
                   "Camera's shutter speed 10.0 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_10p0_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_13",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_13p0_inline",
                   "Camera's shutter speed 13.0 s.",
            ],
            [
                   "Camera's shutter speed 13.0 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_13p0_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_15",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_15p0_inline",
                   "Camera's shutter speed 15.0 s.",
            ],
            [
                   "Camera's shutter speed 15.0 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_15p0_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_20",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_20p0_inline",
                   "Camera's shutter speed 20.0 s.",
            ],
            [
                   "Camera's shutter speed 20.0 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_20p0_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_25",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_25p0_inline",
                   "Camera's shutter speed 25.0 s.",
            ],
            [
                   "Camera's shutter speed 25.0 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_25p0_inline",
                   "",
            ],
            [
                   "SHUTTER_SPEED_30",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_30p0_inline",
                   "Camera's shutter speed 30.0 s.",
            ],
            [
                   "Camera's shutter speed 30.0 s.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_30p0_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_Unknown_inline",
                   "Camera's shutter speed unknown.",
            ],
            [
                   "Camera's shutter speed unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraShutterSpeed_Unknown_inline",
                   "",
            ],
            [
                   "AUTO",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_Auto_inline",
                   "The ISO value is automatically set. This cannot be used for all cameras when in Manual mode.",
            ],
            [
                   "The ISO value is automatically set. This cannot be used for all cameras when in Manual mode.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_Auto_inline",
                   "",
            ],
            [
                   "ISO_100",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_100_inline",
                   "The ISO value is set to 100.",
            ],
            [
                   "The ISO value is set to 100.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_100_inline",
                   "",
            ],
            [
                   "ISO_200",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_200_inline",
                   "The ISO value is set to 200.",
            ],
            [
                   "The ISO value is set to 200.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_200_inline",
                   "",
            ],
            [
                   "ISO_400",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_400_inline",
                   "The ISO value is set to 400.",
            ],
            [
                   "The ISO value is set to 400.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_400_inline",
                   "",
            ],
            [
                   "ISO_800",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_800_inline",
                   "The ISO value is set to 800.",
            ],
            [
                   "The ISO value is set to 800.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_800_inline",
                   "",
            ],
            [
                   "ISO_1600",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_1600_inline",
                   "The ISO value is set to 1600.",
            ],
            [
                   "The ISO value is set to 1600.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_1600_inline",
                   "",
            ],
            [
                   "ISO_3200",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_3200_inline",
                   "The ISO value is set to 3200.",
            ],
            [
                   "The ISO value is set to 3200.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_3200_inline",
                   "",
            ],
            [
                   "ISO_6400",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_6400_inline",
                   "The ISO value is set to 6400.",
            ],
            [
                   "The ISO value is set to 6400.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_6400_inline",
                   "",
            ],
            [
                   "ISO_12800",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_12800_inline",
                   "The ISO value is set to 12800.",
            ],
            [
                   "The ISO value is set to 12800.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_12800_inline",
                   "",
            ],
            [
                   "ISO_25600",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_25600_inline",
                   "The ISO value is set to 25600.",
            ],
            [
                   "The ISO value is set to 25600.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_25600_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_Unknown_inline",
                   "The ISO value is set to Unknown value.",
            ],
            [
                   "The ISO value is set to Unknown value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraISO_Unknown_inline",
                   "",
            ],
            [
                   "F_1_DOT_6",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F1p6_inline",
                   "The Aperture value is f/1.6. It is only supported by Z30 camera.",
            ],
            [
                   "The Aperture value is f/1.6. It is only supported by Z30 camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F1p6_inline",
                   "",
            ],
            [
                   "F_1_DOT_7",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F1p7_inline",
                   "The Aperture value is f/1.7.",
            ],
            [
                   "The Aperture value is f/1.7.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F1p7_inline",
                   "",
            ],
            [
                   "F_1_DOT_8",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F1p8_inline",
                   "The Aperture value is f/1.8.",
            ],
            [
                   "The Aperture value is f/1.8.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F1p8_inline",
                   "",
            ],
            [
                   "F_2",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F2p0_inline",
                   "The Aperture value is f/2.",
            ],
            [
                   "The Aperture value is f/2.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F2p0_inline",
                   "",
            ],
            [
                   "F_2_DOT_2",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F2p2_inline",
                   "The Aperture value is f/2.2.",
            ],
            [
                   "The Aperture value is f/2.2.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F2p2_inline",
                   "",
            ],
            [
                   "F_2_DOT_4",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F2p4_inline",
                   "The Aperture value is f/2.4. It is only supported by Z30 camera.",
            ],
            [
                   "The Aperture value is f/2.4. It is only supported by Z30 camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F2p4_inline",
                   "",
            ],
            [
                   "F_2_DOT_5",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F2p5_inline",
                   "The Aperture value is f/2.5.",
            ],
            [
                   "The Aperture value is f/2.5.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F2p5_inline",
                   "",
            ],
            [
                   "F_2_DOT_6",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F2p6_inline",
                   "The Aperture value is f/2.6.",
            ],
            [
                   "The Aperture value is f/2.6.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F2p6_inline",
                   "",
            ],
            [
                   "F_2_DOT_8",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F2p8_inline",
                   "The Aperture value is f/2.8.",
            ],
            [
                   "The Aperture value is f/2.8.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F2p8_inline",
                   "",
            ],
            [
                   "F_3_DOT_2",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F3p2_inline",
                   "The Aperture value is f/3.2.",
            ],
            [
                   "The Aperture value is f/3.2.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F3p2_inline",
                   "",
            ],
            [
                   "F_3_DOT_4",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F3p4_inline",
                   "The Aperture value is f/3.4.",
            ],
            [
                   "The Aperture value is f/3.4.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F3p4_inline",
                   "",
            ],
            [
                   "F_3_DOT_5",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F3p5_inline",
                   "The Aperture value is f/3.5.",
            ],
            [
                   "The Aperture value is f/3.5.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F3p5_inline",
                   "",
            ],
            [
                   "F_4",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F4p0_inline",
                   "The Aperture value is f/4.",
            ],
            [
                   "The Aperture value is f/4.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F4p0_inline",
                   "",
            ],
            [
                   "F_4_DOT_5",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F4p5_inline",
                   "The Aperture value is f/4.5.",
            ],
            [
                   "The Aperture value is f/4.5.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F4p5_inline",
                   "",
            ],
            [
                   "F_4_DOT_8",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F4p8_inline",
                   "The Aperture value is f/4.8.",
            ],
            [
                   "The Aperture value is f/4.8.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F4p8_inline",
                   "",
            ],
            [
                   "F_5",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F5p0_inline",
                   "The Aperture value is f/5.",
            ],
            [
                   "The Aperture value is f/5.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F5p0_inline",
                   "",
            ],
            [
                   "F_5_DOT_6",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F5p6_inline",
                   "The Aperture value is f/5.6.",
            ],
            [
                   "The Aperture value is f/5.6.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F5p6_inline",
                   "",
            ],
            [
                   "F_6_DOT_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F6p3_inline",
                   "The Aperture value is f/6.3.",
            ],
            [
                   "The Aperture value is f/6.3.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F6p3_inline",
                   "",
            ],
            [
                   "F_6_DOT_8",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F6p8_inline",
                   "The Aperture value is f/6.8.",
            ],
            [
                   "The Aperture value is f/6.8.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F6p8_inline",
                   "",
            ],
            [
                   "F_7_DOT_1",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F7p1_inline",
                   "The Aperture value is f/7.1.",
            ],
            [
                   "The Aperture value is f/7.1.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F7p1_inline",
                   "",
            ],
            [
                   "F_8",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F8p0_inline",
                   "The Aperture value is f/8.",
            ],
            [
                   "The Aperture value is f/8.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F8p0_inline",
                   "",
            ],
            [
                   "F_9",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F9p0_inline",
                   "The Aperture value is f/9.",
            ],
            [
                   "The Aperture value is f/9.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F9p0_inline",
                   "",
            ],
            [
                   "F_9_DOT_6",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F9p6_inline",
                   "The Aperture value is f/9.6.",
            ],
            [
                   "The Aperture value is f/9.6.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F9p6_inline",
                   "",
            ],
            [
                   "F_10",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F10_inline",
                   "The Aperture value is f/10.",
            ],
            [
                   "The Aperture value is f/10.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F10_inline",
                   "",
            ],
            [
                   "F_11",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F11_inline",
                   "The Aperture value is f/11.",
            ],
            [
                   "The Aperture value is f/11.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F11_inline",
                   "",
            ],
            [
                   "F_13",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F13_inline",
                   "The Aperture value is f/13.",
            ],
            [
                   "The Aperture value is f/13.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F13_inline",
                   "",
            ],
            [
                   "F_14",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F14_inline",
                   "The Aperture value is f/14.",
            ],
            [
                   "The Aperture value is f/14.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F14_inline",
                   "",
            ],
            [
                   "F_16",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F16_inline",
                   "The Aperture value is f/16.",
            ],
            [
                   "The Aperture value is f/16.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F16_inline",
                   "",
            ],
            [
                   "F_18",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F18_inline",
                   "The Aperture value is f/18.",
            ],
            [
                   "The Aperture value is f/18.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F18_inline",
                   "",
            ],
            [
                   "F_20",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F20_inline",
                   "The Aperture value is f/20.",
            ],
            [
                   "The Aperture value is f/20.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F20_inline",
                   "",
            ],
            [
                   "F_22",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F22_inline",
                   "The Aperture value is f/22.",
            ],
            [
                   "The Aperture value is f/22.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_F22_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_Unknown_inline",
                   "The Aperture value is Unknown.",
            ],
            [
                   "The Aperture value is Unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAperture_Unknown_inline",
                   "",
            ],
            [
                   "getWhiteBalancePreset",
                   2,
                   "/Components/Camera/DJICamera_DJICameraWhiteBalanceInterface.html",
                   "#DJICamera_DJICameraWhiteBalanceInterface_preset_inline",
                   "The current preset for white balance.  @return White balance preset.",
            ],
            [
                   "The current preset for white balance.  @return White balance preset.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraWhiteBalanceInterface.html",
                   "#DJICamera_DJICameraWhiteBalanceInterface_preset_inline",
                   "",
            ],
            [
                   "getColorTemperature",
                   2,
                   "/Components/Camera/DJICamera_DJICameraWhiteBalanceInterface.html",
                   "#DJICamera_DJICameraWhiteBalanceInterface_colorTemperature_inline",
                   "The current setting for color temperature. Real color temperature value (K) = value * 100. For example, 50 -> 5000K.  @return Color temperature.",
            ],
            [
                   "The current setting for color temperature. Real color temperature value (K) = value * 100. For example, 50 -> 5000K.  @return Color temperature.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraWhiteBalanceInterface.html",
                   "#DJICamera_DJICameraWhiteBalanceInterface_colorTemperature_inline",
                   "",
            ],
            [
                   "WhiteBalance",
                   2,
                   "/Components/Camera/DJICamera_DJICameraWhiteBalanceInterface.html",
                   "#DJICamera_DJICameraWhiteBalanceInterface_initWithPreset_inline",
                   "Create a `WhiteBalance` instance with a white balance preset.  @param preset White balance preset that is not `CUSTOM`.",
            ],
            [
                   "Create a `WhiteBalance` instance with a white balance preset.  @param preset White balance preset that is not `CUSTOM`.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraWhiteBalanceInterface.html",
                   "#DJICamera_DJICameraWhiteBalanceInterface_initWithPreset_inline",
                   "",
            ],
            [
                   "WhiteBalance",
                   2,
                   "/Components/Camera/DJICamera_DJICameraWhiteBalanceInterface.html",
                   "#DJICamera_DJICameraWhiteBalanceInterface_initWithCustomColorTemperature_inline",
                   "Create a `WhiteBalance` instance with a white balance preset.  @param temperature Color temperature value to be set in the range of [20, 100]. Real color temperature value (K) = value  * 100. For example, 50 -> 5000K.",
            ],
            [
                   "Create a `WhiteBalance` instance with a white balance preset.  @param temperature Color temperature value to be set in the range of [20, 100]. Real color temperature value (K) = value  * 100. For example, 50 -> 5000K.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraWhiteBalanceInterface.html",
                   "#DJICamera_DJICameraWhiteBalanceInterface_initWithCustomColorTemperature_inline",
                   "",
            ],
            [
                   "AUTO",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraWhiteBalance_Auto_inline",
                   "The camera's white balance is automatically set.",
            ],
            [
                   "The camera's white balance is automatically set.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraWhiteBalance_Auto_inline",
                   "",
            ],
            [
                   "SUNNY",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraWhiteBalance_Sunny_inline",
                   "The camera's white balance is set to sunny.",
            ],
            [
                   "The camera's white balance is set to sunny.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraWhiteBalance_Sunny_inline",
                   "",
            ],
            [
                   "CLOUDY",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraWhiteBalance_Cloudy_inline",
                   "The camera's white balance is set to cloudy.",
            ],
            [
                   "The camera's white balance is set to cloudy.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraWhiteBalance_Cloudy_inline",
                   "",
            ],
            [
                   "WATER_SURFACE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraWhiteBalance_WaterSuface_inline",
                   "The camera's white balance is set to water surface.",
            ],
            [
                   "The camera's white balance is set to water surface.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraWhiteBalance_WaterSuface_inline",
                   "",
            ],
            [
                   "INDOOR_INCANDESCENT",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraWhiteBalance_IndoorsIncandescent_inline",
                   "The camera's white balance is set to indoors and incandescent light.",
            ],
            [
                   "The camera's white balance is set to indoors and incandescent light.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraWhiteBalance_IndoorsIncandescent_inline",
                   "",
            ],
            [
                   "INDOOR_FLUORESCENT",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraWhiteBalance_IndoorsFluorescent_inline",
                   "The camera's white balance is set to indoors and fluorescent light.",
            ],
            [
                   "The camera's white balance is set to indoors and fluorescent light.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraWhiteBalance_IndoorsFluorescent_inline",
                   "",
            ],
            [
                   "CUSTOM",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraWhiteBalance_CustomColorTemperature_inline",
                   "The camera's white balance is set to custom color temperature. By using this white balance value, user can set a  specific value for the color temperature.",
            ],
            [
                   "The camera's white balance is set to custom color temperature. By using this white balance value, user can set a  specific value for the color temperature.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraWhiteBalance_CustomColorTemperature_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraWhiteBalance_Unknown_inline",
                   "The camera's white balance is unknown.",
            ],
            [
                   "The camera's white balance is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraWhiteBalance_Unknown_inline",
                   "",
            ],
            [
                   "CENTER",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMeteringMode_Center_inline",
                   "The camera's exposure metering is set to the center.",
            ],
            [
                   "The camera's exposure metering is set to the center.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMeteringMode_Center_inline",
                   "",
            ],
            [
                   "AVERAGE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMeteringMode_Average_inline",
                   "The camera's exposure metering is set to average.",
            ],
            [
                   "The camera's exposure metering is set to average.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMeteringMode_Average_inline",
                   "",
            ],
            [
                   "SPOT",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMeteringMode_Spot_inline",
                   "The camera's exposure metering is set to a single spot.",
            ],
            [
                   "The camera's exposure metering is set to a single spot.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMeteringMode_Spot_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMeteringMode_Unknown_inline",
                   "The camera's exposure metering is unknown.",
            ],
            [
                   "The camera's exposure metering is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraMeteringMode_Unknown_inline",
                   "",
            ],
            [
                   "N_5_0",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N50_inline",
                   "The camera's exposure compensation is -5.0ev.",
            ],
            [
                   "The camera's exposure compensation is -5.0ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N50_inline",
                   "",
            ],
            [
                   "N_4_7",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N47_inline",
                   "The camera's exposure compensation is -4.7ev.",
            ],
            [
                   "The camera's exposure compensation is -4.7ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N47_inline",
                   "",
            ],
            [
                   "N_4_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N43_inline",
                   "The camera's exposure compensation is -4.3ev.",
            ],
            [
                   "The camera's exposure compensation is -4.3ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N43_inline",
                   "",
            ],
            [
                   "N_4_0",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N40_inline",
                   "The camera's exposure compensation is -4.0ev.",
            ],
            [
                   "The camera's exposure compensation is -4.0ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N40_inline",
                   "",
            ],
            [
                   "N_3_7",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N37_inline",
                   "The camera's exposure compensation is -3.7ev.",
            ],
            [
                   "The camera's exposure compensation is -3.7ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N37_inline",
                   "",
            ],
            [
                   "N_3_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N33_inline",
                   "The camera's exposure compensation is -3.3ev.",
            ],
            [
                   "The camera's exposure compensation is -3.3ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N33_inline",
                   "",
            ],
            [
                   "N_3_0",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N30_inline",
                   "The camera's exposure compensation is -3.0ev.",
            ],
            [
                   "The camera's exposure compensation is -3.0ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N30_inline",
                   "",
            ],
            [
                   "N_2_7",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N27_inline",
                   "The camera's exposure compensation is -2.7ev.",
            ],
            [
                   "The camera's exposure compensation is -2.7ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N27_inline",
                   "",
            ],
            [
                   "N_2_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N23_inline",
                   "The camera's exposure compensation is -2.3ev.",
            ],
            [
                   "The camera's exposure compensation is -2.3ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N23_inline",
                   "",
            ],
            [
                   "N_2_0",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N20_inline",
                   "The camera's exposure compensation is -2.0ev.",
            ],
            [
                   "The camera's exposure compensation is -2.0ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N20_inline",
                   "",
            ],
            [
                   "N_1_7",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N17_inline",
                   "The camera's exposure compensation is -1.7ev.",
            ],
            [
                   "The camera's exposure compensation is -1.7ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N17_inline",
                   "",
            ],
            [
                   "N_1_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N13_inline",
                   "The camera's exposure compensation is -1.3ev.",
            ],
            [
                   "The camera's exposure compensation is -1.3ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N13_inline",
                   "",
            ],
            [
                   "N_1_0",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N10_inline",
                   "The camera's exposure compensation is -1.0ev.",
            ],
            [
                   "The camera's exposure compensation is -1.0ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N10_inline",
                   "",
            ],
            [
                   "N_0_7",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N07_inline",
                   "The camera's exposure compensation is -0.7ev.",
            ],
            [
                   "The camera's exposure compensation is -0.7ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N07_inline",
                   "",
            ],
            [
                   "N_0_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N03_inline",
                   "The camera's exposure compensation is -0.3ev.",
            ],
            [
                   "The camera's exposure compensation is -0.3ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N03_inline",
                   "",
            ],
            [
                   "N_0_0",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N00_inline",
                   "The camera's exposure compensation is 0.0ev.",
            ],
            [
                   "The camera's exposure compensation is 0.0ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_N00_inline",
                   "",
            ],
            [
                   "P_0_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P03_inline",
                   "The camera's exposure compensation is +0.3ev.",
            ],
            [
                   "The camera's exposure compensation is +0.3ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P03_inline",
                   "",
            ],
            [
                   "P_0_7",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P07_inline",
                   "The camera's exposure compensation is +0.7ev.",
            ],
            [
                   "The camera's exposure compensation is +0.7ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P07_inline",
                   "",
            ],
            [
                   "P_1_0",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P10_inline",
                   "The camera's exposure compensation is +1.0ev.",
            ],
            [
                   "The camera's exposure compensation is +1.0ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P10_inline",
                   "",
            ],
            [
                   "P_1_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P13_inline",
                   "The camera's exposure compensation is +1.3ev.",
            ],
            [
                   "The camera's exposure compensation is +1.3ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P13_inline",
                   "",
            ],
            [
                   "P_1_7",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P17_inline",
                   "The camera's exposure compensation is +1.7ev.",
            ],
            [
                   "The camera's exposure compensation is +1.7ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P17_inline",
                   "",
            ],
            [
                   "P_2_0",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P20_inline",
                   "The camera's exposure compensation is +2.0ev.",
            ],
            [
                   "The camera's exposure compensation is +2.0ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P20_inline",
                   "",
            ],
            [
                   "P_2_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P23_inline",
                   "The camera's exposure compensation is +2.3ev.",
            ],
            [
                   "The camera's exposure compensation is +2.3ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P23_inline",
                   "",
            ],
            [
                   "P_2_7",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P27_inline",
                   "The camera's exposure compensation is +2.7ev.",
            ],
            [
                   "The camera's exposure compensation is +2.7ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P27_inline",
                   "",
            ],
            [
                   "P_3_0",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P30_inline",
                   "The camera's exposure compensation is +3.0ev.",
            ],
            [
                   "The camera's exposure compensation is +3.0ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P30_inline",
                   "",
            ],
            [
                   "P_3_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P33_inline",
                   "The camera's exposure compensation is +3.3ev.",
            ],
            [
                   "The camera's exposure compensation is +3.3ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P33_inline",
                   "",
            ],
            [
                   "P_3_7",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P37_inline",
                   "The camera's exposure compensation is +3.7ev.",
            ],
            [
                   "The camera's exposure compensation is +3.7ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P37_inline",
                   "",
            ],
            [
                   "P_4_0",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P40_inline",
                   "The camera's exposure compensation is +4.0ev.",
            ],
            [
                   "The camera's exposure compensation is +4.0ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P40_inline",
                   "",
            ],
            [
                   "P_4_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P43_inline",
                   "The camera's exposure compensation is +4.3ev.",
            ],
            [
                   "The camera's exposure compensation is +4.3ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P43_inline",
                   "",
            ],
            [
                   "P_4_7",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P47_inline",
                   "The camera's exposure compensation is +4.7ev.",
            ],
            [
                   "The camera's exposure compensation is +4.7ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P47_inline",
                   "",
            ],
            [
                   "P_5_0",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P50_inline",
                   "The camera's exposure compensation is +5.0ev.",
            ],
            [
                   "The camera's exposure compensation is +5.0ev.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_P50_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_Unknown_inline",
                   "The camera's exposure compensation is unknown.",
            ],
            [
                   "The camera's exposure compensation is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraExposureCompensation_Unknown_inline",
                   "",
            ],
            [
                   "AUTO",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAntiFlicker_Auto_inline",
                   "The camera's anti-flicker is automatically set. It is not supported by Z30 camera.",
            ],
            [
                   "The camera's anti-flicker is automatically set. It is not supported by Z30 camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAntiFlicker_Auto_inline",
                   "",
            ],
            [
                   "MANUAL_60HZ",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAntiFlicker_60Hz_inline",
                   "The camera's anti-flicker is 60 Hz.",
            ],
            [
                   "The camera's anti-flicker is 60 Hz.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAntiFlicker_60Hz_inline",
                   "",
            ],
            [
                   "MANUAL_50HZ",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAntiFlicker_50Hz_inline",
                   "The camera's anti-flicker is 50 Hz.",
            ],
            [
                   "The camera's anti-flicker is 50 Hz.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAntiFlicker_50Hz_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAntiFlicker_Unknown_inline",
                   "The camera's anti-flicker is unknown.",
            ],
            [
                   "The camera's anti-flicker is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraAntiFlicker_Unknown_inline",
                   "",
            ],
            [
                   "getAperture",
                   2,
                   "/Components/Camera/DJICamera_DJICameraExposureParameters.html",
                   "#DJICamera_DJICameraExposureParameters_aperture_inline",
                   "Returns the current aperture value being used by the camera. A larger aperture results in a  higher exposure and shallower depth of field. For cameras that do not support adjustable aperture (e.g. Zenmuse X3),  the real aperture value is fixed.  @return The enum value of `Aperture`",
            ],
            [
                   "Returns the current aperture value being used by the camera. A larger aperture results in a  higher exposure and shallower depth of field. For cameras that do not support adjustable aperture (e.g. Zenmuse X3),  the real aperture value is fixed.  @return The enum value of `Aperture`",
                   1,
                   "/Components/Camera/DJICamera_DJICameraExposureParameters.html",
                   "#DJICamera_DJICameraExposureParameters_aperture_inline",
                   "",
            ],
            [
                   "getShutterSpeed",
                   2,
                   "/Components/Camera/DJICamera_DJICameraExposureParameters.html",
                   "#DJICamera_DJICameraExposureParameters_shutterSpeed_inline",
                   "Returns the current shutter speed being used by the camera. A slower shutter speed results in  a higher exposure, but more blurring in areas of the scene that are moving.  @return The enum value of `ShutterSpeed`",
            ],
            [
                   "Returns the current shutter speed being used by the camera. A slower shutter speed results in  a higher exposure, but more blurring in areas of the scene that are moving.  @return The enum value of `ShutterSpeed`",
                   1,
                   "/Components/Camera/DJICamera_DJICameraExposureParameters.html",
                   "#DJICamera_DJICameraExposureParameters_shutterSpeed_inline",
                   "",
            ],
            [
                   "getISO",
                   2,
                   "/Components/Camera/DJICamera_DJICameraExposureParameters.html",
                   "#DJICamera_DJICameraExposureParameters_iso_inline",
                   "Returns the current ISO value being used by the camera. `ISO` defines a  number ISO values separated by one exposure stop. However, when the ISO is in automatic mode, the camera can select  ISO values less than one stop apart, and therefore this property is the actual ISO value being used by the camera.  A higher ISO results in a higher exposure, and more noise in the resulting image.  @return The enum value of `ISO`",
            ],
            [
                   "Returns the current ISO value being used by the camera. `ISO` defines a  number ISO values separated by one exposure stop. However, when the ISO is in automatic mode, the camera can select  ISO values less than one stop apart, and therefore this property is the actual ISO value being used by the camera.  A higher ISO results in a higher exposure, and more noise in the resulting image.  @return The enum value of `ISO`",
                   1,
                   "/Components/Camera/DJICamera_DJICameraExposureParameters.html",
                   "#DJICamera_DJICameraExposureParameters_iso_inline",
                   "",
            ],
            [
                   "getExposureCompensation",
                   2,
                   "/Components/Camera/DJICamera_DJICameraExposureParameters.html",
                   "#DJICamera_DJICameraExposureParameters_exposureCompensation_inline",
                   "Returns the camera's current exposure compensation. In Program, Aperture Priority and Shutter Priority modes, the  exposure compensation value changes the exposure target the camera is using to calculate correct exposure and is set by the user. For example, Aperture Priority mode indicates that the priority is to maintain the aperture setting  and adjusting the exposure by varying the ISO and shutter speed. In Manual mode, this value is reported from the  camera and reports how much the  exposure needs to be compensated for to get to what the camera thinks is the correct  exposure. In Manual mode, the range of exposure compensation reported by the camera is -2.0 EV to 2.0 EV. In Program, Aperture Priority and Shutter Priority modes, the range of exposure compensation is -3.0 EV to + 3.0 EV. For the Z30  camera in manual mode, exposureCompensation is not used and the value is always 'DJICameraExposureCompensationN00'.  @return The enum value of `ExposureCompensation`",
            ],
            [
                   "Returns the camera's current exposure compensation. In Program, Aperture Priority and Shutter Priority modes, the  exposure compensation value changes the exposure target the camera is using to calculate correct exposure and is set by the user. For example, Aperture Priority mode indicates that the priority is to maintain the aperture setting  and adjusting the exposure by varying the ISO and shutter speed. In Manual mode, this value is reported from the  camera and reports how much the  exposure needs to be compensated for to get to what the camera thinks is the correct  exposure. In Manual mode, the range of exposure compensation reported by the camera is -2.0 EV to 2.0 EV. In Program, Aperture Priority and Shutter Priority modes, the range of exposure compensation is -3.0 EV to + 3.0 EV. For the Z30  camera in manual mode, exposureCompensation is not used and the value is always 'DJICameraExposureCompensationN00'.  @return The enum value of `ExposureCompensation`",
                   1,
                   "/Components/Camera/DJICamera_DJICameraExposureParameters.html",
                   "#DJICamera_DJICameraExposureParameters_exposureCompensation_inline",
                   "",
            ],
            [
                   "MANUAL",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusMode_Manual_inline",
                   "The camera's focus mode is set to manual. In this mode, user sets the focus ring value to adjust the focal distance.",
            ],
            [
                   "The camera's focus mode is set to manual. In this mode, user sets the focus ring value to adjust the focal distance.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusMode_Manual_inline",
                   "",
            ],
            [
                   "AUTO",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusMode_Auto_inline",
                   "The camera's focus mode is set to auto. For the Z30 camera, the focus is calculated completely automatically. For all  other cameras, a focus target can be set by the user, which is used to calculate focus automatically.",
            ],
            [
                   "The camera's focus mode is set to auto. For the Z30 camera, the focus is calculated completely automatically. For all  other cameras, a focus target can be set by the user, which is used to calculate focus automatically.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusMode_Auto_inline",
                   "",
            ],
            [
                   "AFC",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusMode_AFC_inline",
                   "The camera's focus mode is set to Continuous AF. It is only supported by Mavic Pro with  firmware version V01.03.0000 or above, and X4S camera.",
            ],
            [
                   "The camera's focus mode is set to Continuous AF. It is only supported by Mavic Pro with  firmware version V01.03.0000 or above, and X4S camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusMode_AFC_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusMode_Unknown_inline",
                   "The camera's focus mode is unknown.",
            ],
            [
                   "The camera's focus mode is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusMode_Unknown_inline",
                   "",
            ],
            [
                   "IDLE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusStatus_Idle_inline",
                   "The lens is idle. No focus target has been set.",
            ],
            [
                   "The lens is idle. No focus target has been set.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusStatus_Idle_inline",
                   "",
            ],
            [
                   "FOCUSING",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusStatus_Focusing_inline",
                   "The lens is focusing on the target.",
            ],
            [
                   "The lens is focusing on the target.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusStatus_Focusing_inline",
                   "",
            ],
            [
                   "SUCCESSFUL",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusStatus_Success_inline",
                   "The lens succeeded to focus on the target.",
            ],
            [
                   "The lens succeeded to focus on the target.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusStatus_Success_inline",
                   "",
            ],
            [
                   "FAILED",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusStatus_Failure_inline",
                   "The lens failed to focus on the target. This happens when the target is too close, or the camera cannot distinguish the  object to focus (e.g. a white wall).",
            ],
            [
                   "The lens failed to focus on the target. This happens when the target is too close, or the camera cannot distinguish the  object to focus (e.g. a white wall).",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusStatus_Failure_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusStatus_Unknown_inline",
                   "The lens focus status is unknown.",
            ],
            [
                   "The lens focus status is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraLensFocusStatus_Unknown_inline",
                   "",
            ],
            [
                   "isEnabledMF",
                   2,
                   "/Components/Camera/DJICamera_DJICameraFocusAssistantSettings.html",
                   "#DJICamera_DJICameraFocusAssistantSettings_enabledForMF_inline",
                   "`true` if the lens focus assistant is enabled for Manual Focusing.  @return `true` if MF is enabled.",
            ],
            [
                   "`true` if the lens focus assistant is enabled for Manual Focusing.  @return `true` if MF is enabled.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraFocusAssistantSettings.html",
                   "#DJICamera_DJICameraFocusAssistantSettings_enabledForMF_inline",
                   "",
            ],
            [
                   "isEnabledAF",
                   2,
                   "/Components/Camera/DJICamera_DJICameraFocusAssistantSettings.html",
                   "#DJICamera_DJICameraFocusAssistantSettings_enabledForAF_inline",
                   "`true` if the lens focus assistant is enabled for Auto Focusing.  @return true if AF is enabled.",
            ],
            [
                   "`true` if the lens focus assistant is enabled for Auto Focusing.  @return true if AF is enabled.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraFocusAssistantSettings.html",
                   "#DJICamera_DJICameraFocusAssistantSettings_enabledForAF_inline",
                   "",
            ],
            [
                   "NOT_FOUND",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_NotFound_inline",
                   "SSD is not found.",
            ],
            [
                   "SSD is not found.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_NotFound_inline",
                   "",
            ],
            [
                   "IDLE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_Idle_inline",
                   "SSD is idle.",
            ],
            [
                   "SSD is idle.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_Idle_inline",
                   "",
            ],
            [
                   "SAVING",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_Saving_inline",
                   "SSD is Saving.",
            ],
            [
                   "SSD is Saving.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_Saving_inline",
                   "",
            ],
            [
                   "FORMATTING",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_Formatting_inline",
                   "SSD is formatting.",
            ],
            [
                   "SSD is formatting.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_Formatting_inline",
                   "",
            ],
            [
                   "INITIALIZING",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_Initializing_inline",
                   "SSD is initializing.",
            ],
            [
                   "SSD is initializing.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_Initializing_inline",
                   "",
            ],
            [
                   "ERROR",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_Error_inline",
                   "SSD validation error.",
            ],
            [
                   "SSD validation error.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_Error_inline",
                   "",
            ],
            [
                   "FULL",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_Full_inline",
                   "SSD is full.",
            ],
            [
                   "SSD is full.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_Full_inline",
                   "",
            ],
            [
                   "POOR_CONNECTION",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_PoorConnection_inline",
                   "Communication to SSD is not stable. User can re-plugin SSD. It is supported by X5S.",
            ],
            [
                   "Communication to SSD is not stable. User can re-plugin SSD. It is supported by X5S.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_PoorConnection_inline",
                   "",
            ],
            [
                   "SWITCHING_LICENSE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_SwitchingLicense_inline",
                   "SSD is switching the license key. It is supported by X5S.",
            ],
            [
                   "SSD is switching the license key. It is supported by X5S.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_SwitchingLicense_inline",
                   "",
            ],
            [
                   "FORMATTING_REQUIRED",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_FormattingRequired_inline",
                   "Formatting is required. It is supported by X5S.",
            ],
            [
                   "Formatting is required. It is supported by X5S.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_FormattingRequired_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_Unknown_inline",
                   "SSD state is unknown. This happens in the first 2 seconds after turning the camera power on as during this time the  camera cannot check the state of the SSD.",
            ],
            [
                   "SSD state is unknown. This happens in the first 2 seconds after turning the camera power on as during this time the  camera cannot check the state of the SSD.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDOperationState_Unknown_inline",
                   "",
            ],
            [
                   "CAPACITY_256_GB",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDCapacity_256G_inline",
                   "SSD capacity is 256G.",
            ],
            [
                   "SSD capacity is 256G.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDCapacity_256G_inline",
                   "",
            ],
            [
                   "CAPACITY_512_GB",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDCapacity_512G_inline",
                   "SSD capacity is 512G.",
            ],
            [
                   "SSD capacity is 512G.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDCapacity_512G_inline",
                   "",
            ],
            [
                   "CAPACITY_1_TB",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDCapacity_1T_inline",
                   "SSD capacity is 1T.",
            ],
            [
                   "SSD capacity is 1T.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDCapacity_1T_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDCapacity_Unknown_inline",
                   "SSD capacity is unknown.",
            ],
            [
                   "SSD capacity is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDCapacity_Unknown_inline",
                   "",
            ],
            [
                   "LicenseKeyTypeCinemaDNG",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoLicenseCinemaDNG_inline",
                   "CinemaDNG.",
            ],
            [
                   "CinemaDNG.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoLicenseCinemaDNG_inline",
                   "",
            ],
            [
                   "LicenseKeyTypeProRes422HQ",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoLicenseProRes422HQ_inline",
                   "Apple ProRes 422 HQ.",
            ],
            [
                   "Apple ProRes 422 HQ.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoLicenseProRes422HQ_inline",
                   "",
            ],
            [
                   "LicenseKeyTypeProRes4444XQ",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoLicenseProRes4444XQ_inline",
                   "Apple ProRes 4444 XQ(no alpha).",
            ],
            [
                   "Apple ProRes 4444 XQ(no alpha).",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoLicenseProRes4444XQ_inline",
                   "",
            ],
            [
                   "Unknown",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoLicenseUnknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoLicenseUnknown_inline",
                   "",
            ],
            [
                   "FULL",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalROI_Full_inline",
                   "Causes the color spectrum to be evenly distributed across the entire image depending the default settings.",
            ],
            [
                   "Causes the color spectrum to be evenly distributed across the entire image depending the default settings.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalROI_Full_inline",
                   "",
            ],
            [
                   "SKY_EXCLUDED_33",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalROI_SkyExluded33_inline",
                   "Ignores areas of the sky 33% so that most of the spectrum can be allocated to remaining areas, providing higher  contrast and utility for analysis.",
            ],
            [
                   "Ignores areas of the sky 33% so that most of the spectrum can be allocated to remaining areas, providing higher  contrast and utility for analysis.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalROI_SkyExluded33_inline",
                   "",
            ],
            [
                   "SKY_EXCLUDED_50",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalROI_SkyExcluded50_inline",
                   "Ignores areas of the sky 50% so that most of the spectrum can be allocated to remaining areas, providing higher  contrast and utility for analysis.",
            ],
            [
                   "Ignores areas of the sky 50% so that most of the spectrum can be allocated to remaining areas, providing higher  contrast and utility for analysis.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalROI_SkyExcluded50_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalROI_Unknown_inline",
                   "The ROI type is unknown.",
            ],
            [
                   "The ROI type is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalROI_Unknown_inline",
                   "",
            ],
            [
                   "WHITE_HOT",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_WhiteHot_inline",
                   "Without Isotherm enabled, the Palette type is WhiteHot. With Isotherm enabled, the Palette type is WhiteHotIso.",
            ],
            [
                   "Without Isotherm enabled, the Palette type is WhiteHot. With Isotherm enabled, the Palette type is WhiteHotIso.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_WhiteHot_inline",
                   "",
            ],
            [
                   "BLACK_HOT",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_BlackHot_inline",
                   "Without Isotherm enabled, the Palette type is BlackHot. With Isotherm enabled, the Palette type is BlackHotIso.",
            ],
            [
                   "Without Isotherm enabled, the Palette type is BlackHot. With Isotherm enabled, the Palette type is BlackHotIso.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_BlackHot_inline",
                   "",
            ],
            [
                   "RED_HOT",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_RedHot_inline",
                   "Without Isotherm enabled, the Palette type is RedHot. With Isotherm enabled, the Palette type is RedHotIso.",
            ],
            [
                   "Without Isotherm enabled, the Palette type is RedHot. With Isotherm enabled, the Palette type is RedHotIso.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_RedHot_inline",
                   "",
            ],
            [
                   "GREEN_HOT",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_GreenHot_inline",
                   "Without Isotherm enabled, the Palette type is GreenHot. With Isotherm enabled, the Palette type is GreenHotIso.",
            ],
            [
                   "Without Isotherm enabled, the Palette type is GreenHot. With Isotherm enabled, the Palette type is GreenHotIso.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_GreenHot_inline",
                   "",
            ],
            [
                   "FUSION",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Fusion_inline",
                   "Without Isotherm enabled, the Palette type is Fusion. With Isotherm enabled, the Palette type is FusionIso.",
            ],
            [
                   "Without Isotherm enabled, the Palette type is Fusion. With Isotherm enabled, the Palette type is FusionIso.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Fusion_inline",
                   "",
            ],
            [
                   "RAINBOW",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Rainbow_inline",
                   "Without Isotherm enabled, the Palette type is Rainbow. With Isotherm enabled, the Palette type is RainbowIso.",
            ],
            [
                   "Without Isotherm enabled, the Palette type is Rainbow. With Isotherm enabled, the Palette type is RainbowIso.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Rainbow_inline",
                   "",
            ],
            [
                   "IRONBOW_1",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Ironbow1_inline",
                   "Without Isotherm enabled, the Palette type is Ironbow1. With Isotherm enabled, the Palette type is IronbowWHIso.",
            ],
            [
                   "Without Isotherm enabled, the Palette type is Ironbow1. With Isotherm enabled, the Palette type is IronbowWHIso.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Ironbow1_inline",
                   "",
            ],
            [
                   "IRONBOW_2",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Ironbow2_inline",
                   "Without Isotherm enabled, the Palette type is Ironbow2. With Isotherm enabled, the Palette type is IronbowBHIso.",
            ],
            [
                   "Without Isotherm enabled, the Palette type is Ironbow2. With Isotherm enabled, the Palette type is IronbowBHIso.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Ironbow2_inline",
                   "",
            ],
            [
                   "ICE_FIRE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_IceFire_inline",
                   "Without Isotherm enabled, the Palette type is IceFire. With Isotherm enabled, the Palette type is IceFireIso.",
            ],
            [
                   "Without Isotherm enabled, the Palette type is IceFire. With Isotherm enabled, the Palette type is IceFireIso.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_IceFire_inline",
                   "",
            ],
            [
                   "SEPIA",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Sepia_inline",
                   "Without Isotherm enabled, the Palette type is Sepia. With Isotherm enabled, the Palette type is SepiaIso.",
            ],
            [
                   "Without Isotherm enabled, the Palette type is Sepia. With Isotherm enabled, the Palette type is SepiaIso.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Sepia_inline",
                   "",
            ],
            [
                   "GLOWBOW",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Glowbow_inline",
                   "Without Isotherm enabled, the Palette type is Glowbow. With Isotherm enabled, the Palette type is GlowbowIso.",
            ],
            [
                   "Without Isotherm enabled, the Palette type is Glowbow. With Isotherm enabled, the Palette type is GlowbowIso.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Glowbow_inline",
                   "",
            ],
            [
                   "COLOR_1",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Color1_inline",
                   "Without Isotherm enabled, the Palette type is Color1. With Isotherm enabled, the Palette type is MidRangeWHIso.",
            ],
            [
                   "Without Isotherm enabled, the Palette type is Color1. With Isotherm enabled, the Palette type is MidRangeWHIso.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Color1_inline",
                   "",
            ],
            [
                   "COLOR_2",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Color2_inline",
                   "Without Isotherm enabled, the Palette type is Color2. With Isotherm enabled, the Palette type is MidRangeBHIso.",
            ],
            [
                   "Without Isotherm enabled, the Palette type is Color2. With Isotherm enabled, the Palette type is MidRangeBHIso.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Color2_inline",
                   "",
            ],
            [
                   "RAIN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Rain_inline",
                   "Without Isotherm enabled, the Palette type is Rain. With Isotherm enabled, the Palette type is RainbowHCIso.",
            ],
            [
                   "Without Isotherm enabled, the Palette type is Rain. With Isotherm enabled, the Palette type is RainbowHCIso.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Rain_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Unknown_inline",
                   "The palette type is unknown.",
            ],
            [
                   "The palette type is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalPalette_Unknown_inline",
                   "",
            ],
            [
                   "LINEAR",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_Linear_inline",
                   "Linearly transforms the 14-bit sensor pixel data to 8-bit JPEG/MP4 pixel data.",
            ],
            [
                   "Linearly transforms the 14-bit sensor pixel data to 8-bit JPEG/MP4 pixel data.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_Linear_inline",
                   "",
            ],
            [
                   "DEFAULT",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_Default_inline",
                   "Automatically adjusts DDE, ACE, SSO, brightness and contrast.",
            ],
            [
                   "Automatically adjusts DDE, ACE, SSO, brightness and contrast.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_Default_inline",
                   "",
            ],
            [
                   "SEA_SKY",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_SeaSky_inline",
                   "Automatically adjusts DDE, ACE, SSO, brightness and contrast with presets optimized for scenes composed of the sea and  the sky scenes.",
            ],
            [
                   "Automatically adjusts DDE, ACE, SSO, brightness and contrast with presets optimized for scenes composed of the sea and  the sky scenes.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_SeaSky_inline",
                   "",
            ],
            [
                   "OUTDOOR",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_Outdoor_inline",
                   "Automatically adjusts DDE, ACE, SSO, brightness and contrast with presets optimized for outdoor scenes.",
            ],
            [
                   "Automatically adjusts DDE, ACE, SSO, brightness and contrast with presets optimized for outdoor scenes.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_Outdoor_inline",
                   "",
            ],
            [
                   "INDOOR",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_Indoor_inline",
                   "Automatically adjusts DDE, ACE, SSO, brightness and contrast with presets optimized for indoor scenes.",
            ],
            [
                   "Automatically adjusts DDE, ACE, SSO, brightness and contrast with presets optimized for indoor scenes.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_Indoor_inline",
                   "",
            ],
            [
                   "MANUAL",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_Manual_inline",
                   "Allows manual setting of DDE, ACE, SSO, brightness and contrast.",
            ],
            [
                   "Allows manual setting of DDE, ACE, SSO, brightness and contrast.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_Manual_inline",
                   "",
            ],
            [
                   "PROFILE_1",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_User1_inline",
                   "First saved settings of DDE, ACE, SSO, brightness and contrast.",
            ],
            [
                   "First saved settings of DDE, ACE, SSO, brightness and contrast.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_User1_inline",
                   "",
            ],
            [
                   "PROFILE_2",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_User2_inline",
                   "Second saved settings of DDE, ACE, SSO, brightness and contrast.",
            ],
            [
                   "Second saved settings of DDE, ACE, SSO, brightness and contrast.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_User2_inline",
                   "",
            ],
            [
                   "PROFILE_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_User3_inline",
                   "Third saved settings of DDE, ACE, SSO, brightness and contrast.",
            ],
            [
                   "Third saved settings of DDE, ACE, SSO, brightness and contrast.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_User3_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_Unknown_inline",
                   "The Scene type is unknown.",
            ],
            [
                   "The Scene type is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalScene_Unknown_inline",
                   "",
            ],
            [
                   "PERCENTAGE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalIsothermUnit_Percentage_inline",
                   "The unit type is percentage. The allowed range is [0, 100].",
            ],
            [
                   "The unit type is percentage. The allowed range is [0, 100].",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalIsothermUnit_Percentage_inline",
                   "",
            ],
            [
                   "CELSIUS",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalIsothermUnit_Celsius_inline",
                   "The unit type is degrees Celsius. The allowed range is [-40, 1000].",
            ],
            [
                   "The unit type is degrees Celsius. The allowed range is [-40, 1000].",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalIsothermUnit_Celsius_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalIsothermUnit_Unknown_inline",
                   "The unit type is unknown.",
            ],
            [
                   "The unit type is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalIsothermUnit_Unknown_inline",
                   "",
            ],
            [
                   "AUTO",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalGainMode_Auto_inline",
                   "The camera will automatically select the optimal gain mode according to the temperature range of the image.",
            ],
            [
                   "The camera will automatically select the optimal gain mode according to the temperature range of the image.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalGainMode_Auto_inline",
                   "",
            ],
            [
                   "LOW",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalGainMode_Low_inline",
                   "The camera covers a wider temperature range but is less sensitive to temperature differences.",
            ],
            [
                   "The camera covers a wider temperature range but is less sensitive to temperature differences.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalGainMode_Low_inline",
                   "",
            ],
            [
                   "HIGH",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalGainMode_High_inline",
                   "The camera covers a smaller temperature range but is more sensitive to temperature differences.",
            ],
            [
                   "The camera covers a smaller temperature range but is more sensitive to temperature differences.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalGainMode_High_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalGainMode_Unknown_inline",
                   "The gain mode is unknown.",
            ],
            [
                   "The gain mode is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalGainMode_Unknown_inline",
                   "",
            ],
            [
                   "RESOLUTION_336x256",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalResolution_336x256_inline",
                   "The thermal imaging camera resolution is 336x256.",
            ],
            [
                   "The thermal imaging camera resolution is 336x256.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalResolution_336x256_inline",
                   "",
            ],
            [
                   "RESOLUTION_640x512",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalResolution_640x512_inline",
                   "The thermal imaging camera resolution is 640x512.",
            ],
            [
                   "The thermal imaging camera resolution is 640x512.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalResolution_640x512_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalResolution_Unknown_inline",
                   "The thermal imaging camera resolution is unknown.",
            ],
            [
                   "The thermal imaging camera resolution is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalResolution_Unknown_inline",
                   "",
            ],
            [
                   "UPPER_BOUND_8_DOT_3_HZ",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalFrameRateUpperBound_8p3Hz_inline",
                   "The thermal imaging camera frame rate upper bound is 8.3Hz.",
            ],
            [
                   "The thermal imaging camera frame rate upper bound is 8.3Hz.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalFrameRateUpperBound_8p3Hz_inline",
                   "",
            ],
            [
                   "UPPER_BOUND_30_HZ",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalFrameRateUpperBound_30Hz_inline",
                   "The thermal imaging camera frame rate upper bound is 30Hz.",
            ],
            [
                   "The thermal imaging camera frame rate upper bound is 30Hz.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalFrameRateUpperBound_30Hz_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalFrameRateUpperBound_Unknown_inline",
                   "The thermal imaging camera frame rate upper bound is unknown.",
            ],
            [
                   "The thermal imaging camera frame rate upper bound is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalFrameRateUpperBound_Unknown_inline",
                   "",
            ],
            [
                   "LENGTH_6_DOT_8_MM",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalLensModel_6p8mm_inline",
                   "The thermal imaging camera's lens focal length is 6.8 mm.",
            ],
            [
                   "The thermal imaging camera's lens focal length is 6.8 mm.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalLensModel_6p8mm_inline",
                   "",
            ],
            [
                   "LENGTH_7_DOT_5_MM",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalLensModel_7p5mm_inline",
                   "The thermal imaging camera lens focal length is 7.5mm.",
            ],
            [
                   "The thermal imaging camera lens focal length is 7.5mm.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalLensModel_7p5mm_inline",
                   "",
            ],
            [
                   "LENGTH_9_MM",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalLensModel_9mm_inline",
                   "The thermal imaging camera's lens focal length is 9 mm.",
            ],
            [
                   "The thermal imaging camera's lens focal length is 9 mm.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalLensModel_9mm_inline",
                   "",
            ],
            [
                   "LENGTH_13_MM",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalLensModel_13mm_inline",
                   "The thermal imaging camera's lens focal length is 13 mm.",
            ],
            [
                   "The thermal imaging camera's lens focal length is 13 mm.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalLensModel_13mm_inline",
                   "",
            ],
            [
                   "LENGTH_19_MM",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalLensModel_19mm_inline",
                   "The thermal imaging camera's lens focal length is 19 mm.",
            ],
            [
                   "The thermal imaging camera's lens focal length is 19 mm.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalLensModel_19mm_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalLensModel_Unknown_inline",
                   "The thermal imaging camera's lens focal length is unknown.",
            ],
            [
                   "The thermal imaging camera's lens focal length is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalLensModel_Unknown_inline",
                   "",
            ],
            [
                   "XT_STANDARD",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalVersion_XTStandard_inline",
                   "The thermal camera is Zenmuse XT Standard version.",
            ],
            [
                   "The thermal camera is Zenmuse XT Standard version.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalVersion_XTStandard_inline",
                   "",
            ],
            [
                   "XT_ADVANCED_RADIOMETRY_ENABLED",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalVersion_XTAdvancedRadiometry_inline",
                   "The thermal camera is Zenmuse XT Advanced Radiometry version.",
            ],
            [
                   "The thermal camera is Zenmuse XT Advanced Radiometry version.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalVersion_XTAdvancedRadiometry_inline",
                   "",
            ],
            [
                   "PROFILE_1",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalCustomExternalSceneSettings_Profile1_inline",
                   "Custom thermal external scene settings for user 1.",
            ],
            [
                   "Custom thermal external scene settings for user 1.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalCustomExternalSceneSettings_Profile1_inline",
                   "",
            ],
            [
                   "PROFILE_2",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalCustomExternalSceneSettings_Profile2_inline",
                   "Custom thermal external scene settings for user 2.",
            ],
            [
                   "Custom thermal external scene settings for user 2.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalCustomExternalSceneSettings_Profile2_inline",
                   "",
            ],
            [
                   "PROFILE_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalCustomExternalSceneSettings_Profile3_inline",
                   "Custom thermal external scene settings for user 3.",
            ],
            [
                   "Custom thermal external scene settings for user 3.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalCustomExternalSceneSettings_Profile3_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalCustomExternalSceneSettings_ProfileUnknown_inline",
                   "The user is unknown.",
            ],
            [
                   "The user is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalCustomExternalSceneSettings_ProfileUnknown_inline",
                   "",
            ],
            [
                   "AUTO",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalFFCMode_Auto_inline",
                   "Automatic flat-field correction mode.",
            ],
            [
                   "Automatic flat-field correction mode.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalFFCMode_Auto_inline",
                   "",
            ],
            [
                   "MANUAL",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalFFCMode_Manual_inline",
                   "Manual flat-field correction mode.",
            ],
            [
                   "Manual flat-field correction mode.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalFFCMode_Manual_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalFFCMode_Unknown_inline",
                   "Unknown flat-field correction mode.",
            ],
            [
                   "Unknown flat-field correction mode.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalFFCMode_Unknown_inline",
                   "",
            ],
            [
                   "getResolution",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalProfile.html",
                   "#DJICamera_DJICameraThermalProfile_resolution_inline",
                   "Get the supported resolution of the thermal imaging camera.  @return The enum value of the `ThermalResolution`",
            ],
            [
                   "Get the supported resolution of the thermal imaging camera.  @return The enum value of the `ThermalResolution`",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalProfile.html",
                   "#DJICamera_DJICameraThermalProfile_resolution_inline",
                   "",
            ],
            [
                   "getFrameRateUpperBound",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalProfile.html",
                   "#DJICamera_DJICameraThermalProfile_frameRateUpperBound_inline",
                   "Get the supported frame rate upper bound of the thermal imaging camera.  @return The enum value of the `ThermalFrameRateUpperBound`",
            ],
            [
                   "Get the supported frame rate upper bound of the thermal imaging camera.  @return The enum value of the `ThermalFrameRateUpperBound`",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalProfile.html",
                   "#DJICamera_DJICameraThermalProfile_frameRateUpperBound_inline",
                   "",
            ],
            [
                   "getFocalLength",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalProfile.html",
                   "#DJICamera_DJICameraThermalProfile_getFocalLength_inline",
                   "The lens model of the thermal imaging camera.  @return The enum value of the `ThermalLensFocalLength`",
            ],
            [
                   "The lens model of the thermal imaging camera.  @return The enum value of the `ThermalLensFocalLength`",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalProfile.html",
                   "#DJICamera_DJICameraThermalProfile_getFocalLength_inline",
                   "",
            ],
            [
                   "getVersion",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalProfile.html",
                   "#DJICamera_DJICameraThermalProfile_version_inline",
                   "Get the version of the thermal imaging camera.  @return The enum value of the `ThermalVersion`",
            ],
            [
                   "Get the version of the thermal imaging camera.  @return The enum value of the `ThermalVersion`",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalProfile.html",
                   "#DJICamera_DJICameraThermalProfile_version_inline",
                   "",
            ],
            [
                   "X_1",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalDigitalZoomScale_x1_inline",
                   "Digital zoom factor x1.",
            ],
            [
                   "Digital zoom factor x1.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalDigitalZoomScale_x1_inline",
                   "",
            ],
            [
                   "X_2",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalDigitalZoomScale_x2_inline",
                   "Digital Zoom factor is x2.",
            ],
            [
                   "Digital Zoom factor is x2.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalDigitalZoomScale_x2_inline",
                   "",
            ],
            [
                   "X_4",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalDigitalZoomScale_x4_inline",
                   "Digital Zoom factor is x4.",
            ],
            [
                   "Digital Zoom factor is x4.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalDigitalZoomScale_x4_inline",
                   "",
            ],
            [
                   "X_8",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalDigitalZoomScale_x8_inline",
                   "Digital Zoom factor is x8.",
            ],
            [
                   "Digital Zoom factor is x8.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalDigitalZoomScale_x8_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalDigitalZoomScale_Unknown_inline",
                   "Digital Zoom factor is unknown.",
            ],
            [
                   "Digital Zoom factor is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalDigitalZoomScale_Unknown_inline",
                   "",
            ],
            [
                   "DISABLED",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalMeasurementMode_Disabled_inline",
                   "Disable temperature measuring.",
            ],
            [
                   "Disable temperature measuring.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalMeasurementMode_Disabled_inline",
                   "",
            ],
            [
                   "SPOT_METERING",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalMeasurementMode_SpotMetering_inline",
                   "Enable temperature measurement and set mode to spot metering. Use `onUpdate` to receive the  updated temperature data. In this mode, the advanced radiometry version XT camera can change the metering point  using `setThermalSpotMeteringTargetPoint`.",
            ],
            [
                   "Enable temperature measurement and set mode to spot metering. Use `onUpdate` to receive the  updated temperature data. In this mode, the advanced radiometry version XT camera can change the metering point  using `setThermalSpotMeteringTargetPoint`.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalMeasurementMode_SpotMetering_inline",
                   "",
            ],
            [
                   "AREA_METERING",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalMeasurementMode_AreaMetering_inline",
                   "Enable temperature measurement and set mode to area metering. Use `onUpdate` to receive the updated temperature data. Only supported by the advanced radiometry version XT camera.",
            ],
            [
                   "Enable temperature measurement and set mode to area metering. Use `onUpdate` to receive the updated temperature data. Only supported by the advanced radiometry version XT camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalMeasurementMode_AreaMetering_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalMeasurementMode_Unknown_inline",
                   "Thermal camera's temperature measurement mode is unknown.",
            ],
            [
                   "Thermal camera's temperature measurement mode is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraThermalMeasurementMode_Unknown_inline",
                   "",
            ],
            [
                   "getAverageAreaTemperature",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalAreaTemperatureAggregations.html",
                   "#DJICamera_DJICameraThermalAreaTemperatureAggregations_averageAreaTemperature_inline",
                   "Get the average temperature of the selected metering area.  @return A float value.",
            ],
            [
                   "Get the average temperature of the selected metering area.  @return A float value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalAreaTemperatureAggregations.html",
                   "#DJICamera_DJICameraThermalAreaTemperatureAggregations_averageAreaTemperature_inline",
                   "",
            ],
            [
                   "getMinAreaTemperature",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalAreaTemperatureAggregations.html",
                   "#DJICamera_DJICameraThermalAreaTemperatureAggregations_minAreaTemperature_inline",
                   "Get the minimum temperature of the selected metering area.  @return A float value for the minimal temperature of the metering area.",
            ],
            [
                   "Get the minimum temperature of the selected metering area.  @return A float value for the minimal temperature of the metering area.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalAreaTemperatureAggregations.html",
                   "#DJICamera_DJICameraThermalAreaTemperatureAggregations_minAreaTemperature_inline",
                   "",
            ],
            [
                   "getMinTemperaturePoint",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalAreaTemperatureAggregations.html",
                   "#DJICamera_DJICameraThermalAreaTemperatureAggregations_minTemperaturePoint_inline",
                   "The minimum temperature coordinate of the selected metering area.  @return Minimum temperature position.",
            ],
            [
                   "The minimum temperature coordinate of the selected metering area.  @return Minimum temperature position.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalAreaTemperatureAggregations.html",
                   "#DJICamera_DJICameraThermalAreaTemperatureAggregations_minTemperaturePoint_inline",
                   "",
            ],
            [
                   "getMaxAreaTemperature",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalAreaTemperatureAggregations.html",
                   "#DJICamera_DJICameraThermalAreaTemperatureAggregations_maxAreaTemperature_inline",
                   "Get the maximum temperature of the selected metering area.  @return A float value for the maximal temperature of the metering area.",
            ],
            [
                   "Get the maximum temperature of the selected metering area.  @return A float value for the maximal temperature of the metering area.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalAreaTemperatureAggregations.html",
                   "#DJICamera_DJICameraThermalAreaTemperatureAggregations_maxAreaTemperature_inline",
                   "",
            ],
            [
                   "getMaxTemperaturePoint",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalAreaTemperatureAggregations.html",
                   "#DJICamera_DJICameraThermalAreaTemperatureAggregations_maxTemperaturePoint_inline",
                   "The maximum temperature coordinate of the selected metering area.  @return Maximum temperature position.",
            ],
            [
                   "The maximum temperature coordinate of the selected metering area.  @return Maximum temperature position.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalAreaTemperatureAggregations.html",
                   "#DJICamera_DJICameraThermalAreaTemperatureAggregations_maxTemperaturePoint_inline",
                   "",
            ],
            [
                   "getAtmosphericTemperature",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_DJICameraThermalExternalSceneSettings_atmosphericTemperature_inline",
                   "Atmospheric temperature, can be between -50 and 327.67 degrees Celsius.  @return Atmospheric temperature",
            ],
            [
                   "Atmospheric temperature, can be between -50 and 327.67 degrees Celsius.  @return Atmospheric temperature",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_DJICameraThermalExternalSceneSettings_atmosphericTemperature_inline",
                   "",
            ],
            [
                   "getAtmosphericTransmissionCoefficient",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_DJICameraThermalExternalSceneSettings_atmosphericTransmissionCoefficient_inline",
                   "Transmission coefficient of the atmosphere between the scene and the camera, can be between 50 and 100.  @return Transmission coefficient",
            ],
            [
                   "Transmission coefficient of the atmosphere between the scene and the camera, can be between 50 and 100.  @return Transmission coefficient",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_DJICameraThermalExternalSceneSettings_atmosphericTransmissionCoefficient_inline",
                   "",
            ],
            [
                   "getBackgroundTemperature",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_DJICameraThermalExternalSceneSettings_backgroundTemperature_inline",
                   "Background temperature (reflected by the scene), can be between -50 and 327.67 degrees Celsius.  @return Background temperature",
            ],
            [
                   "Background temperature (reflected by the scene), can be between -50 and 327.67 degrees Celsius.  @return Background temperature",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_DJICameraThermalExternalSceneSettings_backgroundTemperature_inline",
                   "",
            ],
            [
                   "getSceneEmissivity",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_DJICameraThermalExternalSceneSettings_sceneEmissivity_inline",
                   "Emissivity of the scene, can be between 50 and 100.  @return Emissivity of the scene",
            ],
            [
                   "Emissivity of the scene, can be between 50 and 100.  @return Emissivity of the scene",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_DJICameraThermalExternalSceneSettings_sceneEmissivity_inline",
                   "",
            ],
            [
                   "getWindowReflection",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_DJICameraThermalExternalSceneSettings_windowReflection_inline",
                   "Window reflection, can be between 50 and 100-X where X is the window transmission coefficient parameter.  @return Window reflection value.",
            ],
            [
                   "Window reflection, can be between 50 and 100-X where X is the window transmission coefficient parameter.  @return Window reflection value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_DJICameraThermalExternalSceneSettings_windowReflection_inline",
                   "",
            ],
            [
                   "getWindowReflectedTemperature",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_DJICameraThermalExternalSceneSettings_windowReflectedTemperature_inline",
                   "Temperature reflected in the window, can be between -50 and 327.67 degrees Celsius.  @return Temperature reflected in window.",
            ],
            [
                   "Temperature reflected in the window, can be between -50 and 327.67 degrees Celsius.  @return Temperature reflected in window.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_DJICameraThermalExternalSceneSettings_windowReflectedTemperature_inline",
                   "",
            ],
            [
                   "getWindowTemperature",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_DJICameraThermalExternalSceneSettings_windowTemperature_inline",
                   "Window temperature, can be between -50 and 327.67 degrees Celsius.  @return Window temperature.",
            ],
            [
                   "Window temperature, can be between -50 and 327.67 degrees Celsius.  @return Window temperature.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_DJICameraThermalExternalSceneSettings_windowTemperature_inline",
                   "",
            ],
            [
                   "getWindowTransmissionCoefficient",
                   2,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_DJICameraThermalExternalSceneSettings_windowTransmissionCoefficient_inline",
                   "Transmission coefficient of the window, can be between 50 and 100-X where X is the window reflection.  @return Window transmission coefficient.",
            ],
            [
                   "Transmission coefficient of the window, can be between 50 and 100-X where X is the window reflection.  @return Window transmission coefficient.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraThermalExternalSceneSettings.html",
                   "#DJICamera_DJICameraThermalExternalSceneSettings_windowTransmissionCoefficient_inline",
                   "",
            ],
            [
                   "getMaxFocalLength",
                   2,
                   "/Components/Camera/DJICamera_DJICameraOpticalZoomSpec.html",
                   "#DJICamera_DJICameraOpticalZoomSpec_maxFocalLength_inline",
                   "The maximum focal length of the lens in units of 0.1mm.  @return Maximum focal length of lens.",
            ],
            [
                   "The maximum focal length of the lens in units of 0.1mm.  @return Maximum focal length of lens.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraOpticalZoomSpec.html",
                   "#DJICamera_DJICameraOpticalZoomSpec_maxFocalLength_inline",
                   "",
            ],
            [
                   "getMinFocalLength",
                   2,
                   "/Components/Camera/DJICamera_DJICameraOpticalZoomSpec.html",
                   "#DJICamera_DJICameraOpticalZoomSpec_minFocalLength_inline",
                   "The minimum focal length of the lens in units of 0.1mm.  @return Minimum focal length of lens.",
            ],
            [
                   "The minimum focal length of the lens in units of 0.1mm.  @return Minimum focal length of lens.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraOpticalZoomSpec.html",
                   "#DJICamera_DJICameraOpticalZoomSpec_minFocalLength_inline",
                   "",
            ],
            [
                   "getFocalLengthStep",
                   2,
                   "/Components/Camera/DJICamera_DJICameraOpticalZoomSpec.html",
                   "#DJICamera_DJICameraOpticalZoomSpec_focalLengthStep_inline",
                   "The minimum interval of focal length change in units of 0.1mm.  @return Focal length step.",
            ],
            [
                   "The minimum interval of focal length change in units of 0.1mm.  @return Focal length step.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraOpticalZoomSpec.html",
                   "#DJICamera_DJICameraOpticalZoomSpec_focalLengthStep_inline",
                   "",
            ],
            [
                   "ZOOM_IN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomDirection_ZoomIn_inline",
                   "Lens will zoom in. The focal length increases, field of view becomes narrower and magnification is higher.",
            ],
            [
                   "Lens will zoom in. The focal length increases, field of view becomes narrower and magnification is higher.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomDirection_ZoomIn_inline",
                   "",
            ],
            [
                   "ZOOM_OUT",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomDirection_ZoomOut_inline",
                   "Lens will zoom out. The focal length decreases, field of view becomes wider and magnification is lower.",
            ],
            [
                   "Lens will zoom out. The focal length decreases, field of view becomes wider and magnification is lower.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomDirection_ZoomOut_inline",
                   "",
            ],
            [
                   "SLOWEST",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomSpeed_Slowest_inline",
                   "Lens zooms very in slowest speed.",
            ],
            [
                   "Lens zooms very in slowest speed.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomSpeed_Slowest_inline",
                   "",
            ],
            [
                   "SLOW",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomSpeed_Slow_inline",
                   "Lens zooms in slow speed.",
            ],
            [
                   "Lens zooms in slow speed.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomSpeed_Slow_inline",
                   "",
            ],
            [
                   "MODERATELY_SLOW",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomSpeed_ModeratelySlow_inline",
                   "Lens zooms in speed slightly slower than normal speed.",
            ],
            [
                   "Lens zooms in speed slightly slower than normal speed.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomSpeed_ModeratelySlow_inline",
                   "",
            ],
            [
                   "NORMAL",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomSpeed_Normal_inline",
                   "Lens zooms in normal speed.",
            ],
            [
                   "Lens zooms in normal speed.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomSpeed_Normal_inline",
                   "",
            ],
            [
                   "MODERATELY_FAST",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomSpeed_ModeratelyFast_inline",
                   "Lens zooms very in speed slightly faster than normal speed.",
            ],
            [
                   "Lens zooms very in speed slightly faster than normal speed.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomSpeed_ModeratelyFast_inline",
                   "",
            ],
            [
                   "FAST",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomSpeed_Fast_inline",
                   "Lens zooms very in fast speed.",
            ],
            [
                   "Lens zooms very in fast speed.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomSpeed_Fast_inline",
                   "",
            ],
            [
                   "FASTEST",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomSpeed_Fastest_inline",
                   "Lens zooms very in fastest speed.",
            ],
            [
                   "Lens zooms very in fastest speed.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOpticalZoomSpeed_Fastest_inline",
                   "",
            ],
            [
                   "RESET",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraFileIndexMode_Reset_inline",
                   "Camera will reset the newest file's index to be one larger than the largest number of photos taken on the SD card.",
            ],
            [
                   "Camera will reset the newest file's index to be one larger than the largest number of photos taken on the SD card.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraFileIndexMode_Reset_inline",
                   "",
            ],
            [
                   "SEQUENCE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraFileIndexMode_Sequence_inline",
                   "Camera will set the newest file's index to the larger of either the maximum number of photos taken on the SD card  or the camera.",
            ],
            [
                   "Camera will set the newest file's index to the larger of either the maximum number of photos taken on the SD card  or the camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraFileIndexMode_Sequence_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraFileIndexMode_Unknown_inline",
                   "The mode is unknown.",
            ],
            [
                   "The mode is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraFileIndexMode_Unknown_inline",
                   "",
            ],
            [
                   "DEFAULT",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraCustomSettings_Default_inline",
                   "Default user.",
            ],
            [
                   "Default user.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraCustomSettings_Default_inline",
                   "",
            ],
            [
                   "PROFILE_1",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraCustomSettings_Profile1_inline",
                   "Settings for user 1.",
            ],
            [
                   "Settings for user 1.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraCustomSettings_Profile1_inline",
                   "",
            ],
            [
                   "PROFILE_2",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraCustomSettings_Profile2_inline",
                   "Settings for user 2.",
            ],
            [
                   "Settings for user 2.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraCustomSettings_Profile2_inline",
                   "",
            ],
            [
                   "PROFILE_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraCustomSettings_Profile3_inline",
                   "Settings for user 3.",
            ],
            [
                   "Settings for user 3.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraCustomSettings_Profile3_inline",
                   "",
            ],
            [
                   "PROFILE_4",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraCustomSettings_Profile4_inline",
                   "Settings for user 4.",
            ],
            [
                   "Settings for user 4.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraCustomSettings_Profile4_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraCustomSettings_Unknown_inline",
                   "The user is unknown.",
            ],
            [
                   "The user is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraCustomSettings_Unknown_inline",
                   "",
            ],
            [
                   "NONE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_None_inline",
                   "The digital filter is set to none or no filter.",
            ],
            [
                   "The digital filter is set to none or no filter.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_None_inline",
                   "",
            ],
            [
                   "ART",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Art_inline",
                   "The digital filter is set to art.",
            ],
            [
                   "The digital filter is set to art.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Art_inline",
                   "",
            ],
            [
                   "BLACK_AND_WHITE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_BlackAndWhite_inline",
                   "The digital filter is set to black and white.",
            ],
            [
                   "The digital filter is set to black and white.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_BlackAndWhite_inline",
                   "",
            ],
            [
                   "BRIGHT",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Bright_inline",
                   "The digital filter is set to bright.",
            ],
            [
                   "The digital filter is set to bright.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Bright_inline",
                   "",
            ],
            [
                   "D_CINELIKE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Dcinelike_inline",
                   "The digital filter is set to D-Cinelike (called movie before).",
            ],
            [
                   "The digital filter is set to D-Cinelike (called movie before).",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Dcinelike_inline",
                   "",
            ],
            [
                   "PORTRAIT",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Portrait_inline",
                   "The digital filter is set to portrait. Only supported by Osmo with X3 camera.",
            ],
            [
                   "The digital filter is set to portrait. Only supported by Osmo with X3 camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Portrait_inline",
                   "",
            ],
            [
                   "M_31",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_M31_inline",
                   "The digital filter is set to M31.",
            ],
            [
                   "The digital filter is set to M31.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_M31_inline",
                   "",
            ],
            [
                   "K_DX",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_kDX_inline",
                   "The digital filter is set to kDX.",
            ],
            [
                   "The digital filter is set to kDX.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_kDX_inline",
                   "",
            ],
            [
                   "PRISMO",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Prismo_inline",
                   "The digital filter is set to prismo.",
            ],
            [
                   "The digital filter is set to prismo.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Prismo_inline",
                   "",
            ],
            [
                   "JUGO",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Jugo_inline",
                   "The digital filter is set to jugo.",
            ],
            [
                   "The digital filter is set to jugo.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Jugo_inline",
                   "",
            ],
            [
                   "D_LOG",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Dlog_inline",
                   "The digital filter is set to D-Log (called neutral before).",
            ],
            [
                   "The digital filter is set to D-Log (called neutral before).",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Dlog_inline",
                   "",
            ],
            [
                   "TRUE_COLOR",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_TrueColor_inline",
                   "The digital filter is set to true color. It is only supported by Phantom 4 with firmware v1.2.503 or above.",
            ],
            [
                   "The digital filter is set to true color. It is only supported by Phantom 4 with firmware v1.2.503 or above.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_TrueColor_inline",
                   "",
            ],
            [
                   "INVERSE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Inverse_inline",
                   "The digital filter is set to inverse.",
            ],
            [
                   "The digital filter is set to inverse.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Inverse_inline",
                   "",
            ],
            [
                   "REMINISCENCE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Reminiscence_inline",
                   "The digital filter is set to reminiscence.",
            ],
            [
                   "The digital filter is set to reminiscence.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Reminiscence_inline",
                   "",
            ],
            [
                   "SOLARIZE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Solarize_inline",
                   "The digital filter is set to solarize.",
            ],
            [
                   "The digital filter is set to solarize.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Solarize_inline",
                   "",
            ],
            [
                   "POSTERIZE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Posterize_inline",
                   "The digital filter is set to posterize.",
            ],
            [
                   "The digital filter is set to posterize.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Posterize_inline",
                   "",
            ],
            [
                   "WHITEBOARD",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Whiteboard_inline",
                   "The digital filter is set to whiteboard.",
            ],
            [
                   "The digital filter is set to whiteboard.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Whiteboard_inline",
                   "",
            ],
            [
                   "BLACKBOARD",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Blackboard_inline",
                   "The digital filter is set to blackboard.",
            ],
            [
                   "The digital filter is set to blackboard.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Blackboard_inline",
                   "",
            ],
            [
                   "AQUA",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Aqua_inline",
                   "The digital filter is set to aqua.",
            ],
            [
                   "The digital filter is set to aqua.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Aqua_inline",
                   "",
            ],
            [
                   "DELTA",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Delta_inline",
                   "The digital filter is set to delta.",
            ],
            [
                   "The digital filter is set to delta.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Delta_inline",
                   "",
            ],
            [
                   "DK79",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_DK79_inline",
                   "The digital filter is set to dk79.",
            ],
            [
                   "The digital filter is set to dk79.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_DK79_inline",
                   "",
            ],
            [
                   "VISION_4",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Vision4_inline",
                   "The digital filter is set to vision4.",
            ],
            [
                   "The digital filter is set to vision4.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Vision4_inline",
                   "",
            ],
            [
                   "VISION_6",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Vision6_inline",
                   "The digital filter is set to vision6.",
            ],
            [
                   "The digital filter is set to vision6.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Vision6_inline",
                   "",
            ],
            [
                   "TRUE_COLOR_EXT",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_TrueColorExt_inline",
                   "The digital filter is set to true color extend.",
            ],
            [
                   "The digital filter is set to true color extend.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_TrueColorExt_inline",
                   "",
            ],
            [
                   "FILM_A",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_FilmA_inline",
                   "The digital filter is set to Film A.",
            ],
            [
                   "The digital filter is set to Film A.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_FilmA_inline",
                   "",
            ],
            [
                   "FILM_B",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_FilmB_inline",
                   "The digital filter is set to Film B.",
            ],
            [
                   "The digital filter is set to Film B.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_FilmB_inline",
                   "",
            ],
            [
                   "FILM_C",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_FilmC_inline",
                   "The digital filter is set to Film C.",
            ],
            [
                   "The digital filter is set to Film C.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_FilmC_inline",
                   "",
            ],
            [
                   "FILM_D",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_FilmD_inline",
                   "The digital filter is set to Film D.",
            ],
            [
                   "The digital filter is set to Film D.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_FilmD_inline",
                   "",
            ],
            [
                   "FILM_E",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_FilmE_inline",
                   "The digital filter is set to Film E.",
            ],
            [
                   "The digital filter is set to Film E.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_FilmE_inline",
                   "",
            ],
            [
                   "FILM_F",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_FilmF_inline",
                   "The digital filter is set to Film F.",
            ],
            [
                   "The digital filter is set to Film F.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_FilmF_inline",
                   "",
            ],
            [
                   "FILM_G",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_FilmG_inline",
                   "The digital filter is set to Film G.",
            ],
            [
                   "The digital filter is set to Film G.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_FilmG_inline",
                   "",
            ],
            [
                   "FILM_H",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_FilmH_inline",
                   "The digital filter is set to Film H.",
            ],
            [
                   "The digital filter is set to Film H.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_FilmH_inline",
                   "",
            ],
            [
                   "FILM_I",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_FilmI_inline",
                   "The digital filter is set to Film I.",
            ],
            [
                   "The digital filter is set to Film I.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_FilmI_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Unknown_inline",
                   "The digital filter is unknown.",
            ],
            [
                   "The digital filter is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraDigitalFilter_Unknown_inline",
                   "",
            ],
            [
                   "NONE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoDigitalFilterNone_inline",
                   "The digital filter is set to none. It is only supported by X5S and X4S on Inspire 2.",
            ],
            [
                   "The digital filter is set to none. It is only supported by X5S and X4S on Inspire 2.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoDigitalFilterNone_inline",
                   "",
            ],
            [
                   "D_CINELIKE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoDigitalFilterDCinelike_inline",
                   "The digital filter is set to DCinelike. It is only supported by X5S and X4S on Inspire 2.",
            ],
            [
                   "The digital filter is set to DCinelike. It is only supported by X5S and X4S on Inspire 2.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoDigitalFilterDCinelike_inline",
                   "",
            ],
            [
                   "D_LOG",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoDigitalFilterDLog_inline",
                   "The digital filter is set to DLog. It is only supported by X5S and X4S on Inspire 2.",
            ],
            [
                   "The digital filter is set to DLog. It is only supported by X5S and X4S on Inspire 2.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoDigitalFilterDLog_inline",
                   "",
            ],
            [
                   "D_COLOR_1",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoDigitalFilterDColor1_inline",
                   "The digital filter is set to DColor1. It is only supported by X5S and X4S on Inspire 2.",
            ],
            [
                   "The digital filter is set to DColor1. It is only supported by X5S and X4S on Inspire 2.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoDigitalFilterDColor1_inline",
                   "",
            ],
            [
                   "D_Color_2",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoDigitalFilterDColor2_inline",
                   "The digital filter is set to DColor2. It is only supported by X5S and X4S on Inspire 2.",
            ],
            [
                   "The digital filter is set to DColor2. It is only supported by X5S and X4S on Inspire 2.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoDigitalFilterDColor2_inline",
                   "",
            ],
            [
                   "D_COLOR_3",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoDigitalFilterDColor3_inline",
                   "The digital filter is set to DColor3. It is only supported by Inspire 2 SSD camera.",
            ],
            [
                   "The digital filter is set to DColor3. It is only supported by Inspire 2 SSD camera.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoDigitalFilterDColor3_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoDigitalFilterUnknown_inline",
                   "The digital filter is unknown.",
            ],
            [
                   "The digital filter is unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraSSDVideoDigitalFilterUnknown_inline",
                   "",
            ],
            [
                   "LANDSCAPE",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOrientation_Landscape_inline",
                   "By default, the camera is in landscape orientation.",
            ],
            [
                   "By default, the camera is in landscape orientation.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOrientation_Landscape_inline",
                   "",
            ],
            [
                   "PORTRAIT",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOrientation_Portrait_inline",
                   "The camera is in the portrait orientation, which is rotated 90 degrees in the clockwise direction from the default  landscape orientation.",
            ],
            [
                   "The camera is in the portrait orientation, which is rotated 90 degrees in the clockwise direction from the default  landscape orientation.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOrientation_Portrait_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOrientation_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJICameraOrientation_Unknown_inline",
                   "",
            ],
            [
                   "H264",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJIVideoFileCompressionStandard_H264_inline",
                   "H.264 compression standard.",
            ],
            [
                   "H.264 compression standard.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJIVideoFileCompressionStandard_H264_inline",
                   "",
            ],
            [
                   "H265",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJIVideoFileCompressionStandard_H265_inline",
                   "H.265 compression standard.",
            ],
            [
                   "H.265 compression standard.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJIVideoFileCompressionStandard_H265_inline",
                   "",
            ],
            [
                   "Unknown",
                   2,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJIVideoFileCompressionStandard_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraSettingsDef.html",
                   "#DJICamera_DJIVideoFileCompressionStandard_Unknown_inline",
                   "",
            ],
            [
                   "STANDARD",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPictureStylePresetType_Standard_inline",
                   "Saturation 0, Contrast 0, Sharpness 0.",
            ],
            [
                   "Saturation 0, Contrast 0, Sharpness 0.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPictureStylePresetType_Standard_inline",
                   "",
            ],
            [
                   "LANDSCAPE",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPictureStylePresetType_Landscape_inline",
                   "Saturation 0, Contrast 1, Sharpness 1.",
            ],
            [
                   "Saturation 0, Contrast 1, Sharpness 1.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPictureStylePresetType_Landscape_inline",
                   "",
            ],
            [
                   "SOFT",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPictureStylePresetType_Soft_inline",
                   "Saturation 0, Contrast 0, Sharpness -1.",
            ],
            [
                   "Saturation 0, Contrast 0, Sharpness -1.",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPictureStylePresetType_Soft_inline",
                   "",
            ],
            [
                   "CUSTOM",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPictureStylePresetType_Custom_inline",
                   "Custom preset type",
            ],
            [
                   "Custom preset type",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPictureStylePresetType_Custom_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPictureStylePresetType_Unknown_inline",
                   "Unknown preset type",
            ],
            [
                   "Unknown preset type",
                   1,
                   "/Components/Camera/DJICamera.html",
                   "#DJICamera_DJICameraPictureStylePresetType_Unknown_inline",
                   "",
            ],
            [
                   "getSaturation",
                   2,
                   "/Components/Camera/DJICamera_DJICameraPictureStylePreset.html",
                   "#DJICamera_DJICameraPictureStylePreset_saturation_inline",
                   "An NSInteger value of saturation.  @return Saturation value of preset",
            ],
            [
                   "An NSInteger value of saturation.  @return Saturation value of preset",
                   1,
                   "/Components/Camera/DJICamera_DJICameraPictureStylePreset.html",
                   "#DJICamera_DJICameraPictureStylePreset_saturation_inline",
                   "",
            ],
            [
                   "getContrast",
                   2,
                   "/Components/Camera/DJICamera_DJICameraPictureStylePreset.html",
                   "#DJICamera_DJICameraPictureStylePreset_contrast_inline",
                   "An NSInteger value of contrast.  @return Contrast value of preset",
            ],
            [
                   "An NSInteger value of contrast.  @return Contrast value of preset",
                   1,
                   "/Components/Camera/DJICamera_DJICameraPictureStylePreset.html",
                   "#DJICamera_DJICameraPictureStylePreset_contrast_inline",
                   "",
            ],
            [
                   "getSharpness",
                   2,
                   "/Components/Camera/DJICamera_DJICameraPictureStylePreset.html",
                   "#DJICamera_DJICameraPictureStylePreset_sharpness_inline",
                   "An NSInteger value of sharpness.  @return Sharpness value of preset",
            ],
            [
                   "An NSInteger value of sharpness.  @return Sharpness value of preset",
                   1,
                   "/Components/Camera/DJICamera_DJICameraPictureStylePreset.html",
                   "#DJICamera_DJICameraPictureStylePreset_sharpness_inline",
                   "",
            ],
            [
                   "presetType",
                   2,
                   "/Components/Camera/DJICamera_DJICameraPictureStylePreset.html",
                   "#DJICamera_DJICameraPictureStylePreset_presetType_inline",
                   "An enum value of `PictureStylePresetType`.  @return Preset type",
            ],
            [
                   "An enum value of `PictureStylePresetType`.  @return Preset type",
                   1,
                   "/Components/Camera/DJICamera_DJICameraPictureStylePreset.html",
                   "#DJICamera_DJICameraPictureStylePreset_presetType_inline",
                   "",
            ],
            [
                   "onRenderCreatedPrepared",
                   2,
                   "/Components/Camera/DJICamera_CameraLiveView.html",
                   "#DJICamera_CameraLiveView_onRenderCreatedPrepared_inline",
                   "Called before rendering starts",
            ],
            [
                   "Called before rendering starts",
                   1,
                   "/Components/Camera/DJICamera_CameraLiveView.html",
                   "#DJICamera_CameraLiveView_onRenderCreatedPrepared_inline",
                   "",
            ],
            [
                   "onRenderCreated",
                   2,
                   "/Components/Camera/DJICamera_CameraLiveView.html",
                   "#DJICamera_CameraLiveView_onRenderCreated_inline",
                   "Called when rendering surface is created  @param surface SurfaceInterface object.  @return An instance of DJIVideoDecoderController.",
            ],
            [
                   "Called when rendering surface is created  @param surface SurfaceInterface object.  @return An instance of DJIVideoDecoderController.",
                   1,
                   "/Components/Camera/DJICamera_CameraLiveView.html",
                   "#DJICamera_CameraLiveView_onRenderCreated_inline",
                   "",
            ],
            [
                   "onRenderDestroy",
                   2,
                   "/Components/Camera/DJICamera_CameraLiveView.html",
                   "#DJICamera_CameraLiveView_onRenderDestroy_inline",
                   "Called when rendering surface is to be destroyed",
            ],
            [
                   "Called when rendering surface is to be destroyed",
                   1,
                   "/Components/Camera/DJICamera_CameraLiveView.html",
                   "#DJICamera_CameraLiveView_onRenderDestroy_inline",
                   "",
            ],
            [
                   "resetVideoSurface",
                   2,
                   "/Components/Camera/DJICamera_CameraLiveView.html",
                   "#DJICamera_CameraLiveView_resetVideoSurface_inline",
                   "Reset the surface dimension of the video.  @param videoWidth An int value of video width. @param videoHeight An int value of video height.",
            ],
            [
                   "Reset the surface dimension of the video.  @param videoWidth An int value of video width. @param videoHeight An int value of video height.",
                   1,
                   "/Components/Camera/DJICamera_CameraLiveView.html",
                   "#DJICamera_CameraLiveView_resetVideoSurface_inline",
                   "",
            ],
            [
                   "addDJICameraParametersListener",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_addDJICameraParametersListener_inline",
                   "Adds the listener for the camera range change.  @param listener Camera range change listener.",
            ],
            [
                   "Adds the listener for the camera range change.  @param listener Camera range change listener.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_addDJICameraParametersListener_inline",
                   "",
            ],
            [
                   "removeListener",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_removeListener_inline",
                   "Remove listener which is listening to the camera range change.  @param listener An instance of DJICameraParametersListener.",
            ],
            [
                   "Remove listener which is listening to the camera range change.  @param listener An instance of DJICameraParametersListener.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_removeListener_inline",
                   "",
            ],
            [
                   "removeAllListener",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_removeAllListener_inline",
                   "Remove all listeners.",
            ],
            [
                   "Remove all listeners.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_removeAllListener_inline",
                   "",
            ],
            [
                   "modeRange",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_supportedCameraModeRange_inline",
                   "Returns the current valid range for camera mode (`CameraMode`). Returns `null` if  current camera has no supported camera mode or the camera is disconnected. @return Array of CameraMode elements. Each element  represents one current supported camera mode.  @return Array of `CameraMode` elements. Each element represents one current supported camera mode.",
            ],
            [
                   "Returns the current valid range for camera mode (`CameraMode`). Returns `null` if  current camera has no supported camera mode or the camera is disconnected. @return Array of CameraMode elements. Each element  represents one current supported camera mode.  @return Array of `CameraMode` elements. Each element represents one current supported camera mode.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_supportedCameraModeRange_inline",
                   "",
            ],
            [
                   "exposureModeRange",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_supportedCameraExposureModeRange_inline",
                   "Returns the current valid range for camera's exposure mode (`ExposureMode`). Returns  `null` if current camera does not support any exposure mode or the camera is disconnected.  @return Array of NSNumber. Each element represent one current supported exposure mode.  @return Array of `ExposureMode`. Each element represent one current supported exposure mode.",
            ],
            [
                   "Returns the current valid range for camera's exposure mode (`ExposureMode`). Returns  `null` if current camera does not support any exposure mode or the camera is disconnected.  @return Array of NSNumber. Each element represent one current supported exposure mode.  @return Array of `ExposureMode`. Each element represent one current supported exposure mode.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_supportedCameraExposureModeRange_inline",
                   "",
            ],
            [
                   "ISORange",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_supportedCameraISORange_inline",
                   "Returns the current valid range for camera's ISO (see `ISO`). Returns `null` if current camera does not support any ISO value or the camera is disconnected. @return Array  of CameraISO. Each element represent one current supported ISO value.  @return Array of `ISO`. Each element represent one current supported ISO value.",
            ],
            [
                   "Returns the current valid range for camera's ISO (see `ISO`). Returns `null` if current camera does not support any ISO value or the camera is disconnected. @return Array  of CameraISO. Each element represent one current supported ISO value.  @return Array of `ISO`. Each element represent one current supported ISO value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_supportedCameraISORange_inline",
                   "",
            ],
            [
                   "shutterSpeedRange",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_supportedCameraShutterSpeedRange_inline",
                   "Returns the current valid range for camera's shutter speed (see `ShutterSpeed`). Returns  `null` if current camera does not support any shutter speed value or the camera is  disconnected. @return Array of CameraShutterSpeed. Each element represent one current  supported shutter speed value.  @return Array of `ShutterSpeed`. Each element represent one current supported shutter speed value.",
            ],
            [
                   "Returns the current valid range for camera's shutter speed (see `ShutterSpeed`). Returns  `null` if current camera does not support any shutter speed value or the camera is  disconnected. @return Array of CameraShutterSpeed. Each element represent one current  supported shutter speed value.  @return Array of `ShutterSpeed`. Each element represent one current supported shutter speed value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_supportedCameraShutterSpeedRange_inline",
                   "",
            ],
            [
                   "apertureRange",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_supportedCameraApertureRange_inline",
                   "Returns the current valid range for camera's aperture (see `Aperture`). Returns `null` if current camera does not support any aperture value or the camera is disconnected.  @return Array of CameraAperture. Each element represent one current supported aperture  value.  @return Array of `Aperture`. Each element represent one current supported aperture value.",
            ],
            [
                   "Returns the current valid range for camera's aperture (see `Aperture`). Returns `null` if current camera does not support any aperture value or the camera is disconnected.  @return Array of CameraAperture. Each element represent one current supported aperture  value.  @return Array of `Aperture`. Each element represent one current supported aperture value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_supportedCameraApertureRange_inline",
                   "",
            ],
            [
                   "exposureCompensationRange",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_supportedCameraExposureCompensationRange_inline",
                   "Returns the current valid range for camera's exposure compensation (see `ExposureCompensation`).  Returns `null` if current camera does not support any exposure compensation value or the camera  is disconnected. @return Array of CameraExposureCompensation. Each element represent one  current supported exposure compensation value.  @return Array of `ExposureCompensation`. Each element represent one current supported exposure compensation value.",
            ],
            [
                   "Returns the current valid range for camera's exposure compensation (see `ExposureCompensation`).  Returns `null` if current camera does not support any exposure compensation value or the camera  is disconnected. @return Array of CameraExposureCompensation. Each element represent one  current supported exposure compensation value.  @return Array of `ExposureCompensation`. Each element represent one current supported exposure compensation value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_supportedCameraExposureCompensationRange_inline",
                   "",
            ],
            [
                   "videoResolutionAndFrameRateRange",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_supportedCameraVideoResolutionAndFrameRateRange_inline",
                   "Returns the current valid range for video resolution CameraVideoResolution  and frame rate `VideoFrameRate`. Returns `null` if the current camera does  not support any video resolution or frame rate setting, or if the camera is disconnected.  @return Array of pairs. Each pair represents a valid `VideoResolution` value and `VideoFrameRate` value.",
            ],
            [
                   "Returns the current valid range for video resolution CameraVideoResolution  and frame rate `VideoFrameRate`. Returns `null` if the current camera does  not support any video resolution or frame rate setting, or if the camera is disconnected.  @return Array of pairs. Each pair represents a valid `VideoResolution` value and `VideoFrameRate` value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_supportedCameraVideoResolutionAndFrameRateRange_inline",
                   "",
            ],
            [
                   "SSDVideoResolutionRange",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_supportedCameraSSDVideoResolutionRange_inline",
                   "Returns the current valid range for camera's RAW video resolution. Returns `null` if current  camera does not support any RAW video resolution or the camera is disconnected.  @return Array of `VideoResolution`. Each element represent one current supported resolution value.",
            ],
            [
                   "Returns the current valid range for camera's RAW video resolution. Returns `null` if current  camera does not support any RAW video resolution or the camera is disconnected.  @return Array of `VideoResolution`. Each element represent one current supported resolution value.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_supportedCameraSSDVideoResolutionRange_inline",
                   "",
            ],
            [
                   "DJICameraParametersListener",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_ListenerInterface_inline",
                   "Defines video resolution and frame rate as a type.",
            ],
            [
                   "Defines video resolution and frame rate as a type.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_DJICameraParameters_ListenerInterface_inline",
                   "",
            ],
            [
                   "onCameraISORangeChange",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_Listener_onCameraISORangeChange_inline",
                   "When the camera ISO range is changed, the listener will receive this callback.  @param newRange The new range.",
            ],
            [
                   "When the camera ISO range is changed, the listener will receive this callback.  @param newRange The new range.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_Listener_onCameraISORangeChange_inline",
                   "",
            ],
            [
                   "onCameraExposureCompensationRangeChange",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_Listener_onCameraExposureCompensationRangeChange_inline",
                   "When the camera exposure compensation range is changed, the listener will receive this callback.  @param newRange The new range.",
            ],
            [
                   "When the camera exposure compensation range is changed, the listener will receive this callback.  @param newRange The new range.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_Listener_onCameraExposureCompensationRangeChange_inline",
                   "",
            ],
            [
                   "onCameraExposureModeRangeChange",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_Listener_onCameraExposureModeRangeChange_inline",
                   "When the camera exposure mode range is changed, the listener will receive this callback.  @param newRange The new range.",
            ],
            [
                   "When the camera exposure mode range is changed, the listener will receive this callback.  @param newRange The new range.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_Listener_onCameraExposureModeRangeChange_inline",
                   "",
            ],
            [
                   "onCameraShutterSpeedRangeChange",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_Listener_onCameraShutterSpeedRangeChange_inline",
                   "When the camera shutter speed range is changed, the listener will receive this callback.  @param newRange The new range.",
            ],
            [
                   "When the camera shutter speed range is changed, the listener will receive this callback.  @param newRange The new range.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_Listener_onCameraShutterSpeedRangeChange_inline",
                   "",
            ],
            [
                   "onCameraModeRangeChange",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_Listener_onCameraModeRangeChange_inline",
                   "When the camera shutter speed range is changed, the listener will receive this callback.  @param newRange The new range.",
            ],
            [
                   "When the camera shutter speed range is changed, the listener will receive this callback.  @param newRange The new range.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_Listener_onCameraModeRangeChange_inline",
                   "",
            ],
            [
                   "onCameraVideoResolutionAndFrameRateRangeChange",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_Listener_onCameraVideoResolutionAndFrameRateRangeChange_inline",
                   "When the camera video resolution and frame rate range is changed, the listener will receive this callback.  @param newRange The new range.",
            ],
            [
                   "When the camera video resolution and frame rate range is changed, the listener will receive this callback.  @param newRange The new range.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_Listener_onCameraVideoResolutionAndFrameRateRangeChange_inline",
                   "",
            ],
            [
                   "onCameraApertureRangeChange",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_Listener_onCameraApertureRangeChange_inline",
                   "When the camera aperture range is changed, the listener will receive this callback.  @param newRange The new range.",
            ],
            [
                   "When the camera aperture range is changed, the listener will receive this callback.  @param newRange The new range.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#DJICamera_Listener_onCameraApertureRangeChange_inline",
                   "",
            ],
            [
                   "onCameraSSDRawVideoResolutionRangeChange",
                   2,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#onCameraSSDRawVideoResolutionRangeChange_inline",
                   "When the camera SSD raw video resolution and frame rate range is changed, the listener will receive this callback.  @param newRange The new range.",
            ],
            [
                   "When the camera SSD raw video resolution and frame rate range is changed, the listener will receive this callback.  @param newRange The new range.",
                   1,
                   "/Components/Camera/DJICamera_DJICameraParameters.html",
                   "#onCameraSSDRawVideoResolutionRangeChange_inline",
                   "",
            ],
            [
                   "addMediaUpdatedVideoPlaybackStateListener",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_updateVideoPlaybackStateCallback_inline",
                   "Sets the callback object for updating the video playback state of the media manager.  @param callback callback object of updating the vision detection state.",
            ],
            [
                   "Sets the callback object for updating the video playback state of the media manager.  @param callback callback object of updating the vision detection state.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_updateVideoPlaybackStateCallback_inline",
                   "",
            ],
            [
                   "getScheduler",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_taskScheduler_inline",
                   "Fetch media task scheduler. This can be used to queue the download of the previews, thumbnails and XML custom data from multiple media files.  @return An object of `FetchMediaTaskScheduler`.",
            ],
            [
                   "Fetch media task scheduler. This can be used to queue the download of the previews, thumbnails and XML custom data from multiple media files.  @return An object of `FetchMediaTaskScheduler`.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_taskScheduler_inline",
                   "",
            ],
            [
                   "getFileListState",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_fileListState_inline",
                   "File list state.  @return An enum value of `FileListState`.",
            ],
            [
                   "File list state.  @return An enum value of `FileListState`.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_fileListState_inline",
                   "",
            ],
            [
                   "getFileListSnapshot",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_fileListSnapshot_inline",
                   "Returns a copy of the current file list. Returns `null`  if `getFileListState` is reset.  @return A list of `MediaFile` object.",
            ],
            [
                   "Returns a copy of the current file list. Returns `null`  if `getFileListState` is reset.  @return A list of `MediaFile` object.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_fileListSnapshot_inline",
                   "",
            ],
            [
                   "refreshFileList",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_refreshFileList_inline",
                   "Refresh the file list from the SD card. If the current state  is `RESET`, the media manager will  try to fetch the complete file list. If the current state is `INCOMPLETE`, the media manager  will only fetch the missing list of files. If the file list is refreshed  successfully, `getFileListState` will  become `UP_TO_DATE`.  @param callback ",
            ],
            [
                   "Refresh the file list from the SD card. If the current state  is `RESET`, the media manager will  try to fetch the complete file list. If the current state is `INCOMPLETE`, the media manager  will only fetch the missing list of files. If the file list is refreshed  successfully, `getFileListState` will  become `UP_TO_DATE`.  @param callback ",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_refreshFileList_inline",
                   "",
            ],
            [
                   "deleteFiles",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_deleteFiles_inline",
                   "Delete media files from SD card. If the operation is started successfully, `getFileListState` will become  `DELETING`. If there is error or  failedFiles is not empty, `getFileListState` will become  `RESET`.  @param files A list of `MediaFile` objects. @param callback A completion callback of CompletionCallbackWithTwoParam<List<MediaFile>.",
            ],
            [
                   "Delete media files from SD card. If the operation is started successfully, `getFileListState` will become  `DELETING`. If there is error or  failedFiles is not empty, `getFileListState` will become  `RESET`.  @param files A list of `MediaFile` objects. @param callback A completion callback of CompletionCallbackWithTwoParam<List<MediaFile>.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_deleteFiles_inline",
                   "",
            ],
            [
                   "exitMediaDownloading",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_exitMediaDownloading_inline",
                   "This will entirely stop the downloading process and of course clean the downloading thread pool. The camera will  exit the MEDIA_DOWNLOAD mode and enter the SHOOT_PHOTO mode.  Precondition:  The camera enters the  MediaDownload mode. Post Condition:  After this function invoked, the camera mode will shift to  TAKEPHOTO mode.",
            ],
            [
                   "This will entirely stop the downloading process and of course clean the downloading thread pool. The camera will  exit the MEDIA_DOWNLOAD mode and enter the SHOOT_PHOTO mode.  Precondition:  The camera enters the  MediaDownload mode. Post Condition:  After this function invoked, the camera mode will shift to  TAKEPHOTO mode.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_exitMediaDownloading_inline",
                   "",
            ],
            [
                   "addUpdateFileListStateListener",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_addUpdateFileListStateListener_inline",
                   "Start listen to the update of file list state.  @param listener A `FileListStateListener` interface.",
            ],
            [
                   "Start listen to the update of file list state.  @param listener A `FileListStateListener` interface.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_addUpdateFileListStateListener_inline",
                   "",
            ],
            [
                   "removeFileListStateCallback",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_removeFileListStateCallback_inline",
                   "Stop listen to the update of file list state.  @param listener A `FileListStateListener` interface.",
            ],
            [
                   "Stop listen to the update of file list state.  @param listener A `FileListStateListener` interface.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_removeFileListStateCallback_inline",
                   "",
            ],
            [
                   "isVideoPlaybackSupported",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_VideoPlayback_isVideoPlaybackSupported_inline",
                   "Checks if the media manager supports video playback or not. Video playback is supported only by Mavic Pro.  @return `true` if the media manager supports video playback.  @return `true` if the media manager supports video playback.",
            ],
            [
                   "Checks if the media manager supports video playback or not. Video playback is supported only by Mavic Pro.  @return `true` if the media manager supports video playback.  @return `true` if the media manager supports video playback.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_VideoPlayback_isVideoPlaybackSupported_inline",
                   "",
            ],
            [
                   "playVideoMediaFile",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_VideoPlayback_playVideo_inline",
                   "Start video playback through `MediaManager`. When the media manager is playing a video, video data can be  received from `onReceive` and playback state received from `onUpdate`. Video playback  through `MediaManager` is fixed at 720p.  @param videoMediaFile The video to play. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Start video playback through `MediaManager`. When the media manager is playing a video, video data can be  received from `onReceive` and playback state received from `onUpdate`. Video playback  through `MediaManager` is fixed at 720p.  @param videoMediaFile The video to play. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_VideoPlayback_playVideo_inline",
                   "",
            ],
            [
                   "resume",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_VideoPlayback_resume_inline",
                   "The media manager resumes the paused video.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "The media manager resumes the paused video.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_VideoPlayback_resume_inline",
                   "",
            ],
            [
                   "pause",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_VideoPlayback_pause_inline",
                   "The media manager pauses the playing video.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "The media manager pauses the playing video.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_VideoPlayback_pause_inline",
                   "",
            ],
            [
                   "stop",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_VideoPlayback_stop_inline",
                   "The media manager stops the playing video.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "The media manager stops the playing video.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_VideoPlayback_stop_inline",
                   "",
            ],
            [
                   "moveToPosition",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_VideoPlayback_moveToPosition_inline",
                   "Video playback is skipped to the new position in seconds from the start of the video.  @param position New position to play in seconds from start of video. Input with precision of greater than 3 decimal places, will be rounded to 3. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Video playback is skipped to the new position in seconds from the start of the video.  @param position New position to play in seconds from start of video. Input with precision of greater than 3 decimal places, will be rounded to 3. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_VideoPlayback_moveToPosition_inline",
                   "",
            ],
            [
                   "FileListState",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_DJIMediaFileListState_inline",
                   "States of the file list in `MediaManager`.",
            ],
            [
                   "States of the file list in `MediaManager`.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_DJIMediaFileListState_inline",
                   "",
            ],
            [
                   "UP_TO_DATE",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_DJIMediaFileListState_UpToDate_inline",
                   "The file list is up-to-date: it is synchronized with the SD card in the aircraft.",
            ],
            [
                   "The file list is up-to-date: it is synchronized with the SD card in the aircraft.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_DJIMediaFileListState_UpToDate_inline",
                   "",
            ],
            [
                   "INCOMPLETE",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_DJIMediaFileListState_Incomplete_inline",
                   "New files have been generated since the last call of  `refreshFileList`. Calling `refreshFileList` can synchronize the newly generated files and  append them to the end of the file list.",
            ],
            [
                   "New files have been generated since the last call of  `refreshFileList`. Calling `refreshFileList` can synchronize the newly generated files and  append them to the end of the file list.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_DJIMediaFileListState_Incomplete_inline",
                   "",
            ],
            [
                   "RESET",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_DJIMediaFileListState_Reset_inline",
                   "The file list is reset. The file list will be reset in one of the following cases:  - Camera is disconnected.  - SD card is formatted.   - SD card is not inserted.  - Error occurs when deleting files from SD card.  In this state, `getFileListSnapshot` will return `null`.",
            ],
            [
                   "The file list is reset. The file list will be reset in one of the following cases:  - Camera is disconnected.  - SD card is formatted.   - SD card is not inserted.  - Error occurs when deleting files from SD card.  In this state, `getFileListSnapshot` will return `null`.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_DJIMediaFileListState_Reset_inline",
                   "",
            ],
            [
                   "DELETING",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_DJIMediaFileListState_Deleting_inline",
                   "`deleteFiles` has been called and the operation is still in progress.",
            ],
            [
                   "`deleteFiles` has been called and the operation is still in progress.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_DJIMediaFileListState_Deleting_inline",
                   "",
            ],
            [
                   "SYNCING",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_DJIMediaFileListState_Syncing_inline",
                   "The media manager is synchronizing the file list from the SD card.",
            ],
            [
                   "The media manager is synchronizing the file list from the SD card.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_DJIMediaFileListState_Syncing_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_DJIMediaFileListState_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_DJIMediaFileListState_Unknown_inline",
                   "",
            ],
            [
                   "VideoPlaybackStateListener",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_updateVideoPlaybackStateCallbackInterface_inline",
                   "Updates the video playback state of the media manager. This update method will only be called when the media manager is playing a video.",
            ],
            [
                   "Updates the video playback state of the media manager. This update method will only be called when the media manager is playing a video.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_updateVideoPlaybackStateCallbackInterface_inline",
                   "",
            ],
            [
                   "DownloadListener",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_CameraDownloadListenerInterface_inline",
                   "This callback will notify the app when the media download executed.",
            ],
            [
                   "This callback will notify the app when the media download executed.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_CameraDownloadListenerInterface_inline",
                   "",
            ],
            [
                   "FileListStateListener",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_FileListStateListener_inline",
                   "Received file list state of the media manager.",
            ],
            [
                   "Received file list state of the media manager.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_FileListStateListener_inline",
                   "",
            ],
            [
                   "MediaFile",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "",
                   "This class contains information about a multi-media file on the SD card. It also provides methods to retrieve the  data in the file.",
            ],
            [
                   "This class contains information about a multi-media file on the SD card. It also provides methods to retrieve the  data in the file.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "",
                   "",
            ],
            [
                   "VideoPlaybackState",
                   2,
                   "/Components/Camera/DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState.html",
                   "",
                   "The playback state of the media manager.",
            ],
            [
                   "The playback state of the media manager.",
                   1,
                   "/Components/Camera/DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState.html",
                   "",
                   "",
            ],
            [
                   "STOPPED",
                   2,
                   "/Components/Camera/DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState.html",
                   "#DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackStatus_Stopped_inline",
                   "The playback is stopped. No media is playing.",
            ],
            [
                   "The playback is stopped. No media is playing.",
                   1,
                   "/Components/Camera/DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState.html",
                   "#DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackStatus_Stopped_inline",
                   "",
            ],
            [
                   "PLAYING",
                   2,
                   "/Components/Camera/DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState.html",
                   "#DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackStatus_Playing_inline",
                   "The media manager is playing a video.",
            ],
            [
                   "The media manager is playing a video.",
                   1,
                   "/Components/Camera/DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState.html",
                   "#DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackStatus_Playing_inline",
                   "",
            ],
            [
                   "PAUSED",
                   2,
                   "/Components/Camera/DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState.html",
                   "#DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackStatus_Paused_inline",
                   "The playing video is paused.",
            ],
            [
                   "The playing video is paused.",
                   1,
                   "/Components/Camera/DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState.html",
                   "#DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackStatus_Paused_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState.html",
                   "#DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackStatus_Unknown_inline",
                   "The playing video is unknown.",
            ],
            [
                   "The playing video is unknown.",
                   1,
                   "/Components/Camera/DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState.html",
                   "#DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackStatus_Unknown_inline",
                   "",
            ],
            [
                   "getPlayingMediaFile",
                   2,
                   "/Components/Camera/DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState.html",
                   "#DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState_playingMedia_inline",
                   "The video media file that is playing.  @return An instance of `MediaFile`.",
            ],
            [
                   "The video media file that is playing.  @return An instance of `MediaFile`.",
                   1,
                   "/Components/Camera/DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState.html",
                   "#DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState_playingMedia_inline",
                   "",
            ],
            [
                   "getPlaybackStatus",
                   2,
                   "/Components/Camera/DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState.html",
                   "#DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState_playbackStatus_inline",
                   "The status of the playback (e.g. playing or paused).  @return An Enum value of `VideoPlaybackStatus`.",
            ],
            [
                   "The status of the playback (e.g. playing or paused).  @return An Enum value of `VideoPlaybackStatus`.",
                   1,
                   "/Components/Camera/DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState.html",
                   "#DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState_playbackStatus_inline",
                   "",
            ],
            [
                   "getPlayingPosition",
                   2,
                   "/Components/Camera/DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState.html",
                   "#DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState_playingPosition_inline",
                   "The playing position in seconds.  @return A float value of the playing position in seconds.",
            ],
            [
                   "The playing position in seconds.  @return A float value of the playing position in seconds.",
                   1,
                   "/Components/Camera/DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState.html",
                   "#DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState_playingPosition_inline",
                   "",
            ],
            [
                   "VideoPlaybackStatus",
                   2,
                   "/Components/Camera/DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState.html",
                   "#DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackStatus_inline",
                   "The playback status.",
            ],
            [
                   "The playback status.",
                   1,
                   "/Components/Camera/DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackState.html",
                   "#DJIMediaManager_VideoPlayback_DJIMediaVideoPlaybackStatus_inline",
                   "",
            ],
            [
                   "getFileName",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_fileName_inline",
                   "Returns the name of the media file in the SD Card.  @return A String instance of the name of the media file.",
            ],
            [
                   "Returns the name of the media file in the SD Card.  @return A String instance of the name of the media file.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_fileName_inline",
                   "",
            ],
            [
                   "isValid",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_valid_inline",
                   "`true` if the media file is still valid. If a media file is from the file list of the  media manager, the file will become invalid after the file list is reset.  @return A boolean value to check if the media file is still valid.",
            ],
            [
                   "`true` if the media file is still valid. If a media file is from the file list of the  media manager, the file will become invalid after the file list is reset.  @return A boolean value to check if the media file is still valid.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_valid_inline",
                   "",
            ],
            [
                   "getIndex",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_getId_inline",
                   "Get the file index used in the camera.  @return An int value of the file index.",
            ],
            [
                   "Get the file index used in the camera.  @return An int value of the file index.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_getId_inline",
                   "",
            ],
            [
                   "getMediaType",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_mediaType_inline",
                   "Returns the type of media file.  @return An enum value of `MediaType`.",
            ],
            [
                   "Returns the type of media file.  @return An enum value of `MediaType`.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_mediaType_inline",
                   "",
            ],
            [
                   "getDownloadedSize",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_downloadedSize_inline",
                   "Downloaded size in Bytes of the media file.  @return A long value of downloaded size.",
            ],
            [
                   "Downloaded size in Bytes of the media file.  @return A long value of downloaded size.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_downloadedSize_inline",
                   "",
            ],
            [
                   "getFileSize",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_fileSizeInBytes_inline",
                   "Returns the size, in bytes, of the media file.  @return Size of media file.",
            ],
            [
                   "Returns the size, in bytes, of the media file.  @return Size of media file.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_fileSizeInBytes_inline",
                   "",
            ],
            [
                   "getDateCreated",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_timeCreated_inline",
                   "Returns the time when the media file was created as a string in the format yyyy-MM-dd HH:mm:ss.  @return A String instance of the media file created date.",
            ],
            [
                   "Returns the time when the media file was created as a string in the format yyyy-MM-dd HH:mm:ss.  @return A String instance of the media file created date.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_timeCreated_inline",
                   "",
            ],
            [
                   "getTimeCreated",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_getTimeCreated_inline",
                   "Returns the time when the media file was created as a long type.  @return A long value of the media file created date.",
            ],
            [
                   "Returns the time when the media file was created as a long type.  @return A long value of the media file created date.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_getTimeCreated_inline",
                   "",
            ],
            [
                   "getDurationInSeconds",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_durationInSeconds_inline",
                   "If the media file is a video, this property returns the duration of the video in seconds. Will be 0s if the media  file is a photo.  @return Media duration.",
            ],
            [
                   "If the media file is a video, this property returns the duration of the video in seconds. Will be 0s if the media  file is a photo.  @return Media duration.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_durationInSeconds_inline",
                   "",
            ],
            [
                   "getFrameRate",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_frameRate_inline",
                   "Frame rate when the media file is a video.  @return An int value.",
            ],
            [
                   "Frame rate when the media file is a video.  @return An int value.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_frameRate_inline",
                   "",
            ],
            [
                   "getCustomInformation",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_customInformation_inline",
                   "Custom information can be stored in media file's XMP meta data using `setMediaFileCustomInformation` This property contains the  information that was written to this media file. If this property returns `null`,  use `fetchCustomInformation` to populate it. Only supported  by Phantom 4 Pro, Phantom 4 Advanced and Inspire 2 with firmware versions from after  May 23 2017.  @return A string value.",
            ],
            [
                   "Custom information can be stored in media file's XMP meta data using `setMediaFileCustomInformation` This property contains the  information that was written to this media file. If this property returns `null`,  use `fetchCustomInformation` to populate it. Only supported  by Phantom 4 Pro, Phantom 4 Advanced and Inspire 2 with firmware versions from after  May 23 2017.  @return A string value.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_customInformation_inline",
                   "",
            ],
            [
                   "getResolution",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_resolution_inline",
                   "Camera resolution.  @return An enum value of `VideoResolution`.",
            ],
            [
                   "Camera resolution.  @return An enum value of `VideoResolution`.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_resolution_inline",
                   "",
            ],
            [
                   "getVideoOrientation",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_videoOrientation_inline",
                   "The orientation of the camera when the video file was first recorded. If the camera orientation changes during a  video capture, this will report the initial orientation. Will be `LANDSCAPE` if  the media file is a photo. Only Mavic Pro supports this property. Will be `LANDSCAPE`  for other products.  @return An enum value of `Orientation`",
            ],
            [
                   "The orientation of the camera when the video file was first recorded. If the camera orientation changes during a  video capture, this will report the initial orientation. Will be `LANDSCAPE` if  the media file is a photo. Only Mavic Pro supports this property. Will be `LANDSCAPE`  for other products.  @return An enum value of `Orientation`",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_videoOrientation_inline",
                   "",
            ],
            [
                   "getThumbnail",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_thumbnail_inline",
                   "Returns the thumbnail for this media. If this property returns nil, call `fetchThumbnail`.  @return A Bitmap object.",
            ],
            [
                   "Returns the thumbnail for this media. If this property returns nil, call `fetchThumbnail`.  @return A Bitmap object.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_thumbnail_inline",
                   "",
            ],
            [
                   "getPreview",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_preview_inline",
                   "Returns the preview image for this media. If this property returns `null`,  call `fetchPreview`.  @return A Bitmap object.",
            ],
            [
                   "Returns the preview image for this media. If this property returns `null`,  call `fetchPreview`.  @return A Bitmap object.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_preview_inline",
                   "",
            ],
            [
                   "fetchThumbnail",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_DJIMedia_fetchThumbnail_inline",
                   "Fetches this media's thumbnail with a resolution (99 x 99) from the SD card. This method can be used to fetch  either a photo or a video, where the first frame of the video is the thumbnail that is fetched. It is not  available if the media type is Panorama.  Precondition:  The camera mode is MediaDownload mode.  Post Condition:  This method will start to download the media thumbnail in the SD card. The content  can be videos or images.  @param callback The `completion callback` with the returned execution result.",
            ],
            [
                   "Fetches this media's thumbnail with a resolution (99 x 99) from the SD card. This method can be used to fetch  either a photo or a video, where the first frame of the video is the thumbnail that is fetched. It is not  available if the media type is Panorama.  Precondition:  The camera mode is MediaDownload mode.  Post Condition:  This method will start to download the media thumbnail in the SD card. The content  can be videos or images.  @param callback The `completion callback` with the returned execution result.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_DJIMedia_fetchThumbnail_inline",
                   "",
            ],
            [
                   "resetThumbnail",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_resetThumbnail_inline",
                   "Resets the cached thumbnail to `null` to release the memory usage.  @param callback Completion callback with the returned execution result.",
            ],
            [
                   "Resets the cached thumbnail to `null` to release the memory usage.  @param callback Completion callback with the returned execution result.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_resetThumbnail_inline",
                   "",
            ],
            [
                   "fetchPreview",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_fetchPreview_inline",
                   "Fetch media's preview image. The preview image is a lower resolution (960 x 540) version of  a photo. The `MediaType` of this media object should be  `JPEG` or `TIFF`. The preview will be stored in  `getPreview`.  @param callback The `completion callback` with the returned execution result.",
            ],
            [
                   "Fetch media's preview image. The preview image is a lower resolution (960 x 540) version of  a photo. The `MediaType` of this media object should be  `JPEG` or `TIFF`. The preview will be stored in  `getPreview`.  @param callback The `completion callback` with the returned execution result.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_fetchPreview_inline",
                   "",
            ],
            [
                   "resetPreview",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_resetPreview_inline",
                   "Resets the cached preview image to `null` to release the memory usage.  @param callback The `completion callback` with the returned execution result.",
            ],
            [
                   "Resets the cached preview image to `null` to release the memory usage.  @param callback The `completion callback` with the returned execution result.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_resetPreview_inline",
                   "",
            ],
            [
                   "fetchCustomInformation",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_fetchCustomInformation_inline",
                   "Custom information can be stored in media file's XMP meta data using `setMediaFileCustomInformation`. The information will be stored in `getCustomInformation`. Only supported by Phantom 4 Pro, Phantom 4  Advanced and Inspire 2 with firmware released after May 23 2017.  @param callback The `completion callback` with the returned execution result.",
            ],
            [
                   "Custom information can be stored in media file's XMP meta data using `setMediaFileCustomInformation`. The information will be stored in `getCustomInformation`. Only supported by Phantom 4 Pro, Phantom 4  Advanced and Inspire 2 with firmware released after May 23 2017.  @param callback The `completion callback` with the returned execution result.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_fetchCustomInformation_inline",
                   "",
            ],
            [
                   "fetchFileData",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_fetchFileData_inline",
                   "Fetches this media file's full resolution data from the SD card. The  difference between fetching the media data and fetching the thumbnail is  that fetching the thumbnail will return a low-resolution image of the actual  picture, while fetching the media data will return all data for a video or  image. If last download action is aborted, it will continue to download the data  from where the file download has been aborted.  @param destDir File instance of location to save the files, which can not be null. @param fileNameWithoutExtension The fileName to store in mobile devices, without the file extension.<br> If it  is null, the file name in the camera's SDCard will be used. @param callback Completion callback to receive the result.",
            ],
            [
                   "Fetches this media file's full resolution data from the SD card. The  difference between fetching the media data and fetching the thumbnail is  that fetching the thumbnail will return a low-resolution image of the actual  picture, while fetching the media data will return all data for a video or  image. If last download action is aborted, it will continue to download the data  from where the file download has been aborted.  @param destDir File instance of location to save the files, which can not be null. @param fileNameWithoutExtension The fileName to store in mobile devices, without the file extension.<br> If it  is null, the file name in the camera's SDCard will be used. @param callback Completion callback to receive the result.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_fetchFileData_inline",
                   "",
            ],
            [
                   "stopFetchingFileData",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_stopFetchingFileData_inline",
                   "Stops a currently executing call of `fetchFileData`.  @param callback The `completion callback` with the returned execution result.",
            ],
            [
                   "Stops a currently executing call of `fetchFileData`.  @param callback The `completion callback` with the returned execution result.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_stopFetchingFileData_inline",
                   "",
            ],
            [
                   "fetchSubFileDataList",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_fetchSubFileDataList_inline",
                   "Fetch the file data of the sub media files. It is available only when `getMediaType` is  `PANORAMA` or  `SHALLOW_FOCUS`.  @param callback Completion callback to receive the result.",
            ],
            [
                   "Fetch the file data of the sub media files. It is available only when `getMediaType` is  `PANORAMA` or  `SHALLOW_FOCUS`.  @param callback Completion callback to receive the result.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_fetchSubFileDataList_inline",
                   "",
            ],
            [
                   "MediaType",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_DJIMediaType_inline",
                   "Media types.",
            ],
            [
                   "Media types.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_DJIMediaType_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_DJIMediaType_Unknown_inline",
                   "Unknown file type.",
            ],
            [
                   "Unknown file type.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_DJIMediaType_Unknown_inline",
                   "",
            ],
            [
                   "JPEG",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_DJIMediaType_JPEG_inline",
                   "Image of JPEG format.",
            ],
            [
                   "Image of JPEG format.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_DJIMediaType_JPEG_inline",
                   "",
            ],
            [
                   "MP4",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_DJIMediaType_MP4_inline",
                   "Video of MP4 format.",
            ],
            [
                   "Video of MP4 format.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_DJIMediaType_MP4_inline",
                   "",
            ],
            [
                   "MOV",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_DJIMediaType_MOV_inline",
                   "Video of MOV format.",
            ],
            [
                   "Video of MOV format.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_DJIMediaType_MOV_inline",
                   "",
            ],
            [
                   "RAW_DNG",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_DJIMediaType_RAWDNG_inline",
                   "Image of DNG format.",
            ],
            [
                   "Image of DNG format.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_DJIMediaType_RAWDNG_inline",
                   "",
            ],
            [
                   "PANORAMA",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_DJIMediaType_Panorama_inline",
                   "Panorama file type.",
            ],
            [
                   "Panorama file type.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_DJIMediaType_Panorama_inline",
                   "",
            ],
            [
                   "SHALLOW_FOCUS",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_DJIMediaType_ShallowFocus_inline",
                   "ShallowFocus file type. ShallowFocus files have a shallow depth of field.",
            ],
            [
                   "ShallowFocus file type. ShallowFocus files have a shallow depth of field.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_DJIMediaType_ShallowFocus_inline",
                   "",
            ],
            [
                   "TIFF",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_DJIMediaType_TIFF_inline",
                   "Tiff file type.",
            ],
            [
                   "Tiff file type.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIMedia.html",
                   "#DJIMediaManager_DJIMedia_DJIMediaType_TIFF_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_updateVideoPlaybackState_inline",
                   "Updates the video playback state of the media manager. This update method will only be called when the media manager is playing a video.  @param videoPlaybackState VideoPlaybackState object.",
            ],
            [
                   "Updates the video playback state of the media manager. This update method will only be called when the media manager is playing a video.  @param videoPlaybackState VideoPlaybackState object.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_updateVideoPlaybackState_inline",
                   "",
            ],
            [
                   "onStart",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_CameraDownloadOnStart_inline",
                   "Called when the file download begins.",
            ],
            [
                   "Called when the file download begins.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_CameraDownloadOnStart_inline",
                   "",
            ],
            [
                   "onRateUpdate",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_CameraDownloadOnRateUpdate_inline",
                   "Called to show the download rate. It is called every 1 second. Hence, the persize which is the download size among two calls is the download rate.  @param total The total size. @param current The current download size. @param persize The download size between two calls.",
            ],
            [
                   "Called to show the download rate. It is called every 1 second. Hence, the persize which is the download size among two calls is the download rate.  @param total The total size. @param current The current download size. @param persize The download size between two calls.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_CameraDownloadOnRateUpdate_inline",
                   "",
            ],
            [
                   "onProgress",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_CameraDownloadOnProgress_inline",
                   "Called to update the download progress. It is called every time there is data received.  @param total The total size of the file being downloaded. @param current The current download data size.",
            ],
            [
                   "Called to update the download progress. It is called every time there is data received.  @param total The total size of the file being downloaded. @param current The current download data size.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_CameraDownloadOnProgress_inline",
                   "",
            ],
            [
                   "onSuccess",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_CameraDownloadOnSuccess_inline",
                   "Called when the media download is completed.  @param data The media that was successfully downloaded",
            ],
            [
                   "Called when the media download is completed.  @param data The media that was successfully downloaded",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_CameraDownloadOnSuccess_inline",
                   "",
            ],
            [
                   "onFailure",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_CameraDownloadOnFailure_inline",
                   "Called when the media download failed.  @param error The error information.",
            ],
            [
                   "Called when the media download failed.  @param error The error information.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_CameraDownloadOnFailure_inline",
                   "",
            ],
            [
                   "onFileListStateChange",
                   2,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_onFileListStateChange_inline",
                   "Updates the file list state of the media manager.  @param state The new file list state.",
            ],
            [
                   "Updates the file list state of the media manager.  @param state The new file list state.",
                   1,
                   "/Components/Camera/DJIMediaManager.html",
                   "#DJIMediaManager_onFileListStateChange_inline",
                   "",
            ],
            [
                   "FetchMediaTaskScheduler",
                   2,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "",
                   "The camera stores the media it captures to SD or SSD storage on the product. When the  mobile device wants to access the media, it needs to download it from the product over  the wireless link between the product, remote controller and mobile device (depending  on the product). Each media file captured by the camera can have several types of  content associated with it including the full resolution media content, a lower  resolution preview, a lower resolution again thumbnail, and custom data within  the file's XML meta data. The full resolution content can take a long time to  download over the wireless link, so it is often useful to download previews or  thumbnails of many media files, and then only download the full resolution content  of fewer select media files. This scheduler conveniently allows the small content  types of media files (preview, thumbnail and custom data) to be downloaded to the  mobile device. The scheduler can be used to queue and download content from a series  of files, as well as used to re-prioritize files during the download process. The  scheduler holds a list of pending tasks and it completes them one by one in  first-in-first-out order. To prioritize a new task, `moveTaskToNext`  can be used. Each task relates to a media file and can download multiple content types  sequentially. When the last content type of a task starts being downloaded, the task is removed from the list. Note, the scheduler cannot be used to queue the download of full  resolution media content. Only `fetchFileData` can be used for this.",
            ],
            [
                   "The camera stores the media it captures to SD or SSD storage on the product. When the  mobile device wants to access the media, it needs to download it from the product over  the wireless link between the product, remote controller and mobile device (depending  on the product). Each media file captured by the camera can have several types of  content associated with it including the full resolution media content, a lower  resolution preview, a lower resolution again thumbnail, and custom data within  the file's XML meta data. The full resolution content can take a long time to  download over the wireless link, so it is often useful to download previews or  thumbnails of many media files, and then only download the full resolution content  of fewer select media files. This scheduler conveniently allows the small content  types of media files (preview, thumbnail and custom data) to be downloaded to the  mobile device. The scheduler can be used to queue and download content from a series  of files, as well as used to re-prioritize files during the download process. The  scheduler holds a list of pending tasks and it completes them one by one in  first-in-first-out order. To prioritize a new task, `moveTaskToNext`  can be used. Each task relates to a media file and can download multiple content types  sequentially. When the last content type of a task starts being downloaded, the task is removed from the list. Note, the scheduler cannot be used to queue the download of full  resolution media content. Only `fetchFileData` can be used for this.",
                   1,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "",
                   "",
            ],
            [
                   "getState",
                   2,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_state_inline",
                   "State of the scheduler.  @return An enum value of `FetchMediaTaskSchedulerState`.",
            ],
            [
                   "State of the scheduler.  @return An enum value of `FetchMediaTaskSchedulerState`.",
                   1,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_state_inline",
                   "",
            ],
            [
                   "getPendingTasks",
                   2,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_pendingTasks_inline",
                   "Gets a copy of the pending tasks.  @return A list of `FetchMediaTask` objects.",
            ],
            [
                   "Gets a copy of the pending tasks.  @return A list of `FetchMediaTask` objects.",
                   1,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_pendingTasks_inline",
                   "",
            ],
            [
                   "moveTaskToEnd",
                   2,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_moveTaskToEnd_inline",
                   "Pushes a task to the back of the queue. The task will be executed after all other  tasks are complete.  @param task Task to schedule.",
            ],
            [
                   "Pushes a task to the back of the queue. The task will be executed after all other  tasks are complete.  @param task Task to schedule.",
                   1,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_moveTaskToEnd_inline",
                   "",
            ],
            [
                   "moveTaskToNext",
                   2,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_moveTaskToNext_inline",
                   "Pushes a task to the front of the queue. The task will be executed after the executing task is complete.  @param task Task to schedule.",
            ],
            [
                   "Pushes a task to the front of the queue. The task will be executed after the executing task is complete.  @param task Task to schedule.",
                   1,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_moveTaskToNext_inline",
                   "",
            ],
            [
                   "removeTask",
                   2,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_removeTask_inline",
                   "Remove content from tasks, and tasks from the scheduler. If all content is removed from a task, then the task is removed from the scheduler.  @param file An object of `MediaFile`. @param option An enum value of `FetchMediaTaskContent`.",
            ],
            [
                   "Remove content from tasks, and tasks from the scheduler. If all content is removed from a task, then the task is removed from the scheduler.  @param file An object of `MediaFile`. @param option An enum value of `FetchMediaTaskContent`.",
                   1,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_removeTask_inline",
                   "",
            ],
            [
                   "removeAllTasks",
                   2,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_removeAllTasks_inline",
                   "Removes all the pending tasks.",
            ],
            [
                   "Removes all the pending tasks.",
                   1,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_removeAllTasks_inline",
                   "",
            ],
            [
                   "suspend",
                   2,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_suspend_inline",
                   "Suspends the scheduler. The scheduler will not continue to execute tasks in the queue.  @param callback The `completion callback` with the returned execution result.",
            ],
            [
                   "Suspends the scheduler. The scheduler will not continue to execute tasks in the queue.  @param callback The `completion callback` with the returned execution result.",
                   1,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_suspend_inline",
                   "",
            ],
            [
                   "resume",
                   2,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_resume_inline",
                   "Resumes the scheduler. The scheduler will execute tasks in the queue sequentially.  @param callback The `completion callback` with the returned execution result.",
            ],
            [
                   "Resumes the scheduler. The scheduler will execute tasks in the queue sequentially.  @param callback The `completion callback` with the returned execution result.",
                   1,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_resume_inline",
                   "",
            ],
            [
                   "isSuspendAfterSingleFetchTaskFailure",
                   2,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_isSuspendAfterSingleFetchTaskFailure_inline",
                   "Gets if suspend the scheduler when an error occurs during the execution.  @return A boolean value.",
            ],
            [
                   "Gets if suspend the scheduler when an error occurs during the execution.  @return A boolean value.",
                   1,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_isSuspendAfterSingleFetchTaskFailure_inline",
                   "",
            ],
            [
                   "setSuspendAfterSingleFetchTaskFailure",
                   2,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_setSuspendAfterSingleFetchTaskFailure_inline",
                   "Sets if suspend the scheduler when an error occurs during the execution.  @param suspendAfterSingleFetchTaskFailure A boolean value.",
            ],
            [
                   "Sets if suspend the scheduler when an error occurs during the execution.  @param suspendAfterSingleFetchTaskFailure A boolean value.",
                   1,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_FetchMediaTaskScheduler_setSuspendAfterSingleFetchTaskFailure_inline",
                   "",
            ],
            [
                   "FetchMediaTaskSchedulerState",
                   2,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_DJIFetchMediaTaskSchedulerState_inline",
                   "States of the fetch media file task scheduler `FetchMediaTaskScheduler`.",
            ],
            [
                   "States of the fetch media file task scheduler `FetchMediaTaskScheduler`.",
                   1,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_DJIFetchMediaTaskSchedulerState_inline",
                   "",
            ],
            [
                   "IDLE",
                   2,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_DJIFetchMediaTaskSchedulerState_Idle_inline",
                   "Scheduler is waiting for tasks.",
            ],
            [
                   "Scheduler is waiting for tasks.",
                   1,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_DJIFetchMediaTaskSchedulerState_Idle_inline",
                   "",
            ],
            [
                   "EXECUTING",
                   2,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_DJIFetchMediaTaskSchedulerState_Executing_inline",
                   "Scheduler is executing tasks.",
            ],
            [
                   "Scheduler is executing tasks.",
                   1,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_DJIFetchMediaTaskSchedulerState_Executing_inline",
                   "",
            ],
            [
                   "SUSPENDED",
                   2,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_DJIFetchMediaTaskSchedulerState_Suspended_inline",
                   "Scheduler is suspended. Use `resume`  to resume the scheduler.",
            ],
            [
                   "Scheduler is suspended. Use `resume`  to resume the scheduler.",
                   1,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_DJIFetchMediaTaskSchedulerState_Suspended_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_DJIFetchMediaTaskSchedulerState_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/Camera/DJIMediaManager_FetchMediaTaskScheduler.html",
                   "#DJIMediaManager_DJIFetchMediaTaskSchedulerState_Unknown_inline",
                   "",
            ],
            [
                   "FetchMediaTask",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "",
                   "Task to fetch contents of a media file. To make `FetchMediaTaskScheduler`  fetch the thumbnail, preview or custom information of a media file, a task should be created  by using `FetchMediaTask`.",
            ],
            [
                   "Task to fetch contents of a media file. To make `FetchMediaTaskScheduler`  fetch the thumbnail, preview or custom information of a media file, a task should be created  by using `FetchMediaTask`.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "",
                   "",
            ],
            [
                   "FetchMediaTask",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "#DJIMediaManager_DJIFetchMediaTask_constructor_inline",
                   "Creates a task instance.  @param file Media file to execute task on. @param content Content to fetch. @param callback The `completion callback` with the returned execution result.",
            ],
            [
                   "Creates a task instance.  @param file Media file to execute task on. @param content Content to fetch. @param callback The `completion callback` with the returned execution result.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "#DJIMediaManager_DJIFetchMediaTask_constructor_inline",
                   "",
            ],
            [
                   "FetchMediaTask",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "#DJIMediaManager_DJIFetchMediaTask_constructor2_inline",
                   "Creates a task instance without callback.  @param file Media file to execute task on. @param content Content to fetch.",
            ],
            [
                   "Creates a task instance without callback.  @param file Media file to execute task on. @param content Content to fetch.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "#DJIMediaManager_DJIFetchMediaTask_constructor2_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "#DJIMediaManager_DJIFetchMediaTask_CallbackInterface_inline",
                   "Callback that is called when the scheduler finishes downloading content for a fetch media file task. If multiple content types are defined for a file, this completion block will be called at the completion of each content type being downloaded. The order content types will be downloaded in is first  `THUMBNAIL`, then  `PREVIEW`.",
            ],
            [
                   "Callback that is called when the scheduler finishes downloading content for a fetch media file task. If multiple content types are defined for a file, this completion block will be called at the completion of each content type being downloaded. The order content types will be downloaded in is first  `THUMBNAIL`, then  `PREVIEW`.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "#DJIMediaManager_DJIFetchMediaTask_CallbackInterface_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "#DJIMediaManager_DJIFetchMediaTask_Callback_inline",
                   "Called each time the scheduler finishes downloading content.  @param file file to execute task on. @param option An enum value of `FetchMediaTaskContent`. @param error Error retrieving the value.",
            ],
            [
                   "Called each time the scheduler finishes downloading content.  @param file file to execute task on. @param option An enum value of `FetchMediaTaskContent`. @param error Error retrieving the value.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "#DJIMediaManager_DJIFetchMediaTask_Callback_inline",
                   "",
            ],
            [
                   "FetchMediaTaskContent",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "#DJIMediaManager_DJIFetchMediaTaskContent_inline",
                   "The content to download in a fetch media file task.",
            ],
            [
                   "The content to download in a fetch media file task.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "#DJIMediaManager_DJIFetchMediaTaskContent_inline",
                   "",
            ],
            [
                   "NONE",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "#DJIMediaManager_DJIFetchMediaTaskContent_None_inline",
                   "None.",
            ],
            [
                   "None.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "#DJIMediaManager_DJIFetchMediaTaskContent_None_inline",
                   "",
            ],
            [
                   "THUMBNAIL",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "#DJIMediaManager_DJIFetchMediaTaskContent_Thumbnail_inline",
                   "The scheduler will download the thumbnail of the media file.",
            ],
            [
                   "The scheduler will download the thumbnail of the media file.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "#DJIMediaManager_DJIFetchMediaTaskContent_Thumbnail_inline",
                   "",
            ],
            [
                   "PREVIEW",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "#DJIMediaManager_DJIFetchMediaTaskContent_Preview_inline",
                   "The scheduler will download the preview image of the media file.",
            ],
            [
                   "The scheduler will download the preview image of the media file.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "#DJIMediaManager_DJIFetchMediaTaskContent_Preview_inline",
                   "",
            ],
            [
                   "CUSTOM_INFORMATION",
                   2,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "#DJIMediaManager_DJIFetchMediaTaskContent_CustomInformation_inline",
                   "The scheduler will download the custom information of the media file.",
            ],
            [
                   "The scheduler will download the custom information of the media file.",
                   1,
                   "/Components/Camera/DJIMediaManager_DJIFetchMediaTask.html",
                   "#DJIMediaManager_DJIFetchMediaTaskContent_CustomInformation_inline",
                   "",
            ],
            [
                   "setPlaybackStateCallback",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_setDJICameraPlayBackStateCallBack_inline",
                   "Sets the camera's playback state callback. Called according to the camera's update timer.  Precondition:  You must first define a Callback object to pass in as a parameter.  Post  Condition:  Every time the playback state changes, the Callback interface that was passed in as a parameter will call its onResult function.  The onResult function takes in a DJICameraPlayBackState  object, which provides playback information such as the number of photos currently selected, the video playback  progress (if a video is being played), and much more.  @param cameraPlayBackStateCB The Callback object to set as the callback interface for when the playback state changes.  <br> The Callback interface implements an onResult function, which takes in a  DJICameraPlayBackState object from the aircraft. <br>",
            ],
            [
                   "Sets the camera's playback state callback. Called according to the camera's update timer.  Precondition:  You must first define a Callback object to pass in as a parameter.  Post  Condition:  Every time the playback state changes, the Callback interface that was passed in as a parameter will call its onResult function.  The onResult function takes in a DJICameraPlayBackState  object, which provides playback information such as the number of photos currently selected, the video playback  progress (if a video is being played), and much more.  @param cameraPlayBackStateCB The Callback object to set as the callback interface for when the playback state changes.  <br> The Callback interface implements an onResult function, which takes in a  DJICameraPlayBackState object from the aircraft. <br>",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_setDJICameraPlayBackStateCallBack_inline",
                   "",
            ],
            [
                   "enterSinglePreviewModeWithIndex",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_enterSinglePreviewMode_inline",
                   "Enters single file preview mode for a file at the specified index. In order for this method to be called,  the camera work mode must be `PLAYBACK`.  @return  DJICameraError Shows the possible error during the execution. If there is no error, it returns null</code>.  @param index File to be previewed at the specified index. The value falls in [1,8].  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
            ],
            [
                   "Enters single file preview mode for a file at the specified index. In order for this method to be called,  the camera work mode must be `PLAYBACK`.  @return  DJICameraError Shows the possible error during the execution. If there is no error, it returns null</code>.  @param index File to be previewed at the specified index. The value falls in [1,8].  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_enterSinglePreviewMode_inline",
                   "",
            ],
            [
                   "proceedToNextSinglePreviewPage",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_goToNextSinglePreviewPage_inline",
                   "Goes to the next page.  Precondition:  The camera must enter Single File Preview Mode.   Special case:  If it is the last image, it will go to the first image. @return DJICameraError Shows the possible error during the execution. If there is no error, it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
            ],
            [
                   "Goes to the next page.  Precondition:  The camera must enter Single File Preview Mode.   Special case:  If it is the last image, it will go to the first image. @return DJICameraError Shows the possible error during the execution. If there is no error, it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_goToNextSinglePreviewPage_inline",
                   "",
            ],
            [
                   "proceedToPreviousSinglePreviewPage",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_goToPreviousSinglePreviewPage_inline",
                   "Goes back to the previous page.  Precondition:  The camera must enter Single File Preview Mode.  Special case:  If it is the first image, it will go to the last image. @return DJICameraError Shows the possible error during the execution. If there is no error, it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
            ],
            [
                   "Goes back to the previous page.  Precondition:  The camera must enter Single File Preview Mode.  Special case:  If it is the first image, it will go to the last image. @return DJICameraError Shows the possible error during the execution. If there is no error, it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_goToPreviousSinglePreviewPage_inline",
                   "",
            ],
            [
                   "playVideo",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_startVideoPlayback_inline",
                   "Starts video playback. The selected file must be a video file.  Precondition:  The camera must enter  Single Preview Mode.  Post condition:  If the video finishes playing, it will stop and go back to the  beginning of the file. @return DJICameraError Shows the possible error during the execution. If there is no error,  it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
            ],
            [
                   "Starts video playback. The selected file must be a video file.  Precondition:  The camera must enter  Single Preview Mode.  Post condition:  If the video finishes playing, it will stop and go back to the  beginning of the file. @return DJICameraError Shows the possible error during the execution. If there is no error,  it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_startVideoPlayback_inline",
                   "",
            ],
            [
                   "pauseVideo",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_pauseVideoPlayback_inline",
                   "Pauses a video during playback.  Precondition:  The video is being played.  @return  DJICameraError Shows the possible error during the execution. If there is no error, it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
            ],
            [
                   "Pauses a video during playback.  Precondition:  The video is being played.  @return  DJICameraError Shows the possible error during the execution. If there is no error, it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_pauseVideoPlayback_inline",
                   "",
            ],
            [
                   "stopVideo",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_stopVideoPlayback_inline",
                   "Stops a video during playback.  Precondition:  The video is being played.  Post condition:   The file will stop and go back to the beginning of the file. @return DJICameraError Shows the possible error during  the execution. If there is no error, it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
            ],
            [
                   "Stops a video during playback.  Precondition:  The video is being played.  Post condition:   The file will stop and go back to the beginning of the file. @return DJICameraError Shows the possible error during  the execution. If there is no error, it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_stopVideoPlayback_inline",
                   "",
            ],
            [
                   "playVideoFromPositionInPercent",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_setVideoPlaybackFromLocation_inline",
                   "Plays a video from the specified location. The selected file must be a video file.  Precondition:   The camera must enter Single File Preview Mode.  Post condition:  The file will play from a specific location immediately. This command can only be called if the video is currently playing or is paused. If paused, the playback position will be updated and playing will resume.  @return DJICameraError Shows the possible error during the execution. If there is no error, it returns null</code>.  @param location Location from which to play the video must be in the range of [0, 100]. This value  represents at what percent of the entire video it should start playing.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
            ],
            [
                   "Plays a video from the specified location. The selected file must be a video file.  Precondition:   The camera must enter Single File Preview Mode.  Post condition:  The file will play from a specific location immediately. This command can only be called if the video is currently playing or is paused. If paused, the playback position will be updated and playing will resume.  @return DJICameraError Shows the possible error during the execution. If there is no error, it returns null</code>.  @param location Location from which to play the video must be in the range of [0, 100]. This value  represents at what percent of the entire video it should start playing.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_setVideoPlaybackFromLocation_inline",
                   "",
            ],
            [
                   "deleteCurrentPreviewFile",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_deleteCurrentPreviewFile_inline",
                   "Deletes the current file being previewed.  Precondition:  The camera must enter single file preview  mode.  Post condition:  The image will be deleted from the SD card. @return DJICameraError Shows the possible error during the execution. If there is no error, it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
            ],
            [
                   "Deletes the current file being previewed.  Precondition:  The camera must enter single file preview  mode.  Post condition:  The image will be deleted from the SD card. @return DJICameraError Shows the possible error during the execution. If there is no error, it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_deleteCurrentPreviewFile_inline",
                   "",
            ],
            [
                   "enterMultiplePreviewMode",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_enterMultiplePreviewMode_inline",
                   "Enables the user to preview multiple files when the camera is in Playback mode.  Precondition:  The  camera work mode should be set to Playback mode.  Post condition:  There will be 8 images on one page.  @return DJICameraError Shows the possible error during the execution. If there is no error, it returns  null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
            ],
            [
                   "Enables the user to preview multiple files when the camera is in Playback mode.  Precondition:  The  camera work mode should be set to Playback mode.  Post condition:  There will be 8 images on one page.  @return DJICameraError Shows the possible error during the execution. If there is no error, it returns  null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_enterMultiplePreviewMode_inline",
                   "",
            ],
            [
                   "proceedToNextMultiplePreviewPage",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_goToNextMultiplePreviewPage_inline",
                   "Goes to the next page when there are multiple pages.  Precondition:  The camera must enter Multiple  Preview Mode.  Special case:  If it is the last page, it will stay at the last page.  @return DJICameraErrorr Shows the possible error during the execution. If there is no error, it  returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
            ],
            [
                   "Goes to the next page when there are multiple pages.  Precondition:  The camera must enter Multiple  Preview Mode.  Special case:  If it is the last page, it will stay at the last page.  @return DJICameraErrorr Shows the possible error during the execution. If there is no error, it  returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_goToNextMultiplePreviewPage_inline",
                   "",
            ],
            [
                   "proceedToPreviousMultiplePreviewPage",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_goToPreviousMultiplePreviewPage_inline",
                   "Goes back to the previous page when there are multiple pages.  Precondition:   The camera must enter Multiple Preview Mode.  Special case:  If it is the first page, it will  stay at the first page. @return DJICameraError Shows the possible error during the execution. If there is  no error, it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
            ],
            [
                   "Goes back to the previous page when there are multiple pages.  Precondition:   The camera must enter Multiple Preview Mode.  Special case:  If it is the first page, it will  stay at the first page. @return DJICameraError Shows the possible error during the execution. If there is  no error, it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_goToPreviousMultiplePreviewPage_inline",
                   "",
            ],
            [
                   "enterMultipleEditMode",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_enterMultipleEditMode_inline",
                   "This enables the user to select, download, or delete multiple media files when the camera is in Playback mode.  Precondition:  The camera work mode must be set to Camera Play back mode and then Multiple Preview Mode.  Post condition:  Multiple photos can be selected to be downloaded or deleted. @return DJICameraError Shows the  possible error during the execution. If there is no error, it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
            ],
            [
                   "This enables the user to select, download, or delete multiple media files when the camera is in Playback mode.  Precondition:  The camera work mode must be set to Camera Play back mode and then Multiple Preview Mode.  Post condition:  Multiple photos can be selected to be downloaded or deleted. @return DJICameraError Shows the  possible error during the execution. If there is no error, it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_enterMultipleEditMode_inline",
                   "",
            ],
            [
                   "exitMultipleEditMode",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_exitMultipleEditMode_inline",
                   "Exits multiple edit mode. @return DJICameraError Shows the possible error during the execution. If there is no error, it returns null.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
            ],
            [
                   "Exits multiple edit mode. @return DJICameraError Shows the possible error during the execution. If there is no error, it returns null.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_exitMultipleEditMode_inline",
                   "",
            ],
            [
                   "toggleFileSelectionAtIndex",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_toggleFileSelectionAtIndex_inline",
                   "Selects or unselects a file at the specified index of the current page. This index is unrelated to the filename,  and is used in multiple edit mode.  Precondition:  The camera must enter Multiple Edit Mode.   @return DJICameraError Shows the possible error during the execution. If there is no error, it returns  null</code>.  @param index Index at which to select a file. The value falls in [1,8]. However, the exact range should depends on how many photos totally in current page.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
            ],
            [
                   "Selects or unselects a file at the specified index of the current page. This index is unrelated to the filename,  and is used in multiple edit mode.  Precondition:  The camera must enter Multiple Edit Mode.   @return DJICameraError Shows the possible error during the execution. If there is no error, it returns  null</code>.  @param index Index at which to select a file. The value falls in [1,8]. However, the exact range should depends on how many photos totally in current page.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_toggleFileSelectionAtIndex_inline",
                   "",
            ],
            [
                   "selectAllFiles",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_selectAllFiles_inline",
                   "Selects all the files on the SD card.  Precondition:  The camera must enter Multi Edit Mode.  @return DJICameraError Shows the possible error during the execution. If there is no error, it  returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
            ],
            [
                   "Selects all the files on the SD card.  Precondition:  The camera must enter Multi Edit Mode.  @return DJICameraError Shows the possible error during the execution. If there is no error, it  returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_selectAllFiles_inline",
                   "",
            ],
            [
                   "unselectAllFiles",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_unselectAllFiles_inline",
                   "Unselects all the files on the SD card.  Precondition:  The camera must enter Multiple Edit Mode.  @return DJICameraError Shows the possible error during the execution. If there is no error,  it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
            ],
            [
                   "Unselects all the files on the SD card.  Precondition:  The camera must enter Multiple Edit Mode.  @return DJICameraError Shows the possible error during the execution. If there is no error,  it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_unselectAllFiles_inline",
                   "",
            ],
            [
                   "selectAllFilesInPage",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_selectAllFilesInPage_inline",
                   "Selects all the file(s) on the current page.  Precondition:  The camera must enter Multiple Edit Mode.   @return DJICameraError Shows the possible error during the execution. If there is no error, it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
            ],
            [
                   "Selects all the file(s) on the current page.  Precondition:  The camera must enter Multiple Edit Mode.   @return DJICameraError Shows the possible error during the execution. If there is no error, it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_selectAllFilesInPage_inline",
                   "",
            ],
            [
                   "unselectAllFilesInPage",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_unselectAllFilesInPage_inline",
                   "Unselects all the file(s) on the current page.  Precondition:  The camera must enter Multiple Edit  Mode. @return DJICameraError Shows the possible error during the execution. If there is no error, it  returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
            ],
            [
                   "Unselects all the file(s) on the current page.  Precondition:  The camera must enter Multiple Edit  Mode. @return DJICameraError Shows the possible error during the execution. If there is no error, it  returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_unselectAllFilesInPage_inline",
                   "",
            ],
            [
                   "deleteAllSelectedFiles",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_deleteAllSelectedFiles_inline",
                   "Deletes all selected files from the SD card.  Precondition:  The camera must enter Multiple Edit Mode.  Post condition:  The images will be deleted from the SD card.  @return DJICameraError Shows  the possible error during the execution. If there is no error, it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
            ],
            [
                   "Deletes all selected files from the SD card.  Precondition:  The camera must enter Multiple Edit Mode.  Post condition:  The images will be deleted from the SD card.  @return DJICameraError Shows  the possible error during the execution. If there is no error, it returns null</code>.  @return `DJICameraError` shows the possible error during the execution. If there is no error, it returns null.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_deleteAllSelectedFiles_inline",
                   "",
            ],
            [
                   "downloadSelectedFiles",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_downloadSelectedFiles_inline",
                   "Downloads the currently selected media files.  Precondition:  The camera must enter multiple preview mode.  @param destDir The destination file directory, e.g., SDCardPath/folder/ @param callback The execution callback.",
            ],
            [
                   "Downloads the currently selected media files.  Precondition:  The camera must enter multiple preview mode.  @param destDir The destination file directory, e.g., SDCardPath/folder/ @param callback The execution callback.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_downloadSelectedFiles_inline",
                   "",
            ],
            [
                   "FileDownloadCallback",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_CameraFileDownloadCallbackInterface_inline",
                   "This callback will notify the process of downloading selected files.",
            ],
            [
                   "This callback will notify the process of downloading selected files.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_CameraFileDownloadCallbackInterface_inline",
                   "",
            ],
            [
                   "PlaybackState",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "",
                   "This class provides the current state of the Playback manager, which includes the numbers of thumbnail and media files, video duration, video play progress, and file download state.",
            ],
            [
                   "This class provides the current state of the Playback manager, which includes the numbers of thumbnail and media files, video duration, video play progress, and file download state.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_UpdatePlaybackState_inline",
                   "Updates the playback state of the camera. This update method will only be called when the camera's work mode is  set to `PLAYBACK`.  @param state Contains the state information when the camera in the playback state, such as numbers of photos in the SD card, numbers of videos in the SD card and the media file type.",
            ],
            [
                   "Updates the playback state of the camera. This update method will only be called when the camera's work mode is  set to `PLAYBACK`.  @param state Contains the state information when the camera in the playback state, such as numbers of photos in the SD card, numbers of videos in the SD card and the media file type.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_UpdatePlaybackState_inline",
                   "",
            ],
            [
                   "onStart",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_CameraFileDownloadOnStart_inline",
                   "Called as a file is about to start downloading.",
            ],
            [
                   "Called as a file is about to start downloading.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_CameraFileDownloadOnStart_inline",
                   "",
            ],
            [
                   "onEnd",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_CameraFileDownloadOnEnd_inline",
                   "Called when a file has completed downloading.",
            ],
            [
                   "Called when a file has completed downloading.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_CameraFileDownloadOnEnd_inline",
                   "",
            ],
            [
                   "onError",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_CameraFileDownloadOnError_inline",
                   "Called when there is an error during download.  @param exception The error exception.",
            ],
            [
                   "Called when there is an error during download.  @param exception The error exception.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_CameraFileDownloadOnError_inline",
                   "",
            ],
            [
                   "onProgressUpdate",
                   2,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_CameraFileDownloadOnProgressUpdate_inline",
                   "Called to update the progress on downloading a file in percent. Range is [0, 100].  @param progress The progress of downloading.",
            ],
            [
                   "Called to update the progress on downloading a file in percent. Range is [0, 100].  @param progress The progress of downloading.",
                   1,
                   "/Components/Camera/DJIPlaybackManager.html",
                   "#DJIPlaybackManager_CameraFileDownloadOnProgressUpdate_inline",
                   "",
            ],
            [
                   "getPlaybackMode",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_playbackMode_inline",
                   "The current mode of the Playback manager.  @return Playback manager current mode.",
            ],
            [
                   "The current mode of the Playback manager.  @return Playback manager current mode.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_playbackMode_inline",
                   "",
            ],
            [
                   "getNumberOfMediaFiles",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_numberOfMediaFiles_inline",
                   "The total number of media files on the SD card, including photos and videos.  @return Number of media files.",
            ],
            [
                   "The total number of media files on the SD card, including photos and videos.  @return Number of media files.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_numberOfMediaFiles_inline",
                   "",
            ],
            [
                   "getNumberOfThumbnails",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_numberOfThumbnails_inline",
                   "The total number of thumbnails for both the photos and videos being viewed on the page. The value of the property  is valid when the `PlaybackMode`  is `MULTIPLE_MEDIA_FILE_PREVIEW` .  @return Number of thumbnails.",
            ],
            [
                   "The total number of thumbnails for both the photos and videos being viewed on the page. The value of the property  is valid when the `PlaybackMode`  is `MULTIPLE_MEDIA_FILE_PREVIEW` .  @return Number of thumbnails.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_numberOfThumbnails_inline",
                   "",
            ],
            [
                   "getPhotoCount",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_numberOfPhotos_inline",
                   "The total number of photos on the SD card.  @return Number of photos.",
            ],
            [
                   "The total number of photos on the SD card.  @return Number of photos.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_numberOfPhotos_inline",
                   "",
            ],
            [
                   "getVideoCount",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_numberOfVideos_inline",
                   "The total number of videos on the SD card.  @return Number of videos.",
            ],
            [
                   "The total number of videos on the SD card.  @return Number of videos.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_numberOfVideos_inline",
                   "",
            ],
            [
                   "getFileType",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_mediaFileType_inline",
                   "The type of the current file. The CameraMediaFileType includes  types of JPEG, DNG and Video.  The value of this property is valid when the playbackMode  is `SINGLE_PHOTO_PREVIEW`, `SINGLE_VIDEO_PLAYBACK_START` .  @return Media file type.",
            ],
            [
                   "The type of the current file. The CameraMediaFileType includes  types of JPEG, DNG and Video.  The value of this property is valid when the playbackMode  is `SINGLE_PHOTO_PREVIEW`, `SINGLE_VIDEO_PLAYBACK_START` .  @return Media file type.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_mediaFileType_inline",
                   "",
            ],
            [
                   "getVideoDuration",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_videoDuration_inline",
                   "The duration in second of the playing video. The value of the property is valid only when `PlaybackMode`  is `SINGLE_VIDEO_PLAYBACK_START`  .  @return Duration of video.",
            ],
            [
                   "The duration in second of the playing video. The value of the property is valid only when `PlaybackMode`  is `SINGLE_VIDEO_PLAYBACK_START`  .  @return Duration of video.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_videoDuration_inline",
                   "",
            ],
            [
                   "getVideoPlayProgress",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_videoPlayProgress_inline",
                   "The progress, in percentage, of the playing video. The valid range is [0, 100]. The value the property is valid  only when `PlaybackMode`  is `SINGLE_VIDEO_PLAYBACK_START`  .  @return Percentage progress of view playback.",
            ],
            [
                   "The progress, in percentage, of the playing video. The valid range is [0, 100]. The value the property is valid  only when `PlaybackMode`  is `SINGLE_VIDEO_PLAYBACK_START`  .  @return Percentage progress of view playback.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_videoPlayProgress_inline",
                   "",
            ],
            [
                   "getVideoPlayPosition",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_videoPlayPosition_inline",
                   "The played duration, in seconds, of the playing video. The value the property is valid only when `PlaybackMode`  is `SINGLE_VIDEO_PLAYBACK_START` .  @return Current play position of video.",
            ],
            [
                   "The played duration, in seconds, of the playing video. The value the property is valid only when `PlaybackMode`  is `SINGLE_VIDEO_PLAYBACK_START` .  @return Current play position of video.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_videoPlayPosition_inline",
                   "",
            ],
            [
                   "getPhotoWidth",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_photoWidth_inline",
                   "The width of the photo.  @return Width of photo.",
            ],
            [
                   "The width of the photo.  @return Width of photo.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_photoWidth_inline",
                   "",
            ],
            [
                   "getPhotoHeight",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_photoHeight_inline",
                   "The dimension of the previewing photo. The value of the property is valid only when `PlaybackMode`  is `SINGLE_PHOTO_PREVIEW`  and `getFileType`  is `JPEG`.  @return Height of photo.",
            ],
            [
                   "The dimension of the previewing photo. The value of the property is valid only when `PlaybackMode`  is `SINGLE_PHOTO_PREVIEW`  and `getFileType`  is `JPEG`.  @return Height of photo.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_photoHeight_inline",
                   "",
            ],
            [
                   "getCurrentSelectedFileIndex",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_currentSelectedFileIndex_inline",
                   "The index of the current selected file.  @return Index of selected file.",
            ],
            [
                   "The index of the current selected file.  @return Index of selected file.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_currentSelectedFileIndex_inline",
                   "",
            ],
            [
                   "getSelectedFileCount",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_numberOfSelectedFiles_inline",
                   "The total number of the selected files. The value is valid while `PlaybackMode` is in DJICameraPlaybackModeMultipleFilesEdit</code>.  @return Number of selected files.",
            ],
            [
                   "The total number of the selected files. The value is valid while `PlaybackMode` is in DJICameraPlaybackModeMultipleFilesEdit</code>.  @return Number of selected files.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_numberOfSelectedFiles_inline",
                   "",
            ],
            [
                   "isAllFilesInPageSelected",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_isAllFilesInPageSelected_inline",
                   "`true` if all the files on the current page are selected.  @return Response of all files being selected on page.",
            ],
            [
                   "`true` if all the files on the current page are selected.  @return Response of all files being selected on page.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_isAllFilesInPageSelected_inline",
                   "",
            ],
            [
                   "isSelectedFileValid",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_isSelectedFileValid_inline",
                   "`true` if the previewing file is a valid photo or video. The value of the property is valid  only when `PlaybackMode`  is `SINGLE_PHOTO_PREVIEW`.  @return If file being previewed is a valid photo or video file.",
            ],
            [
                   "`true` if the previewing file is a valid photo or video. The value of the property is valid  only when `PlaybackMode`  is `SINGLE_PHOTO_PREVIEW`.  @return If file being previewed is a valid photo or video file.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_isSelectedFileValid_inline",
                   "",
            ],
            [
                   "getPlaybackDeletionState",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_fileDeleteStatus_inline",
                   "The current status of a file when the user tries to delete it.  @return Status of file being deleted.",
            ],
            [
                   "The current status of a file when the user tries to delete it.  @return Status of file being deleted.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_fileDeleteStatus_inline",
                   "",
            ],
            [
                   "isFileDownloaded",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_isFileDownloaded_inline",
                   "`true` if the previewing file has been downloaded. The value of the property is valid only when `PlaybackMode`  is `SINGLE_PHOTO_PREVIEW`.  @return `true` if the previewing file has been downloaded.",
            ],
            [
                   "`true` if the previewing file has been downloaded. The value of the property is valid only when `PlaybackMode`  is `SINGLE_PHOTO_PREVIEW`.  @return `true` if the previewing file has been downloaded.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_isFileDownloaded_inline",
                   "",
            ],
            [
                   "toString",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_toString_inline",
                   "Gets a string containing information about the playback state. @return A String of playback state.  @return A String instance of playback state.",
            ],
            [
                   "Gets a string containing information about the playback state. @return A String of playback state.  @return A String instance of playback state.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_toString_inline",
                   "",
            ],
            [
                   "CallBack",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlayBackStateCallBackInterface_inline",
                   "The interface provides the method to receive the updated state of the playback manager.",
            ],
            [
                   "The interface provides the method to receive the updated state of the playback manager.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlayBackStateCallBackInterface_inline",
                   "",
            ],
            [
                   "FileType",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackFileFormat_inline",
                   "Showing media file types when the camera is in Playback mode.",
            ],
            [
                   "Showing media file types when the camera is in Playback mode.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackFileFormat_inline",
                   "",
            ],
            [
                   "PlaybackMode",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackMode_inline",
                   "A playback mode represents a task that the Playback manager is executing.",
            ],
            [
                   "A playback mode represents a task that the Playback manager is executing.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackMode_inline",
                   "",
            ],
            [
                   "PlaybackDeletionState",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackDeletionStatus_inline",
                   "The file deletion status when deleting a file as the camera is in playback mode.",
            ],
            [
                   "The file deletion status when deleting a file as the camera is in playback mode.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackDeletionStatus_inline",
                   "",
            ],
            [
                   "JPEG",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackFileFormat_JPEG_inline",
                   "The JPEG media file type.",
            ],
            [
                   "The JPEG media file type.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackFileFormat_JPEG_inline",
                   "",
            ],
            [
                   "DNG",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackFileFormat_RAWDNG_inline",
                   "The DNG media file type.",
            ],
            [
                   "The DNG media file type.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackFileFormat_RAWDNG_inline",
                   "",
            ],
            [
                   "VIDEO",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackFileFormat_VIDEO_inline",
                   "The Video media file type.",
            ],
            [
                   "The Video media file type.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackFileFormat_VIDEO_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackFileFormat_Unknown_inline",
                   "The playback file format is unknown.",
            ],
            [
                   "The playback file format is unknown.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackFileFormat_Unknown_inline",
                   "",
            ],
            [
                   "SINGLE_PHOTO_PREVIEW",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackMode_SingleFilePreview_inline",
                   "Single file preview mode.",
            ],
            [
                   "Single file preview mode.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackMode_SingleFilePreview_inline",
                   "",
            ],
            [
                   "SINGLE_VIDEO_PLAYBACK_START",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackMode_SingleVideoPlaybackStart_inline",
                   "Single video playback start.",
            ],
            [
                   "Single video playback start.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackMode_SingleVideoPlaybackStart_inline",
                   "",
            ],
            [
                   "SINGLE_VIDEO_PLAYBACK_PAUSED",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackMode_SingleVideoPlaybackPause_inline",
                   "Single video playback pause.",
            ],
            [
                   "Single video playback pause.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackMode_SingleVideoPlaybackPause_inline",
                   "",
            ],
            [
                   "MULTIPLE_FILES_EDIT",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackMode_MultipleFilesEdit_inline",
                   "Multiple file edit.",
            ],
            [
                   "Multiple file edit.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackMode_MultipleFilesEdit_inline",
                   "",
            ],
            [
                   "MULTIPLE_MEDIA_FILE_PREVIEW",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackMode_MultipleFilesPreview_inline",
                   "Multiple media file preview.",
            ],
            [
                   "Multiple media file preview.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackMode_MultipleFilesPreview_inline",
                   "",
            ],
            [
                   "MEDIA_FILE_DOWNLOAD",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackMode_Download_inline",
                   "Download media files.",
            ],
            [
                   "Download media files.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackMode_Download_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackMode_Unknown_inline",
                   "Unknown playback mode.",
            ],
            [
                   "Unknown playback mode.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackMode_Unknown_inline",
                   "",
            ],
            [
                   "NONE",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackDeletionStatus_None_inline",
                   "Camera is not deleting files.",
            ],
            [
                   "Camera is not deleting files.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackDeletionStatus_None_inline",
                   "",
            ],
            [
                   "FAILED",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackDeletionStatus_Failure_inline",
                   "Media file delete failed.",
            ],
            [
                   "Media file delete failed.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackDeletionStatus_Failure_inline",
                   "",
            ],
            [
                   "DELETING",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackDeletionStatus_Deleting_inline",
                   "Media file is deleting.",
            ],
            [
                   "Media file is deleting.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackDeletionStatus_Deleting_inline",
                   "",
            ],
            [
                   "SUCCESSFUL",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackDeletionStatus_Success_inline",
                   "Delete Media file successfully.",
            ],
            [
                   "Delete Media file successfully.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackDeletionStatus_Success_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackDeletionStatus_Unknown_inline",
                   "Media file unknown delete status.",
            ],
            [
                   "Media file unknown delete status.",
                   1,
                   "/Components/Camera/DJIPlaybackManager_DJICameraPlaybackState.html",
                   "#DJIPlaybackManager_DJICameraPlaybackState_DJICameraPlaybackDeletionStatus_Unknown_inline",
                   "",
            ],
            [
                   "getHeading",
                   2,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_heading_inline",
                   "Represents the heading, in degrees. True North is 0 degrees, positive heading is East of North, and negative  heading is West of North. Heading bounds are [-180, 180].  @return A double value of the heading, in degrees.",
            ],
            [
                   "Represents the heading, in degrees. True North is 0 degrees, positive heading is East of North, and negative  heading is West of North. Heading bounds are [-180, 180].  @return A double value of the heading, in degrees.",
                   1,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_heading_inline",
                   "",
            ],
            [
                   "hasError",
                   2,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_hasError_inline",
                   "`true` if the compass has an error. If `true`, the compass  needs calibration.  @return A boolean value.",
            ],
            [
                   "`true` if the compass has an error. If `true`, the compass  needs calibration.  @return A boolean value.",
                   1,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_hasError_inline",
                   "",
            ],
            [
                   "isCalibrating",
                   2,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_isCalibrating_inline",
                   "`true` if the compass is currently calibrating.  @return A boolean value.",
            ],
            [
                   "`true` if the compass is currently calibrating.  @return A boolean value.",
                   1,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_isCalibrating_inline",
                   "",
            ],
            [
                   "getCalibrationState",
                   2,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_calibrationStatus_inline",
                   "Shows the calibration status.  @return An enum value of `CompassCalibrationState`.",
            ],
            [
                   "Shows the calibration status.  @return An enum value of `CompassCalibrationState`.",
                   1,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_calibrationStatus_inline",
                   "",
            ],
            [
                   "startCalibration",
                   2,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_startCalibration_inline",
                   "Starts compass calibration. Make sure there are no magnets or metal objects near the compass.  @param callback Completion callback. See DJIBaseComponent for more information about the callback and what is  recommended be done with it.",
            ],
            [
                   "Starts compass calibration. Make sure there are no magnets or metal objects near the compass.  @param callback Completion callback. See DJIBaseComponent for more information about the callback and what is  recommended be done with it.",
                   1,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_startCalibration_inline",
                   "",
            ],
            [
                   "stopCalibration",
                   2,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_stopCalibration_inline",
                   "Stops compass calibration.  @param callback Completion callback. See DJIBaseComponent for more information about the callback and what is recommended  be done with it.",
            ],
            [
                   "Stops compass calibration.  @param callback Completion callback. See DJIBaseComponent for more information about the callback and what is recommended  be done with it.",
                   1,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_stopCalibration_inline",
                   "",
            ],
            [
                   "setCalibrationStateCallback",
                   2,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_calibrationStatusCallback_inline",
                   "Sets the callback for compass calibration.  @param callback The callback with compass calibration state",
            ],
            [
                   "Sets the callback for compass calibration.  @param callback The callback with compass calibration state",
                   1,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_calibrationStatusCallback_inline",
                   "",
            ],
            [
                   "CompassCalibrationState",
                   2,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_DJICompassCalibrationStatus_inline",
                   "An enum class representing compass calibration.",
            ],
            [
                   "An enum class representing compass calibration.",
                   1,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_DJICompassCalibrationStatus_inline",
                   "",
            ],
            [
                   "NOT_CALIBRATING",
                   2,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_DJICompassCalibrationStatus_Normal_inline",
                   "Normal state. Compass not in calibration.",
            ],
            [
                   "Normal state. Compass not in calibration.",
                   1,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_DJICompassCalibrationStatus_Normal_inline",
                   "",
            ],
            [
                   "HORIZONTAL",
                   2,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_DJICompassCalibrationStatus_Horizontal_inline",
                   "Compass horizontal calibration. The user should hold the aircraft horizontally and rotate it 360 degrees.",
            ],
            [
                   "Compass horizontal calibration. The user should hold the aircraft horizontally and rotate it 360 degrees.",
                   1,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_DJICompassCalibrationStatus_Horizontal_inline",
                   "",
            ],
            [
                   "VERTICAL",
                   2,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_DJICompassCalibrationStatus_Vertical_inline",
                   "Compass vertical calibration. The user should hold the aircraft vertically, with the nose pointed towards the  ground, and rotate the aircraft 360 degrees.",
            ],
            [
                   "Compass vertical calibration. The user should hold the aircraft vertically, with the nose pointed towards the  ground, and rotate the aircraft 360 degrees.",
                   1,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_DJICompassCalibrationStatus_Vertical_inline",
                   "",
            ],
            [
                   "SUCCESSFUL",
                   2,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_DJICompassCalibrationStatus_Succeeded_inline",
                   "Compass calibration succeeded.",
            ],
            [
                   "Compass calibration succeeded.",
                   1,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_DJICompassCalibrationStatus_Succeeded_inline",
                   "",
            ],
            [
                   "FAILED",
                   2,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_DJICompassCalibrationStatus_Failed_inline",
                   "Compass calibration failed. Make sure there are no magnets or metal objects near the compass and retry.",
            ],
            [
                   "Compass calibration failed. Make sure there are no magnets or metal objects near the compass and retry.",
                   1,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_DJICompassCalibrationStatus_Failed_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_DJICompassCalibrationStatus_Unknown_inline",
                   "Compass calibration status unknown.",
            ],
            [
                   "Compass calibration status unknown.",
                   1,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_DJICompassCalibrationStatus_Unknown_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_CompassCalibrationStateCallback_inline",
                   "Updates compass calibration state",
            ],
            [
                   "Updates compass calibration state",
                   1,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_CompassCalibrationStateCallback_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_UpdateCompassCalibrationState_inline",
                   "Called when calibration state is updated.  @param state The updated calibration state",
            ],
            [
                   "Called when calibration state is updated.  @param state The updated calibration state",
                   1,
                   "/Components/Compass/DJICompass.html",
                   "#DJICompass_UpdateCompassCalibrationState_inline",
                   "",
            ],
            [
                   "setStateCallback",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setUpdateSystemStateCallback_inline",
                   "Sets the callback function that updates the flight controller's current state data. This method is called  10 times per second.  @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the callback function that updates the flight controller's current state data. This method is called  10 times per second.  @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setUpdateSystemStateCallback_inline",
                   "",
            ],
            [
                   "setIMUStateCallback",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setOnIMUStateChangedCallback_inline",
                   "Sets the IMU State callback, which will receive the changed state of the IMU.  @param callback The callback for receiving the changed state of IMU.",
            ],
            [
                   "Sets the IMU State callback, which will receive the changed state of the IMU.  @param callback The callback for receiving the changed state of IMU.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setOnIMUStateChangedCallback_inline",
                   "",
            ],
            [
                   "setASBInformationCallback",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setASBInformationCallback_inline",
                   "Sets the AirSenseSystemInformation callback, which will receive the AirSenseSystemInformation.  @param callback The callback for receiving the `AirSenseSystemInformation`.",
            ],
            [
                   "Sets the AirSenseSystemInformation callback, which will receive the AirSenseSystemInformation.  @param callback The callback for receiving the `AirSenseSystemInformation`.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setASBInformationCallback_inline",
                   "",
            ],
            [
                   "setOnboardSDKDeviceDataCallback",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setReceiveExternalDeviceDataCallback_inline",
                   "Sets the callback function that updates the data received from an external device (e.g. the onboard device).  @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the callback function that updates the data received from an external device (e.g. the onboard device).  @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setReceiveExternalDeviceDataCallback_inline",
                   "",
            ],
            [
                   "getState",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getCurrentState_inline",
                   "Returns the current state of flight controller.  @return An instance of `FlightControllerState`.",
            ],
            [
                   "Returns the current state of flight controller.  @return An instance of `FlightControllerState`.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getCurrentState_inline",
                   "",
            ],
            [
                   "getCompass",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_compass_inline",
                   "Compass object.  @return An instance of `Compass`.",
            ],
            [
                   "Compass object.  @return An instance of `Compass`.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_compass_inline",
                   "",
            ],
            [
                   "getRTK",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_RTK_inline",
                   "RTK positioning object.  @return An instance of `RTK`.",
            ],
            [
                   "RTK positioning object.  @return An instance of `RTK`.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_RTK_inline",
                   "",
            ],
            [
                   "getIMUCount",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_numberOfIMUS_inline",
                   "Number of IMU modules in the flight controller. Most products have one IMU.  Exceptions:  - Phantom 4, Phantom 4 Pro, Mavic Pro, and Inspire 2 each have two IMUs  - A3, Matrice 600, and Matrice 600 Pro each have one inner IMU and can have at most two external IMUs.  - N3 has two inner IMUs and can have one external IMU.  @return An int value.",
            ],
            [
                   "Number of IMU modules in the flight controller. Most products have one IMU.  Exceptions:  - Phantom 4, Phantom 4 Pro, Mavic Pro, and Inspire 2 each have two IMUs  - A3, Matrice 600, and Matrice 600 Pro each have one inner IMU and can have at most two external IMUs.  - N3 has two inner IMUs and can have one external IMU.  @return An int value.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_numberOfIMUS_inline",
                   "",
            ],
            [
                   "startIMUCalibration",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_startIMUCalibration_inline",
                   "Starts IMU calibration. For aircraft with multiple IMUs, this method will start the calibration  of all IMUs. Keep the aircraft stationary and horizontal during calibration, which will take 5 to 10  minutes. The completion block will be called once the calibration is started. Use the  `onUpdate` method to check the execution status of the IMU calibration.  @param callback Completion callback.",
            ],
            [
                   "Starts IMU calibration. For aircraft with multiple IMUs, this method will start the calibration  of all IMUs. Keep the aircraft stationary and horizontal during calibration, which will take 5 to 10  minutes. The completion block will be called once the calibration is started. Use the  `onUpdate` method to check the execution status of the IMU calibration.  @param callback Completion callback.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_startIMUCalibration_inline",
                   "",
            ],
            [
                   "startIMUCalibration",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_startIMUCalibrationForID_inline",
                   "Starts the calibration for IMU with a specific ID. Keep the aircraft stationary and horizontal during calibration, which will take 5 to 10  minutes. The completion block will be called once the calibration is started.  Use the `onUpdate` method to check the execution  status of the IMU calibration.  @param index The IMU with the specific ID to calibrate. @param callback Completion callback to check if the calibration starts successfully.",
            ],
            [
                   "Starts the calibration for IMU with a specific ID. Keep the aircraft stationary and horizontal during calibration, which will take 5 to 10  minutes. The completion block will be called once the calibration is started.  Use the `onUpdate` method to check the execution  status of the IMU calibration.  @param index The IMU with the specific ID to calibrate. @param callback Completion callback to check if the calibration starts successfully.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_startIMUCalibrationForID_inline",
                   "",
            ],
            [
                   "getLandingGear",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_landingGear_inline",
                   "Landing Gear object. For products with movable landing gear only.  @return An instance of `LandingGear`.",
            ],
            [
                   "Landing Gear object. For products with movable landing gear only.  @return An instance of `LandingGear`.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_landingGear_inline",
                   "",
            ],
            [
                   "isLandingGearMovable",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_isLandingGearMovable_inline",
                   "`true` if landing gear is supported for the connected aircraft.  @return A boolean value.",
            ],
            [
                   "`true` if landing gear is supported for the connected aircraft.  @return A boolean value.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_isLandingGearMovable_inline",
                   "",
            ],
            [
                   "setLEDsEnabled",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setLEDsEnabled_inline",
                   "Turns on/off the forward LEDs, which are used to indicate aircraft status. They are on by default.  @param enabled `true` to turn on forward LEDs, `false` to turn them off. @param callback Completion callback that receives the getter execution result.",
            ],
            [
                   "Turns on/off the forward LEDs, which are used to indicate aircraft status. They are on by default.  @param enabled `true` to turn on forward LEDs, `false` to turn them off. @param callback Completion callback that receives the getter execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setLEDsEnabled_inline",
                   "",
            ],
            [
                   "getLEDsEnabled",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getLEDsEnabled_inline",
                   "Gets on/off status of forward LEDs.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets on/off status of forward LEDs.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getLEDsEnabled_inline",
                   "",
            ],
            [
                   "getSimulator",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_simulator_inline",
                   "Simulator object.  @return An instance of `Simulator`.",
            ],
            [
                   "Simulator object.  @return An instance of `Simulator`.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_simulator_inline",
                   "",
            ],
            [
                   "isOnboardSDKDeviceAvailable",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_isOnboardSDKDeviceAvailable_inline",
                   "Checks if the onboard SDK device is available.  @return A boolean value.",
            ],
            [
                   "Checks if the onboard SDK device is available.  @return A boolean value.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_isOnboardSDKDeviceAvailable_inline",
                   "",
            ],
            [
                   "sendDataToOnboardSDKDevice",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_sendDataToOnboardSDKDevice_inline",
                   "If there is a device connected to the aircraft using the Onboard SDK, this method will send data to that  device. The size of the data cannot be greater than 100 bytes, and will be sent in 40 byte increments every  14ms. This method is only supported on products that support the Onboard SDK (Matrice 100, Matrice 600, Matrice 600 Pro, A3, A3 Pro, and N3).  @param data Data to be sent to the external device. The size of the data should not be larger than 100 bytes. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "If there is a device connected to the aircraft using the Onboard SDK, this method will send data to that  device. The size of the data cannot be greater than 100 bytes, and will be sent in 40 byte increments every  14ms. This method is only supported on products that support the Onboard SDK (Matrice 100, Matrice 600, Matrice 600 Pro, A3, A3 Pro, and N3).  @param data Data to be sent to the external device. The size of the data should not be larger than 100 bytes. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_sendDataToOnboardSDKDevice_inline",
                   "",
            ],
            [
                   "turnOnMotors",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_turnOnMotors_inline",
                   "Turns on the aircraft's motors. Supported by flight controller firmware 3.1.0.0 or above.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Turns on the aircraft's motors. Supported by flight controller firmware 3.1.0.0 or above.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_turnOnMotors_inline",
                   "",
            ],
            [
                   "turnOffMotors",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_turnOffMotors_inline",
                   "Turns off the aircraft's motors. The method can only be called when the aircraft is on the ground.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Turns off the aircraft's motors. The method can only be called when the aircraft is on the ground.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_turnOffMotors_inline",
                   "",
            ],
            [
                   "startTakeoff",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_takeOff_inline",
                   "Starts aircraft takeoff. Takeoff is considered complete when the aircraft is hovering 1.2 meters (4 feet)  above the ground. Completion block is called when aircraft crosses 0.5 meters (1.6 feet). If the motors  are already on, this command cannot be executed.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Starts aircraft takeoff. Takeoff is considered complete when the aircraft is hovering 1.2 meters (4 feet)  above the ground. Completion block is called when aircraft crosses 0.5 meters (1.6 feet). If the motors  are already on, this command cannot be executed.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_takeOff_inline",
                   "",
            ],
            [
                   "cancelTakeoff",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_cancelTakeOff_inline",
                   "Stops aircraft takeoff. If called before `startTakeoff` is complete, the aircraft will  cancel takeoff (`startTakeoff` completion block will return an error) and hover at the  current height.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Stops aircraft takeoff. If called before `startTakeoff` is complete, the aircraft will  cancel takeoff (`startTakeoff` completion block will return an error) and hover at the  current height.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_cancelTakeOff_inline",
                   "",
            ],
            [
                   "startLanding",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_autoLanding_inline",
                   "Starts auto-landing of the aircraft. Returns completion block once aircraft begins to descend for auto-land.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Starts auto-landing of the aircraft. Returns completion block once aircraft begins to descend for auto-land.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_autoLanding_inline",
                   "",
            ],
            [
                   "cancelLanding",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_cancelAutoLanding_inline",
                   "Stops auto-landing of the aircraft. If called before `startLanding` is complete, then the  auto landing will be canceled (`startLanding` completion block will return an error) and  the aircraft will hover at its current location.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Stops auto-landing of the aircraft. If called before `startLanding` is complete, then the  auto landing will be canceled (`startLanding` completion block will return an error) and  the aircraft will hover at its current location.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_cancelAutoLanding_inline",
                   "",
            ],
            [
                   "confirmLanding",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_confirmLanding_inline",
                   "Confirms continuation of landing action. When the clearance between the aircraft and the ground is less than  0.3m, the aircraft will pause landing and wait for user's confirmation. Can  use `isLandingConfirmationNeeded`  in `FlightControllerState` to check if confirmation is needed. It is  supported by flight controller firmware 3.2.0.0 and above.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Confirms continuation of landing action. When the clearance between the aircraft and the ground is less than  0.3m, the aircraft will pause landing and wait for user's confirmation. Can  use `isLandingConfirmationNeeded`  in `FlightControllerState` to check if confirmation is needed. It is  supported by flight controller firmware 3.2.0.0 and above.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_confirmLanding_inline",
                   "",
            ],
            [
                   "isVirtualStickControlModeAvailable",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_VirtualStickControlModeCategory_isVirtualStickControlModeAvailable_inline",
                   "Indicates whether the virtual stick control interface can be used. Virtual stick mode  is only available when all of the follow requirements are met:  - Virtual stick mode is enabled.  - No waypoint, hotpoint, or follow-me mission is running.  - `FlightOrientationMode` is set to `AIRCRAFT_HEADING`  - Terrain-follow is disabled if the aircraft supports this feature.  - Tripod mode is disabled if the aircraft supports this feature.  @return `true` if virtual stick mode is available.",
            ],
            [
                   "Indicates whether the virtual stick control interface can be used. Virtual stick mode  is only available when all of the follow requirements are met:  - Virtual stick mode is enabled.  - No waypoint, hotpoint, or follow-me mission is running.  - `FlightOrientationMode` is set to `AIRCRAFT_HEADING`  - Terrain-follow is disabled if the aircraft supports this feature.  - Tripod mode is disabled if the aircraft supports this feature.  @return `true` if virtual stick mode is available.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_VirtualStickControlModeCategory_isVirtualStickControlModeAvailable_inline",
                   "",
            ],
            [
                   "setVirtualStickModeEnabled",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_VirtualStickControlModeCategory_setVirtualStickModeEnabled_inline",
                   "Enables/disables virtual stick control mode. By enabling virtual stick control mode, the aircraft can be controlled  using `sendVirtualStickFlightControlData`. Not  supported by Mavic Pro when using the WiFi connection.  @param enabled `true` to enable virtual stick mode. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Enables/disables virtual stick control mode. By enabling virtual stick control mode, the aircraft can be controlled  using `sendVirtualStickFlightControlData`. Not  supported by Mavic Pro when using the WiFi connection.  @param enabled `true` to enable virtual stick mode. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_VirtualStickControlModeCategory_setVirtualStickModeEnabled_inline",
                   "",
            ],
            [
                   "getVirtualStickModeEnabled",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_VirtualStickControlModeCategory_getVirtualStickModeEnabled_inline",
                   "Gets virtual stick mode status (enabled/disabled). Not supported by Mavic Pro when using the WiFi connection.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Gets virtual stick mode status (enabled/disabled). Not supported by Mavic Pro when using the WiFi connection.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_VirtualStickControlModeCategory_getVirtualStickModeEnabled_inline",
                   "",
            ],
            [
                   "isVirtualStickAdvancedModeEnabled",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_virtualStickAdvancedModeEnabled_inline",
                   "`true` if Virtual Stick advanced mode is enabled. By default, it is `false`. Assuming GPS signal is good, advanced mode will allow aircraft to compensate for wind when hovering.  For the Phantom 4, collision avoidance can be enabled for virtual stick  control if advanced mode is on, and collision avoidance is enabled in `FlightAssistant`.  Only supported by flight controller firmware versions 3.1.x.x or above.  @return A boolean value.",
            ],
            [
                   "`true` if Virtual Stick advanced mode is enabled. By default, it is `false`. Assuming GPS signal is good, advanced mode will allow aircraft to compensate for wind when hovering.  For the Phantom 4, collision avoidance can be enabled for virtual stick  control if advanced mode is on, and collision avoidance is enabled in `FlightAssistant`.  Only supported by flight controller firmware versions 3.1.x.x or above.  @return A boolean value.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_virtualStickAdvancedModeEnabled_inline",
                   "",
            ],
            [
                   "setVirtualStickAdvancedModeEnabled",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setVirtualStickAdvancedModeEnabled_inline",
                   "Set `true` to enable Virtual Stick advanced mode. By default, it is `false`. Assuming GPS signal is good, advanced mode will allow aircraft to compensate for wind when hovering.   For the Phantom 4, collision avoidance can be enabled for virtual stick   control if advanced mode is on, and collision avoidance is enabled in `FlightAssistant`.   Only supported by flight controller firmware versions 3.1.0.0 or above.  @param virtualStickAdvancedModeEnabled True</code> for enabling advanced mode.",
            ],
            [
                   "Set `true` to enable Virtual Stick advanced mode. By default, it is `false`. Assuming GPS signal is good, advanced mode will allow aircraft to compensate for wind when hovering.   For the Phantom 4, collision avoidance can be enabled for virtual stick   control if advanced mode is on, and collision avoidance is enabled in `FlightAssistant`.   Only supported by flight controller firmware versions 3.1.0.0 or above.  @param virtualStickAdvancedModeEnabled True</code> for enabling advanced mode.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setVirtualStickAdvancedModeEnabled_inline",
                   "",
            ],
            [
                   "getVerticalControlMode",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_verticalControlMode_inline",
                   "Returns current mode of `VerticalControlMode`.  @return An enum value of `VerticalControlMode`.",
            ],
            [
                   "Returns current mode of `VerticalControlMode`.  @return An enum value of `VerticalControlMode`.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_verticalControlMode_inline",
                   "",
            ],
            [
                   "setVerticalControlMode",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setVerticalControlMode_inline",
                   "Sets whether virtual stick vertical controller changes aircraft's altitude or vertical velocity.  @param verticalControlMode A specific DJIVirtualStickVerticalControlMode object.",
            ],
            [
                   "Sets whether virtual stick vertical controller changes aircraft's altitude or vertical velocity.  @param verticalControlMode A specific DJIVirtualStickVerticalControlMode object.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setVerticalControlMode_inline",
                   "",
            ],
            [
                   "getRollPitchControlMode",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_rollPitchControlMode_inline",
                   "Returns current mode of `RollPitchControlMode`.  @return An enum value of `RollPitchControlMode`.",
            ],
            [
                   "Returns current mode of `RollPitchControlMode`.  @return An enum value of `RollPitchControlMode`.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_rollPitchControlMode_inline",
                   "",
            ],
            [
                   "setRollPitchControlMode",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setRollPitchControlMode_inline",
                   "Sets whether roll/pitch virtual controllers change aircraft's angle relative to level orientation, or aircraft's velocity on horizontal axes.  @param rollPitchControlMode A specific DJIVirtualStickRollPitchControlMode object.",
            ],
            [
                   "Sets whether roll/pitch virtual controllers change aircraft's angle relative to level orientation, or aircraft's velocity on horizontal axes.  @param rollPitchControlMode A specific DJIVirtualStickRollPitchControlMode object.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setRollPitchControlMode_inline",
                   "",
            ],
            [
                   "getYawControlMode",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_yawControlMode_inline",
                   "Returns current mode of `YawControlMode`.  @return An enum value of `YawControlMode`.",
            ],
            [
                   "Returns current mode of `YawControlMode`.  @return An enum value of `YawControlMode`.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_yawControlMode_inline",
                   "",
            ],
            [
                   "setYawControlMode",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setYawControlMode_inline",
                   "Sets whether virtual stick yaw controller changes aircraft's heading by angle or by angular velocity.  @param yawControlMode A specific DJIVirtualStickYawControlMode object.",
            ],
            [
                   "Sets whether virtual stick yaw controller changes aircraft's heading by angle or by angular velocity.  @param yawControlMode A specific DJIVirtualStickYawControlMode object.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setYawControlMode_inline",
                   "",
            ],
            [
                   "getRollPitchCoordinateSystem",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_rollPitchCoordinateSystem_inline",
                   "Gets current mode of `FlightCoordinateSystem`.  @return Coordinate system object.",
            ],
            [
                   "Gets current mode of `FlightCoordinateSystem`.  @return Coordinate system object.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_rollPitchCoordinateSystem_inline",
                   "",
            ],
            [
                   "setRollPitchCoordinateSystem",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setRollPitchCoordinateSystem_inline",
                   "Sets whether horizontal axes are fixed relative to the ground or to the aircraft.  @param rollPitchCoordinateSystem A specific rollPitchCoordinateSystem object.",
            ],
            [
                   "Sets whether horizontal axes are fixed relative to the ground or to the aircraft.  @param rollPitchCoordinateSystem A specific rollPitchCoordinateSystem object.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setRollPitchCoordinateSystem_inline",
                   "",
            ],
            [
                   "sendVirtualStickFlightControlData",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_VirtualStickControlModeCategory_sendVirtualStickFlightControlData_inline",
                   "Sends flight control data using virtual stick commands. The `isVirtualStickControlModeAvailable`  method must return `true` to use virtual stick commands. Virtual stick commands  should be sent to the aircraft between 5 Hz and 25 Hz. If virtual stick commands are not sent frequently  enough, the aircraft may regard the connection as broken, which will cause the aircraft to hover in place  until the next command comes through.  @param controlData Flight control data @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sends flight control data using virtual stick commands. The `isVirtualStickControlModeAvailable`  method must return `true` to use virtual stick commands. Virtual stick commands  should be sent to the aircraft between 5 Hz and 25 Hz. If virtual stick commands are not sent frequently  enough, the aircraft may regard the connection as broken, which will cause the aircraft to hover in place  until the next command comes through.  @param controlData Flight control data @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_VirtualStickControlModeCategory_sendVirtualStickFlightControlData_inline",
                   "",
            ],
            [
                   "isFlightAssistantSupported",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_isIntelligentFlightAssistantSupported_inline",
                   "`true` if the product supports IntelligentFlightAssistant.  @return A boolean value.",
            ],
            [
                   "`true` if the product supports IntelligentFlightAssistant.  @return A boolean value.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_isIntelligentFlightAssistantSupported_inline",
                   "",
            ],
            [
                   "getFlightAssistant",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_intelligentFlightAssistant_inline",
                   "Intelligent flight assistant.  @return An instance of `FlightAssistant`.",
            ],
            [
                   "Intelligent flight assistant.  @return An instance of `FlightAssistant`.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_intelligentFlightAssistant_inline",
                   "",
            ],
            [
                   "setFlightOrientationMode",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightOrientationModeCategory_setFlightOrientationMode_inline",
                   "Sets the aircraft flight orientation relative to the Aircraft Heading, Course Lock, or Home Lock. See the  <i>Flight Controller User Guide</i> for more information about flight orientation.  @param type The orientation mode. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the aircraft flight orientation relative to the Aircraft Heading, Course Lock, or Home Lock. See the  <i>Flight Controller User Guide</i> for more information about flight orientation.  @param type The orientation mode. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightOrientationModeCategory_setFlightOrientationMode_inline",
                   "",
            ],
            [
                   "lockCourseUsingCurrentHeading",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightOrientationModeCategory_lockCourseUsingCurrentDirection_inline",
                   "Locks the current heading of the aircraft as the Course Lock. Used when Flight Orientation Mode  is `COURSE_LOCK`.  @param callback The execution callback with the returned execution result. Please refer to DJIBaseComponent for more  information about the block",
            ],
            [
                   "Locks the current heading of the aircraft as the Course Lock. Used when Flight Orientation Mode  is `COURSE_LOCK`.  @param callback The execution callback with the returned execution result. Please refer to DJIBaseComponent for more  information about the block",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightOrientationModeCategory_lockCourseUsingCurrentDirection_inline",
                   "",
            ],
            [
                   "setTripodModeEnabled",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setTripodModeEnabled_inline",
                   "Enables/disables tripod mode. Tripod Mode drops the aircraft's maximum speed to 2.2mph (3.6kph), and  significantly reduces the control stick sensitivity of the remote controller to give the user the  precision needed for accurate framing. When tripod mode is enabled, missions, terrain follow mode,  course lock, and home lock are not allowed. Tripod mode is not allowed if the aircraft is running a  mission. If GPS or vision positioning aren't available, tripod mode cannot be enabled. If the GPS  and/or the vision system is providing the flight controller with velocity information, the  aircraft will be able to automatically compensate for wind. If however, position information is not  available, manual intervention will be required. User should beware that any manual  compensation will be limited due to the reduced maximum velocity and sensitivity. If GPS and vision  position become unavailable while in tripod mode, it is advisable to alert the user and disable Tripod Mode.  @param enabled `true` to enable tripod mode. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Enables/disables tripod mode. Tripod Mode drops the aircraft's maximum speed to 2.2mph (3.6kph), and  significantly reduces the control stick sensitivity of the remote controller to give the user the  precision needed for accurate framing. When tripod mode is enabled, missions, terrain follow mode,  course lock, and home lock are not allowed. Tripod mode is not allowed if the aircraft is running a  mission. If GPS or vision positioning aren't available, tripod mode cannot be enabled. If the GPS  and/or the vision system is providing the flight controller with velocity information, the  aircraft will be able to automatically compensate for wind. If however, position information is not  available, manual intervention will be required. User should beware that any manual  compensation will be limited due to the reduced maximum velocity and sensitivity. If GPS and vision  position become unavailable while in tripod mode, it is advisable to alert the user and disable Tripod Mode.  @param enabled `true` to enable tripod mode. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setTripodModeEnabled_inline",
                   "",
            ],
            [
                   "getTripodModeEnabled",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getTripodModeEnabled_inline",
                   "Gets tripod mode status (enabled/disabled).  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets tripod mode status (enabled/disabled).  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getTripodModeEnabled_inline",
                   "",
            ],
            [
                   "setTerrainFollowModeEnabled",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setTerrainFollowModeEnabled_inline",
                   "Enable/disable terrain follow mode. The aircraft uses height information gathered by the onboard ultrasonic system and its downward facing cameras to keep flying at the same height above the ground.  @param enabled `true` to enable terrain follow mode. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Enable/disable terrain follow mode. The aircraft uses height information gathered by the onboard ultrasonic system and its downward facing cameras to keep flying at the same height above the ground.  @param enabled `true` to enable terrain follow mode. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setTerrainFollowModeEnabled_inline",
                   "",
            ],
            [
                   "getTerrainFollowModeEnabled",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getTerrainFollowModeEnabled_inline",
                   "Gets terrain mode status (enabled/disabled).  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets terrain mode status (enabled/disabled).  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getTerrainFollowModeEnabled_inline",
                   "",
            ],
            [
                   "setControlMode",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setControlMode_inline",
                   "Sets the control mode of the flight controller. It is highly recommended you keep the default value  of `SMART`. See `ControlMode` for details.  Only supported by stand-alone A3.  @param mode Control mode to set. @param callback Completion callback that receives the setter execution result.",
            ],
            [
                   "Sets the control mode of the flight controller. It is highly recommended you keep the default value  of `SMART`. See `ControlMode` for details.  Only supported by stand-alone A3.  @param mode Control mode to set. @param callback Completion callback that receives the setter execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setControlMode_inline",
                   "",
            ],
            [
                   "getControlMode",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getControlMode_inline",
                   "Gets the control mode of the flight controller.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the control mode of the flight controller.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getControlMode_inline",
                   "",
            ],
            [
                   "setAutoQuickSpinEnabled",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setAutoQuickSpinEnabled_inline",
                   "Enable/disable Auto Quick Spin. When the gimbal reaches a yaw movement limit, the aircraft will  automatically rotate 360 degrees to unwind the gimbal, allowing it to continue moving  in the yaw direction. This method is only available when the aircraft is flying at least 3m above the ground.  @param enabled `true` to enable Auto Quick Spin. @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Enable/disable Auto Quick Spin. When the gimbal reaches a yaw movement limit, the aircraft will  automatically rotate 360 degrees to unwind the gimbal, allowing it to continue moving  in the yaw direction. This method is only available when the aircraft is flying at least 3m above the ground.  @param enabled `true` to enable Auto Quick Spin. @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setAutoQuickSpinEnabled_inline",
                   "",
            ],
            [
                   "getQuickSpinEnabled",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getAutoQuickSpinEnabled_inline",
                   "Gets current Auto Quick Spin mode (enabled/disabled).  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Gets current Auto Quick Spin mode (enabled/disabled).  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getAutoQuickSpinEnabled_inline",
                   "",
            ],
            [
                   "startGoHome",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_goHome_inline",
                   "The aircraft will start to go home. The `completion callback` will return execution result once this method is invoked.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "The aircraft will start to go home. The `completion callback` will return execution result once this method is invoked.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_goHome_inline",
                   "",
            ],
            [
                   "cancelGoHome",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_cancelGoHome_inline",
                   "The aircraft will stop going home and will hover in place.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "The aircraft will stop going home and will hover in place.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_cancelGoHome_inline",
                   "",
            ],
            [
                   "setHomeLocation",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setHomeLocation_inline",
                   "Sets the home location of the aircraft. The home location is where the aircraft returns when commanded  by `startGoHome`, when its signal is lost or when the battery is below  the lowBatteryWarning threshold. The user should be careful setting a new home point location, as  sometimes the product will not be under user control when returning home. A home location  is valid if it is within 30m of one of the following:  - initial take-off location  - aircraft's current location  - current mobile location with at least kCLLocationAccuracyNearestTenMeters accuracy level  - current remote controller's location as shown by RC GPS.  @param homeLocation Home location latitude and longitude in degrees. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the home location of the aircraft. The home location is where the aircraft returns when commanded  by `startGoHome`, when its signal is lost or when the battery is below  the lowBatteryWarning threshold. The user should be careful setting a new home point location, as  sometimes the product will not be under user control when returning home. A home location  is valid if it is within 30m of one of the following:  - initial take-off location  - aircraft's current location  - current mobile location with at least kCLLocationAccuracyNearestTenMeters accuracy level  - current remote controller's location as shown by RC GPS.  @param homeLocation Home location latitude and longitude in degrees. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setHomeLocation_inline",
                   "",
            ],
            [
                   "setHomeLocationUsingAircraftCurrentLocation",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setHomeLocationUsingAircraftCurrentLocation_inline",
                   "Sets the home location of the aircraft to the current location of the aircraft. See `setHomeLocation` for details on home point use.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the home location of the aircraft to the current location of the aircraft. See `setHomeLocation` for details on home point use.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setHomeLocationUsingAircraftCurrentLocation_inline",
                   "",
            ],
            [
                   "getHomeLocation",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getHomeLocation_inline",
                   "Gets the home point of the aircraft.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the home point of the aircraft.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getHomeLocation_inline",
                   "",
            ],
            [
                   "setGoHomeHeightInMeters",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setGoHomeAltitude_inline",
                   "Sets the minimum altitude, relative to where the aircraft took off, at which the aircraft must be before  going home. This can be useful when the user foresees obstacles in the aircraft's flight path. If the aircraft's  current altitude is higher than the minimum go home altitude, it will go home at its current altitude.  The valid range for the altitude is from 20m to 500m.  @param height The aircraft's default go home altitude. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the minimum altitude, relative to where the aircraft took off, at which the aircraft must be before  going home. This can be useful when the user foresees obstacles in the aircraft's flight path. If the aircraft's  current altitude is higher than the minimum go home altitude, it will go home at its current altitude.  The valid range for the altitude is from 20m to 500m.  @param height The aircraft's default go home altitude. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setGoHomeAltitude_inline",
                   "",
            ],
            [
                   "getGoHomeHeightInMeters",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getGoHomeAltitude_inline",
                   "Gets the minimum altitude (relative to the take-off location in meters) at which the aircraft must be before  going home.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the minimum altitude (relative to the take-off location in meters) at which the aircraft must be before  going home.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getGoHomeAltitude_inline",
                   "",
            ],
            [
                   "setConnectionFailSafeBehavior",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setFlightFailsafeOperation_inline",
                   "Sets the FailSafe action for when the connection between remote controller and aircraft is lost.  @param behavior The `ConnectionFailSafeBehavior` object. @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Sets the FailSafe action for when the connection between remote controller and aircraft is lost.  @param behavior The `ConnectionFailSafeBehavior` object. @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setFlightFailsafeOperation_inline",
                   "",
            ],
            [
                   "getConnectionFailSafeBehavior",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getFlightFailsafeOperation_inline",
                   "Gets the FailSafe action for when the connection between remote controller and aircraft is lost.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the FailSafe action for when the connection between remote controller and aircraft is lost.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getFlightFailsafeOperation_inline",
                   "",
            ],
            [
                   "setLowBatteryWarningThreshold",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setGoHomeBatteryThreshold_inline",
                   "Sets the low battery warning threshold as a percentage. The percentage must be in the range of [15, 50].  @param percent Low battery warning percentage. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the low battery warning threshold as a percentage. The percentage must be in the range of [15, 50].  @param percent Low battery warning percentage. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setGoHomeBatteryThreshold_inline",
                   "",
            ],
            [
                   "getLowBatteryWarningThreshold",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getGoHomeBatteryThreshold_inline",
                   "Gets the low battery warning threshold as a percentage.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the low battery warning threshold as a percentage.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getGoHomeBatteryThreshold_inline",
                   "",
            ],
            [
                   "setSeriousLowBatteryWarningThreshold",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setLandImmediatelyBatteryThreshold_inline",
                   "Sets the serious low battery warning threshold as a percentage. The minimum value is 10.  The maximum value is value from `getLowBatteryWarningThreshold` minus 5.  @param percent Serious low battery warning percentage. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the serious low battery warning threshold as a percentage. The minimum value is 10.  The maximum value is value from `getLowBatteryWarningThreshold` minus 5.  @param percent Serious low battery warning percentage. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setLandImmediatelyBatteryThreshold_inline",
                   "",
            ],
            [
                   "getSeriousLowBatteryWarningThreshold",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getLandImmediatelyBatteryThreshold_inline",
                   "Gets the serious low battery warning threshold in percentage.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the serious low battery warning threshold in percentage.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getLandImmediatelyBatteryThreshold_inline",
                   "",
            ],
            [
                   "setSmartReturnToHomeEnabled",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setSmartReturnToHomeEnabled_inline",
                   "Enables/disables Smart Return-To-Home (RTH) feature. When it is enabled, aircraft will  request to go home when remaining battery is only enough for completing the go-home action.  @param enabled `true` to enable smart RTH. @param callback Completion block that receives the setter execution result.",
            ],
            [
                   "Enables/disables Smart Return-To-Home (RTH) feature. When it is enabled, aircraft will  request to go home when remaining battery is only enough for completing the go-home action.  @param enabled `true` to enable smart RTH. @param callback Completion block that receives the setter execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_setSmartReturnToHomeEnabled_inline",
                   "",
            ],
            [
                   "getSmartReturnToHomeEnabled",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getSmartReturnToHomeEnabled_inline",
                   "Gets if Smart Return-To-Home (RTH) feature is enabled or not. When it is enabled, aircraft  will request to go home when remaining battery is only enough for completing the go-home action.  @param callback Completion callback that receives the execution result.",
            ],
            [
                   "Gets if Smart Return-To-Home (RTH) feature is enabled or not. When it is enabled, aircraft  will request to go home when remaining battery is only enough for completing the go-home action.  @param callback Completion callback that receives the execution result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getSmartReturnToHomeEnabled_inline",
                   "",
            ],
            [
                   "confirmSmartReturnToHomeRequest",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_confirmSmartReturnToHomeRequest_inline",
                   "Confirms or cancels the Smart Return-To-Home (RTH) request. When Smart RTH is enabled, the aircraft  will request to go home when the battery is only enough for going home. Before executing the go-home  action, the aircraft will wait for the confirmation from users with 10 seconds count-down. Calling this  method within `false` can cancel the request and the aircraft will not execute go-home action.  Otherwise, go-home action will start. Smart RTH will be triggered only once during the same flight.  Flight controller with firmware version lower than 3.0.0.0 does not support confirming the Smart RTH request.  User can either cancel the request or wait for the countdown to start go-home action.  @param confirmed `true` to confirm the request and the aircraft will start go-home immediately. @param callback Completion block to receive the result.",
            ],
            [
                   "Confirms or cancels the Smart Return-To-Home (RTH) request. When Smart RTH is enabled, the aircraft  will request to go home when the battery is only enough for going home. Before executing the go-home  action, the aircraft will wait for the confirmation from users with 10 seconds count-down. Calling this  method within `false` can cancel the request and the aircraft will not execute go-home action.  Otherwise, go-home action will start. Smart RTH will be triggered only once during the same flight.  Flight controller with firmware version lower than 3.0.0.0 does not support confirming the Smart RTH request.  User can either cancel the request or wait for the countdown to start go-home action.  @param confirmed `true` to confirm the request and the aircraft will start go-home immediately. @param callback Completion block to receive the result.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_confirmSmartReturnToHomeRequest_inline",
                   "",
            ],
            [
                   "getRCSwitchFlightModeMapping",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getRemoteControllerFlightModeMapping_inline",
                   "Gets the mapping between the flight modes and the flight mode switch positions on the remote controller. Elements 0, 1, and 2 of the returned array map to `POSITION_ONE`, `POSITION_TWO`, and `POSITION_THREE` of the `getFlightModeSwitch`. The value of each Enum item represents the  corresponding value of the `RemoteControllerFlightMode` Enum representing the flight mode. The mapping is fixed for the Phantom series, Inspire series, Mavic Pro, and M100. For N3, A3, Matrice 600, and Matrice 600 Pro the mapping is firmware dependent. With firmware version 3.2.11.0 or above, the mapping can be customized in DJI Assistant 2.  @param callback Completion callback that receives the getter result. Each element of array is an instance with a value of `RemoteControllerFlightMode`.",
            ],
            [
                   "Gets the mapping between the flight modes and the flight mode switch positions on the remote controller. Elements 0, 1, and 2 of the returned array map to `POSITION_ONE`, `POSITION_TWO`, and `POSITION_THREE` of the `getFlightModeSwitch`. The value of each Enum item represents the  corresponding value of the `RemoteControllerFlightMode` Enum representing the flight mode. The mapping is fixed for the Phantom series, Inspire series, Mavic Pro, and M100. For N3, A3, Matrice 600, and Matrice 600 Pro the mapping is firmware dependent. With firmware version 3.2.11.0 or above, the mapping can be customized in DJI Assistant 2.  @param callback Completion callback that receives the getter result. Each element of array is an instance with a value of `RemoteControllerFlightMode`.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_getRemoteControllerFlightModeMapping_inline",
                   "",
            ],
            [
                   "OnboardSDKDeviceDataCallback",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_ReceivedDataFromExternalDeviceCallbackInterface_inline",
                   "Callback function that updates the data received from an external device (e.g.the onboard device).",
            ],
            [
                   "Callback function that updates the data received from an external device (e.g.the onboard device).",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_ReceivedDataFromExternalDeviceCallbackInterface_inline",
                   "",
            ],
            [
                   "FlightControllerState",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "",
                   "This class represents the current state of the flight controller.",
            ],
            [
                   "This class represents the current state of the flight controller.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_UpdateSystemState_inline",
                   "Called when the flight controller's current state data has been updated. This method is called 10 times  per second.  @param state Current state of the flight controller.",
            ],
            [
                   "Called when the flight controller's current state data has been updated. This method is called 10 times  per second.  @param state Current state of the flight controller.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_UpdateSystemState_inline",
                   "",
            ],
            [
                   "onReceive",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_ReceiveDataFromExternalDevice_inline",
                   "Called when the data received from an external device (e.g. the onboard device) has been updated.  @param data Data received from an external device. The size of the data will not be larger than 100 bytes.",
            ],
            [
                   "Called when the data received from an external device (e.g. the onboard device) has been updated.  @param data Data received from an external device. The size of the data will not be larger than 100 bytes.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_ReceiveDataFromExternalDevice_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIFlightController_UpdateIMUState_inline",
                   "Called when the flight controller pushes an IMU state update. The callback method would not be called  if the aircraft is flying.  @param state Information about the IMU state pushed by the flight controller.",
            ],
            [
                   "Called when the flight controller pushes an IMU state update. The callback method would not be called  if the aircraft is flying.  @param state Information about the IMU state pushed by the flight controller.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIFlightController_UpdateIMUState_inline",
                   "",
            ],
            [
                   "Compass",
                   2,
                   "/Components/Compass/DJICompass.html",
                   "",
                   "This class provides compass status information and compass calibration methods. Products with multiple compasses (like the Phantom 4) have their compass state fused into one compass class for simplicity.",
            ],
            [
                   "This class provides compass status information and compass calibration methods. Products with multiple compasses (like the Phantom 4) have their compass state fused into one compass class for simplicity.",
                   1,
                   "/Components/Compass/DJICompass.html",
                   "",
                   "",
            ],
            [
                   "RTK",
                   2,
                   "/Components/RTK/DJIRTK.html",
                   "",
                   "Real Time Kinematic",
            ],
            [
                   "Real Time Kinematic",
                   1,
                   "/Components/RTK/DJIRTK.html",
                   "",
                   "",
            ],
            [
                   "LandingGear",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "",
                   "This class controls and gives state of the landing gear. Please check `isLandingGearMovable` before calling the methods in this class.",
            ],
            [
                   "This class controls and gives state of the landing gear. Please check `isLandingGearMovable` before calling the methods in this class.",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "",
                   "",
            ],
            [
                   "FlightAssistant",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "",
                   "This class contains components of the Intelligent Flight Assistant and provides methods to change its settings.",
            ],
            [
                   "This class contains components of the Intelligent Flight Assistant and provides methods to change its settings.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "",
                   "",
            ],
            [
                   "Simulator",
                   2,
                   "/Components/Simulator/DJISimulator.html",
                   "",
                   "DJI aircraft can be put into simulation mode using this class. Developers can start and stop the simulation, as well as monitor basic aircraft attitude and location information.",
            ],
            [
                   "DJI aircraft can be put into simulation mode using this class. Developers can start and stop the simulation, as well as monitor basic aircraft attitude and location information.",
                   1,
                   "/Components/Simulator/DJISimulator.html",
                   "",
                   "",
            ],
            [
                   "IMUState",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "",
                   "This class provides the inertial measurement unit's (IMU) state information.",
            ],
            [
                   "This class provides the inertial measurement unit's (IMU) state information.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "",
                   "",
            ],
            [
                   "FlightControlData",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "",
                   "Contains all the virtual stick control data needed to move the aircraft in all directions.",
            ],
            [
                   "Contains all the virtual stick control data needed to move the aircraft in all directions.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "",
                   "",
            ],
            [
                   "getPitch",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "#DJIFlightController_DJIVirtualStickFlightControlData_pitch_inline",
                   "Gets aircraft's velocity (m/s) along the y-axis or angle value (in degrees) for pitch. Use `RollPitchControlMode` to set the velocity or angle mode. Note that the argument has different meanings in different coordinate systems. See the <i>Flight Controller User Guide</i> for more information.  @return The Velocity (m/s) or Angle (degrees) value for pitch.",
            ],
            [
                   "Gets aircraft's velocity (m/s) along the y-axis or angle value (in degrees) for pitch. Use `RollPitchControlMode` to set the velocity or angle mode. Note that the argument has different meanings in different coordinate systems. See the <i>Flight Controller User Guide</i> for more information.  @return The Velocity (m/s) or Angle (degrees) value for pitch.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "#DJIFlightController_DJIVirtualStickFlightControlData_pitch_inline",
                   "",
            ],
            [
                   "setPitch",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "#DJIFlightController_DJIVirtualStickFlightControlData_setPitch_inline",
                   "Sets the aircraft's velocity (m/s) along the y-axis or angle value (in degrees) for pitch.  Use `RollPitchControlMode` to set the velocity or angle mode.  Note that the argument has different meanings in different coordinate systems. See the <i>Flight  Controller User Guide</i> for more information.  @param pitch The velocity (m/s) or angle (degrees) value for pitch",
            ],
            [
                   "Sets the aircraft's velocity (m/s) along the y-axis or angle value (in degrees) for pitch.  Use `RollPitchControlMode` to set the velocity or angle mode.  Note that the argument has different meanings in different coordinate systems. See the <i>Flight  Controller User Guide</i> for more information.  @param pitch The velocity (m/s) or angle (degrees) value for pitch",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "#DJIFlightController_DJIVirtualStickFlightControlData_setPitch_inline",
                   "",
            ],
            [
                   "getRoll",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "#DJIFlightController_DJIVirtualStickFlightControlData_roll_inline",
                   "Gets aircraft's velocity (m/s) along the x-axis or angle value (in degrees) for roll. Use `RollPitchControlMode` to set the velocity or angle mode. Note that the argument has different meanings in different coordinate systems. See the <i>Flight Controller User Guide</i> for more information.  @return The velocity (m/s) or angle (degrees) value for roll.",
            ],
            [
                   "Gets aircraft's velocity (m/s) along the x-axis or angle value (in degrees) for roll. Use `RollPitchControlMode` to set the velocity or angle mode. Note that the argument has different meanings in different coordinate systems. See the <i>Flight Controller User Guide</i> for more information.  @return The velocity (m/s) or angle (degrees) value for roll.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "#DJIFlightController_DJIVirtualStickFlightControlData_roll_inline",
                   "",
            ],
            [
                   "setRoll",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "#DJIFlightController_DJIVirtualStickFlightControlData_setRoll_inline",
                   "Sets the aircraft's velocity (m/s) along the x-axis or angle value (in degrees) for roll.  Use `RollPitchControlMode` to set the velocity or angle mode.  Note that the argument has different meanings in different coordinate systems. See the <i>Flight  Controller User Guide</i> for more information.  @param roll The velocity (m/s) or angle (degrees) value for roll.",
            ],
            [
                   "Sets the aircraft's velocity (m/s) along the x-axis or angle value (in degrees) for roll.  Use `RollPitchControlMode` to set the velocity or angle mode.  Note that the argument has different meanings in different coordinate systems. See the <i>Flight  Controller User Guide</i> for more information.  @param roll The velocity (m/s) or angle (degrees) value for roll.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "#DJIFlightController_DJIVirtualStickFlightControlData_setRoll_inline",
                   "",
            ],
            [
                   "getYaw",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "#DJIFlightController_DJIVirtualStickFlightControlData_yaw_inline",
                   "Angular velocity (degrees/s) or angle (degrees) value for yaw. Use `YawControlMode` to set angular velocity or angle mode.  @return The angular velocity (degrees/s) or angle (degrees) value for yaw.",
            ],
            [
                   "Angular velocity (degrees/s) or angle (degrees) value for yaw. Use `YawControlMode` to set angular velocity or angle mode.  @return The angular velocity (degrees/s) or angle (degrees) value for yaw.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "#DJIFlightController_DJIVirtualStickFlightControlData_yaw_inline",
                   "",
            ],
            [
                   "setYaw",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "#DJIFlightController_DJIVirtualStickFlightControlData_setYaw_inline",
                   "Sets the angular velocity (degrees/s) or angle (degrees) value for yaw.  Use `YawControlMode` to set angular velocity or angle mode.  @param yaw The angular velocity (degrees/s) or angle (degrees) value for yaw.",
            ],
            [
                   "Sets the angular velocity (degrees/s) or angle (degrees) value for yaw.  Use `YawControlMode` to set angular velocity or angle mode.  @param yaw The angular velocity (degrees/s) or angle (degrees) value for yaw.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "#DJIFlightController_DJIVirtualStickFlightControlData_setYaw_inline",
                   "",
            ],
            [
                   "getVerticalThrottle",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "#DJIFlightController_DJIVirtualStickFlightControlData_verticalThrottle_inline",
                   "Gets aircraft's velocity (m/s) or altitude (m) value for verticalControl. Use `YawControlMode` to set velocity or altitude mode.  @return The velocity (m/s) or altitude (m) value for verticalControl.",
            ],
            [
                   "Gets aircraft's velocity (m/s) or altitude (m) value for verticalControl. Use `YawControlMode` to set velocity or altitude mode.  @return The velocity (m/s) or altitude (m) value for verticalControl.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "#DJIFlightController_DJIVirtualStickFlightControlData_verticalThrottle_inline",
                   "",
            ],
            [
                   "setVerticalThrottle",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "#DJIFlightController_DJIVirtualStickFlightControlData_setVerticalThrottle_inline",
                   "Sets the aircraft's velocity (m/s) or altitude (m) value for verticalControl. Use `YawControlMode` to set velocity or altitude mode.  @param verticalThrottle The velocity (m/s) or altitude (m) value for verticalControl.",
            ],
            [
                   "Sets the aircraft's velocity (m/s) or altitude (m) value for verticalControl. Use `YawControlMode` to set velocity or altitude mode.  @param verticalThrottle The velocity (m/s) or altitude (m) value for verticalControl.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "#DJIFlightController_DJIVirtualStickFlightControlData_setVerticalThrottle_inline",
                   "",
            ],
            [
                   "FlightControlData",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "#DJIFlightController_DJIVirtualStickFlightControlData_constructor_inline",
                   "Constructor for the flight control data to send through virtual sticks.  @param pitch The velocity (m/s) or angle (degrees) value for pitch @param roll The velocity (m/s) or angle (degrees) value for roll. @param yaw The angular velocity (degrees/s) or angle (degrees) value for yaw. @param verticalThrottle The velocity (m/s) or altitude (m) value for verticalControl.",
            ],
            [
                   "Constructor for the flight control data to send through virtual sticks.  @param pitch The velocity (m/s) or angle (degrees) value for pitch @param roll The velocity (m/s) or angle (degrees) value for roll. @param yaw The angular velocity (degrees/s) or angle (degrees) value for yaw. @param verticalThrottle The velocity (m/s) or altitude (m) value for verticalControl.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIVirtualStickFlightControlData.html",
                   "#DJIFlightController_DJIVirtualStickFlightControlData_constructor_inline",
                   "",
            ],
            [
                   "VerticalControlMode",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickVerticalControlMode_inline",
                   "Defines how vertical control values are interpreted by the aircraft.",
            ],
            [
                   "Defines how vertical control values are interpreted by the aircraft.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickVerticalControlMode_inline",
                   "",
            ],
            [
                   "VELOCITY",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickVerticalControlMode_velocity_inline",
                   "Sets the virtual stick vertical control values to be a vertical  velocity. Positive and negative vertical velocity is for the aircraft ascending and descending respectively.  Maximum vertical velocity is defined as 4 m/s. Minimum vertical velocity is defined as -4 m/s.",
            ],
            [
                   "Sets the virtual stick vertical control values to be a vertical  velocity. Positive and negative vertical velocity is for the aircraft ascending and descending respectively.  Maximum vertical velocity is defined as 4 m/s. Minimum vertical velocity is defined as -4 m/s.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickVerticalControlMode_velocity_inline",
                   "",
            ],
            [
                   "POSITION",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickVerticalControlMode_position_inline",
                   "Sets the virtual stick vertical control values to be an altitude.  Maximum position is defined as 500 m. Minimum  position is defined as 0 m.",
            ],
            [
                   "Sets the virtual stick vertical control values to be an altitude.  Maximum position is defined as 500 m. Minimum  position is defined as 0 m.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickVerticalControlMode_position_inline",
                   "",
            ],
            [
                   "RollPitchControlMode",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickRollPitchControlMode_inline",
                   "Defines how manual roll and pitch values are interpreted by the aircraft.",
            ],
            [
                   "Defines how manual roll and pitch values are interpreted by the aircraft.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickRollPitchControlMode_inline",
                   "",
            ],
            [
                   "ANGLE",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickRollPitchControlMode_angle_inline",
                   "Sets the roll and pitch values to be an angle relative to a level aircraft. In the body coordinate system,  positive and negative pitch angle is for the aircraft rotating about the y-axis in the positive direction  or negative direction, respectively. Positive and negative roll angle is the positive direction or negative  direction rotation angle about the x-axis, respectively. However in the ground coordinate system, positive  and negative pitch angle is the angle value for the aircraft moving south and north, respectively. Positive and negative roll angle is the angle when the aircraft is moving east and west, respectively. Maximum angle  is defined as 30 degrees. Minimum angle is defined as -30 degrees.",
            ],
            [
                   "Sets the roll and pitch values to be an angle relative to a level aircraft. In the body coordinate system,  positive and negative pitch angle is for the aircraft rotating about the y-axis in the positive direction  or negative direction, respectively. Positive and negative roll angle is the positive direction or negative  direction rotation angle about the x-axis, respectively. However in the ground coordinate system, positive  and negative pitch angle is the angle value for the aircraft moving south and north, respectively. Positive and negative roll angle is the angle when the aircraft is moving east and west, respectively. Maximum angle  is defined as 30 degrees. Minimum angle is defined as -30 degrees.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickRollPitchControlMode_angle_inline",
                   "",
            ],
            [
                   "VELOCITY",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickRollPitchControlMode_velocity_inline",
                   "Sets the roll and pitch values to be a velocity. In the body coordinate system, positive and negative pitch  velocity is for the aircraft moving towards the positive direction or negative direction along the pitch  axis and y-axis, respectively. Positive and negative roll velocity is when the aircraft is moving towards  the positive direction or negative direction along the roll axis and x-axis, respectively. However, in the  ground coordinate system, positive and negative pitch velocity is for the aircraft moving east and west,  respectively. Positive and negative roll velocity is when the aircraft is moving north and south,  respectively. Maximum velocity is defined as 15 meters/s.  Minimum velocity is defined as -15 meters/s.",
            ],
            [
                   "Sets the roll and pitch values to be a velocity. In the body coordinate system, positive and negative pitch  velocity is for the aircraft moving towards the positive direction or negative direction along the pitch  axis and y-axis, respectively. Positive and negative roll velocity is when the aircraft is moving towards  the positive direction or negative direction along the roll axis and x-axis, respectively. However, in the  ground coordinate system, positive and negative pitch velocity is for the aircraft moving east and west,  respectively. Positive and negative roll velocity is when the aircraft is moving north and south,  respectively. Maximum velocity is defined as 15 meters/s.  Minimum velocity is defined as -15 meters/s.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickRollPitchControlMode_velocity_inline",
                   "",
            ],
            [
                   "YawControlMode",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickYawControlMode_inline",
                   "Defines how manual yaw values are interpreted by the aircraft.",
            ],
            [
                   "Defines how manual yaw values are interpreted by the aircraft.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickYawControlMode_inline",
                   "",
            ],
            [
                   "ANGLE",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickYawControlMode_angle_inline",
                   "Sets the yaw values to be an angle relative to the front of the aircraft. Positive and negative yaw angle is  for the aircraft rotating clockwise and counterclockwise, respectively. Maximum yaw angle is defined  as 180 degrees. Minimum yaw angle is defined  as -180 degrees.",
            ],
            [
                   "Sets the yaw values to be an angle relative to the front of the aircraft. Positive and negative yaw angle is  for the aircraft rotating clockwise and counterclockwise, respectively. Maximum yaw angle is defined  as 180 degrees. Minimum yaw angle is defined  as -180 degrees.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickYawControlMode_angle_inline",
                   "",
            ],
            [
                   "ANGULAR_VELOCITY",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickYawControlMode_angularVelocity_inline",
                   "Sets the yaw values to be an angular velocity. Positive and negative angular velocity is for the aircraft  rotating clockwise and counterclockwise, respectively. Maximum yaw angular velocity is defined  as 100 degrees/s. Minimum yaw angular velocity is  defined as -100 degrees/s.",
            ],
            [
                   "Sets the yaw values to be an angular velocity. Positive and negative angular velocity is for the aircraft  rotating clockwise and counterclockwise, respectively. Maximum yaw angular velocity is defined  as 100 degrees/s. Minimum yaw angular velocity is  defined as -100 degrees/s.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickYawControlMode_angularVelocity_inline",
                   "",
            ],
            [
                   "FlightCoordinateSystem",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickFlightCoordinateSystem_inline",
                   "Flight control coordinate system.",
            ],
            [
                   "Flight control coordinate system.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickFlightCoordinateSystem_inline",
                   "",
            ],
            [
                   "GROUND",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickFlightCoordinateSystem_Ground_inline",
                   "Ground coordinate system.",
            ],
            [
                   "Ground coordinate system.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickFlightCoordinateSystem_Ground_inline",
                   "",
            ],
            [
                   "BODY",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickFlightCoordinateSystem_Body_inline",
                   "Body coordinate system.",
            ],
            [
                   "Body coordinate system.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIVirtualStickFlightCoordinateSystem_Body_inline",
                   "",
            ],
            [
                   "ControlMode",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerControlMode_inline",
                   "Control mode of the flight controller. It determines how the pilot can control the aircraft.  By default, it is in smart control mode.",
            ],
            [
                   "Control mode of the flight controller. It determines how the pilot can control the aircraft.  By default, it is in smart control mode.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerControlMode_inline",
                   "",
            ],
            [
                   "SMART",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerControlMode_smart_inline",
                   "Smart control mode. The aircraft can stabilize its altitude and attitude in smart mode.",
            ],
            [
                   "Smart control mode. The aircraft can stabilize its altitude and attitude in smart mode.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerControlMode_smart_inline",
                   "",
            ],
            [
                   "MANUAL",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerControlMode_manual_inline",
                   "Manual control mode. The aircraft will not stabilize its altitude and attitude in manual mode. This mode is  for advanced pilots only, and should only be used when the pilot understands the risk of operating in this  mode. Any damage to the product when operating in this mode will not be covered under warranty.",
            ],
            [
                   "Manual control mode. The aircraft will not stabilize its altitude and attitude in manual mode. This mode is  for advanced pilots only, and should only be used when the pilot understands the risk of operating in this  mode. Any damage to the product when operating in this mode will not be covered under warranty.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerControlMode_manual_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerControlMode_unknown_inline",
                   "Unknown control mode.",
            ],
            [
                   "Unknown control mode.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerControlMode_unknown_inline",
                   "",
            ],
            [
                   "FlightOrientationMode",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightOrientationMode_inline",
                   "Tells the aircraft how to interpret flight commands for forward, backward, left and right. See the <i>Flight  Controller User Guide</i> for more information.",
            ],
            [
                   "Tells the aircraft how to interpret flight commands for forward, backward, left and right. See the <i>Flight  Controller User Guide</i> for more information.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightOrientationMode_inline",
                   "",
            ],
            [
                   "COURSE_LOCK",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightOrientationMode_CourseLock_inline",
                   "The aircraft should move relative to a locked course heading.",
            ],
            [
                   "The aircraft should move relative to a locked course heading.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightOrientationMode_CourseLock_inline",
                   "",
            ],
            [
                   "HOME_LOCK",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightOrientationMode_HomeLock_inline",
                   "The aircraft should move relative radially to the Home Point.",
            ],
            [
                   "The aircraft should move relative radially to the Home Point.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightOrientationMode_HomeLock_inline",
                   "",
            ],
            [
                   "AIRCRAFT_HEADING",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightOrientationMode_DefaultAircraftHeading_inline",
                   "The aircraft should move relative to the front of the aircraft.",
            ],
            [
                   "The aircraft should move relative to the front of the aircraft.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightOrientationMode_DefaultAircraftHeading_inline",
                   "",
            ],
            [
                   "LocationCoordinate2D",
                   2,
                   "/Components/FlightController/DJIFlightController_DJILocationCoordinate2D.html",
                   "",
                   "A class representing 2-dimensional location coordinate",
            ],
            [
                   "A class representing 2-dimensional location coordinate",
                   1,
                   "/Components/FlightController/DJIFlightController_DJILocationCoordinate2D.html",
                   "",
                   "",
            ],
            [
                   "LocationCoordinate2D",
                   2,
                   "/Components/FlightController/DJIFlightController_DJILocationCoordinate2D.html",
                   "#DJIFlightController_DJILocationCoordinate2D_Constructor_inline",
                   "Construct a `DJILocationCoordinate2D` object with Latitude and Longitude.  @param latitude Latitude in degrees. @param longitude Longitude in degrees.",
            ],
            [
                   "Construct a `DJILocationCoordinate2D` object with Latitude and Longitude.  @param latitude Latitude in degrees. @param longitude Longitude in degrees.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJILocationCoordinate2D.html",
                   "#DJIFlightController_DJILocationCoordinate2D_Constructor_inline",
                   "",
            ],
            [
                   "getLatitude",
                   2,
                   "/Components/FlightController/DJIFlightController_DJILocationCoordinate2D.html",
                   "#DJIFlightController_DJILocationCoordinate2D_getLatitude_inline",
                   "Returns `DJILocationCoordinate2D` object, which could be used as an input parameter for flight controller's interfaces.  @return The double value of latitude.",
            ],
            [
                   "Returns `DJILocationCoordinate2D` object, which could be used as an input parameter for flight controller's interfaces.  @return The double value of latitude.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJILocationCoordinate2D.html",
                   "#DJIFlightController_DJILocationCoordinate2D_getLatitude_inline",
                   "",
            ],
            [
                   "getLongitude",
                   2,
                   "/Components/FlightController/DJIFlightController_DJILocationCoordinate2D.html",
                   "#DJIFlightController_DJILocationCoordinate2D_getLongitude_inline",
                   "Returns the longitude.  @return The double value of longitude.",
            ],
            [
                   "Returns the longitude.  @return The double value of longitude.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJILocationCoordinate2D.html",
                   "#DJIFlightController_DJILocationCoordinate2D_getLongitude_inline",
                   "",
            ],
            [
                   "ConnectionFailSafeBehavior",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightFailsafeOperation_inline",
                   "Defines aircraft failsafe action when signal between the remote controller and the aircraft is lost.",
            ],
            [
                   "Defines aircraft failsafe action when signal between the remote controller and the aircraft is lost.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightFailsafeOperation_inline",
                   "",
            ],
            [
                   "HOVER",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightFailsafeOperation_Hover_inline",
                   "Hover.",
            ],
            [
                   "Hover.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightFailsafeOperation_Hover_inline",
                   "",
            ],
            [
                   "LANDING",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightFailsafeOperation_Landing_inline",
                   "Landing.",
            ],
            [
                   "Landing.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightFailsafeOperation_Landing_inline",
                   "",
            ],
            [
                   "GO_HOME",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightFailsafeOperation_GoHome_inline",
                   "Return-to-Home.",
            ],
            [
                   "Return-to-Home.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightFailsafeOperation_GoHome_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightFailsafeOperation_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightFailsafeOperation_Unknown_inline",
                   "",
            ],
            [
                   "RemoteControllerFlightMode",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerRemoteControllerFlightMode_inline",
                   "Flight modes that map to the flight mode switch on the remote controller.",
            ],
            [
                   "Flight modes that map to the flight mode switch on the remote controller.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerRemoteControllerFlightMode_inline",
                   "",
            ],
            [
                   "P",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerRemoteControllerFlightMode_P_inline",
                   "Positioning mode. GNSS and Vision Positioning Systems are used for positioning if they are available. For products without F mode, intelligent functions such as missions and intelligent orientation control can be performed in P-mode.",
            ],
            [
                   "Positioning mode. GNSS and Vision Positioning Systems are used for positioning if they are available. For products without F mode, intelligent functions such as missions and intelligent orientation control can be performed in P-mode.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerRemoteControllerFlightMode_P_inline",
                   "",
            ],
            [
                   "S",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerRemoteControllerFlightMode_S_inline",
                   "Sport mode. The maximum flight speed and responsiveness of the aircraft is increased in this mode.",
            ],
            [
                   "Sport mode. The maximum flight speed and responsiveness of the aircraft is increased in this mode.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerRemoteControllerFlightMode_S_inline",
                   "",
            ],
            [
                   "A",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerRemoteControllerFlightMode_A_inline",
                   "Attitude mode. The GNSS and Vision Positioning Systems are not used for positioning. The aircraft only uses the barometer to maintain altitude. If receiving a GNSS signal, the aircraft can automatically return home if the Remote Controller signal is lost and if the Home Point has been recorded successfully.",
            ],
            [
                   "Attitude mode. The GNSS and Vision Positioning Systems are not used for positioning. The aircraft only uses the barometer to maintain altitude. If receiving a GNSS signal, the aircraft can automatically return home if the Remote Controller signal is lost and if the Home Point has been recorded successfully.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerRemoteControllerFlightMode_A_inline",
                   "",
            ],
            [
                   "G",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerRemoteControllerFlightMode_G_inline",
                   "Gentle mode. The sensitivity and speed of aircraft will be substantially decreased in gentle mode.",
            ],
            [
                   "Gentle mode. The sensitivity and speed of aircraft will be substantially decreased in gentle mode.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerRemoteControllerFlightMode_G_inline",
                   "",
            ],
            [
                   "M",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerRemoteControllerFlightMode_M_inline",
                   "Manual mode. The aircraft will not stabilize its altitude nor attitude in manual mode. This mode is for advanced pilots only, and should only be used when the pilot understands the risk of operating in this mode. Any damage to the product when operating in this mode will not be covered under warranty. It is supported by stand-alone A3 and N3 and can be enabled in Assistant 2.",
            ],
            [
                   "Manual mode. The aircraft will not stabilize its altitude nor attitude in manual mode. This mode is for advanced pilots only, and should only be used when the pilot understands the risk of operating in this mode. Any damage to the product when operating in this mode will not be covered under warranty. It is supported by stand-alone A3 and N3 and can be enabled in Assistant 2.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerRemoteControllerFlightMode_M_inline",
                   "",
            ],
            [
                   "F",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerRemoteControllerFlightMode_F_inline",
                   "Function mode. Performs the same as Positioning mode with intelligent functions such as missions and intelligent orientation control enabled.",
            ],
            [
                   "Function mode. Performs the same as Positioning mode with intelligent functions such as missions and intelligent orientation control enabled.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerRemoteControllerFlightMode_F_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerRemoteControllerFlightMode_Unknown_inline",
                   "Unknown mode.",
            ],
            [
                   "Unknown mode.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerRemoteControllerFlightMode_Unknown_inline",
                   "",
            ],
            [
                   "SmartRTHState",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerSmartRTHState_inline",
                   "State of Smart Return-To-Home (RTH). It is only used when Smart RTH is enabled.",
            ],
            [
                   "State of Smart Return-To-Home (RTH). It is only used when Smart RTH is enabled.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerSmartRTHState_inline",
                   "",
            ],
            [
                   "IDLE",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerSmartRTHState_Idle_inline",
                   "Smart RTH is not triggered yet in the current flight. The Smart RTH state will be reset  to this value when the aircraft lands.",
            ],
            [
                   "Smart RTH is not triggered yet in the current flight. The Smart RTH state will be reset  to this value when the aircraft lands.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerSmartRTHState_Idle_inline",
                   "",
            ],
            [
                   "COUNTING_DOWN",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerSmartRTHState_CountingDown_inline",
                   "Smart RTH is triggered and the aircraft is counting down. If no response is received within 10 seconds  or the user confirms the request, the aircraft will start to go-home and the state will change to  `EXECUTED`. If user  cancels the request, the state will change to `CANCELLED`.",
            ],
            [
                   "Smart RTH is triggered and the aircraft is counting down. If no response is received within 10 seconds  or the user confirms the request, the aircraft will start to go-home and the state will change to  `EXECUTED`. If user  cancels the request, the state will change to `CANCELLED`.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerSmartRTHState_CountingDown_inline",
                   "",
            ],
            [
                   "EXECUTED",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerSmartRTHState_Executed_inline",
                   "Smart RTH is already executed in the current flight. The state will not be reset until the aircraft lands.",
            ],
            [
                   "Smart RTH is already executed in the current flight. The state will not be reset until the aircraft lands.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerSmartRTHState_Executed_inline",
                   "",
            ],
            [
                   "CANCELLED",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerSmartRTHState_Cancelled_inline",
                   "Smart RTH request is cancelled by the user. The state will not be reset until the aircraft lands.",
            ],
            [
                   "Smart RTH request is cancelled by the user. The state will not be reset until the aircraft lands.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerSmartRTHState_Cancelled_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerSmartRTHState_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightController_DJIFlightControllerSmartRTHState_Unknown_inline",
                   "",
            ],
            [
                   "AirSenseSystemInformation",
                   2,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "",
                   "The state of DJI AirSense system. It contains the overall warning level and  the detailed state of each detected airplane.",
            ],
            [
                   "The state of DJI AirSense system. It contains the overall warning level and  the detailed state of each detected airplane.",
                   1,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "",
                   "",
            ],
            [
                   "getWarningLevel",
                   2,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseSystemInformation_systemWarningLevel_inline",
                   "The overall system warning level. This will be the worst case of all individual aircraft warning levels.  @return An enum value of `AirSenseWarningLevel`.",
            ],
            [
                   "The overall system warning level. This will be the worst case of all individual aircraft warning levels.  @return An enum value of `AirSenseWarningLevel`.",
                   1,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseSystemInformation_systemWarningLevel_inline",
                   "",
            ],
            [
                   "getAirplaneStates",
                   2,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseSystemInformation_airplaneStates_inline",
                   "The state of all airplanes detected by DJI AirSense system.  @return An array of `AirSenseAirplaneState` objects.",
            ],
            [
                   "The state of all airplanes detected by DJI AirSense system.  @return An array of `AirSenseAirplaneState` objects.",
                   1,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseSystemInformation_airplaneStates_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseSystemInformation_callbackInterface_inline",
                   "An interface for obtaining `AirSenseSystemInformation` infos.",
            ],
            [
                   "An interface for obtaining `AirSenseSystemInformation` infos.",
                   1,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseSystemInformation_callbackInterface_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseSystemInformation_callbackMethod_inline",
                   "Callback method of Air Sense Airplane State.  @param information An object of `AirSenseSystemInformation`.",
            ],
            [
                   "Callback method of Air Sense Airplane State.  @param information An object of `AirSenseSystemInformation`.",
                   1,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseSystemInformation_callbackMethod_inline",
                   "",
            ],
            [
                   "AirSenseAirplaneState",
                   2,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "",
                   "The AirSense state of an airplane. DJI AirSense only sends out warnings of nearby  civil aircraft under certain circumstances; it will NOT control DJI aircraft to avoid other  aircraft automatically. Make sure to fly with your aircraft within visual line of sight at  all times, and always fly with caution. After receiving warnings, lower your aircraft to a  safe height. In addition, DJI AirSense has the following limitations: 1. DJI AirSense  can only receive messages sent from civil aircraft equipped with an ADS-B out device under  1090ES (RTCA DO-260) or UAT (RTCA Do-282) standards. For civil aircraft without ADS-B outs or  with malfunctioning ADS-B outs, DJI AirSense cannot receive related broadcasted messages or  send out warnings. 2. When there are obstacles in between a civil aircraft and DJI  aircraft, DJI AirSense will fail to receive ADS-B messages sent from civil aircraft or to send out warnings. 3. DJI AirSense may fail to receive ADS-B messages sent from  civil aircraft or send out warnings due to ever changing circumstances and interference.  It is highly recommended to fly with caution and stay aware of your surroundings during flight. 4. DJI AirSense cannot send out warnings when the DJI aircraft cannot accurately determine its location. 5. DJI AirSense cannot receive ADS-B messages sent from civil  aircraft or send out warnings when it is disabled or misconfigured.",
            ],
            [
                   "The AirSense state of an airplane. DJI AirSense only sends out warnings of nearby  civil aircraft under certain circumstances; it will NOT control DJI aircraft to avoid other  aircraft automatically. Make sure to fly with your aircraft within visual line of sight at  all times, and always fly with caution. After receiving warnings, lower your aircraft to a  safe height. In addition, DJI AirSense has the following limitations: 1. DJI AirSense  can only receive messages sent from civil aircraft equipped with an ADS-B out device under  1090ES (RTCA DO-260) or UAT (RTCA Do-282) standards. For civil aircraft without ADS-B outs or  with malfunctioning ADS-B outs, DJI AirSense cannot receive related broadcasted messages or  send out warnings. 2. When there are obstacles in between a civil aircraft and DJI  aircraft, DJI AirSense will fail to receive ADS-B messages sent from civil aircraft or to send out warnings. 3. DJI AirSense may fail to receive ADS-B messages sent from  civil aircraft or send out warnings due to ever changing circumstances and interference.  It is highly recommended to fly with caution and stay aware of your surroundings during flight. 4. DJI AirSense cannot send out warnings when the DJI aircraft cannot accurately determine its location. 5. DJI AirSense cannot receive ADS-B messages sent from civil  aircraft or send out warnings when it is disabled or misconfigured.",
                   1,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "",
                   "",
            ],
            [
                   "getCode",
                   2,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseAirplaneState_code_inline",
                   "The unique code (ICAO) of the airplane.  @return String of the unique code (ICAO).",
            ],
            [
                   "The unique code (ICAO) of the airplane.  @return String of the unique code (ICAO).",
                   1,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseAirplaneState_code_inline",
                   "",
            ],
            [
                   "getWarningLevel",
                   2,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseAirplaneState_warningLevel_inline",
                   "The warning level determined by DJI AirSense system.  @return An enum value of `AirSenseWarningLevel`.",
            ],
            [
                   "The warning level determined by DJI AirSense system.  @return An enum value of `AirSenseWarningLevel`.",
                   1,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseAirplaneState_warningLevel_inline",
                   "",
            ],
            [
                   "getRelativeDirection",
                   2,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseAirplaneState_relativeDirection_inline",
                   "The direction of the airplane relative to the DJI aircraft.  @return An enum value of `AirSenseDirection`.",
            ],
            [
                   "The direction of the airplane relative to the DJI aircraft.  @return An enum value of `AirSenseDirection`.",
                   1,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseAirplaneState_relativeDirection_inline",
                   "",
            ],
            [
                   "getHeading",
                   2,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseAirplaneState_heading_inline",
                   "The heading of the airplane.  @return A float value of heading.",
            ],
            [
                   "The heading of the airplane.  @return A float value of heading.",
                   1,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseAirplaneState_heading_inline",
                   "",
            ],
            [
                   "getDistance",
                   2,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseAirplaneState_distance_inline",
                   "The distance between the airplane and DJI aircraft in meters.  @return An int value of distance.",
            ],
            [
                   "The distance between the airplane and DJI aircraft in meters.  @return An int value of distance.",
                   1,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseAirplaneState_distance_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseAirplaneState_callbackInterface_inline",
                   "An interface for obtaining `AirSenseAirplaneState` infos.",
            ],
            [
                   "An interface for obtaining `AirSenseAirplaneState` infos.",
                   1,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseAirplaneState_callbackInterface_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseAirplaneState_callback_inline",
                   "Callback method of Air Sense Airplane State.  @param information Array of `AirSenseAirplaneState`.",
            ],
            [
                   "Callback method of Air Sense Airplane State.  @param information Array of `AirSenseAirplaneState`.",
                   1,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseAirplaneState_callback_inline",
                   "",
            ],
            [
                   "AirSenseWarningLevel",
                   2,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseWarningLevel_inline",
                   "The warning level determined by the DJI AirSense system. The warning level is based on the  distance between the airplane and the DJI aircraft, and the heading of the airplane.",
            ],
            [
                   "The warning level determined by the DJI AirSense system. The warning level is based on the  distance between the airplane and the DJI aircraft, and the heading of the airplane.",
                   1,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseWarningLevel_inline",
                   "",
            ],
            [
                   "LEVEL_0",
                   2,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseWarningLevel_0_inline",
                   "The system detects the airplane but the DJI aircraft is either far away from the airplane  or is in the opposite direction of the airplane's heading.",
            ],
            [
                   "The system detects the airplane but the DJI aircraft is either far away from the airplane  or is in the opposite direction of the airplane's heading.",
                   1,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseWarningLevel_0_inline",
                   "",
            ],
            [
                   "LEVEL_1",
                   2,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseWarningLevel_1_inline",
                   "The system detects the airplane. The probability that it will pass through the location  of the DJI aircraft is considered low.",
            ],
            [
                   "The system detects the airplane. The probability that it will pass through the location  of the DJI aircraft is considered low.",
                   1,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseWarningLevel_1_inline",
                   "",
            ],
            [
                   "LEVEL_2",
                   2,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseWarningLevel_2_inline",
                   "The system detects the airplane. The probability that it will pass through the location  of the DJI aircraft is considered medium.",
            ],
            [
                   "The system detects the airplane. The probability that it will pass through the location  of the DJI aircraft is considered medium.",
                   1,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseWarningLevel_2_inline",
                   "",
            ],
            [
                   "LEVEL_3",
                   2,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseWarningLevel_3_inline",
                   "The system detects the airplane. The probability that it will pass through the location  of the DJI aircraft is considered high.",
            ],
            [
                   "The system detects the airplane. The probability that it will pass through the location  of the DJI aircraft is considered high.",
                   1,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseWarningLevel_3_inline",
                   "",
            ],
            [
                   "LEVEL_4",
                   2,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseWarningLevel_4_inline",
                   "The system detects the airplane. The probability that it will pass through the location  of the DJI aircraft is very high.",
            ],
            [
                   "The system detects the airplane. The probability that it will pass through the location  of the DJI aircraft is very high.",
                   1,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseWarningLevel_4_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseWarningLevel_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/FlightController/DJIAirSenseSystemInformation.html",
                   "#DJIAirSenseWarningLevel_Unknown_inline",
                   "",
            ],
            [
                   "AirSenseDirection",
                   2,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_inline",
                   "Directions.",
            ],
            [
                   "Directions.",
                   1,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_inline",
                   "",
            ],
            [
                   "NORTH",
                   2,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_North_inline",
                   "North.",
            ],
            [
                   "North.",
                   1,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_North_inline",
                   "",
            ],
            [
                   "NORTH_EAST",
                   2,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_NorthEast_inline",
                   "North east.",
            ],
            [
                   "North east.",
                   1,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_NorthEast_inline",
                   "",
            ],
            [
                   "EAST",
                   2,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_East_inline",
                   "East.",
            ],
            [
                   "East.",
                   1,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_East_inline",
                   "",
            ],
            [
                   "SOUTH_EAST",
                   2,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_SouthEast_inline",
                   "South east.",
            ],
            [
                   "South east.",
                   1,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_SouthEast_inline",
                   "",
            ],
            [
                   "SOUTH",
                   2,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_South_inline",
                   "South.",
            ],
            [
                   "South.",
                   1,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_South_inline",
                   "",
            ],
            [
                   "SOUTH_WEST",
                   2,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_SouthWest_inline",
                   "South west.",
            ],
            [
                   "South west.",
                   1,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_SouthWest_inline",
                   "",
            ],
            [
                   "WEST",
                   2,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_West_inline",
                   "West.",
            ],
            [
                   "West.",
                   1,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_West_inline",
                   "",
            ],
            [
                   "NORTH_WEST",
                   2,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_NorthWest_inline",
                   "North west.",
            ],
            [
                   "North west.",
                   1,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_NorthWest_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/FlightController/DJIAirSenseAirplaneState.html",
                   "#DJIAirSenseDirection_Unknown_inline",
                   "",
            ],
            [
                   "Limits",
                   2,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "",
                   "This class provides max and min values for flight controller virtual stick.",
            ],
            [
                   "This class provides max and min values for flight controller virtual stick.",
                   1,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "",
                   "",
            ],
            [
                   "VERTICAL_CONTROL_MIN_VELOCITY",
                   2,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_VERTICAL_CONTROL_MIN_VELOCITY_inline",
                   "Vertical control velocity MIN value -4 m/s in VirtualStickControlMode. Negative velocity is down.",
            ],
            [
                   "Vertical control velocity MIN value -4 m/s in VirtualStickControlMode. Negative velocity is down.",
                   1,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_VERTICAL_CONTROL_MIN_VELOCITY_inline",
                   "",
            ],
            [
                   "VERTICAL_CONTROL_MAX_VELOCITY",
                   2,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_VERTICAL_CONTROL_MAX_VELOCITY_inline",
                   "Vertical control velocity MAX value 4 m/s in VirtualStickControlMode. Positive velocity is up.",
            ],
            [
                   "Vertical control velocity MAX value 4 m/s in VirtualStickControlMode. Positive velocity is up.",
                   1,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_VERTICAL_CONTROL_MAX_VELOCITY_inline",
                   "",
            ],
            [
                   "VERTICAL_CONTROL_MIN_HEIGHT",
                   2,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_VERTICAL_CONTROL_MIN_HEIGHT_inline",
                   "Vertical control position MIN for VirtualStickVerticalControlModePosition. By default is set to be 0m.",
            ],
            [
                   "Vertical control position MIN for VirtualStickVerticalControlModePosition. By default is set to be 0m.",
                   1,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_VERTICAL_CONTROL_MIN_HEIGHT_inline",
                   "",
            ],
            [
                   "VERTICAL_CONTROL_MAX_HEIGHT",
                   2,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_VERTICAL_CONTROL_MAX_HEIGHT_inline",
                   "Vertical control position MAX for VirtualStickVerticalControlModePosition. By default is set to be 500m.",
            ],
            [
                   "Vertical control position MAX for VirtualStickVerticalControlModePosition. By default is set to be 500m.",
                   1,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_VERTICAL_CONTROL_MAX_HEIGHT_inline",
                   "",
            ],
            [
                   "ROLL_PITCH_CONTROL_MAX_VELOCITY",
                   2,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_ROLL_PITCH_CONTROL_MAX_VELOCITY_inline",
                   "Roll/Pitch control velocity MAX value 15m/s.",
            ],
            [
                   "Roll/Pitch control velocity MAX value 15m/s.",
                   1,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_ROLL_PITCH_CONTROL_MAX_VELOCITY_inline",
                   "",
            ],
            [
                   "ROLL_PITCH_CONTROL_MIN_VELOCITY",
                   2,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_ROLL_PITCH_CONTROL_MIN_VELOCITY_inline",
                   "Roll/Pitch control velocity MIN value -15m/s.",
            ],
            [
                   "Roll/Pitch control velocity MIN value -15m/s.",
                   1,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_ROLL_PITCH_CONTROL_MIN_VELOCITY_inline",
                   "",
            ],
            [
                   "ROLL_PITCH_CONTROL_MAX_ANGLE",
                   2,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_ROLL_PITCH_CONTROL_MAX_ANGLE_inline",
                   "Roll/Pitch control angle MAX value 30 degrees.",
            ],
            [
                   "Roll/Pitch control angle MAX value 30 degrees.",
                   1,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_ROLL_PITCH_CONTROL_MAX_ANGLE_inline",
                   "",
            ],
            [
                   "ROLL_PITCH_CONTROL_MIN_ANGLE",
                   2,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_ROLL_PITCH_CONTROL_MIN_ANGLE_inline",
                   "Roll/Pitch control angle MIN value -30 degrees.",
            ],
            [
                   "Roll/Pitch control angle MIN value -30 degrees.",
                   1,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_ROLL_PITCH_CONTROL_MIN_ANGLE_inline",
                   "",
            ],
            [
                   "YAW_CONTROL_MAX_ANGLE",
                   2,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_YAW_CONTROL_MAX_ANGLE_inline",
                   "Yaw control angle MAX value 180 degrees.",
            ],
            [
                   "Yaw control angle MAX value 180 degrees.",
                   1,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_YAW_CONTROL_MAX_ANGLE_inline",
                   "",
            ],
            [
                   "YAW_CONTROL_MIN_ANGLE",
                   2,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_YAW_CONTROL_MIN_ANGLE_inline",
                   "Yaw control angle MIN value -180 degrees.",
            ],
            [
                   "Yaw control angle MIN value -180 degrees.",
                   1,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_YAW_CONTROL_MIN_ANGLE_inline",
                   "",
            ],
            [
                   "YAW_CONTROL_MAX_ANGULAR_VELOCITY",
                   2,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_YAW_CONTROL_MAX_ANGULAR_VELOCITY_inline",
                   "Yaw control angular velocity MAX value 100 degree/s.",
            ],
            [
                   "Yaw control angular velocity MAX value 100 degree/s.",
                   1,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_YAW_CONTROL_MAX_ANGULAR_VELOCITY_inline",
                   "",
            ],
            [
                   "YAW_CONTROL_MIN_ANGULAR_VELOCITY",
                   2,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_YAW_CONTROL_MIN_ANGULAR_VELOCITY_inline",
                   "Yaw control angular velocity MIN value -100 degree/s.",
            ],
            [
                   "Yaw control angular velocity MIN value -100 degree/s.",
                   1,
                   "/Components/FlightController/DJIFlightController_Limits.html",
                   "#DJIFlightController_Limits_YAW_CONTROL_MIN_ANGULAR_VELOCITY_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_UpdateSystemStateCallbackInterface_inline",
                   "Callback function that updates the flight controller's current state data. This method gets called 10 times per second after startUpdatingFlightControllerCurrentState is called.",
            ],
            [
                   "Callback function that updates the flight controller's current state data. This method gets called 10 times per second after startUpdatingFlightControllerCurrentState is called.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_UpdateSystemStateCallbackInterface_inline",
                   "",
            ],
            [
                   "areMotorsOn",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_areMotorsOn_inline",
                   "`true` if motors are on.  @return A boolean value.",
            ],
            [
                   "`true` if motors are on.  @return A boolean value.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_areMotorsOn_inline",
                   "",
            ],
            [
                   "isFlying",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isFlying_inline",
                   "`true` if aircraft is flying.  @return A boolean value.",
            ],
            [
                   "`true` if aircraft is flying.  @return A boolean value.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isFlying_inline",
                   "",
            ],
            [
                   "getAircraftLocation",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_aircraftLocation_inline",
                   "Gets the current location of the aircraft as a coordinate. `nil` if the location is invalid.  @return The current location of the aircraft as a coordinate.",
            ],
            [
                   "Gets the current location of the aircraft as a coordinate. `nil` if the location is invalid.  @return The current location of the aircraft as a coordinate.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_aircraftLocation_inline",
                   "",
            ],
            [
                   "getAttitude",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_attitude_inline",
                   "Gets the attitude of the aircraft, where the pitch, roll, and yaw values will be in the range of [-180, 180] degrees. If its pitch, roll, and yaw values are 0, the aircraft will  be hovering level with a True North heading.  @return The attitude of the aircraft.",
            ],
            [
                   "Gets the attitude of the aircraft, where the pitch, roll, and yaw values will be in the range of [-180, 180] degrees. If its pitch, roll, and yaw values are 0, the aircraft will  be hovering level with a True North heading.  @return The attitude of the aircraft.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_attitude_inline",
                   "",
            ],
            [
                   "getVelocityX",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_velocityX_inline",
                   "Current speed of the aircraft in the x direction, in meters per second, using the N-E-D (North-East-Down)  coordinate system.  @return A float value of the current speed of the aircraft in the x direction.",
            ],
            [
                   "Current speed of the aircraft in the x direction, in meters per second, using the N-E-D (North-East-Down)  coordinate system.  @return A float value of the current speed of the aircraft in the x direction.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_velocityX_inline",
                   "",
            ],
            [
                   "getVelocityY",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_velocityY_inline",
                   "Current speed of the aircraft in the y direction, in meters per second, using the N-E-D (North-East-Down)  coordinate system.  @return A float value of the current speed of the aircraft in the y direction.",
            ],
            [
                   "Current speed of the aircraft in the y direction, in meters per second, using the N-E-D (North-East-Down)  coordinate system.  @return A float value of the current speed of the aircraft in the y direction.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_velocityY_inline",
                   "",
            ],
            [
                   "getVelocityZ",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_velocityZ_inline",
                   "Current speed of the aircraft in the z direction, in meters per second, using the N-E-D (North-East-Down)  coordinate system.  @return A float value of the current speed of the aircraft in the z direction.",
            ],
            [
                   "Current speed of the aircraft in the z direction, in meters per second, using the N-E-D (North-East-Down)  coordinate system.  @return A float value of the current speed of the aircraft in the z direction.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_velocityZ_inline",
                   "",
            ],
            [
                   "getFlightTimeInSeconds",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_flightTime_inline",
                   "The accumulated flight time, in seconds, since the aircraft was powered on.  @return An int value of the flight time.",
            ],
            [
                   "The accumulated flight time, in seconds, since the aircraft was powered on.  @return An int value of the flight time.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_flightTime_inline",
                   "",
            ],
            [
                   "isLandingConfirmationNeeded",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isLandingConfirmationNeeded_inline",
                   "`true` if the clearance between the aircraft and the ground is less than 0.3m, and  confirmation from the user is needed to continue the landing. When the confirmation is needed, `confirmLanding` in `FlightController` can be used to continue landing. It is  supported by flight controller firmware 3.2.0.0 or above.  @return Whether confirmation is needed or not.",
            ],
            [
                   "`true` if the clearance between the aircraft and the ground is less than 0.3m, and  confirmation from the user is needed to continue the landing. When the confirmation is needed, `confirmLanding` in `FlightController` can be used to continue landing. It is  supported by flight controller firmware 3.2.0.0 or above.  @return Whether confirmation is needed or not.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isLandingConfirmationNeeded_inline",
                   "",
            ],
            [
                   "getFlightMode",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_flightMode_inline",
                   "Flight controller flight mode. For more info, see http://wiki.dji.com/en/index.php/Phantom_3_Professional-Aircraft  @return An enum value of the `FlightMode`.",
            ],
            [
                   "Flight controller flight mode. For more info, see http://wiki.dji.com/en/index.php/Phantom_3_Professional-Aircraft  @return An enum value of the `FlightMode`.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_flightMode_inline",
                   "",
            ],
            [
                   "getFlightModeString",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_flightModeString_inline",
                   "Gets the flight mode as a string.  @return The flight mode as a string. For example, P-GPS or P-Atti.",
            ],
            [
                   "Gets the flight mode as a string.  @return The flight mode as a string. For example, P-GPS or P-Atti.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_flightModeString_inline",
                   "",
            ],
            [
                   "isMultipleModeOpen",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isMultipleModeOpen_inline",
                   "Determines whether multiple flight modes are open. This will reflect whether navigation mode (ground  station) is enabled.  @return `true` if the navigation mode is enabled.",
            ],
            [
                   "Determines whether multiple flight modes are open. This will reflect whether navigation mode (ground  station) is enabled.  @return `true` if the navigation mode is enabled.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isMultipleModeOpen_inline",
                   "",
            ],
            [
                   "getSatelliteCount",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_satelliteCount_inline",
                   "Returns the GPS satellite count.  @return The double value of the GPS satellite count.",
            ],
            [
                   "Returns the GPS satellite count.  @return The double value of the GPS satellite count.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_satelliteCount_inline",
                   "",
            ],
            [
                   "getGPSSignalLevel",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrentState_gpsSignalStatus_inline",
                   "Gets the aircraft's current GPS signal quality.  @return The aircraft's current GPS signal quality.",
            ],
            [
                   "Gets the aircraft's current GPS signal quality.  @return The aircraft's current GPS signal quality.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrentState_gpsSignalStatus_inline",
                   "",
            ],
            [
                   "isIMUPreheating",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isIMUPreheating_inline",
                   "`true` if IMU is preheating.  @return A boolean value.",
            ],
            [
                   "`true` if IMU is preheating.  @return A boolean value.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isIMUPreheating_inline",
                   "",
            ],
            [
                   "isUltrasonicBeingUsed",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isUltrasonicBeingUsed_inline",
                   "`true` if the ultrasonic sensor is being used. Variables that can impact the quality  of the ultrasound measurement, or whether it's being used, are height above ground and the type of ground  (if it reflects sound waves well). Usually, the ultrasonic sensor works when the aircraft is less than 8m  above ground.  @return A boolean value.",
            ],
            [
                   "`true` if the ultrasonic sensor is being used. Variables that can impact the quality  of the ultrasound measurement, or whether it's being used, are height above ground and the type of ground  (if it reflects sound waves well). Usually, the ultrasonic sensor works when the aircraft is less than 8m  above ground.  @return A boolean value.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isUltrasonicBeingUsed_inline",
                   "",
            ],
            [
                   "getUltrasonicHeightInMeters",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_ultrasonicHeight_inline",
                   "Height of aircraft measured by the ultrasonic sensor in meters. The data will only be available  if `isUltrasonicBeingUsed` returns `true`. Height has a precision of 0.1m. This value has reference significance when the height  is below 5 meters.  @return A float value of the height of the aircraft measured by the ultrasonic sensor in meters.",
            ],
            [
                   "Height of aircraft measured by the ultrasonic sensor in meters. The data will only be available  if `isUltrasonicBeingUsed` returns `true`. Height has a precision of 0.1m. This value has reference significance when the height  is below 5 meters.  @return A float value of the height of the aircraft measured by the ultrasonic sensor in meters.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_ultrasonicHeight_inline",
                   "",
            ],
            [
                   "doesUltrasonicHaveError",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrentState_isUltrasonicError_inline",
                   "`true` if ultrasonic sensor has error.  @return `true` if ultrasonic sensor has error.",
            ],
            [
                   "`true` if ultrasonic sensor has error.  @return `true` if ultrasonic sensor has error.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrentState_isUltrasonicError_inline",
                   "",
            ],
            [
                   "isVisionPositioningSensorBeingUsed",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isVisionSensorBeingUsed_inline",
                   "`true` if a vision sensor is being used. Variables that can impact the quality of the  vision measurement, or whether it's being used, are height above ground and the type of ground (if it has  sufficiently rich texture). Usually, the vision sensor works when the aircraft is less than 3m above ground.  @return A boolean value.",
            ],
            [
                   "`true` if a vision sensor is being used. Variables that can impact the quality of the  vision measurement, or whether it's being used, are height above ground and the type of ground (if it has  sufficiently rich texture). Usually, the vision sensor works when the aircraft is less than 3m above ground.  @return A boolean value.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isVisionSensorBeingUsed_inline",
                   "",
            ],
            [
                   "getOrientationMode",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_orientationMode_inline",
                   "The aircraft's current orientation mode.  @return An enum value of `FlightOrientationMode`.",
            ],
            [
                   "The aircraft's current orientation mode.  @return An enum value of `FlightOrientationMode`.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_orientationMode_inline",
                   "",
            ],
            [
                   "isFailsafeEnabled",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isFailsafe_inline",
                   "`true` if the signal is lost between remote controller and aircraft, and FailSafe is enabled.  @return A boolean value.",
            ],
            [
                   "`true` if the signal is lost between remote controller and aircraft, and FailSafe is enabled.  @return A boolean value.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isFailsafe_inline",
                   "",
            ],
            [
                   "getBatteryThresholdBehavior",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_remainingBattery_inline",
                   "Recommended action based on remaining battery life.  @return An enum value of `BatteryThresholdBehavior`.",
            ],
            [
                   "Recommended action based on remaining battery life.  @return An enum value of `BatteryThresholdBehavior`.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_remainingBattery_inline",
                   "",
            ],
            [
                   "hasReachedMaxFlightHeight",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isReachLimitedHeight_inline",
                   "`true` if the aircraft has reached its flight height limit.  @return A boolean value.",
            ],
            [
                   "`true` if the aircraft has reached its flight height limit.  @return A boolean value.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isReachLimitedHeight_inline",
                   "",
            ],
            [
                   "getHomePointAltitude",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrentState_homePointAltitude_inline",
                   "Returns home point's altitude.  @return A float value.",
            ],
            [
                   "Returns home point's altitude.  @return A float value.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrentState_homePointAltitude_inline",
                   "",
            ],
            [
                   "hasReachedMaxFlightRadius",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isReachLimitedRadius_inline",
                   "`true` if the aircraft has reached its flight radius limit.  @return A boolean value.",
            ],
            [
                   "`true` if the aircraft has reached its flight radius limit.  @return A boolean value.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isReachLimitedRadius_inline",
                   "",
            ],
            [
                   "isLowerThanBatteryWarningThreshold",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isLowerThanBatteryWarningThreshold_inline",
                   "`true` if the battery is lower than the low battery warning threshold.  @return A boolean value.",
            ],
            [
                   "`true` if the battery is lower than the low battery warning threshold.  @return A boolean value.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isLowerThanBatteryWarningThreshold_inline",
                   "",
            ],
            [
                   "isLowerThanSeriousBatteryWarningThreshold",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isLowerThanSeriousBatteryWarningThreshold_inline",
                   "`true` if the battery is lower than the serious low battery warning threshold.  @return A boolean value.",
            ],
            [
                   "`true` if the battery is lower than the serious low battery warning threshold.  @return A boolean value.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isLowerThanSeriousBatteryWarningThreshold_inline",
                   "",
            ],
            [
                   "isHomeLocationSet",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isHomePointSet_inline",
                   "`true` if the home point has been set.  @return A boolean value.",
            ],
            [
                   "`true` if the home point has been set.  @return A boolean value.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_isHomePointSet_inline",
                   "",
            ],
            [
                   "getHomeLocation",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_homeLocation_inline",
                   "Returns the home location of the aircraft as a coordinate.  @return An instance of `LocationCoordinate2D`.",
            ],
            [
                   "Returns the home location of the aircraft as a coordinate.  @return An instance of `LocationCoordinate2D`.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_homeLocation_inline",
                   "",
            ],
            [
                   "getGoHomeAssessment",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrentState_smartGoHomeStatus_inline",
                   "Gets the aircraft's smart go home data. If smart go home is enabled, all the smart go home data will be available  in `GoHomeAssessment`.  @return An instance of `GoHomeAssessment`.",
            ],
            [
                   "Gets the aircraft's smart go home data. If smart go home is enabled, all the smart go home data will be available  in `GoHomeAssessment`.  @return An instance of `GoHomeAssessment`.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrentState_smartGoHomeStatus_inline",
                   "",
            ],
            [
                   "getGoHomeExecutionState",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrentState_goHomeExecutionStatus_inline",
                   "The current status of go-home execution.  @return An enum value of `GoHomeExecutionState`.",
            ],
            [
                   "The current status of go-home execution.  @return An enum value of `GoHomeExecutionState`.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrentState_goHomeExecutionStatus_inline",
                   "",
            ],
            [
                   "isGoingHome",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrentState_isGoingHome_inline",
                   "`true` if the aircraft is going home.  @return A boolean value.",
            ],
            [
                   "`true` if the aircraft is going home.  @return A boolean value.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrentState_isGoingHome_inline",
                   "",
            ],
            [
                   "getGoHomeHeight",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_getGoHomeHeight_inline",
                   "Gets the height when the aircraft is going home in meters.  @return An int value of the height when the aircraft is going home.",
            ],
            [
                   "Gets the height when the aircraft is going home in meters.  @return An int value of the height when the aircraft is going home.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_getGoHomeHeight_inline",
                   "",
            ],
            [
                   "Attitude",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIAttitude.html",
                   "",
                   "The attitude of the aircraft where the pitch, roll, and yaw values will be in the range of [-180, 180] degrees. If its pitch, roll, and yaw values are 0, the aircraft will be hovering level with a True North heading.",
            ],
            [
                   "The attitude of the aircraft where the pitch, roll, and yaw values will be in the range of [-180, 180] degrees. If its pitch, roll, and yaw values are 0, the aircraft will be hovering level with a True North heading.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIAttitude.html",
                   "",
                   "",
            ],
            [
                   "pitch",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIAttitude.html",
                   "#DJIFlightController_DJIAttitude_pitch_inline",
                   "The pitch value of the aircraft: forward is positive, backward is negative. Units are in degrees.",
            ],
            [
                   "The pitch value of the aircraft: forward is positive, backward is negative. Units are in degrees.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIAttitude.html",
                   "#DJIFlightController_DJIAttitude_pitch_inline",
                   "",
            ],
            [
                   "roll",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIAttitude.html",
                   "#DJIFlightController_DJIAttitude_roll_inline",
                   "The roll value of the aircraft: forward is positive, backward is negative. Units are in degrees.",
            ],
            [
                   "The roll value of the aircraft: forward is positive, backward is negative. Units are in degrees.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIAttitude.html",
                   "#DJIFlightController_DJIAttitude_roll_inline",
                   "",
            ],
            [
                   "yaw",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIAttitude.html",
                   "#DJIFlightController_DJIAttitude_yaw_inline",
                   "The yaw value of the aircraft, where 0 corresponds to a True North heading. Yawing clockwise will increase yaw value.",
            ],
            [
                   "The yaw value of the aircraft, where 0 corresponds to a True North heading. Yawing clockwise will increase yaw value.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIAttitude.html",
                   "#DJIFlightController_DJIAttitude_yaw_inline",
                   "",
            ],
            [
                   "BatteryThresholdBehavior",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIAircraftRemainingBatteryState_inline",
                   "Remaining battery life state. This state describes the recommended action based on remaining battery life.",
            ],
            [
                   "Remaining battery life state. This state describes the recommended action based on remaining battery life.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIAircraftRemainingBatteryState_inline",
                   "",
            ],
            [
                   "FLY_NORMALLY",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIAircraftRemainingBatteryState_normal_inline",
                   "Remaining battery life sufficient for normal flying.",
            ],
            [
                   "Remaining battery life sufficient for normal flying.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIAircraftRemainingBatteryState_normal_inline",
                   "",
            ],
            [
                   "GO_HOME",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIAircraftRemainingBatteryState_low_inline",
                   "Remaining battery life sufficient to go home.",
            ],
            [
                   "Remaining battery life sufficient to go home.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIAircraftRemainingBatteryState_low_inline",
                   "",
            ],
            [
                   "LAND_IMMEDIATELY",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIAircraftRemainingBatteryState_veryLow_inline",
                   "Remaining battery life sufficient to land immediately.",
            ],
            [
                   "Remaining battery life sufficient to land immediately.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIAircraftRemainingBatteryState_veryLow_inline",
                   "",
            ],
            [
                   "GoHomeExecutionState",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_inline",
                   "An enum used to identify the different stages of the go-home command.",
            ],
            [
                   "An enum used to identify the different stages of the go-home command.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_inline",
                   "",
            ],
            [
                   "NOT_EXECUTING",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_notExecuting_inline",
                   "The aircraft is not executing a Go-Home command.",
            ],
            [
                   "The aircraft is not executing a Go-Home command.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_notExecuting_inline",
                   "",
            ],
            [
                   "TURN_DIRECTION_TO_HOME_POINT",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_turnDirectionToHomePoint_inline",
                   "The aircraft is turning the heading direction to the home point.",
            ],
            [
                   "The aircraft is turning the heading direction to the home point.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_turnDirectionToHomePoint_inline",
                   "",
            ],
            [
                   "GO_UP_TO_HEIGHT",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_goUpToHeight_inline",
                   "The aircraft is going up to the height for go-home command.",
            ],
            [
                   "The aircraft is going up to the height for go-home command.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_goUpToHeight_inline",
                   "",
            ],
            [
                   "AUTO_FLY_TO_HOME_POINT",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_autoFlyToHomePoint_inline",
                   "The aircraft is flying horizontally to home point.",
            ],
            [
                   "The aircraft is flying horizontally to home point.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_autoFlyToHomePoint_inline",
                   "",
            ],
            [
                   "GO_DOWN_TO_GROUND",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_goDownToGround_inline",
                   "The aircraft is going down after arriving at the home point.",
            ],
            [
                   "The aircraft is going down after arriving at the home point.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_goDownToGround_inline",
                   "",
            ],
            [
                   "BRAKING",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_braking_inline",
                   "The aircraft is braking to avoid collision.",
            ],
            [
                   "The aircraft is braking to avoid collision.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_braking_inline",
                   "",
            ],
            [
                   "BYPASSING",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_bypassing_inline",
                   "The aircraft is bypassing over the obstacle.",
            ],
            [
                   "The aircraft is bypassing over the obstacle.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_bypassing_inline",
                   "",
            ],
            [
                   "COMPLETED",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_completed_inline",
                   "The go-home command is completed.",
            ],
            [
                   "The go-home command is completed.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_completed_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_unknown_inline",
                   "The go-home status is unknown.",
            ],
            [
                   "The go-home status is unknown.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerGoHomeExecutionStatus_unknown_inline",
                   "",
            ],
            [
                   "LocationCoordinate3D",
                   2,
                   "/Components/FlightController/DJIFlightController_DJILocationCoordinate3D.html",
                   "",
                   "This is a structure for presenting the location, latitude, longitude, altitude.",
            ],
            [
                   "This is a structure for presenting the location, latitude, longitude, altitude.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJILocationCoordinate3D.html",
                   "",
                   "",
            ],
            [
                   "LocationCoordinate3D",
                   2,
                   "/Components/FlightController/DJIFlightController_DJILocationCoordinate3D.html",
                   "#DJIFlightController_DJILocationCoordinate3D_Constructor_inline",
                   "Constructs the 3D coordinate with latitude, longitude and altitude.  @param latitude Latitude in degrees @param longitude Longitude in degrees @param altitude Altitude in meters",
            ],
            [
                   "Constructs the 3D coordinate with latitude, longitude and altitude.  @param latitude Latitude in degrees @param longitude Longitude in degrees @param altitude Altitude in meters",
                   1,
                   "/Components/FlightController/DJIFlightController_DJILocationCoordinate3D.html",
                   "#DJIFlightController_DJILocationCoordinate3D_Constructor_inline",
                   "",
            ],
            [
                   "getLatitude",
                   2,
                   "/Components/FlightController/DJIFlightController_DJILocationCoordinate3D.html",
                   "#DJIFlightController_DJILocationCoordinate3D_getLatitude_inline",
                   "Returns the latitude.  @return A double value of the latitude.",
            ],
            [
                   "Returns the latitude.  @return A double value of the latitude.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJILocationCoordinate3D.html",
                   "#DJIFlightController_DJILocationCoordinate3D_getLatitude_inline",
                   "",
            ],
            [
                   "getLongitude",
                   2,
                   "/Components/FlightController/DJIFlightController_DJILocationCoordinate3D.html",
                   "#DJIFlightController_DJILocationCoordinate3D_getLongitude_inline",
                   "Returns the longitude.  @return A double value of the longitude.",
            ],
            [
                   "Returns the longitude.  @return A double value of the longitude.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJILocationCoordinate3D.html",
                   "#DJIFlightController_DJILocationCoordinate3D_getLongitude_inline",
                   "",
            ],
            [
                   "getAltitude",
                   2,
                   "/Components/FlightController/DJIFlightController_DJILocationCoordinate3D.html",
                   "#DJIFlightController_DJILocationCoordinate3D_getAltitude_inline",
                   "Returns the relative altitude of the aircraft relative to take off location, measured by barometer, in meters.  @return A float value of the relative altitude of the aircraft relative to take off location.",
            ],
            [
                   "Returns the relative altitude of the aircraft relative to take off location, measured by barometer, in meters.  @return A float value of the relative altitude of the aircraft relative to take off location.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJILocationCoordinate3D.html",
                   "#DJIFlightController_DJILocationCoordinate3D_getAltitude_inline",
                   "",
            ],
            [
                   "GoHomeAssessment",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus.html",
                   "",
                   "Class for smart go home status.",
            ],
            [
                   "Class for smart go home status.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus.html",
                   "",
                   "",
            ],
            [
                   "getRemainingFlightTime",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus_remainingFlightTime_inline",
                   "The estimated remaining time, in seconds, it will take the aircraft to go home with a 10% battery buffer remaining. This time includes landing the aircraft. If the aircraft is using the simulator, this value will be 0.  @return An int value.",
            ],
            [
                   "The estimated remaining time, in seconds, it will take the aircraft to go home with a 10% battery buffer remaining. This time includes landing the aircraft. If the aircraft is using the simulator, this value will be 0.  @return An int value.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus_remainingFlightTime_inline",
                   "",
            ],
            [
                   "getTimeNeededToGoHome",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus_timeNeededToGoHome_inline",
                   "The estimated time, in seconds, needed for the aircraft to go home from its current location.  @return An int value.",
            ],
            [
                   "The estimated time, in seconds, needed for the aircraft to go home from its current location.  @return An int value.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus_timeNeededToGoHome_inline",
                   "",
            ],
            [
                   "getTimeNeededToLandFromCurrentHeight",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus_timeNeededToLandFromCurrentHeight_inline",
                   "The estimated time, in seconds, needed for the aircraft to move downward from its current position and land.  @return An int value.",
            ],
            [
                   "The estimated time, in seconds, needed for the aircraft to move downward from its current position and land.  @return An int value.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus_timeNeededToLandFromCurrentHeight_inline",
                   "",
            ],
            [
                   "getBatteryPercentageNeededToGoHome",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus_batteryPercentageNeededToGoHome_inline",
                   "The estimated battery percentage, in the range of [0,100], needed for the aircraft to go home and have 10% battery remaining. This includes landing of the aircraft.  @return An int value.",
            ],
            [
                   "The estimated battery percentage, in the range of [0,100], needed for the aircraft to go home and have 10% battery remaining. This includes landing of the aircraft.  @return An int value.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus_batteryPercentageNeededToGoHome_inline",
                   "",
            ],
            [
                   "getBatteryPercentageNeededToLandFromCurrentHeight",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus_batteryPercentageNeededToLandFromCurrentHeight_inline",
                   "The battery percentage, in the range of [0,100], needed for the aircraft to move downward from its current position and land.  @return Battery percentage.",
            ],
            [
                   "The battery percentage, in the range of [0,100], needed for the aircraft to move downward from its current position and land.  @return Battery percentage.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus_batteryPercentageNeededToLandFromCurrentHeight_inline",
                   "",
            ],
            [
                   "getMaxRadiusAircraftCanFlyAndGoHome",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus_maxRadiusAircraftCanFlyAndGoHome_inline",
                   "The maximum radius, in meters, an aircraft can fly from its home location and still make it all the way back home, based on altitude, distance, battery, etc. If the  aircraft goes out farther than the max radius, it will fly as far back home as it can and land. If the aircraft is using the simulator, this value will be 0.  @return A float value.",
            ],
            [
                   "The maximum radius, in meters, an aircraft can fly from its home location and still make it all the way back home, based on altitude, distance, battery, etc. If the  aircraft goes out farther than the max radius, it will fly as far back home as it can and land. If the aircraft is using the simulator, this value will be 0.  @return A float value.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus_maxRadiusAircraftCanFlyAndGoHome_inline",
                   "",
            ],
            [
                   "getSmartRTHState",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus_smartRTHState_inline",
                   "The Smart Return-To-Home (RTH) state for the current flight.  @return Return an enum value of `SmartRTHState`.",
            ],
            [
                   "The Smart Return-To-Home (RTH) state for the current flight.  @return Return an enum value of `SmartRTHState`.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus_smartRTHState_inline",
                   "",
            ],
            [
                   "getSmartRTHCountdown",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus_smartRTHCountdown_inline",
                   "The countdown (in seconds) for the Smart Return-To-Home (RTH). Once the countdown reaches 0, the aircraft will  execute an automatic go-home procedure. It is only valid when  `getSmartRTHState`  is `COUNTING_DOWN`.  @return The countdown for the Smart Return-To-Home (RTH).",
            ],
            [
                   "The countdown (in seconds) for the Smart Return-To-Home (RTH). Once the countdown reaches 0, the aircraft will  execute an automatic go-home procedure. It is only valid when  `getSmartRTHState`  is `COUNTING_DOWN`.  @return The countdown for the Smart Return-To-Home (RTH).",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus.html",
                   "#DJIFlightController_DJIFlightControllerCurrectState_DJIFlightControllerSmartGoHomeStatus_smartRTHCountdown_inline",
                   "",
            ],
            [
                   "GPSSignalLevel",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIGPSSignalStatus_inline",
                   "A enum class representing GPS signal levels, which are used to measure the signal quality.",
            ],
            [
                   "A enum class representing GPS signal levels, which are used to measure the signal quality.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIGPSSignalStatus_inline",
                   "",
            ],
            [
                   "LEVEL_0",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIGPSSignalStatus_level0_inline",
                   "The GPS has almost no signal, which is very bad.",
            ],
            [
                   "The GPS has almost no signal, which is very bad.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIGPSSignalStatus_level0_inline",
                   "",
            ],
            [
                   "LEVEL_1",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIGPSSignalStatus_level1_inline",
                   "The GPS signal is very weak.",
            ],
            [
                   "The GPS signal is very weak.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIGPSSignalStatus_level1_inline",
                   "",
            ],
            [
                   "LEVEL_2",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIGPSSignalStatus_level2_inline",
                   "The GPS signal is weak. At this level, the aircraft's go home functionality will still work.",
            ],
            [
                   "The GPS signal is weak. At this level, the aircraft's go home functionality will still work.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIGPSSignalStatus_level2_inline",
                   "",
            ],
            [
                   "LEVEL_3",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIGPSSignalStatus_level3_inline",
                   "The GPS signal is good. At this level, the aircraft can hover in the air.",
            ],
            [
                   "The GPS signal is good. At this level, the aircraft can hover in the air.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIGPSSignalStatus_level3_inline",
                   "",
            ],
            [
                   "LEVEL_4",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIGPSSignalStatus_level4_inline",
                   "The GPS signal is very good. At this level, the aircraft can record the home point.",
            ],
            [
                   "The GPS signal is very good. At this level, the aircraft can record the home point.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIGPSSignalStatus_level4_inline",
                   "",
            ],
            [
                   "LEVEL_5",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIGPSSignalStatus_level5_inline",
                   "The GPS signal is very strong.",
            ],
            [
                   "The GPS signal is very strong.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIGPSSignalStatus_level5_inline",
                   "",
            ],
            [
                   "NONE",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIGPSSignalStatus_None_inline",
                   "There is no GPS signal.",
            ],
            [
                   "There is no GPS signal.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIGPSSignalStatus_None_inline",
                   "",
            ],
            [
                   "FlightMode",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_inline",
                   "Flight controller flight modes. For more information, see http://wiki.dji.com/en/index.php/Phantom_3_Professional-Aircraft.",
            ],
            [
                   "Flight controller flight modes. For more information, see http://wiki.dji.com/en/index.php/Phantom_3_Professional-Aircraft.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_inline",
                   "",
            ],
            [
                   "MANUAL",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_manual_inline",
                   "Manual mode.",
            ],
            [
                   "Manual mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_manual_inline",
                   "",
            ],
            [
                   "ATTI",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_atti_inline",
                   "Attitude mode.",
            ],
            [
                   "Attitude mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_atti_inline",
                   "",
            ],
            [
                   "ATTI_COURSE_LOCK",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_AttiCourseLock_inline",
                   "Attitude course lock mode.",
            ],
            [
                   "Attitude course lock mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_AttiCourseLock_inline",
                   "",
            ],
            [
                   "GPS_ATTI",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_GPSAtti_inline",
                   "GPS Attitude mode.",
            ],
            [
                   "GPS Attitude mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_GPSAtti_inline",
                   "",
            ],
            [
                   "GPS_COURSE_LOCK",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_GPSCourseLock_inline",
                   "GPS course lock mode.",
            ],
            [
                   "GPS course lock mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_GPSCourseLock_inline",
                   "",
            ],
            [
                   "GPS_HOME_LOCK",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_GPSHomeLock_inline",
                   "GPS Home mode.",
            ],
            [
                   "GPS Home mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_GPSHomeLock_inline",
                   "",
            ],
            [
                   "GPS_HOT_POINT",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_GPSHotPoint_inline",
                   "GPS hot point mode.",
            ],
            [
                   "GPS hot point mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_GPSHotPoint_inline",
                   "",
            ],
            [
                   "ASSISTED_TAKEOFF",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_AssistedTakeOff_inline",
                   "Assisted takeoff mode.",
            ],
            [
                   "Assisted takeoff mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_AssistedTakeOff_inline",
                   "",
            ],
            [
                   "AUTO_TAKEOFF",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_AutoTakeOff_inline",
                   "Auto takeoff mode.",
            ],
            [
                   "Auto takeoff mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_AutoTakeOff_inline",
                   "",
            ],
            [
                   "AUTO_LANDING",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_AutoLanding_inline",
                   "Auto landing mode.",
            ],
            [
                   "Auto landing mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_AutoLanding_inline",
                   "",
            ],
            [
                   "GPS_WAYPOINT",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_GPSWaypoint_inline",
                   "GPS waypoint mode.",
            ],
            [
                   "GPS waypoint mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_GPSWaypoint_inline",
                   "",
            ],
            [
                   "GO_HOME",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_GoHome_inline",
                   "Go home mode.",
            ],
            [
                   "Go home mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_GoHome_inline",
                   "",
            ],
            [
                   "JOYSTICK",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_Joystick_inline",
                   "Joystick mode.",
            ],
            [
                   "Joystick mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_Joystick_inline",
                   "",
            ],
            [
                   "GPS_ATTI_WRISTBAND",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_AttiLimited_inline",
                   "Attitude limited mode.",
            ],
            [
                   "Attitude limited mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_AttiLimited_inline",
                   "",
            ],
            [
                   "DRAW",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_Draw_inline",
                   "Draw mode.",
            ],
            [
                   "Draw mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_Draw_inline",
                   "",
            ],
            [
                   "GPS_FOLLOW_ME",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_GPSFollowMe_inline",
                   "GPS follow me mode.",
            ],
            [
                   "GPS follow me mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_GPSFollowMe_inline",
                   "",
            ],
            [
                   "ACTIVE_TRACK",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_ActiveTrack_inline",
                   "ActiveTrack mode.",
            ],
            [
                   "ActiveTrack mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_ActiveTrack_inline",
                   "",
            ],
            [
                   "TAP_FLY",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_TapFly_inline",
                   "TapFly mode.",
            ],
            [
                   "TapFly mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_TapFly_inline",
                   "",
            ],
            [
                   "GPS_SPORT",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_Sport_inline",
                   "Sport mode.",
            ],
            [
                   "Sport mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_Sport_inline",
                   "",
            ],
            [
                   "GPS_NOVICE",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_GPSNoive_inline",
                   "GPS Novice mode.",
            ],
            [
                   "GPS Novice mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_GPSNoive_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_Unknown_inline",
                   "The main controller flight mode is unknown.",
            ],
            [
                   "The main controller flight mode is unknown.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_Unknown_inline",
                   "",
            ],
            [
                   "CONFIRM_LANDING",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_ConfirmLanding_inline",
                   "Confirm landing mode.",
            ],
            [
                   "Confirm landing mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_ConfirmLanding_inline",
                   "",
            ],
            [
                   "TERRAIN_FOLLOW",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_TerrainFollow_inline",
                   "The aircraft should move following the terrain.",
            ],
            [
                   "The aircraft should move following the terrain.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_TerrainFollow_inline",
                   "",
            ],
            [
                   "TRIPOD",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_Tripod_inline",
                   "Tripod mode.",
            ],
            [
                   "Tripod mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_Tripod_inline",
                   "",
            ],
            [
                   "TRACK_SPOTLIGHT",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_ActiveTrackSpotlight_inline",
                   "Active track mode, corresponds to Spotlight active track mode.",
            ],
            [
                   "Active track mode, corresponds to Spotlight active track mode.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_ActiveTrackSpotlight_inline",
                   "",
            ],
            [
                   "MOTORS_JUST_STARTED",
                   2,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_MotorsJustStarted_inline",
                   "The motors are just started.",
            ],
            [
                   "The motors are just started.",
                   1,
                   "/Components/FlightController/DJIFlightController_DJIFlightControllerCurrectState.html",
                   "#DJIFlightController_DJIFlightControllerFlightMode_MotorsJustStarted_inline",
                   "",
            ],
            [
                   "setMaxFlightHeight",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightLimitation_setMaxFlightHeight_inline",
                   "Sets the maximum flight height limitation of the aircraft. The maxHeight</code> value must be in the  range [20, 500] m.  @param maxHeight Maximum height of the aircraft. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the maximum flight height limitation of the aircraft. The maxHeight</code> value must be in the  range [20, 500] m.  @param maxHeight Maximum height of the aircraft. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightLimitation_setMaxFlightHeight_inline",
                   "",
            ],
            [
                   "getMaxFlightHeight",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightLimitation_getMaxFlightHeight_inline",
                   "Gets the maximum flight height limitation of the aircraft.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the maximum flight height limitation of the aircraft.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightLimitation_getMaxFlightHeight_inline",
                   "",
            ],
            [
                   "setMaxFlightRadius",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightLimitation_setMaxFlightRadius_inline",
                   "Sets the maximum flight radius limitation of the aircraft. The radius is calculated from the home point.  The maxRadius</code> value must be in the range [15, 500] m.  @param maxRadius Maximum flight radius of the aircraft. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the maximum flight radius limitation of the aircraft. The radius is calculated from the home point.  The maxRadius</code> value must be in the range [15, 500] m.  @param maxRadius Maximum flight radius of the aircraft. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightLimitation_setMaxFlightRadius_inline",
                   "",
            ],
            [
                   "getMaxFlightRadius",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightLimitation_getMaxFlightRadius_inline",
                   "Gets the maximum flight radius limitation of the aircraft.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the maximum flight radius limitation of the aircraft.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightLimitation_getMaxFlightRadius_inline",
                   "",
            ],
            [
                   "setMaxFlightRadiusLimitationEnabled",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightLimitation_setMaxFlightRadiusLimitationEnabled_inline",
                   "Sets whether the maximum flight radius limitation is enabled. If enabled is `false`,  there is no maximum flight radius limitation.  @param enabled Maximum flight radius limitation is enabled. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets whether the maximum flight radius limitation is enabled. If enabled is `false`,  there is no maximum flight radius limitation.  @param enabled Maximum flight radius limitation is enabled. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightLimitation_setMaxFlightRadiusLimitationEnabled_inline",
                   "",
            ],
            [
                   "getMaxFlightRadiusLimitationEnabled",
                   2,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightLimitation_getMaxFlightRadiusLimitationEnabled_inline",
                   "Gets the maximum flight radius limitation status (enabled/disabled).  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets the maximum flight radius limitation status (enabled/disabled).  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/FlightController/DJIFlightController.html",
                   "#DJIFlightLimitation_getMaxFlightRadiusLimitationEnabled_inline",
                   "",
            ],
            [
                   "setFlyZoneStateCallback",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_setFlyForbidStatusUpdatedCallback_inline",
                   "Sets up the `setFlyZoneStateCallback` for  obtaining `FlyZoneState`.  @param callback FlyForbidStatusUpdatedCallback callback.",
            ],
            [
                   "Sets up the `setFlyZoneStateCallback` for  obtaining `FlyZoneState`.  @param callback FlyForbidStatusUpdatedCallback callback.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_setFlyForbidStatusUpdatedCallback_inline",
                   "",
            ],
            [
                   "getFlyZonesInSurroundingArea",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_getFlyZonesInSurroundingArea_inline",
                   "Gets all the fly zones within 20km of the aircraft. During simulation, this method is available only when the aircraft location is within 50km of (37.460484, -122.115312) or within 50km of (22.5726, 113.8124499). Use of the geographic information provided by DJIFlyZoneManager is restricted. Refer to the DJI Developer Policy.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets all the fly zones within 20km of the aircraft. During simulation, this method is available only when the aircraft location is within 50km of (37.460484, -122.115312) or within 50km of (22.5726, 113.8124499). Use of the geographic information provided by DJIFlyZoneManager is restricted. Refer to the DJI Developer Policy.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_getFlyZonesInSurroundingArea_inline",
                   "",
            ],
            [
                   "getUnlockedFlyZones",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_getUnlockedFlyZones_inline",
                   "Gets a list of unlocked fly zones of the authorized account from the server. The list contains the fly zones unlocked by the Flight Planner (http://www.dji.com/flysafe/geo-system#planner), and the fly zones unlocked during flight using DJI GO or any DJI Mobile SDK based application.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets a list of unlocked fly zones of the authorized account from the server. The list contains the fly zones unlocked by the Flight Planner (http://www.dji.com/flysafe/geo-system#planner), and the fly zones unlocked during flight using DJI GO or any DJI Mobile SDK based application.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_getUnlockedFlyZones_inline",
                   "",
            ],
            [
                   "unlockFlyZones",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_unlockFlyZones_inline",
                   "Unlocks the selected fly zones. This method can be used to unlock  enhanced warning and authorization zones. After unlocking the zones, flight will be unrestricted in those zones until the unlock expires.  The unlocking record will be linked to the user's account and will  be accessible to DJI GO and other DJI Mobile SDK based applications.  @param ids The ids of EnhancedWarningZones or AuthorizedWarningZones. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Unlocks the selected fly zones. This method can be used to unlock  enhanced warning and authorization zones. After unlocking the zones, flight will be unrestricted in those zones until the unlock expires.  The unlocking record will be linked to the user's account and will  be accessible to DJI GO and other DJI Mobile SDK based applications.  @param ids The ids of EnhancedWarningZones or AuthorizedWarningZones. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_unlockFlyZones_inline",
                   "",
            ],
            [
                   "loadIndividualUnlockZonesFromServer",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_loadIndividualUnlockZonesFromServer_inline",
                   "When an Individual Unlock Zone is approved, the approval and zone information needs to be downloaded from the Fly Zone server and uploaded to the aircraft. For each product connection state change, or network connection state change this  is done automatically. However, if the Individual Unlock Zone is approved and needs  to be uploaded to the aircraft without changing the network connectivity or product  connectivity state, then this method can be used to force the  Individual Unlock  Zone update. For this method to work, the user must already be logged in. Individual  Unlock Zones are associated with an aircraft serial number, and so, to upload to  the aircraft, the right aircraft must also be connected. This method can only be  used when `isIndividualUnlockZoneSupported` is `true`.  @param callback `completion callback` to receive the result.",
            ],
            [
                   "When an Individual Unlock Zone is approved, the approval and zone information needs to be downloaded from the Fly Zone server and uploaded to the aircraft. For each product connection state change, or network connection state change this  is done automatically. However, if the Individual Unlock Zone is approved and needs  to be uploaded to the aircraft without changing the network connectivity or product  connectivity state, then this method can be used to force the  Individual Unlock  Zone update. For this method to work, the user must already be logged in. Individual  Unlock Zones are associated with an aircraft serial number, and so, to upload to  the aircraft, the right aircraft must also be connected. This method can only be  used when `isIndividualUnlockZoneSupported` is `true`.  @param callback `completion callback` to receive the result.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_loadIndividualUnlockZonesFromServer_inline",
                   "",
            ],
            [
                   "getIndividualUnlockZones",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_getIndividualUnlockZones_inline",
                   "Gets the Individual Unlock zones currently on the aircraft. This method can only be used when `isIndividualUnlockZoneSupported`  is `true`.  @param callback Completion callback to receive the result.",
            ],
            [
                   "Gets the Individual Unlock zones currently on the aircraft. This method can only be used when `isIndividualUnlockZoneSupported`  is `true`.  @param callback Completion callback to receive the result.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_getIndividualUnlockZones_inline",
                   "",
            ],
            [
                   "enableIndividualUnlockZone",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_enableIndividualUnlockZone_inline",
                   "Enables an Individual Unlock zones that is on the aircraft. All Individual Unlock zones  on the aircraft can be retrieved with `getIndividualUnlockZones`. At any time, only one Individual Unlock zone can be enabled. Enabling an Individual Unlock  zone will disable the previously enabled zone. This method can only be used when  `isIndividualUnlockZoneSupported` is `true`.  @param zone Individual Unlock zone to enabled. If `zone` is `nil`, only the previously enabled zone  will be disabled. @param callback `completion callback` to receive the result.",
            ],
            [
                   "Enables an Individual Unlock zones that is on the aircraft. All Individual Unlock zones  on the aircraft can be retrieved with `getIndividualUnlockZones`. At any time, only one Individual Unlock zone can be enabled. Enabling an Individual Unlock  zone will disable the previously enabled zone. This method can only be used when  `isIndividualUnlockZoneSupported` is `true`.  @param zone Individual Unlock zone to enabled. If `zone` is `nil`, only the previously enabled zone  will be disabled. @param callback `completion callback` to receive the result.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_enableIndividualUnlockZone_inline",
                   "",
            ],
            [
                   "getEnabledIndividualUnlockZone",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_getEnabledIndividualUnlockZone_inline",
                   "Gets the currently enabled Individual Unlock zone. This method can only be used when `isIndividualUnlockZoneSupported` is `true`.  @param callback Completion callback to receive the result.",
            ],
            [
                   "Gets the currently enabled Individual Unlock zone. This method can only be used when `isIndividualUnlockZoneSupported` is `true`.  @param callback Completion callback to receive the result.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_getEnabledIndividualUnlockZone_inline",
                   "",
            ],
            [
                   "isIndividualUnlockZoneSupported",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_isIndividualUnlockZoneSupported_inline",
                   "`true` if an aircraft is connected with flight controller firmware that supports Individual Unlock Zones. Aircraft that support Individual unlock  zones are also able to disable unlocked fly zones temporarily.  @return A boolean value to check if individual unlock zone supported.",
            ],
            [
                   "`true` if an aircraft is connected with flight controller firmware that supports Individual Unlock Zones. Aircraft that support Individual unlock  zones are also able to disable unlocked fly zones temporarily.  @return A boolean value to check if individual unlock zone supported.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_isIndividualUnlockZoneSupported_inline",
                   "",
            ],
            [
                   "getDatabaseVersion",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_databaseVersion_inline",
                   "The version of the fly zone database in the firmware of the aircraft. It is `null` if `getDatabaseState` is  `INITIALIZING`.  @param callback The execution callback.",
            ],
            [
                   "The version of the fly zone database in the firmware of the aircraft. It is `null` if `getDatabaseState` is  `INITIALIZING`.  @param callback The execution callback.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_databaseVersion_inline",
                   "",
            ],
            [
                   "getDatabaseState",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_databaseState_inline",
                   "The fly zone database state in the firmware of the aircraft. The SDK will compare the version of the database on the aircraft against the latest one online. When the aircraft database is  out-of-date, the user should use DJI GO or Assistant 2 to update the firmware.  @param callback The execution callback.",
            ],
            [
                   "The fly zone database state in the firmware of the aircraft. The SDK will compare the version of the database on the aircraft against the latest one online. When the aircraft database is  out-of-date, the user should use DJI GO or Assistant 2 to update the firmware.  @param callback The execution callback.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_databaseState_inline",
                   "",
            ],
            [
                   "setGEOSystemEnabled",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_setGEOSystemEnabled_inline",
                   "`true` to enable GEO system. By default, if the GEO system is available at the aircraft's  location, the GEO system will be enabled.  This setting can be changed when the aircraft is in the air, however it will not take effect until the aircraft lands. When the GEO system is disabled, the aircraft  reverts to the NFZ (No Fly Zone) system. This interface may be deprecated in the future. It is only supported when `isIndividualUnlockZoneSupported` returns `false`. Otherwise, GEO system is always enabled when the current location supports it.  @param enabled `true` to enable GEO system. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "`true` to enable GEO system. By default, if the GEO system is available at the aircraft's  location, the GEO system will be enabled.  This setting can be changed when the aircraft is in the air, however it will not take effect until the aircraft lands. When the GEO system is disabled, the aircraft  reverts to the NFZ (No Fly Zone) system. This interface may be deprecated in the future. It is only supported when `isIndividualUnlockZoneSupported` returns `false`. Otherwise, GEO system is always enabled when the current location supports it.  @param enabled `true` to enable GEO system. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_setGEOSystemEnabled_inline",
                   "",
            ],
            [
                   "getGEOSystemEnabled",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_getGEOSystemEnabled_inline",
                   "`true` to enable GEO system. By default, if the GEO system is available at the aircraft's  location, the GEO system will be enabled.  This setting can be changed when the aircraft is in the air, however it will not take effect until the aircraft lands. When the GEO system is disabled, the aircraft  reverts to the NFZ (No Fly Zone) system. This interface may be deprecated in the future.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "`true` to enable GEO system. By default, if the GEO system is available at the aircraft's  location, the GEO system will be enabled.  This setting can be changed when the aircraft is in the air, however it will not take effect until the aircraft lands. When the GEO system is disabled, the aircraft  reverts to the NFZ (No Fly Zone) system. This interface may be deprecated in the future.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_getGEOSystemEnabled_inline",
                   "",
            ],
            [
                   "FlyZoneInformation",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "",
                   "This class contains information about a fly zone. `getFlyZoneType`  should be used to understand the type of fly zone to know which information in this class is valid.",
            ],
            [
                   "This class contains information about a fly zone. `getFlyZoneType`  should be used to understand the type of fly zone to know which information in this class is valid.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "",
                   "",
            ],
            [
                   "FlyZoneDatabaseState",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJIFlyZoneDatabaseState_inline",
                   "The state of the fly zone database on the aircraft.",
            ],
            [
                   "The state of the fly zone database on the aircraft.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJIFlyZoneDatabaseState_inline",
                   "",
            ],
            [
                   "FlyZoneState",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneStatus_inline",
                   "This enum describes whether the aircraft is clear of, near, or actually in a fly zone.",
            ],
            [
                   "This enum describes whether the aircraft is clear of, near, or actually in a fly zone.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneStatus_inline",
                   "",
            ],
            [
                   "INITIALIZING",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJIFlyZoneDatabaseState_Initializing_inline",
                   "SDK is fetching the information of the database.",
            ],
            [
                   "SDK is fetching the information of the database.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJIFlyZoneDatabaseState_Initializing_inline",
                   "",
            ],
            [
                   "NO_INTERNET_CONNECTION",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJIFlyZoneDatabaseState_NoInternetConnection_inline",
                   "SDK cannot access the Internet, so it cannot compare the database version with the latest one on the Internet.",
            ],
            [
                   "SDK cannot access the Internet, so it cannot compare the database version with the latest one on the Internet.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJIFlyZoneDatabaseState_NoInternetConnection_inline",
                   "",
            ],
            [
                   "OUT_OF_DATE",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJIFlyZoneDatabaseState_OutOfDate_inline",
                   "Aircraft's database version is older than the latest one.  User should use DJI GO or Assistant 2 to upgrade the firmware in order  to keep the database up to date.",
            ],
            [
                   "Aircraft's database version is older than the latest one.  User should use DJI GO or Assistant 2 to upgrade the firmware in order  to keep the database up to date.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJIFlyZoneDatabaseState_OutOfDate_inline",
                   "",
            ],
            [
                   "UP_TO_DATE",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJIFlyZoneDatabaseState_UpToDate_inline",
                   "The database in the aircraft is up to date.",
            ],
            [
                   "The database in the aircraft is up to date.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJIFlyZoneDatabaseState_UpToDate_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJIFlyZoneDatabaseState_Unknown_inline",
                   "Unknown state",
            ],
            [
                   "Unknown state",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJIFlyZoneDatabaseState_Unknown_inline",
                   "",
            ],
            [
                   "getFlyZoneType",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_type_inline",
                   "Returns the type fly zone.  @return The type of fly zone.",
            ],
            [
                   "Returns the type fly zone.  @return The type of fly zone.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_type_inline",
                   "",
            ],
            [
                   "getFlyZoneID",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneID_inline",
                   "Returns the fly zone's ID. This is required if unlocking a fly zone.  @return An int value.",
            ],
            [
                   "Returns the fly zone's ID. This is required if unlocking a fly zone.  @return An int value.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneID_inline",
                   "",
            ],
            [
                   "getName",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_name_inline",
                   "Returns the name of the fly zone.  @return A string instance of the name of the fly zone.",
            ],
            [
                   "Returns the name of the fly zone.  @return A string instance of the name of the fly zone.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_name_inline",
                   "",
            ],
            [
                   "getReason",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_reason_inline",
                   "Returns the reason of the fly zone `FlyZoneReason`.  @return An enum value of `FlyZoneReason`.",
            ],
            [
                   "Returns the reason of the fly zone `FlyZoneReason`.  @return An enum value of `FlyZoneReason`.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_reason_inline",
                   "",
            ],
            [
                   "getCoordinate",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_coordinate_inline",
                   "The coordinate of the fly zone's center. Only used for GEO and NFZ fly zones.  @return Coordinate of fly zone center.",
            ],
            [
                   "The coordinate of the fly zone's center. Only used for GEO and NFZ fly zones.  @return Coordinate of fly zone center.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_coordinate_inline",
                   "",
            ],
            [
                   "getRadius",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_radius_inline",
                   "The radius of the fly zone in meters. If the fly zone is a truncated cone, then the radius is the bottom of the cone. Only used for GEO and NFZ fly zones.  @return A double value of the radius of the fly zone in meters.",
            ],
            [
                   "The radius of the fly zone in meters. If the fly zone is a truncated cone, then the radius is the bottom of the cone. Only used for GEO and NFZ fly zones.  @return A double value of the radius of the fly zone in meters.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_radius_inline",
                   "",
            ],
            [
                   "getShape",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_shape_inline",
                   "The shape of the fly zone. This shape is only used for GEO (always cylinder) and NFZ fly zones.  @return An enum value of `FlyZoneShape`.",
            ],
            [
                   "The shape of the fly zone. This shape is only used for GEO (always cylinder) and NFZ fly zones.  @return An enum value of `FlyZoneShape`.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_shape_inline",
                   "",
            ],
            [
                   "getCategory",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_category_inline",
                   "The category of the fly zone. This is only used for GEO fly zones.  @return An enum value of `FlyZoneGEOCategory`.",
            ],
            [
                   "The category of the fly zone. This is only used for GEO fly zones.  @return An enum value of `FlyZoneGEOCategory`.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_category_inline",
                   "",
            ],
            [
                   "getSubFlyZones",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_subFlyZones_inline",
                   "Information about the Sub fly zones.  If empty, then the fly zone is a GEO or NFZ fly zone. If populated, this fly zone is a Poly fly zone and the sub fly zone information  will take precedence over information in `FlyZoneInformation`. `FlyZoneInformation` should only be used for fly zone identifying information.  @return An array of `SubFlyZoneInformation` objects.",
            ],
            [
                   "Information about the Sub fly zones.  If empty, then the fly zone is a GEO or NFZ fly zone. If populated, this fly zone is a Poly fly zone and the sub fly zone information  will take precedence over information in `FlyZoneInformation`. `FlyZoneInformation` should only be used for fly zone identifying information.  @return An array of `SubFlyZoneInformation` objects.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_subFlyZones_inline",
                   "",
            ],
            [
                   "setUnlockingEnabled",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_setUnlockingEnabled_inline",
                   "When `isIndividualUnlockZoneSupported` is `true`, unlocked fly zones  can be disabled. This is useful if the aircraft is shared between users.  @param enabled `true` to enable the unlocked fly zone. @param callback `completion callback` to receive the result.",
            ],
            [
                   "When `isIndividualUnlockZoneSupported` is `true`, unlocked fly zones  can be disabled. This is useful if the aircraft is shared between users.  @param enabled `true` to enable the unlocked fly zone. @param callback `completion callback` to receive the result.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_setUnlockingEnabled_inline",
                   "",
            ],
            [
                   "getUnlockingEnabled",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_getUnlockingEnabled_inline",
                   "`true` if the unlocked fly zone is enabled. This method can only be used when `isIndividualUnlockZoneSupported` is `true`.  @param callback Completion callback to receive the result.",
            ],
            [
                   "`true` if the unlocked fly zone is enabled. This method can only be used when `isIndividualUnlockZoneSupported` is `true`.  @param callback Completion callback to receive the result.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_getUnlockingEnabled_inline",
                   "",
            ],
            [
                   "getStartTime",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_startTime_inline",
                   "The timestamp of when the flight warning or flight restriction begins, formatted in UTC (YYYY-MM-DD hh:mm:ss). This is used for temporary flight  restrictions.  @return An instance of String.",
            ],
            [
                   "The timestamp of when the flight warning or flight restriction begins, formatted in UTC (YYYY-MM-DD hh:mm:ss). This is used for temporary flight  restrictions.  @return An instance of String.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_startTime_inline",
                   "",
            ],
            [
                   "getEndTime",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_endTime_inline",
                   "The timestamp of when the flight warning or flight restriction ends, formatted in UTC (YYYY-MM-DD hh:mm:ss).  @return A string instance of the timestamp when the flight warning or flight restriction ends.",
            ],
            [
                   "The timestamp of when the flight warning or flight restriction ends, formatted in UTC (YYYY-MM-DD hh:mm:ss).  @return A string instance of the timestamp when the flight warning or flight restriction ends.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_endTime_inline",
                   "",
            ],
            [
                   "getUnlockStartTime",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_unlockStartTime_inline",
                   "The timestamp when the fly zone is unlocked, formatted in UTC (YYYY-MM-DD hh:mm:ss).  @return A string instance of the timestamp when the fly zone is unlocked.",
            ],
            [
                   "The timestamp when the fly zone is unlocked, formatted in UTC (YYYY-MM-DD hh:mm:ss).  @return A string instance of the timestamp when the fly zone is unlocked.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_unlockStartTime_inline",
                   "",
            ],
            [
                   "getUnlockEndTime",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_unlockEndTime_inline",
                   "The timestamp the unlocked zone expires, formatted in UTC (YYYY-MM-DD hh:mm:ss).  @return A string instance of the timestamp when the unlocked zone expires.",
            ],
            [
                   "The timestamp the unlocked zone expires, formatted in UTC (YYYY-MM-DD hh:mm:ss).  @return A string instance of the timestamp when the unlocked zone expires.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_unlockEndTime_inline",
                   "",
            ],
            [
                   "FlyZoneType",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_ZoneType_inline",
                   "There are three types of fly zones, NFZ, GEO and Poly.",
            ],
            [
                   "There are three types of fly zones, NFZ, GEO and Poly.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_ZoneType_inline",
                   "",
            ],
            [
                   "NFZ",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_ZoneType_NFZ_inline",
                   "The NFZ fly zone is a cylinder or truncated cone volume where flight is restricted. Some NFZ fly zones also have a 4km buffer around them where flight height is  restricted to 120m.",
            ],
            [
                   "The NFZ fly zone is a cylinder or truncated cone volume where flight is restricted. Some NFZ fly zones also have a 4km buffer around them where flight height is  restricted to 120m.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_ZoneType_NFZ_inline",
                   "",
            ],
            [
                   "GEO",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_ZoneType_GEO_inline",
                   "The GEO fly zone is a cylinder volume with four levels of restriction.  See `FlyZoneGEOCategory`. Some restrictions can  be unlocked while others cannot.",
            ],
            [
                   "The GEO fly zone is a cylinder volume with four levels of restriction.  See `FlyZoneGEOCategory`. Some restrictions can  be unlocked while others cannot.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_ZoneType_GEO_inline",
                   "",
            ],
            [
                   "POLY",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_ZoneType_Poly_inline",
                   "The Poly fly zone consists of one or more sub fly zones that are cylinders or complex volumes with different height limitations. A height limitation of 0m means flight is completely restricted. This is used by Mavic, Phantom 4 Pro, Inspire 2 and Phantom 4.",
            ],
            [
                   "The Poly fly zone consists of one or more sub fly zones that are cylinders or complex volumes with different height limitations. A height limitation of 0m means flight is completely restricted. This is used by Mavic, Phantom 4 Pro, Inspire 2 and Phantom 4.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_ZoneType_Poly_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_ZoneType_Unknown_inline",
                   "The fly zone is of unknown type.",
            ],
            [
                   "The fly zone is of unknown type.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_ZoneType_Unknown_inline",
                   "",
            ],
            [
                   "FlyZoneGEOCategory",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneCategory_inline",
                   "An enum class represents the category of fly zone.",
            ],
            [
                   "An enum class represents the category of fly zone.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneCategory_inline",
                   "",
            ],
            [
                   "WARNING",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneCategory_warning_inline",
                   "Warning zones do not restrict flight and are informational to alert the user. In a warning zone, users should be  prompted with a warning message describing the zone.",
            ],
            [
                   "Warning zones do not restrict flight and are informational to alert the user. In a warning zone, users should be  prompted with a warning message describing the zone.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneCategory_warning_inline",
                   "",
            ],
            [
                   "AUTHORIZATION",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneCategory_authorization_inline",
                   "Authorization zones restrict flight by default, but can be unlocked by a GEO authorized user.",
            ],
            [
                   "Authorization zones restrict flight by default, but can be unlocked by a GEO authorized user.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneCategory_authorization_inline",
                   "",
            ],
            [
                   "RESTRICTED",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneCategory_restricted_inline",
                   "Restricted zones restrict flight by default and cannot be unlocked by a GEO authorized user. Users should contact  flysafe@dji.com if they have authorization to fly in a restricted zone.",
            ],
            [
                   "Restricted zones restrict flight by default and cannot be unlocked by a GEO authorized user. Users should contact  flysafe@dji.com if they have authorization to fly in a restricted zone.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneCategory_restricted_inline",
                   "",
            ],
            [
                   "ENHANCED_WARNING",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneCategory_enhancedWarning_inline",
                   "Enhanced warning zones restrict flight by default, and can be unlocked  using `unlockFlyZones` without requiring the user to be logged into their DJI account.",
            ],
            [
                   "Enhanced warning zones restrict flight by default, and can be unlocked  using `unlockFlyZones` without requiring the user to be logged into their DJI account.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneCategory_enhancedWarning_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneCategory_unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneCategory_unknown_inline",
                   "",
            ],
            [
                   "FlyZoneReason",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_inline",
                   "An enum class contains the reason for the fly zone.",
            ],
            [
                   "An enum class contains the reason for the fly zone.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_inline",
                   "",
            ],
            [
                   "AIRPORT",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_airport_inline",
                   "Airport that cannot be unlocked using GEO system.",
            ],
            [
                   "Airport that cannot be unlocked using GEO system.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_airport_inline",
                   "",
            ],
            [
                   "MILITARY",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_military_inline",
                   "Military authorized zone. This cannot be unlocked using the GEO system.",
            ],
            [
                   "Military authorized zone. This cannot be unlocked using the GEO system.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_military_inline",
                   "",
            ],
            [
                   "SPECIAL",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_special_inline",
                   "Special Zone. This cannot be unlocked using the GEO system.",
            ],
            [
                   "Special Zone. This cannot be unlocked using the GEO system.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_special_inline",
                   "",
            ],
            [
                   "COMMERCIAL_AIRPORTS",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_commercialAirport_inline",
                   "Commercial airport.",
            ],
            [
                   "Commercial airport.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_commercialAirport_inline",
                   "",
            ],
            [
                   "PRIVATE_COMMERCIAL_AIRPORTS",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_privateCommercialAirport_inline",
                   "Private commercial airport.",
            ],
            [
                   "Private commercial airport.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_privateCommercialAirport_inline",
                   "",
            ],
            [
                   "RECREATIONAL_AIRPORTS",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_recreationalAirport_inline",
                   "Recreational airport.",
            ],
            [
                   "Recreational airport.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_recreationalAirport_inline",
                   "",
            ],
            [
                   "NATIONAL_PARKS",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_nationalPark_inline",
                   "National park.",
            ],
            [
                   "National park.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_nationalPark_inline",
                   "",
            ],
            [
                   "NOAA",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_NOAA_inline",
                   "The National Oceanic and Atmospheric Administration.",
            ],
            [
                   "The National Oceanic and Atmospheric Administration.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_NOAA_inline",
                   "",
            ],
            [
                   "PARCEL",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_parcel_inline",
                   "Parcel.",
            ],
            [
                   "Parcel.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_parcel_inline",
                   "",
            ],
            [
                   "POWER_PLANT",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_powerPlant_inline",
                   "Power plant.",
            ],
            [
                   "Power plant.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_powerPlant_inline",
                   "",
            ],
            [
                   "PRISON",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_prison_inline",
                   "Prison.",
            ],
            [
                   "Prison.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_prison_inline",
                   "",
            ],
            [
                   "SCHOOL",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_school_inline",
                   "School.",
            ],
            [
                   "School.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_school_inline",
                   "",
            ],
            [
                   "STADIUM",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_stadium_inline",
                   "Stadium.",
            ],
            [
                   "Stadium.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_stadium_inline",
                   "",
            ],
            [
                   "PROHIBITED_SPECIAL_USE",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_prohibitedSpecialUse_inline",
                   "Prohibited special use.",
            ],
            [
                   "Prohibited special use.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_prohibitedSpecialUse_inline",
                   "",
            ],
            [
                   "RESTRICTED_SPECIAL_USE",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_restrictedSpecialUse_inline",
                   "Restriction special use.",
            ],
            [
                   "Restriction special use.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_restrictedSpecialUse_inline",
                   "",
            ],
            [
                   "TEMPORARY_FLIGHT_RESTRICTIONS",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_temporaryFlightRestriction_inline",
                   "Temporary flight restriction.",
            ],
            [
                   "Temporary flight restriction.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_temporaryFlightRestriction_inline",
                   "",
            ],
            [
                   "CLASS_B_AIR_SPACE",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_classBAirSpace_inline",
                   "Class B controlled airspace. See http://www.dji.com/flysafe/geo-system#notes for more information on the  controlled airspace (Class B, C, D, E) in the United States.",
            ],
            [
                   "Class B controlled airspace. See http://www.dji.com/flysafe/geo-system#notes for more information on the  controlled airspace (Class B, C, D, E) in the United States.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_classBAirSpace_inline",
                   "",
            ],
            [
                   "CLASS_C_AIR_SPACE",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_classCAirSpace_inline",
                   "Class C controlled airspace. See http://www.dji.com/flysafe/geo-system#notes for more information on the  controlled airspace (Class B, C, D, E) in the United States.",
            ],
            [
                   "Class C controlled airspace. See http://www.dji.com/flysafe/geo-system#notes for more information on the  controlled airspace (Class B, C, D, E) in the United States.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_classCAirSpace_inline",
                   "",
            ],
            [
                   "CLASS_D_AIR_SPACE",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_classDAirSpace_inline",
                   "Class D controlled airspace. See http://www.dji.com/flysafe/geo-system#notes for more information on the  controlled airspace (Class B, C, D, E) in the United States.",
            ],
            [
                   "Class D controlled airspace. See http://www.dji.com/flysafe/geo-system#notes for more information on the  controlled airspace (Class B, C, D, E) in the United States.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_classDAirSpace_inline",
                   "",
            ],
            [
                   "CLASS_E_AIR_SPACE",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_classEAirSpace_inline",
                   "Class E Controlled Airspace. See http://www.dji.com/flysafe/geo-system#notes for more information on the  controlled airspace (Class B, C, D, E) in the United States.",
            ],
            [
                   "Class E Controlled Airspace. See http://www.dji.com/flysafe/geo-system#notes for more information on the  controlled airspace (Class B, C, D, E) in the United States.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_classEAirSpace_inline",
                   "",
            ],
            [
                   "UNPAVED_AIRPORT",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_unpavedAirport_inline",
                   "Airport with unpaved runway.",
            ],
            [
                   "Airport with unpaved runway.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_unpavedAirport_inline",
                   "",
            ],
            [
                   "HELIPORT",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_heliport_inline",
                   "Heliport.",
            ],
            [
                   "Heliport.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_heliport_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_FlyZoneReason_unknown_inline",
                   "",
            ],
            [
                   "FlyZoneShape",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneShape_inline",
                   "An enum class containing the shape of the fly zone.",
            ],
            [
                   "An enum class containing the shape of the fly zone.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneShape_inline",
                   "",
            ],
            [
                   "CYLINDER",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneShape_cylinder_inline",
                   "Cylinder.",
            ],
            [
                   "Cylinder.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneShape_cylinder_inline",
                   "",
            ],
            [
                   "CONE",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneShape_cone_inline",
                   "Truncated cone that has a smaller radius on the ground and larger radius in the air.",
            ],
            [
                   "Truncated cone that has a smaller radius on the ground and larger radius in the air.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneShape_cone_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneShape_unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneShape_unknown_inline",
                   "",
            ],
            [
                   "CLEAR",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneStatus_clear_inline",
                   "The aircraft is not within 200 meters of any warning, enhanced warning, authorization or restricted zone.",
            ],
            [
                   "The aircraft is not within 200 meters of any warning, enhanced warning, authorization or restricted zone.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneStatus_clear_inline",
                   "",
            ],
            [
                   "NEAR_RESTRICTED_ZONE",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneStatus_nearRestrictedZone_inline",
                   "The aircraft is within 200 meters of an authorization or restricted zone.",
            ],
            [
                   "The aircraft is within 200 meters of an authorization or restricted zone.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneStatus_nearRestrictedZone_inline",
                   "",
            ],
            [
                   "IN_WARNING_ZONE_WITH_HEIGHT_LIMITATION",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneStatus_inWarningZoneWithHeightLimitation_inline",
                   "The aircraft is currently in a warning or enhanced warning zone and this place will  limit max flight height to 120m.",
            ],
            [
                   "The aircraft is currently in a warning or enhanced warning zone and this place will  limit max flight height to 120m.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneStatus_inWarningZoneWithHeightLimitation_inline",
                   "",
            ],
            [
                   "IN_WARNING_ZONE",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneStatus_warningZone_inline",
                   "The aircraft is currently in a warning or enhanced warning zone.",
            ],
            [
                   "The aircraft is currently in a warning or enhanced warning zone.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneStatus_warningZone_inline",
                   "",
            ],
            [
                   "IN_RESTRICTED_ZONE",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneStatus_restrictedZone_inline",
                   "The aircraft is currently in an authorization or restricted zone.",
            ],
            [
                   "The aircraft is currently in an authorization or restricted zone.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneStatus_restrictedZone_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneStatus_unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_flyZoneStatus_unknown_inline",
                   "",
            ],
            [
                   "SubFlyZoneInformation",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "",
                   "This class contains information about a Sub fly zone.",
            ],
            [
                   "This class contains information about a Sub fly zone.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "",
                   "",
            ],
            [
                   "getAreaID",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJISubFlyZoneInformation_subAreaID_inline",
                   "The fly zone's identifier.  @return An int value of the sub area's ID.",
            ],
            [
                   "The fly zone's identifier.  @return An int value of the sub area's ID.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJISubFlyZoneInformation_subAreaID_inline",
                   "",
            ],
            [
                   "getShape",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJISubFlyZoneInformation_shape_inline",
                   "The shape of the sub-fly-zone.  @return An enum value of `SubFlyZoneShape`.",
            ],
            [
                   "The shape of the sub-fly-zone.  @return An enum value of `SubFlyZoneShape`.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJISubFlyZoneInformation_shape_inline",
                   "",
            ],
            [
                   "getCenter",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJISubFlyZoneInformation_coordinate_inline",
                   "The location of the fly zone's center. Only used when `getShape` is `CYLINDER`.  @return A LocationCoordinate2D object.",
            ],
            [
                   "The location of the fly zone's center. Only used when `getShape` is `CYLINDER`.  @return A LocationCoordinate2D object.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJISubFlyZoneInformation_coordinate_inline",
                   "",
            ],
            [
                   "getRadius",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJISubFlyZoneInformation_radius_inline",
                   "The radius of the fly zone in meters. Only used when `getShape` is `CYLINDER`.  @return A double value of fly zone radius.",
            ],
            [
                   "The radius of the fly zone in meters. Only used when `getShape` is `CYLINDER`.  @return A double value of fly zone radius.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJISubFlyZoneInformation_radius_inline",
                   "",
            ],
            [
                   "getVertices",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJISubFlyZoneInformation_vertices_inline",
                   "The vertices (locations) that make up the sub fly zone polygon shape. Only used when `getShape` is `POLYGON`.  @return A List of CLLocationCoordinate2D object.",
            ],
            [
                   "The vertices (locations) that make up the sub fly zone polygon shape. Only used when `getShape` is `POLYGON`.  @return A List of CLLocationCoordinate2D object.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJISubFlyZoneInformation_vertices_inline",
                   "",
            ],
            [
                   "getMaxFlightHeight",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJISubFlyZoneInformation_maximumFlightHeight_inline",
                   "Maximum flight height in meters allowed in the sub fly zone. A height of 0m will restrict flight completely within the zone.  @return An int value of maximum flight height.",
            ],
            [
                   "Maximum flight height in meters allowed in the sub fly zone. A height of 0m will restrict flight completely within the zone.  @return An int value of maximum flight height.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJISubFlyZoneInformation_maximumFlightHeight_inline",
                   "",
            ],
            [
                   "SubFlyZoneShape",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJISubFlyZoneShape_inline",
                   "This type of the geospatial information for the fly zone.",
            ],
            [
                   "This type of the geospatial information for the fly zone.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJISubFlyZoneShape_inline",
                   "",
            ],
            [
                   "CYLINDER",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJISubFlyZoneShape_circle_inline",
                   "Circle shape.",
            ],
            [
                   "Circle shape.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJISubFlyZoneShape_circle_inline",
                   "",
            ],
            [
                   "POLYGON",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJISubFlyZoneShape_polygon_inline",
                   "Polygon shape.",
            ],
            [
                   "Polygon shape.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJISubFlyZoneShape_polygon_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJISubFlyZoneShape_unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJISubFlyZoneInformation.html",
                   "#DJIFlyZoneManager_DJIFlyZoneInformation_DJISubFlyZoneShape_unknown_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_flyForbidStatusUpdatedCallbackInterface_inline",
                   "An interface for obtaining `FlyForbidStatus`.",
            ],
            [
                   "An interface for obtaining `FlyForbidStatus`.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_flyForbidStatusUpdatedCallbackInterface_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_UpdateFlyZoneStatus_inline",
                   "Called when the latest fly zone status is received.  @param state An enum value of `FlyZoneState`.",
            ],
            [
                   "Called when the latest fly zone status is received.  @param state An enum value of `FlyZoneState`.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager.html",
                   "#DJIFlyZoneManager_UpdateFlyZoneStatus_inline",
                   "",
            ],
            [
                   "IndividualUnlockZone",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIIndividualUnlockZone.html",
                   "",
                   "Users can unlock areas of a restricted fly zone through http://www.dji.com/flysafe/geo-system/individual-unlock.  A user needs to show special authorization (usually from a third party such as a regulatory  or managing agency) as part of the process to unlock the area within the restricted fly zone.  Therefore each request is unique and customized to the individual. If the request is successful,  the unlocked area is tied to the user's account as an Individual Unlock Zone. This class contains the properties of an Individual Unlock Zone.",
            ],
            [
                   "Users can unlock areas of a restricted fly zone through http://www.dji.com/flysafe/geo-system/individual-unlock.  A user needs to show special authorization (usually from a third party such as a regulatory  or managing agency) as part of the process to unlock the area within the restricted fly zone.  Therefore each request is unique and customized to the individual. If the request is successful,  the unlocked area is tied to the user's account as an Individual Unlock Zone. This class contains the properties of an Individual Unlock Zone.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIIndividualUnlockZone.html",
                   "",
                   "",
            ],
            [
                   "getID",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIIndividualUnlockZone.html",
                   "#DJIFlyZoneManager_DJIIndividualUnlockZone_ID_inline",
                   "The unique ID of the Individual Unlock zone.  @return An int value of the ID.",
            ],
            [
                   "The unique ID of the Individual Unlock zone.  @return An int value of the ID.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIIndividualUnlockZone.html",
                   "#DJIFlyZoneManager_DJIIndividualUnlockZone_ID_inline",
                   "",
            ],
            [
                   "getName",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIIndividualUnlockZone.html",
                   "#DJIFlyZoneManager_DJIIndividualUnlockZone_name_inline",
                   "Name of the Individual Unlock zone.  @return A string value of the name.",
            ],
            [
                   "Name of the Individual Unlock zone.  @return A string value of the name.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIIndividualUnlockZone.html",
                   "#DJIFlyZoneManager_DJIIndividualUnlockZone_name_inline",
                   "",
            ],
            [
                   "getCenter",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIIndividualUnlockZone.html",
                   "#DJIFlyZoneManager_DJIIndividualUnlockZone_center_inline",
                   "The coordinate of the Individual Unlock zone's center.  @return A `LocationCoordinate2D` object.",
            ],
            [
                   "The coordinate of the Individual Unlock zone's center.  @return A `LocationCoordinate2D` object.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIIndividualUnlockZone.html",
                   "#DJIFlyZoneManager_DJIIndividualUnlockZone_center_inline",
                   "",
            ],
            [
                   "getRadius",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIIndividualUnlockZone.html",
                   "#DJIFlyZoneManager_DJIIndividualUnlockZone_radius_inline",
                   "The radius of the Individual Unlock zone in meters.  @return A float value of the radius.",
            ],
            [
                   "The radius of the Individual Unlock zone in meters.  @return A float value of the radius.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIIndividualUnlockZone.html",
                   "#DJIFlyZoneManager_DJIIndividualUnlockZone_radius_inline",
                   "",
            ],
            [
                   "getStartTime",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIIndividualUnlockZone.html",
                   "#DJIFlyZoneManager_DJIIndividualUnlockZone_startTime_inline",
                   "The timestamp of when the unlocking begins, formatted in UTC (YYYY-MM-DD hh:mm:ss).  @return A string value of start time.",
            ],
            [
                   "The timestamp of when the unlocking begins, formatted in UTC (YYYY-MM-DD hh:mm:ss).  @return A string value of start time.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIIndividualUnlockZone.html",
                   "#DJIFlyZoneManager_DJIIndividualUnlockZone_startTime_inline",
                   "",
            ],
            [
                   "getEndTime",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIIndividualUnlockZone.html",
                   "#DJIFlyZoneManager_DJIIndividualUnlockZone_endTime_inline",
                   "The timestamp of when the unlocking ends, formatted in UTC (YYYY-MM-DD hh:mm:ss).  @return A String value of the end time.",
            ],
            [
                   "The timestamp of when the unlocking ends, formatted in UTC (YYYY-MM-DD hh:mm:ss).  @return A String value of the end time.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIIndividualUnlockZone.html",
                   "#DJIFlyZoneManager_DJIIndividualUnlockZone_endTime_inline",
                   "",
            ],
            [
                   "isExpired",
                   2,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIIndividualUnlockZone.html",
                   "#DJIFlyZoneManager_DJIIndividualUnlockZone_isExpired_inline",
                   "`true` if the Individual Unlock zone has expired. After a zone is expired,  the location will be locked.  @return A boolean value to check if is expired.",
            ],
            [
                   "`true` if the Individual Unlock zone has expired. After a zone is expired,  the location will be locked.  @return A boolean value to check if is expired.",
                   1,
                   "/Components/FlyZoneManager/DJIFlyZoneManager_DJIIndividualUnlockZone.html",
                   "#DJIFlyZoneManager_DJIIndividualUnlockZone_isExpired_inline",
                   "",
            ],
            [
                   "getIndex",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_imuID_inline",
                   "The IMU's ID. Starts at 0.  @return An int value.",
            ],
            [
                   "The IMU's ID. Starts at 0.  @return An int value.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_imuID_inline",
                   "",
            ],
            [
                   "getGyroscopeState",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_gyroscopeStatus_inline",
                   "Returns the gyroscopic sensor's state value.  @return An enum value of `SensorState`",
            ],
            [
                   "Returns the gyroscopic sensor's state value.  @return An enum value of `SensorState`",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_gyroscopeStatus_inline",
                   "",
            ],
            [
                   "getAccelerometerState",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_accelerometorStatus_inline",
                   "Returns the accelerometers sensor state value.  @return An enum value of `SensorState`",
            ],
            [
                   "Returns the accelerometers sensor state value.  @return An enum value of `SensorState`",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_accelerometorStatus_inline",
                   "",
            ],
            [
                   "getCalibrationProgress",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_calibrationProgress_inline",
                   "Returns the IMU's calibration progress, its range being [1, 100]. If the IMU is not calibrating, the value of the calibration progress will be -1.  @return An int value.",
            ],
            [
                   "Returns the IMU's calibration progress, its range being [1, 100]. If the IMU is not calibrating, the value of the calibration progress will be -1.  @return An int value.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_calibrationProgress_inline",
                   "",
            ],
            [
                   "getCalibrationState",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_calibrationStatus_inline",
                   "Returns the status of the IMU's calibration.  @return An enum value of `CalibrationState`",
            ],
            [
                   "Returns the status of the IMU's calibration.  @return An enum value of `CalibrationState`",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_calibrationStatus_inline",
                   "",
            ],
            [
                   "getMultipleOrientationCalibrationHint",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_multiOrientationCalibrationHint_inline",
                   "For products that require the user to orient the aircraft during the IMU calibration, this method can be used to  inform the user when each orientation is done. It is supported by flight controller firmware 3.2.0.0 or above.  @return An instance of `MultipleOrientationCalibrationHint`",
            ],
            [
                   "For products that require the user to orient the aircraft during the IMU calibration, this method can be used to  inform the user when each orientation is done. It is supported by flight controller firmware 3.2.0.0 or above.  @return An instance of `MultipleOrientationCalibrationHint`",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_multiOrientationCalibrationHint_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIFlightController_IMUStateChangedCallbackInterface_inline",
                   "Callback interface that is used to receive IMU state from flight controller.",
            ],
            [
                   "Callback interface that is used to receive IMU state from flight controller.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIFlightController_IMUStateChangedCallbackInterface_inline",
                   "",
            ],
            [
                   "SensorState",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_inline",
                   "Enum for IMU calibration Status.",
            ],
            [
                   "Enum for IMU calibration Status.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_inline",
                   "",
            ],
            [
                   "CalibrationState",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationStatus_inline",
                   "Enum for IMU calibration Status.",
            ],
            [
                   "Enum for IMU calibration Status.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationStatus_inline",
                   "",
            ],
            [
                   "CalibrationOrientation",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationOrientation_inline",
                   "The different orientations the aircraft needs for a multi-orientation IMU calibration.",
            ],
            [
                   "The different orientations the aircraft needs for a multi-orientation IMU calibration.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationOrientation_inline",
                   "",
            ],
            [
                   "OrientationCalibrationState",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUMultiOrientationCalibrationStatus_inline",
                   "IMU calibration status for the current aircraft orientation.",
            ],
            [
                   "IMU calibration status for the current aircraft orientation.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUMultiOrientationCalibrationStatus_inline",
                   "",
            ],
            [
                   "MultipleOrientationCalibrationHint",
                   2,
                   "/Components/IMUState/DJIIMUState_DJIIMUMultiOrientationCalibrationHint.html",
                   "",
                   "This class is used to lead the user through an IMU calibration for products that require calibration at multiple  orientations. An example workflow is:   <ol> - Direct the user to orient the aircraft in one of the uncalibrated orientations in `getOrientationsToCalibrate`.  - Monitor `getState`  until `CALIBRATING` turns  to `COMPLETED`.  - Repeat until `getOrientationsToCalibrate` is empty.  </ol>",
            ],
            [
                   "This class is used to lead the user through an IMU calibration for products that require calibration at multiple  orientations. An example workflow is:   <ol> - Direct the user to orient the aircraft in one of the uncalibrated orientations in `getOrientationsToCalibrate`.  - Monitor `getState`  until `CALIBRATING` turns  to `COMPLETED`.  - Repeat until `getOrientationsToCalibrate` is empty.  </ol>",
                   1,
                   "/Components/IMUState/DJIIMUState_DJIIMUMultiOrientationCalibrationHint.html",
                   "",
                   "",
            ],
            [
                   "NOSE_DOWN",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationOrientation_NoseDown_inline",
                   "The front/nose of the aircraft should be pointed down.",
            ],
            [
                   "The front/nose of the aircraft should be pointed down.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationOrientation_NoseDown_inline",
                   "",
            ],
            [
                   "TAIL_DOWN",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationOrientation_TailDown_inline",
                   "The back/tail of the aircraft should be pointed down.",
            ],
            [
                   "The back/tail of the aircraft should be pointed down.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationOrientation_TailDown_inline",
                   "",
            ],
            [
                   "RIGHT_DOWN",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationOrientation_RightDown_inline",
                   "The right/starboard side of the aircraft should be pointed down.",
            ],
            [
                   "The right/starboard side of the aircraft should be pointed down.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationOrientation_RightDown_inline",
                   "",
            ],
            [
                   "LEFT_DOWN",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationOrientation_LeftDown_inline",
                   "The left/port side of the aircraft should be pointed down.",
            ],
            [
                   "The left/port side of the aircraft should be pointed down.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationOrientation_LeftDown_inline",
                   "",
            ],
            [
                   "BOTTOM_DOWN",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationOrientation_BottomDown_inline",
                   "The bottom/underbelly of the aircraft should be pointed down.",
            ],
            [
                   "The bottom/underbelly of the aircraft should be pointed down.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationOrientation_BottomDown_inline",
                   "",
            ],
            [
                   "TOP_DOWN",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationOrientation_TopDown_inline",
                   "The top of the aircraft should be pointed down.",
            ],
            [
                   "The top of the aircraft should be pointed down.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationOrientation_TopDown_inline",
                   "",
            ],
            [
                   "CALIBRATING",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUMultiOrientationCalibrationStatus_Calibrating_inline",
                   "Calibration of current aircraft orientation is in progress.",
            ],
            [
                   "Calibration of current aircraft orientation is in progress.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUMultiOrientationCalibrationStatus_Calibrating_inline",
                   "",
            ],
            [
                   "COMPLETED",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUMultiOrientationCalibrationStatus_Done_inline",
                   "Calibration of current aircraft orientation is done. The orientation will be added  to `getOrientationsCalibrated`. The aircraft should be  rotated to a remaining orientation  in `getOrientationsToCalibrate`.",
            ],
            [
                   "Calibration of current aircraft orientation is done. The orientation will be added  to `getOrientationsCalibrated`. The aircraft should be  rotated to a remaining orientation  in `getOrientationsToCalibrate`.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUMultiOrientationCalibrationStatus_Done_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUMultiOrientationCalibrationStatus_Unknown_inline",
                   "Unknown. Used by products that do not require IMU multi-orientation calibration.",
            ],
            [
                   "Unknown. Used by products that do not require IMU multi-orientation calibration.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUMultiOrientationCalibrationStatus_Unknown_inline",
                   "",
            ],
            [
                   "getState",
                   2,
                   "/Components/IMUState/DJIIMUState_DJIIMUMultiOrientationCalibrationHint.html",
                   "#DJIIMUState_DJIIMUMultiOrientationCalibrationHint_status_inline",
                   "Gets the calibration status of the current orientation.  @return An enum value of `OrientationCalibrationState`",
            ],
            [
                   "Gets the calibration status of the current orientation.  @return An enum value of `OrientationCalibrationState`",
                   1,
                   "/Components/IMUState/DJIIMUState_DJIIMUMultiOrientationCalibrationHint.html",
                   "#DJIIMUState_DJIIMUMultiOrientationCalibrationHint_status_inline",
                   "",
            ],
            [
                   "getOrientationsToCalibrate",
                   2,
                   "/Components/IMUState/DJIIMUState_DJIIMUMultiOrientationCalibrationHint.html",
                   "#DJIIMUState_DJIIMUMultiOrientationCalibrationHint_orientationsToCalibrate_inline",
                   "Gets an array with the aircraft orientations that have not been calibrated yet. Each element  is a  `CalibrationOrientation` enum value.  @return An instance of HashSet `CalibrationOrientation`.",
            ],
            [
                   "Gets an array with the aircraft orientations that have not been calibrated yet. Each element  is a  `CalibrationOrientation` enum value.  @return An instance of HashSet `CalibrationOrientation`.",
                   1,
                   "/Components/IMUState/DJIIMUState_DJIIMUMultiOrientationCalibrationHint.html",
                   "#DJIIMUState_DJIIMUMultiOrientationCalibrationHint_orientationsToCalibrate_inline",
                   "",
            ],
            [
                   "getOrientationsCalibrated",
                   2,
                   "/Components/IMUState/DJIIMUState_DJIIMUMultiOrientationCalibrationHint.html",
                   "#DJIIMUState_DJIIMUMultiOrientationCalibrationHint_orientationsCalibrated_inline",
                   "Gets an array with the aircraft orientations that have been calibrated. Each element is  a  `CalibrationOrientation` enum value.  @return An instance of HashSet`CalibrationOrientation`.",
            ],
            [
                   "Gets an array with the aircraft orientations that have been calibrated. Each element is  a  `CalibrationOrientation` enum value.  @return An instance of HashSet`CalibrationOrientation`.",
                   1,
                   "/Components/IMUState/DJIIMUState_DJIIMUMultiOrientationCalibrationHint.html",
                   "#DJIIMUState_DJIIMUMultiOrientationCalibrationHint_orientationsCalibrated_inline",
                   "",
            ],
            [
                   "NONE",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationStatus_None_inline",
                   "IMU not in calibration; no calibration is executing.",
            ],
            [
                   "IMU not in calibration; no calibration is executing.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationStatus_None_inline",
                   "",
            ],
            [
                   "CALIBRATING",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationStatus_InProgress_inline",
                   "IMU calibration is in progress.",
            ],
            [
                   "IMU calibration is in progress.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationStatus_InProgress_inline",
                   "",
            ],
            [
                   "SUCCESSFUL",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationStatus_Succeeded_inline",
                   "IMU calibration succeeded.",
            ],
            [
                   "IMU calibration succeeded.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationStatus_Succeeded_inline",
                   "",
            ],
            [
                   "FAILED",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationStatus_Failed_inline",
                   "IMU calibration failed.",
            ],
            [
                   "IMU calibration failed.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationStatus_Failed_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationStatus_Unknown_inline",
                   "Unknown calibration status.",
            ],
            [
                   "Unknown calibration status.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUCalibrationStatus_Unknown_inline",
                   "",
            ],
            [
                   "DISCONNECTED",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_Disconnect_inline",
                   "The IMU sensor is disconnected from the flight controller.",
            ],
            [
                   "The IMU sensor is disconnected from the flight controller.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_Disconnect_inline",
                   "",
            ],
            [
                   "CALIBRATING",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_Calibrating_inline",
                   "The IMU sensor is calibrating",
            ],
            [
                   "The IMU sensor is calibrating",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_Calibrating_inline",
                   "",
            ],
            [
                   "CALIBRATION_FAILED",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_CalibrationFailed_inline",
                   "Calibrate of the IMU sensor failed.",
            ],
            [
                   "Calibrate of the IMU sensor failed.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_CalibrationFailed_inline",
                   "",
            ],
            [
                   "DATA_EXCEPTION",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_DataException_inline",
                   "The IMU sensor has a data exception. Calibrate the IMU and restart the aircraft. If afterwards the status still  exists, you may need to contact DJI for further assistance.",
            ],
            [
                   "The IMU sensor has a data exception. Calibrate the IMU and restart the aircraft. If afterwards the status still  exists, you may need to contact DJI for further assistance.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_DataException_inline",
                   "",
            ],
            [
                   "WARMING_UP",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_WarmingUp_inline",
                   "The IMU sensor is warming up.",
            ],
            [
                   "The IMU sensor is warming up.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_WarmingUp_inline",
                   "",
            ],
            [
                   "IN_MOTION",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_Motion_inline",
                   "The IMU sensor is not static; the aircraft may not be stable enough to calculate sensor data correctly.",
            ],
            [
                   "The IMU sensor is not static; the aircraft may not be stable enough to calculate sensor data correctly.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_Motion_inline",
                   "",
            ],
            [
                   "NORMAL_BIAS",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_BiasNormal_inline",
                   "The IMU's bias value is normal; the aircraft can safely take off.",
            ],
            [
                   "The IMU's bias value is normal; the aircraft can safely take off.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_BiasNormal_inline",
                   "",
            ],
            [
                   "MEDIUM_BIAS",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_BiasMedium_inline",
                   "The IMU's bias value is medium; the aircraft can safely take off.",
            ],
            [
                   "The IMU's bias value is medium; the aircraft can safely take off.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_BiasMedium_inline",
                   "",
            ],
            [
                   "LARGE_BIAS",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_BiasLarge_inline",
                   "The IMU's bias value is large; the aircraft cannot take off. IMU calibration is needed.",
            ],
            [
                   "The IMU's bias value is large; the aircraft cannot take off. IMU calibration is needed.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_BiasLarge_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_Unknown_inline",
                   "The IMU sensor's status is unknown.",
            ],
            [
                   "The IMU sensor's status is unknown.",
                   1,
                   "/Components/IMUState/DJIIMUState.html",
                   "#DJIIMUState_DJIIMUSensorStatus_Unknown_inline",
                   "",
            ],
            [
                   "setVisionDetectionStateUpdatedCallback",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setVisionDetectionStateUpdatedCallback_inline",
                   "Set intelligent flight assistant state update callback.  @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Set intelligent flight assistant state update callback.  @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setVisionDetectionStateUpdatedCallback_inline",
                   "",
            ],
            [
                   "setVisionControlStateUpdatedcallback",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_UpdateVisionControlStateCallback_inline",
                   "Callback function that updates aircraft state. Controlled by the intelligent flight assistant.  @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Callback function that updates aircraft state. Controlled by the intelligent flight assistant.  @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_UpdateVisionControlStateCallback_inline",
                   "",
            ],
            [
                   "setFaceAwareStateCallback",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setFaceAwareStateCallback_inline",
                   "Starts to receive the update of FaceAwareState.  @param callback FaceAwareState update callback.",
            ],
            [
                   "Starts to receive the update of FaceAwareState.  @param callback FaceAwareState update callback.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setFaceAwareStateCallback_inline",
                   "",
            ],
            [
                   "setPalmControlStateCallback",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setPalmControlStateCallback_inline",
                   "Starts to receive the update of PalmControlState.  @param callback PalmControlState update callback.",
            ],
            [
                   "Starts to receive the update of PalmControlState.  @param callback PalmControlState update callback.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setPalmControlStateCallback_inline",
                   "",
            ],
            [
                   "setCollisionAvoidanceEnabled",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setCollisionAvoidanceEnabled_inline",
                   "Enable collision avoidance. When enabled, the aircraft will stop and try to go around detected obstacles.  @param enable A boolean value. @param callback Completion callback.",
            ],
            [
                   "Enable collision avoidance. When enabled, the aircraft will stop and try to go around detected obstacles.  @param enable A boolean value. @param callback Completion callback.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setCollisionAvoidanceEnabled_inline",
                   "",
            ],
            [
                   "getCollisionAvoidanceEnabled",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_getCollisionAvoidanceEnabled_inline",
                   "Gets collision avoidance status (enabled/disabled).  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets collision avoidance status (enabled/disabled).  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_getCollisionAvoidanceEnabled_inline",
                   "",
            ],
            [
                   "setUpwardsAvoidanceEnabled",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setUpwardsAvoidanceEnabled_inline",
                   "Enables/disables upward avoidance. When the Inspire 2's upwards-facing infrared sensor detects an obstacle, the  aircraft will slow its ascent and maintain a minimum distance of 1 meter from the obstacle. The  sensor has a 10-degree horizontal field of view (FOV) and 10-degree vertical FOV. The maximum detection distance is 5m.  @param enabled `true` to enable the upwards avoidance. @param callback Completion callback that receives the setter result.",
            ],
            [
                   "Enables/disables upward avoidance. When the Inspire 2's upwards-facing infrared sensor detects an obstacle, the  aircraft will slow its ascent and maintain a minimum distance of 1 meter from the obstacle. The  sensor has a 10-degree horizontal field of view (FOV) and 10-degree vertical FOV. The maximum detection distance is 5m.  @param enabled `true` to enable the upwards avoidance. @param callback Completion callback that receives the setter result.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setUpwardsAvoidanceEnabled_inline",
                   "",
            ],
            [
                   "getUpwardsAvoidanceEnabled",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_getUpwardsAvoidanceEnabled_inline",
                   "Gets upward avoidance status (enabled/disabled).  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets upward avoidance status (enabled/disabled).  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_getUpwardsAvoidanceEnabled_inline",
                   "",
            ],
            [
                   "setActiveObstacleAvoidanceEnabled",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setActiveObstacleAvoidanceEnabled_inline",
                   "Enables/disables active obstacle avoidance. When enabled, and an obstacle is moving toward the aircraft,  the aircraft will actively fly away from it. If while actively avoiding a moving obstacle, the aircraft  detects another obstacle in its avoidance path, it will  stop. `setCollisionAvoidanceEnabled` must also be enabled.  @param enabled `true` to enable the active avoidance. @param callback Completion callback that receives the setter result.",
            ],
            [
                   "Enables/disables active obstacle avoidance. When enabled, and an obstacle is moving toward the aircraft,  the aircraft will actively fly away from it. If while actively avoiding a moving obstacle, the aircraft  detects another obstacle in its avoidance path, it will  stop. `setCollisionAvoidanceEnabled` must also be enabled.  @param enabled `true` to enable the active avoidance. @param callback Completion callback that receives the setter result.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setActiveObstacleAvoidanceEnabled_inline",
                   "",
            ],
            [
                   "getActiveObstacleAvoidanceEnabled",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_getActiveObstacleAvoidanceEnabled_inline",
                   "Gets active obstacle avoidance status (enabled/disabled).  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets active obstacle avoidance status (enabled/disabled).  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_getActiveObstacleAvoidanceEnabled_inline",
                   "",
            ],
            [
                   "setAdvancedGestureControlEnabled",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setAdvancedGestureControlEnabled_inline",
                   "Enables/disables advanced gesture control. When enabled, users can use PalmLaunch, PalmLand, PalmControl  and Beckon. When enabled, the various modes can be initiated by the user. In summary:  - Aircraft starts idle on users hand  - User double clicks the power button and  FaceAware becomes active  - Once a face is recogized, PalmLaunch will happen  -  When flying, the user can control the aircraft position by moving their palm  - If the  user waves one hand, the aircraft will fly up and backwards and start following the user.  - If the user waves both hands, the aircraft will execute Beckon and return to the user.  It is only supported by Spark.  @param enabled `true` to enable advanced gesture control. @param callback The `completion callback` with the returned execution result.",
            ],
            [
                   "Enables/disables advanced gesture control. When enabled, users can use PalmLaunch, PalmLand, PalmControl  and Beckon. When enabled, the various modes can be initiated by the user. In summary:  - Aircraft starts idle on users hand  - User double clicks the power button and  FaceAware becomes active  - Once a face is recogized, PalmLaunch will happen  -  When flying, the user can control the aircraft position by moving their palm  - If the  user waves one hand, the aircraft will fly up and backwards and start following the user.  - If the user waves both hands, the aircraft will execute Beckon and return to the user.  It is only supported by Spark.  @param enabled `true` to enable advanced gesture control. @param callback The `completion callback` with the returned execution result.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setAdvancedGestureControlEnabled_inline",
                   "",
            ],
            [
                   "getAdvancedGestureControlEnabled",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_getAdvancedGestureControlEnabled_inline",
                   "Gets if advanced gesture control is enabled. When enabled, users can use PalmLaunch, PalmLand,  PalmControl and Beckon. It is only supported by Spark.  @param callback The `completion callback` with the returned execution result.",
            ],
            [
                   "Gets if advanced gesture control is enabled. When enabled, users can use PalmLaunch, PalmLand,  PalmControl and Beckon. It is only supported by Spark.  @param callback The `completion callback` with the returned execution result.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_getAdvancedGestureControlEnabled_inline",
                   "",
            ],
            [
                   "setVisionAssistedPositioningEnabled",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setVisionPositioningEnabled_inline",
                   "Enable vision positioning. Vision positioning is used to augment GPS to improve location accuracy when hovering and improve velocity calculation when flying.  @param enabled `true` to enable vision assisted positioning. @param callback Completion callback.",
            ],
            [
                   "Enable vision positioning. Vision positioning is used to augment GPS to improve location accuracy when hovering and improve velocity calculation when flying.  @param enabled `true` to enable vision assisted positioning. @param callback Completion callback.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setVisionPositioningEnabled_inline",
                   "",
            ],
            [
                   "getVisionAssistedPositioningEnabled",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_getVisionPositioningEnabled_inline",
                   "Gets vision positioning status (enabled/disabled).  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets vision positioning status (enabled/disabled).  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_getVisionPositioningEnabled_inline",
                   "",
            ],
            [
                   "setMultipleFlightModeEnabled",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIFlightController_setMultipleFlightModeEnabled_inline",
                   "Enables/disables multiple-flight mode. When multiple-flight mode is enabled, user can change  the aircraft's mode to P/F/A/S mode by toggling the switch on the remote controller. If it is  disabled, the aircraft will be in P mode.  @param enabled `true` to enable multiple-flight mode. @param callback Completion block that receives the execution result.",
            ],
            [
                   "Enables/disables multiple-flight mode. When multiple-flight mode is enabled, user can change  the aircraft's mode to P/F/A/S mode by toggling the switch on the remote controller. If it is  disabled, the aircraft will be in P mode.  @param enabled `true` to enable multiple-flight mode. @param callback Completion block that receives the execution result.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIFlightController_setMultipleFlightModeEnabled_inline",
                   "",
            ],
            [
                   "getMultipleFlightModeEnabled",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIFlightController_getMultipleFlightModeEnabled_inline",
                   "Gets if multiple-flight mode is enabled. When multiple-flight mode is enabled, user can change  the aircraft's mode to P/F/A/S mode by toggling the switch on the remote controller. If it is  disabled, the aircraft will be in P mode.  @param callback Completion callback that receives the execution result.",
            ],
            [
                   "Gets if multiple-flight mode is enabled. When multiple-flight mode is enabled, user can change  the aircraft's mode to P/F/A/S mode by toggling the switch on the remote controller. If it is  disabled, the aircraft will be in P mode.  @param callback Completion callback that receives the execution result.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIFlightController_getMultipleFlightModeEnabled_inline",
                   "",
            ],
            [
                   "setNoviceModeEnabled",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIFlightController_setNoviceModeEnabled_inline",
                   "Enables novice mode. When novice mode is enabled, the flight speed will become slower and less  responsive handling. For Phantom 4 Pro, enabling novice mode will enable the infrared time-of-flight  (TOF) sensors on the left and right.  @param enabled `true` to enable novice mode. @param callback Completion block that receives the execution result.",
            ],
            [
                   "Enables novice mode. When novice mode is enabled, the flight speed will become slower and less  responsive handling. For Phantom 4 Pro, enabling novice mode will enable the infrared time-of-flight  (TOF) sensors on the left and right.  @param enabled `true` to enable novice mode. @param callback Completion block that receives the execution result.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIFlightController_setNoviceModeEnabled_inline",
                   "",
            ],
            [
                   "getNoviceModeEnabled",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIFlightController_GetNoviceModeEnabled_inline",
                   "Gets if novice mode is enabled or not. If novice mode is enabled, the flight speed is slower and less  responsive handling. For Phantom 4 Pro, enabling novice mode will enable the infrared time-of-flight  (TOF) sensors on the left and right.  @param callback callback to receive the result.",
            ],
            [
                   "Gets if novice mode is enabled or not. If novice mode is enabled, the flight speed is slower and less  responsive handling. For Phantom 4 Pro, enabling novice mode will enable the infrared time-of-flight  (TOF) sensors on the left and right.  @param callback callback to receive the result.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIFlightController_GetNoviceModeEnabled_inline",
                   "",
            ],
            [
                   "setPrecisionLandingEnabled",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setPrecisionLandingEnabled_inline",
                   "Enables/disables precision landing. When enabled, the aircraft will record its take-off location visually  (as well as with GPS). On a Return-To-Home action the aircraft will attempt to perform a precision landing  using the additional visual information. This method only works on a Return-To-Home action when the home  location is successfully recorded during take-off, and not changed during flight.  @param enabled `true` to enable the precise landing. @param callback callback block that receives the setter result.",
            ],
            [
                   "Enables/disables precision landing. When enabled, the aircraft will record its take-off location visually  (as well as with GPS). On a Return-To-Home action the aircraft will attempt to perform a precision landing  using the additional visual information. This method only works on a Return-To-Home action when the home  location is successfully recorded during take-off, and not changed during flight.  @param enabled `true` to enable the precise landing. @param callback callback block that receives the setter result.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setPrecisionLandingEnabled_inline",
                   "",
            ],
            [
                   "getPrecisionLandingEnabled",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_getPrecisionLandingEnabled_inline",
                   "Gets precision landing status (enabled/disabled).  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets precision landing status (enabled/disabled).  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_getPrecisionLandingEnabled_inline",
                   "",
            ],
            [
                   "setLandingProtectionEnabled",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setLandingProtectionEnabled_inline",
                   "Enables/disables landing protection. During auto-landing, the downwards facing vision sensor will check if  the ground surface is flat enough for a safe landing. If it is not and landing protection is enabled, then  landing will abort and need to be manually performed by the user.  @param enabled `true` to enable the landing protection. @param callback <<>android:Callback> that receives the setter result.",
            ],
            [
                   "Enables/disables landing protection. During auto-landing, the downwards facing vision sensor will check if  the ground surface is flat enough for a safe landing. If it is not and landing protection is enabled, then  landing will abort and need to be manually performed by the user.  @param enabled `true` to enable the landing protection. @param callback <<>android:Callback> that receives the setter result.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_setLandingProtectionEnabled_inline",
                   "",
            ],
            [
                   "getLandingProtectionEnabled",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_getLandingProtectionEnabled_inline",
                   "Gets landing protection status (enabled/disabled).  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets landing protection status (enabled/disabled).  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_getLandingProtectionEnabled_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_updateVisionFaceAwareStateCallbackInterface_inline",
                   "Callback to update the FaceAwareState.",
            ],
            [
                   "Callback to update the FaceAwareState.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_updateVisionFaceAwareStateCallbackInterface_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_updateVisionPalmControlStateCallbackInterface_inline",
                   "Callback to update the PalmControlState.",
            ],
            [
                   "Callback to update the PalmControlState.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_updateVisionPalmControlStateCallbackInterface_inline",
                   "",
            ],
            [
                   "VisionDetectionState",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "",
                   "This class gives state information about the product's vision sensors used for obstacle detection. The two  types of sensors used are dual camera sensors operating in the visible spectrum (dual-camera sensor) and  infrared time of flight (TOF) sensors. Note, Inspire 2's upwards-facing infrared TOF sensor is not returned  in this state. It is accessed through `VisionControlState`.",
            ],
            [
                   "This class gives state information about the product's vision sensors used for obstacle detection. The two  types of sensors used are dual camera sensors operating in the visible spectrum (dual-camera sensor) and  infrared time of flight (TOF) sensors. Note, Inspire 2's upwards-facing infrared TOF sensor is not returned  in this state. It is accessed through `VisionControlState`.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "",
                   "",
            ],
            [
                   "VisionControlState",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "",
                   "This class gives the aircraft's state, which is controlled by the intelligent flight assistant.",
            ],
            [
                   "This class gives the aircraft's state, which is controlled by the intelligent flight assistant.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "",
                   "",
            ],
            [
                   "getState",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_status_inline",
                   "The current state/position of the landing gear.  @return An enum value of `LandingGearState`",
            ],
            [
                   "The current state/position of the landing gear.  @return An enum value of `LandingGearState`",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_status_inline",
                   "",
            ],
            [
                   "getMode",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_mode_inline",
                   "The current mode of the landing gear.  @return An enum value of `LandingGearMode`",
            ],
            [
                   "The current mode of the landing gear.  @return An enum value of `LandingGearMode`",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_mode_inline",
                   "",
            ],
            [
                   "setAutomaticMovementEnabled",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_setAutomaticMovementEnabled_inline",
                   "Turns on/off self-adaptive landing gear. When turned on, landing gear will automatically lower  when aircraft is 0.5m above the ground. After take-off, landing gear will automatically rise when  aircraft reaches 0.5m above the ground. If self-adaptive landing gear is turned off, aircraft  will not automatically raise or lower its landing gear.  @param enabled YES if automatic movement is enabled. @param callback Asynchronous execution result.",
            ],
            [
                   "Turns on/off self-adaptive landing gear. When turned on, landing gear will automatically lower  when aircraft is 0.5m above the ground. After take-off, landing gear will automatically rise when  aircraft reaches 0.5m above the ground. If self-adaptive landing gear is turned off, aircraft  will not automatically raise or lower its landing gear.  @param enabled YES if automatic movement is enabled. @param callback Asynchronous execution result.",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_setAutomaticMovementEnabled_inline",
                   "",
            ],
            [
                   "getAutomaticMovementEnabled",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_getAutomaticMovementEnabled_inline",
                   "Gets self-adaptive landing gear state (on/off). When turned on, landing gear will automatically lower  when aircraft is 0.5m above the ground. After take- off, landing gear will automatically rise when  aircraft reaches 0.5m above the ground. If self-adaptive landing gear is turned off, aircraft  will not automatically raise or lower its landing gear.  @param callback Callback to receive the result.",
            ],
            [
                   "Gets self-adaptive landing gear state (on/off). When turned on, landing gear will automatically lower  when aircraft is 0.5m above the ground. After take- off, landing gear will automatically rise when  aircraft reaches 0.5m above the ground. If self-adaptive landing gear is turned off, aircraft  will not automatically raise or lower its landing gear.  @param callback Callback to receive the result.",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_getAutomaticMovementEnabled_inline",
                   "",
            ],
            [
                   "enterTransportMode",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_enterTransportMode_inline",
                   "Enters transport mode, moving the landing gear to its optimal position for transportation. Note that if the gimbal is not removed, or the ground is not flat, entering transport mode will fail.  @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Enters transport mode, moving the landing gear to its optimal position for transportation. Note that if the gimbal is not removed, or the ground is not flat, entering transport mode will fail.  @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_enterTransportMode_inline",
                   "",
            ],
            [
                   "exitTransportMode",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_exitTransportMode_inline",
                   "Exits transport mode. Note that if the ground is not flat, exit transport mode will fail.  @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Exits transport mode. Note that if the ground is not flat, exit transport mode will fail.  @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_exitTransportMode_inline",
                   "",
            ],
            [
                   "retract",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_retractLandingGear_inline",
                   "Retracts the landing gear. Should only be used when `getMode`  is `MANUAL`. For Matrice 600 and Matrice 600 Pro, landing gear  cannot be controlled through the SDK, only automatically by the aircraft or manually by the remote controller.  @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Retracts the landing gear. Should only be used when `getMode`  is `MANUAL`. For Matrice 600 and Matrice 600 Pro, landing gear  cannot be controlled through the SDK, only automatically by the aircraft or manually by the remote controller.  @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_retractLandingGear_inline",
                   "",
            ],
            [
                   "deploy",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_deployLandingGear_inline",
                   "Deploys landing gear. Should only be used when `getMode`  is `MANUAL`. For Matrice 600 and Matrice 600 Pro, the landing gear cannot  be controlled through the SDK, only automatically by the aircraft or manually by the remote controller.  @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Deploys landing gear. Should only be used when `getMode`  is `MANUAL`. For Matrice 600 and Matrice 600 Pro, the landing gear cannot  be controlled through the SDK, only automatically by the aircraft or manually by the remote controller.  @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_deployLandingGear_inline",
                   "",
            ],
            [
                   "LandingGearState",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearStatus_inline",
                   "Current state of landing gear.",
            ],
            [
                   "Current state of landing gear.",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearStatus_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearStatus_Unknown_inline",
                   "Landing gear is in unknown state. This will be returned if the aircraft can't get the landing gear status.",
            ],
            [
                   "Landing gear is in unknown state. This will be returned if the aircraft can't get the landing gear status.",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearStatus_Unknown_inline",
                   "",
            ],
            [
                   "DEPLOYED",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearStatus_Deployed_inline",
                   "Landing gear is fully deployed (ready for landing)",
            ],
            [
                   "Landing gear is fully deployed (ready for landing)",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearStatus_Deployed_inline",
                   "",
            ],
            [
                   "RETRACTED",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearStatus_Retracted_inline",
                   "Landing gear is fully retracted (ready for flying).",
            ],
            [
                   "Landing gear is fully retracted (ready for flying).",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearStatus_Retracted_inline",
                   "",
            ],
            [
                   "DEPLOYING",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearStatus_Deploying_inline",
                   "Landing gear is deploying (getting ready for landing).",
            ],
            [
                   "Landing gear is deploying (getting ready for landing).",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearStatus_Deploying_inline",
                   "",
            ],
            [
                   "RETRACTING",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearStatus_Retracting_inline",
                   "Landing gear is retracting (getting ready for flying).",
            ],
            [
                   "Landing gear is retracting (getting ready for flying).",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearStatus_Retracting_inline",
                   "",
            ],
            [
                   "STOPPED",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearStatus_Stopped_inline",
                   "Landing gear is stopped.",
            ],
            [
                   "Landing gear is stopped.",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearStatus_Stopped_inline",
                   "",
            ],
            [
                   "LandingGearMode",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearMode_inline",
                   "Current Mode of the landing gear.",
            ],
            [
                   "Current Mode of the landing gear.",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearMode_inline",
                   "",
            ],
            [
                   "MANUAL",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearMode_Normal_inline",
                   "Landing gear can be deployed and retracted through function calls.",
            ],
            [
                   "Landing gear can be deployed and retracted through function calls.",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearMode_Normal_inline",
                   "",
            ],
            [
                   "TRANSPORT",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearMode_Transport_inline",
                   "Landing gear is in transport mode (either it is moving into, moving out of, or stopped in transport position).",
            ],
            [
                   "Landing gear is in transport mode (either it is moving into, moving out of, or stopped in transport position).",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearMode_Transport_inline",
                   "",
            ],
            [
                   "AUTO",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearMode_Auto_inline",
                   "Landing gear automatically transitions between deployed and retracted depending on altitude. During take-off,  the transition point is 1.2m above ground. After take-off (during flight or when landing), the transition point  is 0.5m above ground.",
            ],
            [
                   "Landing gear automatically transitions between deployed and retracted depending on altitude. During take-off,  the transition point is 1.2m above ground. After take-off (during flight or when landing), the transition point  is 0.5m above ground.",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearMode_Auto_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearMode_Unknown_inline",
                   "Landing Gear is in an unknown mode.",
            ],
            [
                   "Landing Gear is in an unknown mode.",
                   1,
                   "/Components/LandingGear/DJILandingGear.html",
                   "#DJILandingGear_DJILandingGearMode_Unknown_inline",
                   "",
            ],
            [
                   "setStateCallback",
                   2,
                   "/Components/RTK/DJIRTK.html",
                   "#DJIRTK_setUpdateRtkStateCallback_inline",
                   "Set RTK state update callback.  @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Set RTK state update callback.  @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/RTK/DJIRTK.html",
                   "#DJIRTK_setUpdateRtkStateCallback_inline",
                   "",
            ],
            [
                   "setRtkEnabled",
                   2,
                   "/Components/RTK/DJIRTK.html",
                   "#DJIRTK_setRTKEnabled_inline",
                   "Enables RTK positioning. Disable RTK when in poor signal environments, where incorrect positioning information  might make controlling the aircraft difficult. Can only be set when the motors are off.  @param enabled `true` to enable RTK positioning. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Enables RTK positioning. Disable RTK when in poor signal environments, where incorrect positioning information  might make controlling the aircraft difficult. Can only be set when the motors are off.  @param enabled `true` to enable RTK positioning. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/RTK/DJIRTK.html",
                   "#DJIRTK_setRTKEnabled_inline",
                   "",
            ],
            [
                   "isConnected",
                   2,
                   "/Components/RTK/DJIRTK.html",
                   "#DJIRTK_isConnected_inline",
                   "`true` if RTK is connected to the aircraft.  @return A boolean value.",
            ],
            [
                   "`true` if RTK is connected to the aircraft.  @return A boolean value.",
                   1,
                   "/Components/RTK/DJIRTK.html",
                   "#DJIRTK_isConnected_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_updateRTKState_inline",
                   "Callback function that updates the RTK state data.  @param state Current state of the RTK.",
            ],
            [
                   "Callback function that updates the RTK state data.  @param state Current state of the RTK.",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_updateRTKState_inline",
                   "",
            ],
            [
                   "RTKState",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "",
                   "This class holds the state of the RTK system, including position, positioning solution, and receiver information.",
            ],
            [
                   "This class holds the state of the RTK system, including position, positioning solution, and receiver information.",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "",
                   "",
            ],
            [
                   "isRTKEnabled",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_isRTKEnabled_inline",
                   "Returns state of RTK (enabled/disabled).  @return A boolean value.",
            ],
            [
                   "Returns state of RTK (enabled/disabled).  @return A boolean value.",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_isRTKEnabled_inline",
                   "",
            ],
            [
                   "isRTKBeingUsed",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_isRTKBeingUsed_inline",
                   "Whether the RTK is being used.  @return A boolean value.",
            ],
            [
                   "Whether the RTK is being used.  @return A boolean value.",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_isRTKBeingUsed_inline",
                   "",
            ],
            [
                   "getPositioningSolution",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_solution_inline",
                   "The positioning solution describes the method used to determine positioning. The solutions vary in accuracy, from `NONE` (no positioning) to `FIXED_POINT`.  @return An enum value of `PositioningSolution`",
            ],
            [
                   "The positioning solution describes the method used to determine positioning. The solutions vary in accuracy, from `NONE` (no positioning) to `FIXED_POINT`.  @return An enum value of `PositioningSolution`",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_solution_inline",
                   "",
            ],
            [
                   "getError",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_error_inline",
                   "Gets RTK errors, if any. Returns `null` when RTK is normal.  @return An instance of `DJIError`.",
            ],
            [
                   "Gets RTK errors, if any. Returns `null` when RTK is normal.  @return An instance of `DJIError`.",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_error_inline",
                   "",
            ],
            [
                   "isHeadingValid",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_isHeadingValid_inline",
                   "`true` if heading value is valid. Heading is invalid when a satellite fix hasn't been obtained.  @return A boolean value.",
            ],
            [
                   "`true` if heading value is valid. Heading is invalid when a satellite fix hasn't been obtained.  @return A boolean value.",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_isHeadingValid_inline",
                   "",
            ],
            [
                   "getHeading",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_heading_inline",
                   "Heading relative to True North as defined by the vector formed from Antenna 2 to Antenna 1 on the mobile station.  Unit is degrees.  @return A float value.",
            ],
            [
                   "Heading relative to True North as defined by the vector formed from Antenna 2 to Antenna 1 on the mobile station.  Unit is degrees.  @return A float value.",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_heading_inline",
                   "",
            ],
            [
                   "getMobileStationLocation",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_mobileStationAntenna1Location_inline",
                   "Location information of the mobile station's receiver 1 antenna. This location information is relative to the  base station location and is in degrees.  @return An instance of `LocationCoordinate2D`.",
            ],
            [
                   "Location information of the mobile station's receiver 1 antenna. This location information is relative to the  base station location and is in degrees.  @return An instance of `LocationCoordinate2D`.",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_mobileStationAntenna1Location_inline",
                   "",
            ],
            [
                   "getMobileStationAltitude",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_mobileStationAntenna1Altitude_inline",
                   "Altitude of the mobile station's receiver 1 antenna relative, to the base station location. Units are meters.  @return A float value.",
            ],
            [
                   "Altitude of the mobile station's receiver 1 antenna relative, to the base station location. Units are meters.  @return A float value.",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_mobileStationAntenna1Altitude_inline",
                   "",
            ],
            [
                   "getBaseStationLocation",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_baseStationLocation_inline",
                   "Base station's location coordinates, in degrees.  @return An instance of `LocationCoordinate2D`.",
            ],
            [
                   "Base station's location coordinates, in degrees.  @return An instance of `LocationCoordinate2D`.",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_baseStationLocation_inline",
                   "",
            ],
            [
                   "getBaseStationAltitude",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_baseStationAltitude_inline",
                   "Altitude of the base station above sea level, in meters.  @return A float value.",
            ],
            [
                   "Altitude of the base station above sea level, in meters.  @return A float value.",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_baseStationAltitude_inline",
                   "",
            ],
            [
                   "getMobileStationReceiver1GPSInfo",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_mobileStationReceiver1GPSInfo_inline",
                   "Mobile station (aircraft) receiver 1 GPS info.  @return An instance of `ReceiverInfo`",
            ],
            [
                   "Mobile station (aircraft) receiver 1 GPS info.  @return An instance of `ReceiverInfo`",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_mobileStationReceiver1GPSInfo_inline",
                   "",
            ],
            [
                   "getMobileStationReceiver1BeiDouInfo",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_mobileStationReceiver1BeiDouInfo_inline",
                   "Mobile station (aircraft) receiver 1 BeiDou info.  @return An instance of `ReceiverInfo`",
            ],
            [
                   "Mobile station (aircraft) receiver 1 BeiDou info.  @return An instance of `ReceiverInfo`",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_mobileStationReceiver1BeiDouInfo_inline",
                   "",
            ],
            [
                   "getMobileStationReceiver1GLONASSInfo",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_mobileStationReceiver1GLONASSInfo_inline",
                   "Mobile station (aircraft) receiver 1 GLONASS info.  @return An instance of `ReceiverInfo`",
            ],
            [
                   "Mobile station (aircraft) receiver 1 GLONASS info.  @return An instance of `ReceiverInfo`",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_mobileStationReceiver1GLONASSInfo_inline",
                   "",
            ],
            [
                   "getMobileStationReceiver2GPSInfo",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_mobileStationReceiver2GPSInfo_inline",
                   "Mobile station (aircraft) receiver 2 GPS info.  @return An instance of `ReceiverInfo`",
            ],
            [
                   "Mobile station (aircraft) receiver 2 GPS info.  @return An instance of `ReceiverInfo`",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_mobileStationReceiver2GPSInfo_inline",
                   "",
            ],
            [
                   "getMobileStationReceiver2BeiDouInfo",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_mobileStationReceiver2BeiDouInfo_inline",
                   "Mobile station (aircraft) receiver 2 BeiDou info.  @return An instance of `ReceiverInfo`",
            ],
            [
                   "Mobile station (aircraft) receiver 2 BeiDou info.  @return An instance of `ReceiverInfo`",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_mobileStationReceiver2BeiDouInfo_inline",
                   "",
            ],
            [
                   "getMobileStationReceiver2GLONASSInfo",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_mobileStationReceiver2GLONASSInfo_inline",
                   "Mobile station (aircraft) receiver 2 GLONASS info.  @return An instance of `ReceiverInfo`",
            ],
            [
                   "Mobile station (aircraft) receiver 2 GLONASS info.  @return An instance of `ReceiverInfo`",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_mobileStationReceiver2GLONASSInfo_inline",
                   "",
            ],
            [
                   "getBaseStationReceiverGPSInfo",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_baseStationReceiverGPSInfo_inline",
                   "Base station receiver GPS info.  @return An instance of `ReceiverInfo`",
            ],
            [
                   "Base station receiver GPS info.  @return An instance of `ReceiverInfo`",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_baseStationReceiverGPSInfo_inline",
                   "",
            ],
            [
                   "getBaseStationReceiverBeiDouInfo",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_baseStationReceiverBeiDouInfo_inline",
                   "Base station receiver BeiDou info.  @return An instance of `ReceiverInfo`",
            ],
            [
                   "Base station receiver BeiDou info.  @return An instance of `ReceiverInfo`",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_baseStationReceiverBeiDouInfo_inline",
                   "",
            ],
            [
                   "getBaseStationReceiverGLONASSInfo",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_baseStationReceiverGLONASSInfo_inline",
                   "Base station receiver GLONASS info.  @return An instance of `ReceiverInfo`",
            ],
            [
                   "Base station receiver GLONASS info.  @return An instance of `ReceiverInfo`",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKState_baseStationReceiverGLONASSInfo_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_updateRtkStateCallbackInterface_inline",
                   "This interface provides a delegate method to update the RTK state.",
            ],
            [
                   "This interface provides a delegate method to update the RTK state.",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_updateRtkStateCallbackInterface_inline",
                   "",
            ],
            [
                   "PositioningSolution",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKPositioningSolution_inline",
                   "This enum defines the positioning solution currently being used.",
            ],
            [
                   "This enum defines the positioning solution currently being used.",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKPositioningSolution_inline",
                   "",
            ],
            [
                   "NONE",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKPositioningSolution_None_inline",
                   "No positioning solution. This can be caused by an insufficient number of satellites in view, insufficient  time to lock onto the satellites, or a loss in communication link between the mobile station and base station.",
            ],
            [
                   "No positioning solution. This can be caused by an insufficient number of satellites in view, insufficient  time to lock onto the satellites, or a loss in communication link between the mobile station and base station.",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKPositioningSolution_None_inline",
                   "",
            ],
            [
                   "SINGLE_POINT",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKPositioningSolution_SinglePoint_inline",
                   "RTK point positioning.",
            ],
            [
                   "RTK point positioning.",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKPositioningSolution_SinglePoint_inline",
                   "",
            ],
            [
                   "FLOAT",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKPositioningSolution_Float_inline",
                   "Float solution positioning.",
            ],
            [
                   "Float solution positioning.",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKPositioningSolution_Float_inline",
                   "",
            ],
            [
                   "FIXED_POINT",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKPositioningSolution_FixedPoint_inline",
                   "Fixed-point solution positioning (most accurate).",
            ],
            [
                   "Fixed-point solution positioning (most accurate).",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKState.html",
                   "#DJIRTK_DJIRTKPositioningSolution_FixedPoint_inline",
                   "",
            ],
            [
                   "ReceiverInfo",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKReceiverInfo.html",
                   "",
                   "Single RTK receiver information. Each receiver is connected to a single antenna.",
            ],
            [
                   "Single RTK receiver information. Each receiver is connected to a single antenna.",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKReceiverInfo.html",
                   "",
                   "",
            ],
            [
                   "isConstellationSupported",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKReceiverInfo.html",
                   "#DJIRTK_DJIRTKReceiverInfo_isConstellationSupported_inline",
                   "`true` if constellation is supported. The European and American versions of RTK support  GPS and GLONASS, while the Asia Pacific version supports GPS and BeiDou.  @return A boolean value.",
            ],
            [
                   "`true` if constellation is supported. The European and American versions of RTK support  GPS and GLONASS, while the Asia Pacific version supports GPS and BeiDou.  @return A boolean value.",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKReceiverInfo.html",
                   "#DJIRTK_DJIRTKReceiverInfo_isConstellationSupported_inline",
                   "",
            ],
            [
                   "getSatelliteCount",
                   2,
                   "/Components/RTK/DJIRTK_DJIRTKReceiverInfo.html",
                   "#DJIRTK_DJIRTKReceiverInfo_satelliteCount_inline",
                   "Valid satellite count for this receiver.  @return An int value.",
            ],
            [
                   "Valid satellite count for this receiver.  @return An int value.",
                   1,
                   "/Components/RTK/DJIRTK_DJIRTKReceiverInfo.html",
                   "#DJIRTK_DJIRTKReceiverInfo_satelliteCount_inline",
                   "",
            ],
            [
                   "setStateCallback",
                   2,
                   "/Components/Simulator/DJISimulator.html",
                   "#DJISimulator_setUpdatedSimulatorStateDataCallback_inline",
                   "Sets the callback function that updates the state data received from an aircraft in simulation mode.  @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the callback function that updates the state data received from an aircraft in simulation mode.  @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/Simulator/DJISimulator.html",
                   "#DJISimulator_setUpdatedSimulatorStateDataCallback_inline",
                   "",
            ],
            [
                   "isSimulatorActive",
                   2,
                   "/Components/Simulator/DJISimulator.html",
                   "#DJISimulator_isSimulatorStarted_inline",
                   "`true` if the simulator is started.  @return A boolean value.",
            ],
            [
                   "`true` if the simulator is started.  @return A boolean value.",
                   1,
                   "/Components/Simulator/DJISimulator.html",
                   "#DJISimulator_isSimulatorStarted_inline",
                   "",
            ],
            [
                   "start",
                   2,
                   "/Components/Simulator/DJISimulator.html",
                   "#DJISimulator_startSimulator_inline",
                   "Start simulator. Will result in error if simulation is already started.  @param data The data with which to initialize the simulator. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Start simulator. Will result in error if simulation is already started.  @param data The data with which to initialize the simulator. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/Simulator/DJISimulator.html",
                   "#DJISimulator_startSimulator_inline",
                   "",
            ],
            [
                   "stop",
                   2,
                   "/Components/Simulator/DJISimulator.html",
                   "#DJISimulator_stopSimulator_inline",
                   "Stop the simulator.  @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Stop the simulator.  @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/Simulator/DJISimulator.html",
                   "#DJISimulator_stopSimulator_inline",
                   "",
            ],
            [
                   "setFlyZoneLimitationEnabled",
                   2,
                   "/Components/Simulator/DJISimulator.html",
                   "#DJISimulator_setFlyZoneEnabled_inline",
                   "Enable/disable the fly zone system in the simulator. By default, fly zone is disabled in the simulator.  Rebooting the aircraft is required for the settings to take effect.  @param enabled `true` to enable fly zone in the simulator. @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Enable/disable the fly zone system in the simulator. By default, fly zone is disabled in the simulator.  Rebooting the aircraft is required for the settings to take effect.  @param enabled `true` to enable fly zone in the simulator. @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Simulator/DJISimulator.html",
                   "#DJISimulator_setFlyZoneEnabled_inline",
                   "",
            ],
            [
                   "getFlyZoneLimitationEnabled",
                   2,
                   "/Components/Simulator/DJISimulator.html",
                   "#DJISimulator_getFlyZoneEnabled_inline",
                   "Gets fly zone system simulator status (enabled/disabled). By default, fly zone is disabled in the simulator.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets fly zone system simulator status (enabled/disabled). By default, fly zone is disabled in the simulator.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/Simulator/DJISimulator.html",
                   "#DJISimulator_getFlyZoneEnabled_inline",
                   "",
            ],
            [
                   "InitializationData",
                   2,
                   "/Components/Simulator/DJISimulator_DJISimulatorInitializationData.html",
                   "",
                   "Data to initialize the simulator with.",
            ],
            [
                   "Data to initialize the simulator with.",
                   1,
                   "/Components/Simulator/DJISimulator_DJISimulatorInitializationData.html",
                   "",
                   "",
            ],
            [
                   "SimulatorState",
                   2,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "",
                   "Aircraft simulator state data.",
            ],
            [
                   "Aircraft simulator state data.",
                   1,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_UpdatedSimulatorStateDataCallbackInterface_inline",
                   "Simulator's callback interface. When the SDK receives the `SimulatorState`, the override  method will be called.",
            ],
            [
                   "Simulator's callback interface. When the SDK receives the `SimulatorState`, the override  method will be called.",
                   1,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_UpdatedSimulatorStateDataCallbackInterface_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_updateSimulatorState_inline",
                   "Updates the simulator's current state.  @param state An instance of `SimulatorState`.",
            ],
            [
                   "Updates the simulator's current state.  @param state An instance of `SimulatorState`.",
                   1,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_updateSimulatorState_inline",
                   "",
            ],
            [
                   "areMotorsOn",
                   2,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_DJISimulatorState_areMotorsOn_inline",
                   "TRUE if motors are on in the simulator.  @return A boolean value.",
            ],
            [
                   "TRUE if motors are on in the simulator.  @return A boolean value.",
                   1,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_DJISimulatorState_areMotorsOn_inline",
                   "",
            ],
            [
                   "isFlying",
                   2,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_DJISimulatorState_isFlying_inline",
                   "TRUE if aircraft is flying in the simulator.  @return A boolean value.",
            ],
            [
                   "TRUE if aircraft is flying in the simulator.  @return A boolean value.",
                   1,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_DJISimulatorState_isFlying_inline",
                   "",
            ],
            [
                   "getLocation",
                   2,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_DJISimulatorState_location_inline",
                   "Simulated aircraft location.  @return Location object.",
            ],
            [
                   "Simulated aircraft location.  @return Location object.",
                   1,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_DJISimulatorState_location_inline",
                   "",
            ],
            [
                   "getPositionX",
                   2,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_DJISimulatorState_positionX_inline",
                   "Gets East-West distance from initial simulator location, where East is positive, and  North-East-Down coordinate system is used.  @return A float value.",
            ],
            [
                   "Gets East-West distance from initial simulator location, where East is positive, and  North-East-Down coordinate system is used.  @return A float value.",
                   1,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_DJISimulatorState_positionX_inline",
                   "",
            ],
            [
                   "getPositionY",
                   2,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_DJISimulatorState_positionY_inline",
                   "Gets North-South distance from initial simulator location, where North is positive, and  North-East-Down coordinate system is used.  @return A float value.",
            ],
            [
                   "Gets North-South distance from initial simulator location, where North is positive, and  North-East-Down coordinate system is used.  @return A float value.",
                   1,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_DJISimulatorState_positionY_inline",
                   "",
            ],
            [
                   "getPositionZ",
                   2,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_DJISimulatorState_positionZ_inline",
                   "Gets vertical distance from initial simulator location. The value should be negative if the height of aircraft is higher  than initial home point's height.  @return A float value.",
            ],
            [
                   "Gets vertical distance from initial simulator location. The value should be negative if the height of aircraft is higher  than initial home point's height.  @return A float value.",
                   1,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_DJISimulatorState_positionZ_inline",
                   "",
            ],
            [
                   "getPitch",
                   2,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_DJISimulatorState_pitch_inline",
                   "Simulated aircraft pitch with range [-30, 30] degrees.  @return A float value.",
            ],
            [
                   "Simulated aircraft pitch with range [-30, 30] degrees.  @return A float value.",
                   1,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_DJISimulatorState_pitch_inline",
                   "",
            ],
            [
                   "getRoll",
                   2,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_DJISimulatorState_roll_inline",
                   "Simulated aircraft roll with range [-30, 30] degrees.  @return A float value.",
            ],
            [
                   "Simulated aircraft roll with range [-30, 30] degrees.  @return A float value.",
                   1,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_DJISimulatorState_roll_inline",
                   "",
            ],
            [
                   "getYaw",
                   2,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_DJISimulatorState_yaw_inline",
                   "Simulated aircraft yaw with range [-180, 180] degrees.  @return A float value.",
            ],
            [
                   "Simulated aircraft yaw with range [-180, 180] degrees.  @return A float value.",
                   1,
                   "/Components/Simulator/DJISimulator_DJISimulatorState.html",
                   "#DJISimulator_DJISimulatorState_yaw_inline",
                   "",
            ],
            [
                   "createInstance",
                   2,
                   "/Components/Simulator/DJISimulator_DJISimulatorInitializationData.html",
                   "#DJISimulator_DJISimulatorInitializationData_createInstance_inline",
                   "Create the initialization data for the simulator.  @param location Simulator coordinate latitude and longitude in degrees. @param updateFrequency Aircraft simulator state push frequency in Hz with range [2, 150]. A setting of 10 Hz will result in delegate method being called, 10 times per second. @param satelliteCount The initial number of GPS satellites with range [0, 20].  @return Initialization data object.",
            ],
            [
                   "Create the initialization data for the simulator.  @param location Simulator coordinate latitude and longitude in degrees. @param updateFrequency Aircraft simulator state push frequency in Hz with range [2, 150]. A setting of 10 Hz will result in delegate method being called, 10 times per second. @param satelliteCount The initial number of GPS satellites with range [0, 20].  @return Initialization data object.",
                   1,
                   "/Components/Simulator/DJISimulator_DJISimulatorInitializationData.html",
                   "#DJISimulator_DJISimulatorInitializationData_createInstance_inline",
                   "",
            ],
            [
                   "getUpdateFrequency",
                   2,
                   "/Components/Simulator/DJISimulator_DJISimulatorInitializationData.html",
                   "#DJISimulator_DJISimulatorInitializationData_simulationStateUpdateFrequency_inline",
                   "Aircraft simulator state push frequency in Hz with range [2, 150]. A setting of 10 Hz will result in  `onUpdate` being called 10 times per second.  @return Frequency.",
            ],
            [
                   "Aircraft simulator state push frequency in Hz with range [2, 150]. A setting of 10 Hz will result in  `onUpdate` being called 10 times per second.  @return Frequency.",
                   1,
                   "/Components/Simulator/DJISimulator_DJISimulatorInitializationData.html",
                   "#DJISimulator_DJISimulatorInitializationData_simulationStateUpdateFrequency_inline",
                   "",
            ],
            [
                   "getSatelliteCount",
                   2,
                   "/Components/Simulator/DJISimulator_DJISimulatorInitializationData.html",
                   "#DJISimulator_DJISimulatorInitializationData_numOfSatellites_inline",
                   "The initial number of GNSS satellites with range [0, 20]  @return Number of satellites.",
            ],
            [
                   "The initial number of GNSS satellites with range [0, 20]  @return Number of satellites.",
                   1,
                   "/Components/Simulator/DJISimulator_DJISimulatorInitializationData.html",
                   "#DJISimulator_DJISimulatorInitializationData_numOfSatellites_inline",
                   "",
            ],
            [
                   "getLocation",
                   2,
                   "/Components/Simulator/DJISimulator_DJISimulatorInitializationData.html",
                   "#DJISimulator_DJISimulatorInitializationData_location_inline",
                   "Location to begin simulation.  @return Location object",
            ],
            [
                   "Location to begin simulation.  @return Location object",
                   1,
                   "/Components/Simulator/DJISimulator_DJISimulatorInitializationData.html",
                   "#DJISimulator_DJISimulatorInitializationData_location_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIIntelligentFlightAssistant_UpdateVisionControlStateCallbackInterface_inline",
                   "This protocol provides an interface to update the Intelligent Flight Assistant vision control state.",
            ],
            [
                   "This protocol provides an interface to update the Intelligent Flight Assistant vision control state.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIIntelligentFlightAssistant_UpdateVisionControlStateCallbackInterface_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIIntelligentFlightAssistant_UpdateVisionControlState_inline",
                   "Callback function that updates the aircraft state controlled by the intelligent flight assistant.  @param state The vision control state.",
            ],
            [
                   "Callback function that updates the aircraft state controlled by the intelligent flight assistant.  @param state The vision control state.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIIntelligentFlightAssistant_UpdateVisionControlState_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_updateVisionFaceAwareState_inline",
                   "Callback function that updates the FaceAware state. When starting a PalmLaunch, the aircraft will  start FaceAware. If FaceAware activates successfully, the motors will start spinning and the  aircraft will hover after releasing it.  @param state The face sware state.",
            ],
            [
                   "Callback function that updates the FaceAware state. When starting a PalmLaunch, the aircraft will  start FaceAware. If FaceAware activates successfully, the motors will start spinning and the  aircraft will hover after releasing it.  @param state The face sware state.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_updateVisionFaceAwareState_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_updateVisionPalmControlState_inline",
                   "Callback function that updates the palm control state.  @param state The palm control state.",
            ],
            [
                   "Callback function that updates the palm control state.  @param state The palm control state.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIIntelligentFlightAssistant_updateVisionPalmControlState_inline",
                   "",
            ],
            [
                   "isBraking",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_isBraking_inline",
                   "`true` if the aircraft is braking automatically to avoid collision.  @return A boolean value.",
            ],
            [
                   "`true` if the aircraft is braking automatically to avoid collision.  @return A boolean value.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_isBraking_inline",
                   "",
            ],
            [
                   "isAvoidingActiveObstacleCollision",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_isAvoidingActiveObstacleCollision_inline",
                   "`true` if the aircraft is avoiding collision from an obstacle moving towards the aircraft.  @return A boolean value.",
            ],
            [
                   "`true` if the aircraft is avoiding collision from an obstacle moving towards the aircraft.  @return A boolean value.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_isAvoidingActiveObstacleCollision_inline",
                   "",
            ],
            [
                   "isAscentLimitedByObstacle",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_isAscentLimitedByObstacle_inline",
                   "YES if the aircraft will not ascend further because of an obstacle detected within 1m above it.  @return A boolean value.",
            ],
            [
                   "YES if the aircraft will not ascend further because of an obstacle detected within 1m above it.  @return A boolean value.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_isAscentLimitedByObstacle_inline",
                   "",
            ],
            [
                   "isPerformingPrecisionLanding",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_isPerformingPrecisionLanding_inline",
                   "YES if the aircraft is landing precisely.  @return A boolean value.",
            ],
            [
                   "YES if the aircraft is landing precisely.  @return A boolean value.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_isPerformingPrecisionLanding_inline",
                   "",
            ],
            [
                   "landingProtectionState",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_landingProtectionStatus_inline",
                   "Gets the aircraft's landing protection state. This status is valid when landing protection is enabled.  @return An enum value of `VisionLandingProtectionState`,  which will show the state of landing protection.",
            ],
            [
                   "Gets the aircraft's landing protection state. This status is valid when landing protection is enabled.  @return An enum value of `VisionLandingProtectionState`,  which will show the state of landing protection.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_landingProtectionStatus_inline",
                   "",
            ],
            [
                   "VisionLandingProtectionState",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_DJIVisionLandingProtectionStatus_inline",
                   "Landing protection status returned by the downward vision sensor.",
            ],
            [
                   "Landing protection status returned by the downward vision sensor.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_DJIVisionLandingProtectionStatus_inline",
                   "",
            ],
            [
                   "NONE",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_DJIVisionLandingProtectionStatus_None_inline",
                   "The aircraft is not executing auto-landing or the downward vision sensor has not started to analyze the ground yet.",
            ],
            [
                   "The aircraft is not executing auto-landing or the downward vision sensor has not started to analyze the ground yet.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_DJIVisionLandingProtectionStatus_None_inline",
                   "",
            ],
            [
                   "ANALYZING",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_DJIVisionLandingProtectionStatus_Analyzing_inline",
                   "The downward vision sensor is analyzing the ground at the landing zone.",
            ],
            [
                   "The downward vision sensor is analyzing the ground at the landing zone.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_DJIVisionLandingProtectionStatus_Analyzing_inline",
                   "",
            ],
            [
                   "ANALYSIS_FAILED",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_DJIVisionLandingProtectionStatus_AnalysisFailed_inline",
                   "The downward vision sensor's analysis failed. Either the auto-landing can be attempted again, or the user needs  to land the aircraft manually.",
            ],
            [
                   "The downward vision sensor's analysis failed. Either the auto-landing can be attempted again, or the user needs  to land the aircraft manually.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_DJIVisionLandingProtectionStatus_AnalysisFailed_inline",
                   "",
            ],
            [
                   "SAFE_TO_LAND",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_DJIVisionLandingProtectionStatus_SafeToLand_inline",
                   "The ground is flat and the aircraft is safe to land automatically.",
            ],
            [
                   "The ground is flat and the aircraft is safe to land automatically.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_DJIVisionLandingProtectionStatus_SafeToLand_inline",
                   "",
            ],
            [
                   "NOT_SAFE_TO_LAND",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_DJIVisionLandingProtectionStatus_NotSafeToLand_inline",
                   "Landing area is not flat enough to be considered safe for landing. The aircraft should be moved to an area that  is more flat and an auto-land should be attempted again or the user should land the aircraft manually.",
            ],
            [
                   "Landing area is not flat enough to be considered safe for landing. The aircraft should be moved to an area that  is more flat and an auto-land should be attempted again or the user should land the aircraft manually.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_DJIVisionLandingProtectionStatus_NotSafeToLand_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_DJIVisionLandingProtectionStatus_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIVisionDetectionState_DJIVisionControlState.html",
                   "#DJIVisionDetectionState_DJIVisionControlState_DJIVisionLandingProtectionStatus_Unknown_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIIntelligentFlightAssistant_visionDetectionStateUpdatedCallbackInterface_inline",
                   "This protocol provides an interface to update the Intelligent Flight Assistant current state.",
            ],
            [
                   "This protocol provides an interface to update the Intelligent Flight Assistant current state.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIIntelligentFlightAssistant_visionDetectionStateUpdatedCallbackInterface_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIIntelligentFlightAssistant_updateVisionDetectionState_inline",
                   "Callback function that updates the vision detection state. The frequency of this method is 10Hz.  @param state The state of vision sensor.",
            ],
            [
                   "Callback function that updates the vision detection state. The frequency of this method is 10Hz.  @param state The state of vision sensor.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIIntelligentFlightAssistant_updateVisionDetectionState_inline",
                   "",
            ],
            [
                   "isSensorBeingUsed",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_isSensorWorking_inline",
                   "`true` if the vision sensor is working.  @return A boolean value.",
            ],
            [
                   "`true` if the vision sensor is working.  @return A boolean value.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_isSensorWorking_inline",
                   "",
            ],
            [
                   "getSystemWarning",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_systemWarning_inline",
                   "Distance warning level between the obstacle and the aircraft. This is a combination of warning levels from each sector.  @return An enum value of `VisionSystemWarning`",
            ],
            [
                   "Distance warning level between the obstacle and the aircraft. This is a combination of warning levels from each sector.  @return An enum value of `VisionSystemWarning`",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_systemWarning_inline",
                   "",
            ],
            [
                   "getPosition",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_position_inline",
                   "The vision sensor's position on the aircraft. For Phantom 4 Pro, there are 4 vision sensors on the aircraft.  The sensors on the nose and tail are dual- camera sensors. The sensors on the left and right are infrared  time-of-flight (TOF) sensors.  @return An enum value of `VisionSensorPosition`",
            ],
            [
                   "The vision sensor's position on the aircraft. For Phantom 4 Pro, there are 4 vision sensors on the aircraft.  The sensors on the nose and tail are dual- camera sensors. The sensors on the left and right are infrared  time-of-flight (TOF) sensors.  @return An enum value of `VisionSensorPosition`",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_position_inline",
                   "",
            ],
            [
                   "getObstacleDistanceInMeters",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_obstacleDistanceInMeters_inline",
                   "The distance to the closest detected obstacle, in meters. It is only used when the sensor is an infrared TOF  sensor. The valid range is [0.3, 5.0]. Phantom 4 Pro has two infrared sensors on its left and right. Both sensors have a 70-degree horizontal field of view (FOV) and 20-degree vertical FOV. The value is always 0.0 if the sensor is a dual-camera sensor or the sensor is not working properly.  @return A double value.",
            ],
            [
                   "The distance to the closest detected obstacle, in meters. It is only used when the sensor is an infrared TOF  sensor. The valid range is [0.3, 5.0]. Phantom 4 Pro has two infrared sensors on its left and right. Both sensors have a 70-degree horizontal field of view (FOV) and 20-degree vertical FOV. The value is always 0.0 if the sensor is a dual-camera sensor or the sensor is not working properly.  @return A double value.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_obstacleDistanceInMeters_inline",
                   "",
            ],
            [
                   "getDetectionSectors",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_detectionSectors_inline",
                   "The vision system can see in front of the aircraft with a 70 degree horizontal field of view (FOV) and 55-degree  vertical FOV for the Phantom 4. The horizontal FOV is split into four equal sectors and this array contains the distance and warning information for each sector. For Phantom 4, the horizontal FOV is separated into 4 sectors.  @return An instance of List<DJIVisionDetectionSector>. ",
            ],
            [
                   "The vision system can see in front of the aircraft with a 70 degree horizontal field of view (FOV) and 55-degree  vertical FOV for the Phantom 4. The horizontal FOV is split into four equal sectors and this array contains the distance and warning information for each sector. For Phantom 4, the horizontal FOV is separated into 4 sectors.  @return An instance of List<DJIVisionDetectionSector>. ",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_detectionSectors_inline",
                   "",
            ],
            [
                   "ObstacleDetectionSector",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "",
                   "The vision system can see in front of the aircraft with a 60 degree horizontal field of view (FOV) and 55 degree  vertical FOV. The horizontal FOV is split into four equal sectors, and this class gives the distance and warning  level for one sector.",
            ],
            [
                   "The vision system can see in front of the aircraft with a 60 degree horizontal field of view (FOV) and 55 degree  vertical FOV. The horizontal FOV is split into four equal sectors, and this class gives the distance and warning  level for one sector.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "",
                   "",
            ],
            [
                   "VisionSensorPosition",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_visionSensorPosition_inline",
                   "Position of the sensor on the aircraft.",
            ],
            [
                   "Position of the sensor on the aircraft.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_visionSensorPosition_inline",
                   "",
            ],
            [
                   "NOSE",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_visionSensorPosition_Nose_inline",
                   "The sensor is on the front or nose of the aircraft.",
            ],
            [
                   "The sensor is on the front or nose of the aircraft.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_visionSensorPosition_Nose_inline",
                   "",
            ],
            [
                   "TAIL",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_visionSensorPosition_Tail_inline",
                   "The sensor is on the back or tail of the aircraft.",
            ],
            [
                   "The sensor is on the back or tail of the aircraft.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_visionSensorPosition_Tail_inline",
                   "",
            ],
            [
                   "RIGHT",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_visionSensorPosition_Right_inline",
                   "The sensor is on the right or starboard side of the aircraft.",
            ],
            [
                   "The sensor is on the right or starboard side of the aircraft.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_visionSensorPosition_Right_inline",
                   "",
            ],
            [
                   "LEFT",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_visionSensorPosition_Left_inline",
                   "The sensor is on the left or port side of the aircraft.",
            ],
            [
                   "The sensor is on the left or port side of the aircraft.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_visionSensorPosition_Left_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_visionSensorPosition_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_visionSensorPosition_Unknown_inline",
                   "",
            ],
            [
                   "VisionSystemWarning",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_VisionSystemWarning_inline",
                   "Distance warning returned by the front vision system. Warning Level 4 is the most serious level.",
            ],
            [
                   "Distance warning returned by the front vision system. Warning Level 4 is the most serious level.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_VisionSystemWarning_inline",
                   "",
            ],
            [
                   "INVALID",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_VisionSystemWarning_Invalid_inline",
                   "The warning is invalid. The front vision system cannot determine depth of the scene in front of it.",
            ],
            [
                   "The warning is invalid. The front vision system cannot determine depth of the scene in front of it.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_VisionSystemWarning_Invalid_inline",
                   "",
            ],
            [
                   "SAFE",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_VisionSystemWarning_Safe_inline",
                   "The distance between the obstacle detected by the vision system and the aircraft is safe (over 2 meters).",
            ],
            [
                   "The distance between the obstacle detected by the vision system and the aircraft is safe (over 2 meters).",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_VisionSystemWarning_Safe_inline",
                   "",
            ],
            [
                   "DANGEROUS",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_VisionSystemWarning_Dangerous_inline",
                   "The distance between the obstacle detected by the vision system and the aircraft is dangerous (less than 2 meters).",
            ],
            [
                   "The distance between the obstacle detected by the vision system and the aircraft is dangerous (less than 2 meters).",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_VisionSystemWarning_Dangerous_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_VisionSystemWarning_Unknown_inline",
                   "The distance warning is unknown. This warning is returned when an exception occurs.",
            ],
            [
                   "The distance warning is unknown. This warning is returned when an exception occurs.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState.html",
                   "#DJIVisionDetectionState_VisionSystemWarning_Unknown_inline",
                   "",
            ],
            [
                   "getWarningLevel",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "#DJIVisionDetectionState_DJIVisionDetectionSector_warningLevel_inline",
                   "The warning level based on distance.  @return An enum value of `ObstacleDetectionSectorWarning`",
            ],
            [
                   "The warning level based on distance.  @return An enum value of `ObstacleDetectionSectorWarning`",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "#DJIVisionDetectionState_DJIVisionDetectionSector_warningLevel_inline",
                   "",
            ],
            [
                   "getObstacleDistanceInMeters",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "#DJIVisionDetectionState_DJIVisionDetectionSector_obstacleDistanceInMeters_inline",
                   "The detected obstacle distance to the aircraft in meters.  @return A float value.",
            ],
            [
                   "The detected obstacle distance to the aircraft in meters.  @return A float value.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "#DJIVisionDetectionState_DJIVisionDetectionSector_obstacleDistanceInMeters_inline",
                   "",
            ],
            [
                   "ObstacleDetectionSectorWarning",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "#DJIVisionDetectionState_VisionSectorWarning_inline",
                   "Distance warning returned by each sector of the front vision system. Warning Level 4 is the most serious level.",
            ],
            [
                   "Distance warning returned by each sector of the front vision system. Warning Level 4 is the most serious level.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "#DJIVisionDetectionState_VisionSectorWarning_inline",
                   "",
            ],
            [
                   "INVALID",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "#DJIVisionDetectionState_VisionSectorWarning_Invalid_inline",
                   "The warning level is invalid. The sector cannot determine depth of the scene in front of it.",
            ],
            [
                   "The warning level is invalid. The sector cannot determine depth of the scene in front of it.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "#DJIVisionDetectionState_VisionSectorWarning_Invalid_inline",
                   "",
            ],
            [
                   "LEVEL_1",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "#DJIVisionDetectionState_VisionSectorWarning_Level1_inline",
                   "The distance between the obstacle detected by the sector and the aircraft is over 4 meters.",
            ],
            [
                   "The distance between the obstacle detected by the sector and the aircraft is over 4 meters.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "#DJIVisionDetectionState_VisionSectorWarning_Level1_inline",
                   "",
            ],
            [
                   "LEVEL_2",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "#DJIVisionDetectionState_VisionSectorWarning_Level2_inline",
                   "The distance between the obstacle detected by the sector and the aircraft is between 3 - 4 meters.",
            ],
            [
                   "The distance between the obstacle detected by the sector and the aircraft is between 3 - 4 meters.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "#DJIVisionDetectionState_VisionSectorWarning_Level2_inline",
                   "",
            ],
            [
                   "LEVEL_3",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "#DJIVisionDetectionState_VisionSectorWarning_Level3_inline",
                   "The distance between the obstacle detected by the sector and the aircraft is between 2 - 3 meters.",
            ],
            [
                   "The distance between the obstacle detected by the sector and the aircraft is between 2 - 3 meters.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "#DJIVisionDetectionState_VisionSectorWarning_Level3_inline",
                   "",
            ],
            [
                   "LEVEL_4",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "#DJIVisionDetectionState_VisionSectorWarning_Level4_inline",
                   "The distance between the obstacle detected by the sector and the aircraft is less than 2 meters.",
            ],
            [
                   "The distance between the obstacle detected by the sector and the aircraft is less than 2 meters.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "#DJIVisionDetectionState_VisionSectorWarning_Level4_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "#DJIVisionDetectionState_VisionSectorWarning_Unknown_inline",
                   "The distance warning is unknown. This warning is returned when an exception occurs.",
            ],
            [
                   "The distance warning is unknown. This warning is returned when an exception occurs.",
                   1,
                   "/Components/VisionDetectionState/DJIVisionDetectionState_DJIVisionDetectionSector.html",
                   "#DJIVisionDetectionState_VisionSectorWarning_Unknown_inline",
                   "",
            ],
            [
                   "FaceAwareState",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionFaceAwareState_inline",
                   "FaceAware states. FaceAware is a step of PalmLaunch. Tapping the battery battery power  button twice, FaceAware will start to work automatically. If FaceAware is activated successfully,  the aircraft will takeoff from the palm.",
            ],
            [
                   "FaceAware states. FaceAware is a step of PalmLaunch. Tapping the battery battery power  button twice, FaceAware will start to work automatically. If FaceAware is activated successfully,  the aircraft will takeoff from the palm.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionFaceAwareState_inline",
                   "",
            ],
            [
                   "IDLE",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionFaceAwareState_Idle_inline",
                   "The aircraft is not executing FaceAware.",
            ],
            [
                   "The aircraft is not executing FaceAware.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionFaceAwareState_Idle_inline",
                   "",
            ],
            [
                   "ACTIVATING",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionFaceAwareState_Activating_inline",
                   "The aircraft is in the process of detecting a human face in front of the camera.",
            ],
            [
                   "The aircraft is in the process of detecting a human face in front of the camera.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionFaceAwareState_Activating_inline",
                   "",
            ],
            [
                   "ACTIVATED",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionFaceAwareState_Activated_inline",
                   "FaceAware has been activated. The aircraft will beep twice and the motors will start spinning.",
            ],
            [
                   "FaceAware has been activated. The aircraft will beep twice and the motors will start spinning.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionFaceAwareState_Activated_inline",
                   "",
            ],
            [
                   "FAILED_NO_FACE_DETECTED",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionFaceAwareState_FailedNoFaceDetected_inline",
                   "FaceAware has failed to activate because no face was detected.",
            ],
            [
                   "FaceAware has failed to activate because no face was detected.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionFaceAwareState_FailedNoFaceDetected_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionFaceAwareState_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionFaceAwareState_Unknown_inline",
                   "",
            ],
            [
                   "PalmControlState",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionPalmControlState_inline",
                   "States of PalmControl.",
            ],
            [
                   "States of PalmControl.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionPalmControlState_inline",
                   "",
            ],
            [
                   "INITIALIZING",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionPalmControlState_Initializing_inline",
                   "The aircraft is initializing for PalmControl.",
            ],
            [
                   "The aircraft is initializing for PalmControl.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionPalmControlState_Initializing_inline",
                   "",
            ],
            [
                   "RECOGNIZING_PALM",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionPalmControlState_RecognizingPalm_inline",
                   "The aircraft is recognizing the palm.",
            ],
            [
                   "The aircraft is recognizing the palm.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionPalmControlState_RecognizingPalm_inline",
                   "",
            ],
            [
                   "STARTING_FOLLOW",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionPalmControlState_StartingFollow_inline",
                   "The aircraft is moving into position for the PalmControl Follow command. In this state, the  aircraft is ascending and flying backward to a position that is 3m horizontally away from  the user and 2.3m above the ground. Once it has reached this position, the state will move  to `FOLLOWING` and the aircraft will then follow the user. The  Follow command can be initiated by raising one arm and quickly waving your hand at the camera.",
            ],
            [
                   "The aircraft is moving into position for the PalmControl Follow command. In this state, the  aircraft is ascending and flying backward to a position that is 3m horizontally away from  the user and 2.3m above the ground. Once it has reached this position, the state will move  to `FOLLOWING` and the aircraft will then follow the user. The  Follow command can be initiated by raising one arm and quickly waving your hand at the camera.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionPalmControlState_StartingFollow_inline",
                   "",
            ],
            [
                   "FOLLOWING",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionPalmControlState_Following_inline",
                   "The aircraft is currently following the user. To reach this state, the user first raises  one arm and quickly waves their hand at the aircraft's camera. The aircraft will then move  into position (3m from the user and 2.3m above the ground), and reach this state.",
            ],
            [
                   "The aircraft is currently following the user. To reach this state, the user first raises  one arm and quickly waves their hand at the aircraft's camera. The aircraft will then move  into position (3m from the user and 2.3m above the ground), and reach this state.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionPalmControlState_Following_inline",
                   "",
            ],
            [
                   "ADJUSTING_POSITION",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionPalmControlState_AdjustingPosition_inline",
                   "The aircraft's position is being adjusted by the moving palm.",
            ],
            [
                   "The aircraft's position is being adjusted by the moving palm.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionPalmControlState_AdjustingPosition_inline",
                   "",
            ],
            [
                   "PALM_CONTROL_STOPPED",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionPalmControlState_PalmControlStopped_inline",
                   "PalmControl is stopped. PalmControl can be stopped by moving the sticks on the physical remote  controller or sending commands through `MobileRemoteController` when the physical remote  controller is absent.",
            ],
            [
                   "PalmControl is stopped. PalmControl can be stopped by moving the sticks on the physical remote  controller or sending commands through `MobileRemoteController` when the physical remote  controller is absent.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionPalmControlState_PalmControlStopped_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionPalmControlState_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/IntelligentFlightAssistant/DJIIntelligentFlightAssistant.html",
                   "#DJIVisionDetectionState_DJIVisionPalmControlState_Unknown_inline",
                   "",
            ],
            [
                   "onValueChange",
                   2,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_KeyListener_Interface_onValueChange_inline",
                   "The callback, called every time the value behind a key is updated.  @param oldValue The old value. `null` if no value was present before. @param newValue The new value. `null` if the stored values are being flushed.",
            ],
            [
                   "The callback, called every time the value behind a key is updated.  @param oldValue The old value. `null` if no value was present before. @param newValue The new value. `null` if the stored values are being flushed.",
                   1,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_KeyListener_Interface_onValueChange_inline",
                   "",
            ],
            [
                   "getValue",
                   2,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_getValueForKey_inline",
                   "Returns the latest known value if available for the key.  Does not pull it from the product if unavailable.  @param key An instance of `DJIKey`.  @return The value associated with the key.",
            ],
            [
                   "Returns the latest known value if available for the key.  Does not pull it from the product if unavailable.  @param key An instance of `DJIKey`.  @return The value associated with the key.",
                   1,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_getValueForKey_inline",
                   "",
            ],
            [
                   "getValue",
                   2,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_getValueForKeywithCompletion_inline",
                   "Performs a get on a gettable key, pulling the information from the product if necessary.  @param key A valid gettable key @param callback A valid get callback.",
            ],
            [
                   "Performs a get on a gettable key, pulling the information from the product if necessary.  @param key A valid gettable key @param callback A valid get callback.",
                   1,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_getValueForKeywithCompletion_inline",
                   "",
            ],
            [
                   "setValue",
                   2,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_setValueForKeyWithCompletion_inline",
                   "Performs a set on a settable key, changing attributes on the  connected product.  @param value A value object relevant to the given key @param key A valid settable key @param callback A set callback.",
            ],
            [
                   "Performs a set on a settable key, changing attributes on the  connected product.  @param value A value object relevant to the given key @param key A valid settable key @param callback A set callback.",
                   1,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_setValueForKeyWithCompletion_inline",
                   "",
            ],
            [
                   "performAction",
                   2,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_performActionForKeyWithArgumentsAndCompletion_inline",
                   "Performs an action on an actionable key.  @param key A valid actionable key @param arguments Optional arguments relevant to the specific key @param callback An action callback.",
            ],
            [
                   "Performs an action on an actionable key.  @param key A valid actionable key @param arguments Optional arguments relevant to the specific key @param callback An action callback.",
                   1,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_performActionForKeyWithArgumentsAndCompletion_inline",
                   "",
            ],
            [
                   "addListener",
                   2,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_startListeningForChangesOnKeuyWithListenerAndUpdateBlock_inline",
                   "Subscribes the listener object to all changes of value on the given  key.  @param key A valid value-based key (get, set and/or action) @param listener A valid object to hold the subscription",
            ],
            [
                   "Subscribes the listener object to all changes of value on the given  key.  @param key A valid value-based key (get, set and/or action) @param listener A valid object to hold the subscription",
                   1,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_startListeningForChangesOnKeuyWithListenerAndUpdateBlock_inline",
                   "",
            ],
            [
                   "removeListener",
                   2,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_stopListeningOnKeyOfListener_inline",
                   "Stops the subscription to updates of a specific key value for a  specific listener. Does not affect other listeners subscribing to  this key or other subscriptions of the `listener`.  @param listener The listener object passed at the moment of calling startListening.",
            ],
            [
                   "Stops the subscription to updates of a specific key value for a  specific listener. Does not affect other listeners subscribing to  this key or other subscriptions of the `listener`.  @param listener The listener object passed at the moment of calling startListening.",
                   1,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_stopListeningOnKeyOfListener_inline",
                   "",
            ],
            [
                   "create",
                   2,
                   "/Components/KeyManager/DJIAirLinkKey.html",
                   "#DJIAirLinkKey_create_AirLink_inline",
                   "Creates an AirLink key.  @param paramKey A valid paramKey  @return AirLink Key",
            ],
            [
                   "Creates an AirLink key.  @param paramKey A valid paramKey  @return AirLink Key",
                   1,
                   "/Components/KeyManager/DJIAirLinkKey.html",
                   "#DJIAirLinkKey_create_AirLink_inline",
                   "",
            ],
            [
                   "createWiFiLinkKey",
                   2,
                   "/Components/KeyManager/DJIAirLinkKey.html",
                   "#DJIAirLinkKey_create_WIFILink_inline",
                   "Creates a WIFILink key.  @param paramKey A valid paramKey  @return WiFiLink Key",
            ],
            [
                   "Creates a WIFILink key.  @param paramKey A valid paramKey  @return WiFiLink Key",
                   1,
                   "/Components/KeyManager/DJIAirLinkKey.html",
                   "#DJIAirLinkKey_create_WIFILink_inline",
                   "",
            ],
            [
                   "createLightbridgeLinkKey",
                   2,
                   "/Components/KeyManager/DJIAirLinkKey.html",
                   "#DJIAirLinkKey_create_LBLink_inline",
                   "Creates a LBLink key.  @param paramKey A valid paramKey  @return LBLink Key",
            ],
            [
                   "Creates a LBLink key.  @param paramKey A valid paramKey  @return LBLink Key",
                   1,
                   "/Components/KeyManager/DJIAirLinkKey.html",
                   "#DJIAirLinkKey_create_LBLink_inline",
                   "",
            ],
            [
                   "createOcuSyncLinkKey",
                   2,
                   "/Components/KeyManager/DJIAirLinkKey.html",
                   "#DJIAirLinkKey_create_OcuSyncLink_inline",
                   "Creates an OcuSyncLink key.  @param paramKey A valid paramKey  @return OcuSyncLink Key",
            ],
            [
                   "Creates an OcuSyncLink key.  @param paramKey A valid paramKey  @return OcuSyncLink Key",
                   1,
                   "/Components/KeyManager/DJIAirLinkKey.html",
                   "#DJIAirLinkKey_create_OcuSyncLink_inline",
                   "",
            ],
            [
                   "create",
                   2,
                   "/Components/KeyManager/DJIBatteryKey.html",
                   "#DJIBatteryKey_create_inline",
                   "Creates a Battery key.  @param paramKey A valid paramKey  @return Battery Key",
            ],
            [
                   "Creates a Battery key.  @param paramKey A valid paramKey  @return Battery Key",
                   1,
                   "/Components/KeyManager/DJIBatteryKey.html",
                   "#DJIBatteryKey_create_inline",
                   "",
            ],
            [
                   "create",
                   2,
                   "/Components/KeyManager/DJIBatteryKey.html",
                   "#DJIBatteryKey_create_with_index_inline",
                   "Creates a battery key at selected index. Use this when the product supports multiple batteries.  @param paramKey A valid paramKey @param componentIndex The index of the Battery component.  @return Battery Key",
            ],
            [
                   "Creates a battery key at selected index. Use this when the product supports multiple batteries.  @param paramKey A valid paramKey @param componentIndex The index of the Battery component.  @return Battery Key",
                   1,
                   "/Components/KeyManager/DJIBatteryKey.html",
                   "#DJIBatteryKey_create_with_index_inline",
                   "",
            ],
            [
                   "create",
                   2,
                   "/Components/KeyManager/DJICameraKey.html",
                   "#DJICameraKey_create_inline",
                   "Creates a Camera key.  @param paramKey A valid paramKey  @return Camera Key",
            ],
            [
                   "Creates a Camera key.  @param paramKey A valid paramKey  @return Camera Key",
                   1,
                   "/Components/KeyManager/DJICameraKey.html",
                   "#DJICameraKey_create_inline",
                   "",
            ],
            [
                   "create",
                   2,
                   "/Components/KeyManager/DJICameraKey.html",
                   "#DJICameraKey_create_with_index_inline",
                   "Creates a Camera key at selected index. Use this when the product supports multiple cameras.  @param paramKey A valid paramKey @param componentIndex The index of the Camera component.  @return Camera Key",
            ],
            [
                   "Creates a Camera key at selected index. Use this when the product supports multiple cameras.  @param paramKey A valid paramKey @param componentIndex The index of the Camera component.  @return Camera Key",
                   1,
                   "/Components/KeyManager/DJICameraKey.html",
                   "#DJICameraKey_create_with_index_inline",
                   "",
            ],
            [
                   "create",
                   2,
                   "/Components/KeyManager/DJIFlightControllerKey.html",
                   "#DJIFlightControllerKey_create_inline",
                   "Creates a FlightController key.  @param paramKey A valid paramKey  @return FlightController Key",
            ],
            [
                   "Creates a FlightController key.  @param paramKey A valid paramKey  @return FlightController Key",
                   1,
                   "/Components/KeyManager/DJIFlightControllerKey.html",
                   "#DJIFlightControllerKey_create_inline",
                   "",
            ],
            [
                   "createFlightAssistantKey",
                   2,
                   "/Components/KeyManager/DJIFlightControllerKey.html",
                   "#DJIFlightControllerKey_create_FlightAssistant_inline",
                   "Creates a FlightAssistant key.  @param paramKey A valid paramKey  @return FlightAssistant Key",
            ],
            [
                   "Creates a FlightAssistant key.  @param paramKey A valid paramKey  @return FlightAssistant Key",
                   1,
                   "/Components/KeyManager/DJIFlightControllerKey.html",
                   "#DJIFlightControllerKey_create_FlightAssistant_inline",
                   "",
            ],
            [
                   "create",
                   2,
                   "/Components/KeyManager/DJIGimbalKey.html",
                   "#DJIGimbalKey_create_inline",
                   "Creates a Gimbal key.  @param paramKey A valid paramKey  @return Gimbal Key",
            ],
            [
                   "Creates a Gimbal key.  @param paramKey A valid paramKey  @return Gimbal Key",
                   1,
                   "/Components/KeyManager/DJIGimbalKey.html",
                   "#DJIGimbalKey_create_inline",
                   "",
            ],
            [
                   "create",
                   2,
                   "/Components/KeyManager/DJIProductKey.html",
                   "#DJIProductKey_create_inline",
                   "Creates a Product key.  @param paramKey A valid paramKey  @return Product Key",
            ],
            [
                   "Creates a Product key.  @param paramKey A valid paramKey  @return Product Key",
                   1,
                   "/Components/KeyManager/DJIProductKey.html",
                   "#DJIProductKey_create_inline",
                   "",
            ],
            [
                   "create",
                   2,
                   "/Components/KeyManager/DJIRemoteControllerKey.html",
                   "#DJIRemoteControllerKey_create_inline",
                   "Creates a RemoteControllerKey key.  @param paramKey A valid paramKey  @return Remote Controller Key",
            ],
            [
                   "Creates a RemoteControllerKey key.  @param paramKey A valid paramKey  @return Remote Controller Key",
                   1,
                   "/Components/KeyManager/DJIRemoteControllerKey.html",
                   "#DJIRemoteControllerKey_create_inline",
                   "",
            ],
            [
                   "create",
                   2,
                   "/Components/KeyManager/DJIHandheldControllerKey.html",
                   "#DJIHandheldControllerKey_create_inline",
                   "Creates a HandheldController key.  @param paramKey A valid paramKey  @return Handheld Controller Key",
            ],
            [
                   "Creates a HandheldController key.  @param paramKey A valid paramKey  @return Handheld Controller Key",
                   1,
                   "/Components/KeyManager/DJIHandheldControllerKey.html",
                   "#DJIHandheldControllerKey_create_inline",
                   "",
            ],
            [
                   "DJIKey",
                   2,
                   "/Components/KeyManager/DJIKey.html",
                   "",
                   "Base class of all keys to be used with the keyed interface and the `KeyManager`.",
            ],
            [
                   "Base class of all keys to be used with the keyed interface and the `KeyManager`.",
                   1,
                   "/Components/KeyManager/DJIKey.html",
                   "",
                   "",
            ],
            [
                   "BatteryKey",
                   2,
                   "/Components/KeyManager/DJIBatteryKey.html",
                   "",
                   "`BatteryKey` is a key dedicated to accessing Battery related attributes.",
            ],
            [
                   "`BatteryKey` is a key dedicated to accessing Battery related attributes.",
                   1,
                   "/Components/KeyManager/DJIBatteryKey.html",
                   "",
                   "",
            ],
            [
                   "CameraKey",
                   2,
                   "/Components/KeyManager/DJICameraKey.html",
                   "",
                   "`CameraKey` is an object dedicated to providing access to Camera  related attributes.",
            ],
            [
                   "`CameraKey` is an object dedicated to providing access to Camera  related attributes.",
                   1,
                   "/Components/KeyManager/DJICameraKey.html",
                   "",
                   "",
            ],
            [
                   "FlightControllerKey",
                   2,
                   "/Components/KeyManager/DJIFlightControllerKey.html",
                   "",
                   "`FlightControllerKey` provides dedicated access to Flight  controller attributes.",
            ],
            [
                   "`FlightControllerKey` provides dedicated access to Flight  controller attributes.",
                   1,
                   "/Components/KeyManager/DJIFlightControllerKey.html",
                   "",
                   "",
            ],
            [
                   "GimbalKey",
                   2,
                   "/Components/KeyManager/DJIGimbalKey.html",
                   "",
                   "`GimbalKey` is an object providing access to Gimbal attributes.",
            ],
            [
                   "`GimbalKey` is an object providing access to Gimbal attributes.",
                   1,
                   "/Components/KeyManager/DJIGimbalKey.html",
                   "",
                   "",
            ],
            [
                   "ProductKey",
                   2,
                   "/Components/KeyManager/DJIProductKey.html",
                   "",
                   "`ProductKey` represent keys which are global to the whole product.",
            ],
            [
                   "`ProductKey` represent keys which are global to the whole product.",
                   1,
                   "/Components/KeyManager/DJIProductKey.html",
                   "",
                   "",
            ],
            [
                   "RemoteControllerKey",
                   2,
                   "/Components/KeyManager/DJIRemoteControllerKey.html",
                   "",
                   "`RemoteControllerKey` provides dedicated access to remote controller attributes.",
            ],
            [
                   "`RemoteControllerKey` provides dedicated access to remote controller attributes.",
                   1,
                   "/Components/KeyManager/DJIRemoteControllerKey.html",
                   "",
                   "",
            ],
            [
                   "HandheldControllerKey",
                   2,
                   "/Components/KeyManager/DJIHandheldControllerKey.html",
                   "",
                   "`HandheldControllerKey` provides dedicated access to all handheld  controller attributes.",
            ],
            [
                   "`HandheldControllerKey` provides dedicated access to all handheld  controller attributes.",
                   1,
                   "/Components/KeyManager/DJIHandheldControllerKey.html",
                   "",
                   "",
            ],
            [
                   "AirLinkKey",
                   2,
                   "/Components/KeyManager/DJIAirLinkKey.html",
                   "",
                   "`AirLinkKey` provides dedicated access to all communication  to the product attributes.",
            ],
            [
                   "`AirLinkKey` provides dedicated access to all communication  to the product attributes.",
                   1,
                   "/Components/KeyManager/DJIAirLinkKey.html",
                   "",
                   "",
            ],
            [
                   "GetCallback",
                   2,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_GetCallback_Interface_inline",
                   "Callback called when performing a get on a key.",
            ],
            [
                   "Callback called when performing a get on a key.",
                   1,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_GetCallback_Interface_inline",
                   "",
            ],
            [
                   "onSuccess",
                   2,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_GetCallback_Interface_onSuccess_inline",
                   "Invoked when getting process is done successfully.  @param value The value returned back.",
            ],
            [
                   "Invoked when getting process is done successfully.  @param value The value returned back.",
                   1,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_GetCallback_Interface_onSuccess_inline",
                   "",
            ],
            [
                   "onFailure",
                   2,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_GetCallback_Interface_onFailure_inline",
                   "Invoked when getting process has failed.  @param error The error that occurred.",
            ],
            [
                   "Invoked when getting process has failed.  @param error The error that occurred.",
                   1,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_GetCallback_Interface_onFailure_inline",
                   "",
            ],
            [
                   "SetCallback",
                   2,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_SetCallback_Interface_inline",
                   "Callback called when performing a set on a key.",
            ],
            [
                   "Callback called when performing a set on a key.",
                   1,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_SetCallback_Interface_inline",
                   "",
            ],
            [
                   "onSuccess",
                   2,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_SetCallback_Interface_onSuccess_inline",
                   "Invoked when setting process is done successfully.",
            ],
            [
                   "Invoked when setting process is done successfully.",
                   1,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_SetCallback_Interface_onSuccess_inline",
                   "",
            ],
            [
                   "onFailure",
                   2,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_SetCallback_Interface_onFailure_inline",
                   "Invoked when setting process has failed.  @param error The error that occurred.",
            ],
            [
                   "Invoked when setting process has failed.  @param error The error that occurred.",
                   1,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_SetCallback_Interface_onFailure_inline",
                   "",
            ],
            [
                   "ActionCallback",
                   2,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_ActionCallback_Interface_inline",
                   "Callback called when performing an action on a key.",
            ],
            [
                   "Callback called when performing an action on a key.",
                   1,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_ActionCallback_Interface_inline",
                   "",
            ],
            [
                   "onSuccess",
                   2,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_ActionCallback_Interface_onSuccess_inline",
                   "Invoked when the action is done successfully.",
            ],
            [
                   "Invoked when the action is done successfully.",
                   1,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_ActionCallback_Interface_onSuccess_inline",
                   "",
            ],
            [
                   "onFailure",
                   2,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_ActionCallback_Interface_onFailure_inline",
                   "Invoked when the action has failed.  @param error The error that occurred.",
            ],
            [
                   "Invoked when the action has failed.  @param error The error that occurred.",
                   1,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_ActionCallback_Interface_onFailure_inline",
                   "",
            ],
            [
                   "KeyListener",
                   2,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_DJIKeyedListenerUpdateBlock_inline",
                   "Interface to check if the value behind a key is updated.",
            ],
            [
                   "Interface to check if the value behind a key is updated.",
                   1,
                   "/Components/KeyManager/DJIKeyManager.html",
                   "#DJIKeyManager_DJIKeyedListenerUpdateBlock_inline",
                   "",
            ],
            [
                   "isGestureModeEnabled",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_isGestureModeEnabled_inline",
                   "`true` if gesture mode is enabled. Value is undefined if  the `getCurrentState` is one of the following:  - `NOT_SUPPORT`  - `DISCONNECTED`   - `RECOVERING`  @return `true` if the product supports gesture mode. ",
            ],
            [
                   "`true` if gesture mode is enabled. Value is undefined if  the `getCurrentState` is one of the following:  - `NOT_SUPPORT`  - `DISCONNECTED`   - `RECOVERING`  @return `true` if the product supports gesture mode. ",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_isGestureModeEnabled_inline",
                   "",
            ],
            [
                   "addListener",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_addListener_inline",
                   "Add a listener to listen to events in the ActiveTrack operator.  @param listener Listener that is interested in the ActiveTrack mission operator events.",
            ],
            [
                   "Add a listener to listen to events in the ActiveTrack operator.  @param listener Listener that is interested in the ActiveTrack mission operator events.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_addListener_inline",
                   "",
            ],
            [
                   "removeListener",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_removeListener_inline",
                   "Removes listener. The listener will not receive any update after  calling this method.  @param listener Listener to be removed.",
            ],
            [
                   "Removes listener. The listener will not receive any update after  calling this method.  @param listener Listener to be removed.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_removeListener_inline",
                   "",
            ],
            [
                   "removeAllListeners",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_removeAllListeners_inline",
                   "Remove all listeners.",
            ],
            [
                   "Remove all listeners.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_removeAllListeners_inline",
                   "",
            ],
            [
                   "setGestureModeEnabled",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_setGestureModeEnabled_inline",
                   "Enables/disables gesture mode.  - A human subject can be automatically  detected if they are moving a little (instead of requiring a defining rectangle)  - The human subject can accept the confirmation to track them by waving their arms.  - The tracked human can make the camera shoot a photo by showing a rectangle with their thumbs and index fingers to the aircraft.  Gesture mode can only be enabled  when the aircraft is flying but not tracking a target. The `getCurrentState` should be one of the following:  - `IDLE`  - `CANNOT_START` After the gesture mode is enabled, `getCurrentState` will become `DETECTING_HUMAN`.  Gesture mode can be disabled when `getCurrentState`  is not any of the following:  - `UNKNOWN`  - `DISCONNECTED`  - `RECOVERING`  - ``DJIActiveTrackMissionState_NotSupported`  If the aircraft is already tracking a target, disabling gesture mode will  stop the ActiveTrack mission.  @param enabled `true` to enable gesture mode. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Enables/disables gesture mode.  - A human subject can be automatically  detected if they are moving a little (instead of requiring a defining rectangle)  - The human subject can accept the confirmation to track them by waving their arms.  - The tracked human can make the camera shoot a photo by showing a rectangle with their thumbs and index fingers to the aircraft.  Gesture mode can only be enabled  when the aircraft is flying but not tracking a target. The `getCurrentState` should be one of the following:  - `IDLE`  - `CANNOT_START` After the gesture mode is enabled, `getCurrentState` will become `DETECTING_HUMAN`.  Gesture mode can be disabled when `getCurrentState`  is not any of the following:  - `UNKNOWN`  - `DISCONNECTED`  - `RECOVERING`  - ``DJIActiveTrackMissionState_NotSupported`  If the aircraft is already tracking a target, disabling gesture mode will  stop the ActiveTrack mission.  @param enabled `true` to enable gesture mode. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_setGestureModeEnabled_inline",
                   "",
            ],
            [
                   "canStartTracking",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_canStartMission_inline",
                   "Checks if the operator can start the mission.  @param mission An ActiveTrack mission.  @return The possible error if the operator tries to start the mission.",
            ],
            [
                   "Checks if the operator can start the mission.  @param mission An ActiveTrack mission.  @return The possible error if the operator tries to start the mission.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_canStartMission_inline",
                   "",
            ],
            [
                   "startTracking",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_startMission_inline",
                   "Starts to execute a ActiveTrack mission. It can only be called when the `getCurrentState` is  `IDLE`. If a mission with  `TRACE` or  `PROFILE` is started  successfully, the `getCurrentState`  will become one of the following:  - `WAITING_FOR_CONFIRMATION`  - `CANNOT_CONFIRM`  If a mission with  `SPOTLIGHT` or  `SPOTLIGHT_PRO` is started  successfully, the `getCurrentState` will  become `ONLY_CAMERA_FOLLOWING`.  @param mission The ActiveTrack mission to check. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Starts to execute a ActiveTrack mission. It can only be called when the `getCurrentState` is  `IDLE`. If a mission with  `TRACE` or  `PROFILE` is started  successfully, the `getCurrentState`  will become one of the following:  - `WAITING_FOR_CONFIRMATION`  - `CANNOT_CONFIRM`  If a mission with  `SPOTLIGHT` or  `SPOTLIGHT_PRO` is started  successfully, the `getCurrentState` will  become `ONLY_CAMERA_FOLLOWING`.  @param mission The ActiveTrack mission to check. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_startMission_inline",
                   "",
            ],
            [
                   "stopTracking",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_stopMission_inline",
                   "Stops the executing mission. It can only be called when the  `getCurrentState` is one of the following:  - `WAITING_FOR_CONFIRMATION`  - `CANNOT_CONFIRM`  - `AIRCRAFT_FOLLOWING`  - `ONLY_CAMERA_FOLLOWING`  - `FINDING_TRACKED_TARGET`  After a mission is  stopped successfully, `getCurrentState` will become  `IDLE` or  `DETECTING_HUMAN` if gesture mode is enabled.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Stops the executing mission. It can only be called when the  `getCurrentState` is one of the following:  - `WAITING_FOR_CONFIRMATION`  - `CANNOT_CONFIRM`  - `AIRCRAFT_FOLLOWING`  - `ONLY_CAMERA_FOLLOWING`  - `FINDING_TRACKED_TARGET`  After a mission is  stopped successfully, `getCurrentState` will become  `IDLE` or  `DETECTING_HUMAN` if gesture mode is enabled.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_stopMission_inline",
                   "",
            ],
            [
                   "acceptConfirmation",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_acceptConfirmation_inline",
                   "When the vision system is not sure the tracking rectangle is around the user's desired target, it will need confirmation before starting to fly relative to the target. The vision system will need confirmation when  `getCurrentState` is `IDLE`.  `getTargetRect` of `ActiveTrackTrackingState` can  be used to show the user the rectangle the vision system is using. If the user  agrees the rectangle represents the target they want to track, this method can be  called to start flying relative to the target.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "When the vision system is not sure the tracking rectangle is around the user's desired target, it will need confirmation before starting to fly relative to the target. The vision system will need confirmation when  `getCurrentState` is `IDLE`.  `getTargetRect` of `ActiveTrackTrackingState` can  be used to show the user the rectangle the vision system is using. If the user  agrees the rectangle represents the target they want to track, this method can be  called to start flying relative to the target.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_acceptConfirmation_inline",
                   "",
            ],
            [
                   "rejectConfirmation",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_rejectConfirmation_inline",
                   "Rejects the target rectangle from the aircraft.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Rejects the target rectangle from the aircraft.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_rejectConfirmation_inline",
                   "",
            ],
            [
                   "stopAircraftFollowing",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_stopAircraftFollowing_inline",
                   "Stops the aircraft from following the target and ask for user confirmation again.  It can only be called when the `getCurrentState` is `AIRCRAFT_FOLLOWING`. After it is called successfully,  `getCurrentState` will become  `WAITING_FOR_CONFIRMATION`.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Stops the aircraft from following the target and ask for user confirmation again.  It can only be called when the `getCurrentState` is `AIRCRAFT_FOLLOWING`. After it is called successfully,  `getCurrentState` will become  `WAITING_FOR_CONFIRMATION`.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_stopAircraftFollowing_inline",
                   "",
            ],
            [
                   "setCircularSpeed",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_setCircularSpeed_inline",
                   "Setting a non-zero speed starts the aircraft circling the target. Speed can be set within the range [-5, 5] m/s where a positive speed is a counter-clockwise movement (when viewing from the top). Reverting the speed to 0 m/s ends the circling movement. It can only be called when the `getCurrentState`  is `AIRCRAFT_FOLLOWING` .  @param speed Circular speed to set in m/s. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Setting a non-zero speed starts the aircraft circling the target. Speed can be set within the range [-5, 5] m/s where a positive speed is a counter-clockwise movement (when viewing from the top). Reverting the speed to 0 m/s ends the circling movement. It can only be called when the `getCurrentState`  is `AIRCRAFT_FOLLOWING` .  @param speed Circular speed to set in m/s. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_setCircularSpeed_inline",
                   "",
            ],
            [
                   "getCircularSpeed",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_getCircularSpeed_inline",
                   "In an ActiveTrack mission, the aircraft can be set to circle the target while following it. This method returns the circular speed of the aircraft in m/s.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "In an ActiveTrack mission, the aircraft can be set to circle the target while following it. This method returns the circular speed of the aircraft in m/s.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_getCircularSpeed_inline",
                   "",
            ],
            [
                   "switchMode",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_switchMode_inline",
                   "Changes the ActiveTrack mode on the currently executing mission. It can only  be called when the `getCurrentState` is one of the  following:  - `WAITING_FOR_CONFIRMATION`  - `CANNOT_CONFIRM`  - `ONLY_CAMERA_FOLLOWING`  - `FINDING_TRACKED_TARGET`  If the current state  is `AIRCRAFT_FOLLOWING`,  `stopAircraftFollowing` should be called before  switching the mode. Also, The ActiveTrack mode can only be changed when gesture  mode is disabled.  @param mode Active track mode to change. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Changes the ActiveTrack mode on the currently executing mission. It can only  be called when the `getCurrentState` is one of the  following:  - `WAITING_FOR_CONFIRMATION`  - `CANNOT_CONFIRM`  - `ONLY_CAMERA_FOLLOWING`  - `FINDING_TRACKED_TARGET`  If the current state  is `AIRCRAFT_FOLLOWING`,  `stopAircraftFollowing` should be called before  switching the mode. Also, The ActiveTrack mode can only be changed when gesture  mode is disabled.  @param mode Active track mode to change. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_switchMode_inline",
                   "",
            ],
            [
                   "setRecommendedConfiguration",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_setRecommendedConfiguration_inline",
                   "Sets the recommended camera and gimbal configuration that optimizes performance for the ActiveTrack Mission in most environments.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the recommended camera and gimbal configuration that optimizes performance for the ActiveTrack Mission in most environments.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_setRecommendedConfiguration_inline",
                   "",
            ],
            [
                   "setRetreatEnabled",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_setRetreatEnabled_inline",
                   "Enables/disable if the aircraft can retreat (fly backwards) when the target comes toward it. When it is disabled, the aircraft will not retreat and instead rotate the gimbal pitch down to track the target as it goes underneath. If the target goes beyond the gimbal's pitch stop, the target will be lost and the mission  will stop.  @param enabled `true` to enable retreat during ActiveTrack mission. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Enables/disable if the aircraft can retreat (fly backwards) when the target comes toward it. When it is disabled, the aircraft will not retreat and instead rotate the gimbal pitch down to track the target as it goes underneath. If the target goes beyond the gimbal's pitch stop, the target will be lost and the mission  will stop.  @param enabled `true` to enable retreat during ActiveTrack mission. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_setRetreatEnabled_inline",
                   "",
            ],
            [
                   "getRetreatEnabled",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_getRetreatEanbled_inline",
                   "Gets if retreat is enabled in ActiveTrack mission.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Gets if retreat is enabled in ActiveTrack mission.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#DJIActiveTrackMissionOperator_getRetreatEanbled_inline",
                   "",
            ],
            [
                   "ActiveTrackMission",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "",
                   "ActiveTrack Mission allows an aircraft to track a moving subject using the vision system and without a GPS tracker on the subject.",
            ],
            [
                   "ActiveTrack Mission allows an aircraft to track a moving subject using the vision system and without a GPS tracker on the subject.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "",
                   "",
            ],
            [
                   "ActiveTrackMissionEvent",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionEvent.html",
                   "",
                   "This class encapsulates all the state changes of the ActiveTrack mission operator.",
            ],
            [
                   "This class encapsulates all the state changes of the ActiveTrack mission operator.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionEvent.html",
                   "",
                   "",
            ],
            [
                   "ActiveTrackMissionOperatorListener",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#ActiveTrackMissionOperatorListener_inline",
                   "Listener interface used to listen to ActiveTrack mission events.",
            ],
            [
                   "Listener interface used to listen to ActiveTrack mission events.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#ActiveTrackMissionOperatorListener_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#ActiveTrackMissionOperatorListener_onUpdate_inline",
                   "Called when an event occurs in the ActiveTrack mission.  @param event An object of `ActiveTrackMissionEvent`.",
            ],
            [
                   "Called when an event occurs in the ActiveTrack mission.  @param event An object of `ActiveTrackMissionEvent`.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionOperator.html",
                   "#ActiveTrackMissionOperatorListener_onUpdate_inline",
                   "",
            ],
            [
                   "getPreviousState",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionEvent.html",
                   "#DJIActiveTrackMissionEvent_previousState_inline",
                   "The previous state of the operator.  @return An object of `ActiveTrackState`.",
            ],
            [
                   "The previous state of the operator.  @return An object of `ActiveTrackState`.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionEvent.html",
                   "#DJIActiveTrackMissionEvent_previousState_inline",
                   "",
            ],
            [
                   "getCurrentState",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionEvent.html",
                   "#DJIActiveTrackMissionEvent_currentState_inline",
                   "The current state of the operator.  @return An object of `ActiveTrackState`.",
            ],
            [
                   "The current state of the operator.  @return An object of `ActiveTrackState`.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionEvent.html",
                   "#DJIActiveTrackMissionEvent_currentState_inline",
                   "",
            ],
            [
                   "getTrackingState",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionEvent.html",
                   "#DJIActiveTrackMissionEvent_trackingState_inline",
                   "The tracking state of the executing ActiveTrack mission. It is only valid  when `getCurrentState` is one of the following:  - `WAITING_FOR_CONFIRMATION`  - `CANNOT_CONFIRM`  - `AIRCRAFT_FOLLOWING`  - `ONLY_CAMERA_FOLLOWING`  For the other states, it is `null`.  @return An object of `ActiveTrackTrackingState`.",
            ],
            [
                   "The tracking state of the executing ActiveTrack mission. It is only valid  when `getCurrentState` is one of the following:  - `WAITING_FOR_CONFIRMATION`  - `CANNOT_CONFIRM`  - `AIRCRAFT_FOLLOWING`  - `ONLY_CAMERA_FOLLOWING`  For the other states, it is `null`.  @return An object of `ActiveTrackTrackingState`.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionEvent.html",
                   "#DJIActiveTrackMissionEvent_trackingState_inline",
                   "",
            ],
            [
                   "getError",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionEvent.html",
                   "#DJIActiveTrackMissionEvent_error_inline",
                   "The encountered error if there is any. Otherwise, it is `null`.  @return An error of `DJIError`.",
            ],
            [
                   "The encountered error if there is any. Otherwise, it is `null`.  @return An error of `DJIError`.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionEvent.html",
                   "#DJIActiveTrackMissionEvent_error_inline",
                   "",
            ],
            [
                   "ActiveTrackState",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "",
                   "All the possible states of `ActiveTrackOperator`.",
            ],
            [
                   "All the possible states of `ActiveTrackOperator`.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_Unknown_inline",
                   "The state of the operator is unknown. It is the initial state when the  operator is just created.",
            ],
            [
                   "The state of the operator is unknown. It is the initial state when the  operator is just created.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_Unknown_inline",
                   "",
            ],
            [
                   "DISCONNECTED",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_Disconnected_inline",
                   "The connection between the mobile device and aircraft is broken.",
            ],
            [
                   "The connection between the mobile device and aircraft is broken.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_Disconnected_inline",
                   "",
            ],
            [
                   "RECOVERING",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_Recovering_inline",
                   "The connection between the mobile device and aircraft is recovering.  In this state, the operator is synchronizing the state from the aircraft.",
            ],
            [
                   "The connection between the mobile device and aircraft is recovering.  In this state, the operator is synchronizing the state from the aircraft.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_Recovering_inline",
                   "",
            ],
            [
                   "NOT_SUPPORT",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_NotSupported_inline",
                   "The connected product does not support ActiveTrack mission.",
            ],
            [
                   "The connected product does not support ActiveTrack mission.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_NotSupported_inline",
                   "",
            ],
            [
                   "CANNOT_START",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_CannotStart_inline",
                   "There is existing error stopping any ActiveTrack mission to start.",
            ],
            [
                   "There is existing error stopping any ActiveTrack mission to start.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_CannotStart_inline",
                   "",
            ],
            [
                   "DETECTING_HUMAN",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_DetectingHuman_inline",
                   "Gesture mode is enabled and the aircraft is looking for a target automatically. If a target is found, the operator will go to state `WAITING_FOR_CONFIRMATION` or `CANNOT_CONFIRM`.",
            ],
            [
                   "Gesture mode is enabled and the aircraft is looking for a target automatically. If a target is found, the operator will go to state `WAITING_FOR_CONFIRMATION` or `CANNOT_CONFIRM`.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_DetectingHuman_inline",
                   "",
            ],
            [
                   "WAITING_FOR_CONFIRMATION",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_WaitingForConfirmation_inline",
                   "Target is found. Camera is already tracking the target. In order to make the aircraft follow the target, the confirmation from user is required. Once the target is confirmed, the state will become  `AIRCRAFT_FOLLOWING`.",
            ],
            [
                   "Target is found. Camera is already tracking the target. In order to make the aircraft follow the target, the confirmation from user is required. Once the target is confirmed, the state will become  `AIRCRAFT_FOLLOWING`.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_WaitingForConfirmation_inline",
                   "",
            ],
            [
                   "CANNOT_CONFIRM",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_CannotConfirm_inline",
                   "Target is found. Camera is already tracking the target but there is an error stopping the aircraft to follow the target. Use `getReason`  in `ActiveTrackTrackingState` to check the reason.",
            ],
            [
                   "Target is found. Camera is already tracking the target but there is an error stopping the aircraft to follow the target. Use `getReason`  in `ActiveTrackTrackingState` to check the reason.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_CannotConfirm_inline",
                   "",
            ],
            [
                   "AIRCRAFT_FOLLOWING",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_AircraftFollowing_inline",
                   "Target is found. Camera is already tracking the target and the aircraft is following the target.",
            ],
            [
                   "Target is found. Camera is already tracking the target and the aircraft is following the target.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_AircraftFollowing_inline",
                   "",
            ],
            [
                   "ONLY_CAMERA_FOLLOWING",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_OnlyCameraFollowing_inline",
                   "The operator is executing an ActiveTrack mission in Splotlight mode or Spotlight Pro mode. The target is found and camera is following the target.",
            ],
            [
                   "The operator is executing an ActiveTrack mission in Splotlight mode or Spotlight Pro mode. The target is found and camera is following the target.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_OnlyCameraFollowing_inline",
                   "",
            ],
            [
                   "PERFORMING_QUICK_SHOT",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_QuickShot_inline",
                   "The operator is executing a QuickShot ActiveTrack mission.",
            ],
            [
                   "The operator is executing a QuickShot ActiveTrack mission.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_QuickShot_inline",
                   "",
            ],
            [
                   "FINDING_TRACKED_TARGET",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_FindingTrackedTarget_inline",
                   "ActiveTrack is started but the target is lost. The vision system is detecting the previously found target.",
            ],
            [
                   "ActiveTrack is started but the target is lost. The vision system is detecting the previously found target.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_FindingTrackedTarget_inline",
                   "",
            ],
            [
                   "IDLE",
                   2,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_IDLE_inline",
                   "The mission is idle.",
            ],
            [
                   "The mission is idle.",
                   1,
                   "/Components/Missions/DJIActiveTrackMissionState.html",
                   "#DJIActiveTrackMissionState_IDLE_inline",
                   "",
            ],
            [
                   "setTargetRect",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_targetRect_inline",
                   "A bounding box for the target. The rectangle is normalized to [0,1] where (0,0) is the top left of the video preview and (1,1) is the bottom right. The `size` parameter of `CGRect` can be set to 0 to initialize the mission with a point instead of a rectangle. If the mission is initialized with a point, the vision system will try to recognize the object around the point and return the representative  rect in the status delegate.  @param targetRect A RectF object.",
            ],
            [
                   "A bounding box for the target. The rectangle is normalized to [0,1] where (0,0) is the top left of the video preview and (1,1) is the bottom right. The `size` parameter of `CGRect` can be set to 0 to initialize the mission with a point instead of a rectangle. If the mission is initialized with a point, the vision system will try to recognize the object around the point and return the representative  rect in the status delegate.  @param targetRect A RectF object.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_targetRect_inline",
                   "",
            ],
            [
                   "getTargetRect",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_getTargetRect_inline",
                   "Get RectF object that represents target  @return A RectF object.",
            ],
            [
                   "Get RectF object that represents target  @return A RectF object.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_getTargetRect_inline",
                   "",
            ],
            [
                   "setMode",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_mode_inline",
                   "ActiveTrack Mission mode. Defaults to `TRACE`.  @param mode An enum value of `ActiveTrackMode`.",
            ],
            [
                   "ActiveTrack Mission mode. Defaults to `TRACE`.  @param mode An enum value of `ActiveTrackMode`.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_mode_inline",
                   "",
            ],
            [
                   "getQuickShotMode",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_quickShotMode_inline",
                   "The QuickShot mode determines the preset flight path. It is only used when `setMode`  is `QUICK_SHOT`.  Defaults to `UNKNOWN`.  It is only supported by Spark.  @return An enum value of `QuickShotMode`.",
            ],
            [
                   "The QuickShot mode determines the preset flight path. It is only used when `setMode`  is `QUICK_SHOT`.  Defaults to `UNKNOWN`.  It is only supported by Spark.  @return An enum value of `QuickShotMode`.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_quickShotMode_inline",
                   "",
            ],
            [
                   "setQuickShotMode",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_setQuickShotMode_inline",
                   "Set the QuickShot mode. It is only supported by Spark.  @param quickShotMode An enum value of `QuickShotMode`.",
            ],
            [
                   "Set the QuickShot mode. It is only supported by Spark.  @param quickShotMode An enum value of `QuickShotMode`.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_setQuickShotMode_inline",
                   "",
            ],
            [
                   "ActiveTrackMission",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_constructor_inline",
                   "A constructor method for ActiveTrackMission.  @param targetRect The target rect. @param mode An enum value of `ActiveTrackMode`.",
            ],
            [
                   "A constructor method for ActiveTrackMission.  @param targetRect The target rect. @param mode An enum value of `ActiveTrackMode`.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_constructor_inline",
                   "",
            ],
            [
                   "getMode",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_getMode_inline",
                   "Get the current ActiveTrack mode for ActiveTrack mission.  @return An enum value of `ActiveTrackMode`.",
            ],
            [
                   "Get the current ActiveTrack mode for ActiveTrack mission.  @return An enum value of `ActiveTrackMode`.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_getMode_inline",
                   "",
            ],
            [
                   "getTargetIndex",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_getTargetIndex_inline",
                   "Get Target Index.  @return An int value of target index.",
            ],
            [
                   "Get Target Index.  @return An int value of target index.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_getTargetIndex_inline",
                   "",
            ],
            [
                   "ActiveTrackTrackingState",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "",
                   "The tracking state of the ActiveTrack mission that is executing.",
            ],
            [
                   "The tracking state of the ActiveTrack mission that is executing.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "",
                   "",
            ],
            [
                   "getState",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTrackingState_state_inline",
                   "The state of the  being tracked.  @return An enum value of `ActiveTrackTargetState`.",
            ],
            [
                   "The state of the  being tracked.  @return An enum value of `ActiveTrackTargetState`.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTrackingState_state_inline",
                   "",
            ],
            [
                   "getType",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTrackingState_targetType_inline",
                   "The type of the target being tracked.  @return An enum value of `ActiveTrackTargetType`.",
            ],
            [
                   "The type of the target being tracked.  @return An enum value of `ActiveTrackTargetType`.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTrackingState_targetType_inline",
                   "",
            ],
            [
                   "getTargetRect",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTrackingState_targetRect_inline",
                   "A rectangle in the live video view image that represents the target being tracked.  The rectangle is normalized to [0,1] where (0,0) is the top left of the video  preview and (1,1) is the bottom right.  @return A RectF object.",
            ],
            [
                   "A rectangle in the live video view image that represents the target being tracked.  The rectangle is normalized to [0,1] where (0,0) is the top left of the video  preview and (1,1) is the bottom right.  @return A RectF object.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTrackingState_targetRect_inline",
                   "",
            ],
            [
                   "getTargetIndex",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTrackingState_targetIndex_inline",
                   "An int value of target index.  @return An int value of target index.",
            ],
            [
                   "An int value of target index.  @return An int value of target index.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTrackingState_targetIndex_inline",
                   "",
            ],
            [
                   "getReason",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTrackingState_cannotConfirmReason_inline",
                   "Reason why the target cannot be confirmed by the user. It is useful when `getState` is  `CANNOT_CONFIRM`.  Otherwise, it is  `NONE`.  @return An enum value of `ActiveTrackCannotConfirmReason`.",
            ],
            [
                   "Reason why the target cannot be confirmed by the user. It is useful when `getState` is  `CANNOT_CONFIRM`.  Otherwise, it is  `NONE`.  @return An enum value of `ActiveTrackCannotConfirmReason`.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTrackingState_cannotConfirmReason_inline",
                   "",
            ],
            [
                   "getCompletionPercentage",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTrackingState_progress_inline",
                   "The progress of the executing QuickShot mission. Only applicable when  `setMode` is `QUICK_SHOT`.  For other modes, it is always 0.  @return An int value of the progress.",
            ],
            [
                   "The progress of the executing QuickShot mission. Only applicable when  `setMode` is `QUICK_SHOT`.  For other modes, it is always 0.  @return An int value of the progress.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTrackingState_progress_inline",
                   "",
            ],
            [
                   "ActiveTrackCannotConfirmReason",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_inline",
                   "The reason why user is not allowed to confirm the current target.",
            ],
            [
                   "The reason why user is not allowed to confirm the current target.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_inline",
                   "",
            ],
            [
                   "NONE",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_None_inline",
                   "None.",
            ],
            [
                   "None.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_None_inline",
                   "",
            ],
            [
                   "UNSTABLE_TARGET",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_UnstableTarget_inline",
                   "The target is unstable.",
            ],
            [
                   "The target is unstable.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_UnstableTarget_inline",
                   "",
            ],
            [
                   "TARGET_TOO_HIGH",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_TargetTooHigh_inline",
                   "The target position is too high.",
            ],
            [
                   "The target position is too high.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_TargetTooHigh_inline",
                   "",
            ],
            [
                   "BLOCKED_BY_OBSTACLE",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_BlockedByObstacle_inline",
                   "There is an obstacle between the aircraft and the target that is blocking the target.",
            ],
            [
                   "There is an obstacle between the aircraft and the target that is blocking the target.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_BlockedByObstacle_inline",
                   "",
            ],
            [
                   "GIMBAL_ATTITUDE_ERROR",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_GimbalAttitudeError_inline",
                   "The gimbal's attitude is pointing to the ground.",
            ],
            [
                   "The gimbal's attitude is pointing to the ground.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_GimbalAttitudeError_inline",
                   "",
            ],
            [
                   "TARGET_TOO_FAR",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_TargetTooFar_inline",
                   "The target is too far away from the aircraft.",
            ],
            [
                   "The target is too far away from the aircraft.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_TargetTooFar_inline",
                   "",
            ],
            [
                   "TARGET_TOO_CLOSE",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_TargetTooClose_inline",
                   "The target is too close to the aircraft.",
            ],
            [
                   "The target is too close to the aircraft.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_TargetTooClose_inline",
                   "",
            ],
            [
                   "AIRCRAFT_TOO_HIGH",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_AircraftTooHigh_inline",
                   "The altitude of the aircraft is too high.",
            ],
            [
                   "The altitude of the aircraft is too high.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_AircraftTooHigh_inline",
                   "",
            ],
            [
                   "AIRCRAFT_TOO_LOW",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_AircraftTooLow_inline",
                   "The altitude of the aircraft is too low.",
            ],
            [
                   "The altitude of the aircraft is too low.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_AircraftTooLow_inline",
                   "",
            ],
            [
                   "OBSTACLE_SENSOR_ERROR",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_ObstacleSensorError_inline",
                   "The obstacle vision sensor has errors.",
            ],
            [
                   "The obstacle vision sensor has errors.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_ObstacleSensorError_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackCannotConfirmReason_Unknown_inline",
                   "",
            ],
            [
                   "ActiveTrackMode",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackMode_inline",
                   "Different modes of the ActiveTrack Mission. Defaults to  `TRACE`, set to  others to enable the feature.",
            ],
            [
                   "Different modes of the ActiveTrack Mission. Defaults to  `TRACE`, set to  others to enable the feature.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackMode_inline",
                   "",
            ],
            [
                   "TRACE",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackMode_Trace_inline",
                   "Aircraft moves in behind the subject keeping a constant distance to it.  Mission with this mode can only be started when the aircraft is flying.",
            ],
            [
                   "Aircraft moves in behind the subject keeping a constant distance to it.  Mission with this mode can only be started when the aircraft is flying.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackMode_Trace_inline",
                   "",
            ],
            [
                   "PROFILE",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackMode_Profile_inline",
                   "Aircraft moves in parallel with the subject in the frame instead of behind. Mission with this mode can only be started when the aircraft is flying.",
            ],
            [
                   "Aircraft moves in parallel with the subject in the frame instead of behind. Mission with this mode can only be started when the aircraft is flying.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackMode_Profile_inline",
                   "",
            ],
            [
                   "SPOTLIGHT",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackMode_Spotlight_inline",
                   "In Spotlight mode, the aircraft camera automatically follows the subject by rotating the aircraft's yaw, but the aircraft does not automatically keep a constant distance with the subject. Mission with this mode can only be started when the aircraft is flying.",
            ],
            [
                   "In Spotlight mode, the aircraft camera automatically follows the subject by rotating the aircraft's yaw, but the aircraft does not automatically keep a constant distance with the subject. Mission with this mode can only be started when the aircraft is flying.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackMode_Spotlight_inline",
                   "",
            ],
            [
                   "SPOTLIGHT_PRO",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackMode_SpotlightPro_inline",
                   "In Spotlight Pro mode, the aircraft camera automatically follows the subject by rotating the gimbal's yaw, but the aircraft does not automatically keep a constant  distance with the subject.",
            ],
            [
                   "In Spotlight Pro mode, the aircraft camera automatically follows the subject by rotating the gimbal's yaw, but the aircraft does not automatically keep a constant  distance with the subject.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackMode_SpotlightPro_inline",
                   "",
            ],
            [
                   "QUICK_SHOT",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackMode_QuickShot_inline",
                   "In QuickShot mode, the aircraft will fly in one of four preset paths (see `QuickShotMode`)  while tracking the object recording a video. When a QuickShot mission ends, a 10-second video will be  generated. It is only supported by Spark.",
            ],
            [
                   "In QuickShot mode, the aircraft will fly in one of four preset paths (see `QuickShotMode`)  while tracking the object recording a video. When a QuickShot mission ends, a 10-second video will be  generated. It is only supported by Spark.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackMode_QuickShot_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackMode_Unknown_inline",
                   "The active track mode is unknown.",
            ],
            [
                   "The active track mode is unknown.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackMode_Unknown_inline",
                   "",
            ],
            [
                   "QuickShotMode",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackQuickShotMode_inline",
                   "QuickShot modes, which define different preset path for a QuickShot mission.",
            ],
            [
                   "QuickShot modes, which define different preset path for a QuickShot mission.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackQuickShotMode_inline",
                   "",
            ],
            [
                   "CIRCLE",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackQuickShotMode_Circle_inline",
                   "Aircraft will circle around the object it is tracking.",
            ],
            [
                   "Aircraft will circle around the object it is tracking.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackQuickShotMode_Circle_inline",
                   "",
            ],
            [
                   "DRONIE",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackQuickShotMode_Dronie_inline",
                   "Aircraft will fly backward and upward with camera locked on the object it is tracking.",
            ],
            [
                   "Aircraft will fly backward and upward with camera locked on the object it is tracking.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackQuickShotMode_Dronie_inline",
                   "",
            ],
            [
                   "HELIX",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackQuickShotMode_Helix_inline",
                   "Aircraft will fly upward, spiraling around the object it is tracking.",
            ],
            [
                   "Aircraft will fly upward, spiraling around the object it is tracking.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackQuickShotMode_Helix_inline",
                   "",
            ],
            [
                   "ROCKET",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackQuickShotMode_Rocket_inline",
                   "The aircraft will ascend with the camera pointing downward on the object it is tracking.",
            ],
            [
                   "The aircraft will ascend with the camera pointing downward on the object it is tracking.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackQuickShotMode_Rocket_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackQuickShotMode_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/Missions/DJIActiveTrackMission.html",
                   "#DJIActiveTrackMission_DJIActiveTrackQuickShotMode_Unknown_inline",
                   "",
            ],
            [
                   "ActiveTrackTargetType",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetType_inline",
                   "The type of ActiveTrack target.",
            ],
            [
                   "The type of ActiveTrack target.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetType_inline",
                   "",
            ],
            [
                   "HUMAN",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetType_Human_inline",
                   "The ActiveTrack target is a human being.",
            ],
            [
                   "The ActiveTrack target is a human being.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetType_Human_inline",
                   "",
            ],
            [
                   "CAR",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetType_Car_inline",
                   "The ActiveTrack target is a car.",
            ],
            [
                   "The ActiveTrack target is a car.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetType_Car_inline",
                   "",
            ],
            [
                   "VAN",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetType_Van_inline",
                   "The ActiveTrack target is a van.",
            ],
            [
                   "The ActiveTrack target is a van.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetType_Van_inline",
                   "",
            ],
            [
                   "BIKE",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetType_Bike_inline",
                   "The ActiveTrack target is a bike.",
            ],
            [
                   "The ActiveTrack target is a bike.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetType_Bike_inline",
                   "",
            ],
            [
                   "BOAT",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetType_Boat_inline",
                   "The ActiveTrack target is a boat.",
            ],
            [
                   "The ActiveTrack target is a boat.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetType_Boat_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetType_Unknown_inline",
                   "The aircraft cannot recognize the target type.",
            ],
            [
                   "The aircraft cannot recognize the target type.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetType_Unknown_inline",
                   "",
            ],
            [
                   "ActiveTrackTargetState",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetState_inline",
                   "The state of the target being tracked by the aircraft.",
            ],
            [
                   "The state of the target being tracked by the aircraft.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetState_inline",
                   "",
            ],
            [
                   "CANNOT_CONFIRM",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetState_CannotConfirm_inline",
                   "The aircraft has recognized the target but the user is not allowed to confirm the target. Check `getReason` to get  more information.",
            ],
            [
                   "The aircraft has recognized the target but the user is not allowed to confirm the target. Check `getReason` to get  more information.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetState_CannotConfirm_inline",
                   "",
            ],
            [
                   "WAITING_FOR_CONFIRMATION",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetState_WaitingForConfirmation_inline",
                   "The aircraft has recognized the target and is waiting for user's confirmation. If this state, the aircraft will hover in the current position while the camera is tracking the target (by rotating aircraft's yaw or gimbal's altitude). If user confirms the target, the aircraft will start to following the movement of the target.",
            ],
            [
                   "The aircraft has recognized the target and is waiting for user's confirmation. If this state, the aircraft will hover in the current position while the camera is tracking the target (by rotating aircraft's yaw or gimbal's altitude). If user confirms the target, the aircraft will start to following the movement of the target.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetState_WaitingForConfirmation_inline",
                   "",
            ],
            [
                   "TRACKING_WITH_HIGH_CONFIDENCE",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetState_TrackingWithHighConfidence_inline",
                   "The aircraft has recognized the target with high confidence.",
            ],
            [
                   "The aircraft has recognized the target with high confidence.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetState_TrackingWithHighConfidence_inline",
                   "",
            ],
            [
                   "TRACKING_WITH_LOW_CONFIDENCE",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetState_TrackingWithLowConfidence_inline",
                   "The ActiveTrack Mission is tracking a target with low confidence. This is only an indication that either the aircraft will soon ask for confirmation that the target is correct, or may loose tracking the target entirely if confidence doesn't improve.",
            ],
            [
                   "The ActiveTrack Mission is tracking a target with low confidence. This is only an indication that either the aircraft will soon ask for confirmation that the target is correct, or may loose tracking the target entirely if confidence doesn't improve.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetState_TrackingWithLowConfidence_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetState_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/Missions/DJIActiveTrackTrackingState.html",
                   "#DJIActiveTrackTargetState_Unknown_inline",
                   "",
            ],
            [
                   "getLatitude",
                   2,
                   "/Components/Missions/DJIFollowMeMission.html",
                   "#DJIFollowMeMission_followMeLatitude_inline",
                   "Latitude of the mission's initial target location.  @return A double value.",
            ],
            [
                   "Latitude of the mission's initial target location.  @return A double value.",
                   1,
                   "/Components/Missions/DJIFollowMeMission.html",
                   "#DJIFollowMeMission_followMeLatitude_inline",
                   "",
            ],
            [
                   "getLongitude",
                   2,
                   "/Components/Missions/DJIFollowMeMission.html",
                   "#DJIFollowMeMission_followMeLongitude_inline",
                   "Longitude of the mission's initial target location.  @return A double value.",
            ],
            [
                   "Longitude of the mission's initial target location.  @return A double value.",
                   1,
                   "/Components/Missions/DJIFollowMeMission.html",
                   "#DJIFollowMeMission_followMeLongitude_inline",
                   "",
            ],
            [
                   "getAltitude",
                   2,
                   "/Components/Missions/DJIFollowMeMission.html",
                   "#DJIFollowMeMission_followMeAltitude_inline",
                   "Initial altitude (above sea level) in meters.  @return A float value.",
            ],
            [
                   "Initial altitude (above sea level) in meters.  @return A float value.",
                   1,
                   "/Components/Missions/DJIFollowMeMission.html",
                   "#DJIFollowMeMission_followMeAltitude_inline",
                   "",
            ],
            [
                   "getHeading",
                   2,
                   "/Components/Missions/DJIFollowMeMission.html",
                   "#DJIFollowMeMission_heading_inline",
                   "The aircraft's heading during the mission.  @return An enum value of `FollowMeHeading`.",
            ],
            [
                   "The aircraft's heading during the mission.  @return An enum value of `FollowMeHeading`.",
                   1,
                   "/Components/Missions/DJIFollowMeMission.html",
                   "#DJIFollowMeMission_heading_inline",
                   "",
            ],
            [
                   "FollowMeHeading",
                   2,
                   "/Components/Missions/DJIFollowMeMission.html",
                   "#DJIFollowMeMission_DJIFollowMeHeading_inline",
                   "Aircraft's heading during a follow me mission.",
            ],
            [
                   "Aircraft's heading during a follow me mission.",
                   1,
                   "/Components/Missions/DJIFollowMeMission.html",
                   "#DJIFollowMeMission_DJIFollowMeHeading_inline",
                   "",
            ],
            [
                   "TOWARD_FOLLOW_POSITION",
                   2,
                   "/Components/Missions/DJIFollowMeMission.html",
                   "#DJIFollowMeMission_DJIFollowMeHeading_TowardFollowPosition_inline",
                   "Aircraft's heading remains toward the coordinate it is following.",
            ],
            [
                   "Aircraft's heading remains toward the coordinate it is following.",
                   1,
                   "/Components/Missions/DJIFollowMeMission.html",
                   "#DJIFollowMeMission_DJIFollowMeHeading_TowardFollowPosition_inline",
                   "",
            ],
            [
                   "CONTROLLED_BY_REMOTE_CONTROLLER",
                   2,
                   "/Components/Missions/DJIFollowMeMission.html",
                   "#DJIFollowMeMission_DJIFollowMeHeading_ControlledByRemoteController_inline",
                   "Aircraft's heading will be controlled by the remote controller.",
            ],
            [
                   "Aircraft's heading will be controlled by the remote controller.",
                   1,
                   "/Components/Missions/DJIFollowMeMission.html",
                   "#DJIFollowMeMission_DJIFollowMeHeading_ControlledByRemoteController_inline",
                   "",
            ],
            [
                   "getPreviousState",
                   2,
                   "/Components/Missions/DJIFollowMeMissionEvent.html",
                   "#DJIFollowMeMissionEvent_previousState_inline",
                   "The previous follow me mission state, check the `FollowMeMissionState` enum value.  @return An object of `FollowMeMissionState`.",
            ],
            [
                   "The previous follow me mission state, check the `FollowMeMissionState` enum value.  @return An object of `FollowMeMissionState`.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionEvent.html",
                   "#DJIFollowMeMissionEvent_previousState_inline",
                   "",
            ],
            [
                   "getCurrentState",
                   2,
                   "/Components/Missions/DJIFollowMeMissionEvent.html",
                   "#DJIFollowMeMissionEvent_currentState_inline",
                   "The current follow me mission state, check the `FollowMeMissionState` enum value.  @return An object of `FollowMeMissionState`.",
            ],
            [
                   "The current follow me mission state, check the `FollowMeMissionState` enum value.  @return An object of `FollowMeMissionState`.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionEvent.html",
                   "#DJIFollowMeMissionEvent_currentState_inline",
                   "",
            ],
            [
                   "getDistanceToTarget",
                   2,
                   "/Components/Missions/DJIFollowMeMissionEvent.html",
                   "#DJIFollowMeMissionEvent_distanceToTarget_inline",
                   "Get the distance to the target.  @return A float value of the distance to the target.",
            ],
            [
                   "Get the distance to the target.  @return A float value of the distance to the target.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionEvent.html",
                   "#DJIFollowMeMissionEvent_distanceToTarget_inline",
                   "",
            ],
            [
                   "getError",
                   2,
                   "/Components/Missions/DJIFollowMeMissionEvent.html",
                   "#DJIFollowMeMissionEvent_error_inline",
                   "The encountered error if there is any. Otherwise, it is `null`.  @return An object of `DJIError`.",
            ],
            [
                   "The encountered error if there is any. Otherwise, it is `null`.  @return An object of `DJIError`.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionEvent.html",
                   "#DJIFollowMeMissionEvent_error_inline",
                   "",
            ],
            [
                   "FollowMeMissionState",
                   2,
                   "/Components/Missions/DJIFollowMeMissionState.html",
                   "",
                   "All the possible state of `FollowMeMissionOperator`.",
            ],
            [
                   "All the possible state of `FollowMeMissionOperator`.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionState.html",
                   "",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Missions/DJIFollowMeMissionState.html",
                   "#DJIFollowMeMissionState_Unknown_inline",
                   "The state of the operator is unknown. It is the initial state when the  operator is just created.",
            ],
            [
                   "The state of the operator is unknown. It is the initial state when the  operator is just created.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionState.html",
                   "#DJIFollowMeMissionState_Unknown_inline",
                   "",
            ],
            [
                   "DISCONNECTED",
                   2,
                   "/Components/Missions/DJIFollowMeMissionState.html",
                   "#DJIFollowMeMissionState_Disconnected_inline",
                   "The connection between the mobile device and aircraft is lost.",
            ],
            [
                   "The connection between the mobile device and aircraft is lost.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionState.html",
                   "#DJIFollowMeMissionState_Disconnected_inline",
                   "",
            ],
            [
                   "NOT_SUPPORTED",
                   2,
                   "/Components/Missions/DJIFollowMeMissionState.html",
                   "#DJIFollowMeMissionState_NotSupported_inline",
                   "The connected product does not support Follow Me mission.",
            ],
            [
                   "The connected product does not support Follow Me mission.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionState.html",
                   "#DJIFollowMeMissionState_NotSupported_inline",
                   "",
            ],
            [
                   "RECOVERING",
                   2,
                   "/Components/Missions/DJIFollowMeMissionState.html",
                   "#DJIFollowMeMissionState_Recovering_inline",
                   "The connection between the mobile device and aircraft is built-up. The operator is synchronizing the state from the aircraft.",
            ],
            [
                   "The connection between the mobile device and aircraft is built-up. The operator is synchronizing the state from the aircraft.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionState.html",
                   "#DJIFollowMeMissionState_Recovering_inline",
                   "",
            ],
            [
                   "NOT_READY",
                   2,
                   "/Components/Missions/DJIFollowMeMissionState.html",
                   "#DJIFollowMeMissionState_notReady_inline",
                   "The current state is not ready for uploading a mission.",
            ],
            [
                   "The current state is not ready for uploading a mission.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionState.html",
                   "#DJIFollowMeMissionState_notReady_inline",
                   "",
            ],
            [
                   "READY_TO_EXECUTE",
                   2,
                   "/Components/Missions/DJIFollowMeMissionState.html",
                   "#DJIFollowMeMissionState_ReadyToStart_inline",
                   "The operator is ready to start a Follow Me mission.",
            ],
            [
                   "The operator is ready to start a Follow Me mission.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionState.html",
                   "#DJIFollowMeMissionState_ReadyToStart_inline",
                   "",
            ],
            [
                   "EXECUTING",
                   2,
                   "/Components/Missions/DJIFollowMeMissionState.html",
                   "#DJIFollowMeMissionState_Executing_inline",
                   "The mission execution is started successfully.",
            ],
            [
                   "The mission execution is started successfully.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionState.html",
                   "#DJIFollowMeMissionState_Executing_inline",
                   "",
            ],
            [
                   "GOT_STUCK",
                   2,
                   "/Components/Missions/DJIFollowMeMissionState.html",
                   "#DJIFollowMeMissionState_GotStuck_inline",
                   "The mission execution is not executing successfully.",
            ],
            [
                   "The mission execution is not executing successfully.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionState.html",
                   "#DJIFollowMeMissionState_GotStuck_inline",
                   "",
            ],
            [
                   "getCurrentState",
                   2,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperator_currentState_inline",
                   "The current state of the executing Follow Me mission.  @return An object of `FollowMeMissionState`.",
            ],
            [
                   "The current state of the executing Follow Me mission.  @return An object of `FollowMeMissionState`.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperator_currentState_inline",
                   "",
            ],
            [
                   "addListener",
                   2,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperator_addListener_inline",
                   "Adds a new listener of all events.  @param listener An interface of `FollowMeMissionOperatorListener`.",
            ],
            [
                   "Adds a new listener of all events.  @param listener An interface of `FollowMeMissionOperatorListener`.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperator_addListener_inline",
                   "",
            ],
            [
                   "removeListener",
                   2,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperator_removeListener_inline",
                   "Removes listener.  @param targetListener An interface of `FollowMeMissionOperatorListener`.",
            ],
            [
                   "Removes listener.  @param targetListener An interface of `FollowMeMissionOperatorListener`.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperator_removeListener_inline",
                   "",
            ],
            [
                   "removeAllListeners",
                   2,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperator_removeAllListeners_inline",
                   "Remove all listeners.",
            ],
            [
                   "Remove all listeners.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperator_removeAllListeners_inline",
                   "",
            ],
            [
                   "startMission",
                   2,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperator_startMission_inline",
                   "Starts to execute a Follow Me mission. It can only be called when the `getCurrentState` is  `READY_TO_EXECUTE`. After a mission is started successfully, the `getCurrentState` will become  `EXECUTING`.  @param mission An object of `FollowMeMission`. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Starts to execute a Follow Me mission. It can only be called when the `getCurrentState` is  `READY_TO_EXECUTE`. After a mission is started successfully, the `getCurrentState` will become  `EXECUTING`.  @param mission An object of `FollowMeMission`. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperator_startMission_inline",
                   "",
            ],
            [
                   "stopMission",
                   2,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperator_stopMission_inline",
                   "Stops the executing mission. It can only be called when the  `getCurrentState` is  `EXECUTING`. After a mission is stopped successfully,  `getCurrentState` will become  `READY_TO_EXECUTE`.  @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Stops the executing mission. It can only be called when the  `getCurrentState` is  `EXECUTING`. After a mission is stopped successfully,  `getCurrentState` will become  `READY_TO_EXECUTE`.  @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperator_stopMission_inline",
                   "",
            ],
            [
                   "updateFollowingTarget",
                   2,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperator_updateFollowingTarget_inline",
                   "Update the Follow Me mission's target location to follow.  @param location A LocationCoordinate2D object. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Update the Follow Me mission's target location to follow.  @param location A LocationCoordinate2D object. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperator_updateFollowingTarget_inline",
                   "",
            ],
            [
                   "getFollowingTarget",
                   2,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperator_getFollowingTarget_inline",
                   "Get the following target's coordinate location.  @return A location object of LocationCoordinate2D.",
            ],
            [
                   "Get the following target's coordinate location.  @return A location object of LocationCoordinate2D.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperator_getFollowingTarget_inline",
                   "",
            ],
            [
                   "FollowMeMissionOperatorListener",
                   2,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperatorListener_inline",
                   "Listener interface for Follow Me mission.",
            ],
            [
                   "Listener interface for Follow Me mission.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperatorListener_inline",
                   "",
            ],
            [
                   "onExecutionUpdate",
                   2,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperatorListener_onExecutionUpdate_inline",
                   "All events during mission execution.  @param event An object of `FollowMeMissionEvent`.",
            ],
            [
                   "All events during mission execution.  @param event An object of `FollowMeMissionEvent`.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperatorListener_onExecutionUpdate_inline",
                   "",
            ],
            [
                   "onExecutionStart",
                   2,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperatorListener_onExecutionStart_inline",
                   "Mission started.",
            ],
            [
                   "Mission started.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperatorListener_onExecutionStart_inline",
                   "",
            ],
            [
                   "onExecutionFinish",
                   2,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperatorListener_onExecutionFinish_inline",
                   "Mission finished.  @param error Error retrieving the value.",
            ],
            [
                   "Mission finished.  @param error Error retrieving the value.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionOperator.html",
                   "#DJIFollowMeMissionOperatorListener_onExecutionFinish_inline",
                   "",
            ],
            [
                   "FollowMeMission",
                   2,
                   "/Components/Missions/DJIFollowMeMission.html",
                   "",
                   "The class represents a Follow Me mission. In a Follow Me mission, the aircraft is programmed to track and maintain a constant distant relative to some object, such as a person or a moving vehicle. You can use it to make the aircraft follow a GPS device, such as a remote controller with a GPS signal or a mobile device. It is not supported by Mavic Pro when using WiFi connection. It is not supported by Spark.",
            ],
            [
                   "The class represents a Follow Me mission. In a Follow Me mission, the aircraft is programmed to track and maintain a constant distant relative to some object, such as a person or a moving vehicle. You can use it to make the aircraft follow a GPS device, such as a remote controller with a GPS signal or a mobile device. It is not supported by Mavic Pro when using WiFi connection. It is not supported by Spark.",
                   1,
                   "/Components/Missions/DJIFollowMeMission.html",
                   "",
                   "",
            ],
            [
                   "FollowMeMissionEvent",
                   2,
                   "/Components/Missions/DJIFollowMeMissionEvent.html",
                   "",
                   "This class encapsulates all the state change of the Follow Me mission operator.",
            ],
            [
                   "This class encapsulates all the state change of the Follow Me mission operator.",
                   1,
                   "/Components/Missions/DJIFollowMeMissionEvent.html",
                   "",
                   "",
            ],
            [
                   "setHotpoint",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_hotpoint_inline",
                   "Sets the coordinate of the hot point.  @param hotpoint A LocationCoordinate2D object of hotpoint.",
            ],
            [
                   "Sets the coordinate of the hot point.  @param hotpoint A LocationCoordinate2D object of hotpoint.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_hotpoint_inline",
                   "",
            ],
            [
                   "getHotpoint",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_getHotpoint_inline",
                   "Gets the coordinate of the hot point.  @return A object of `LocationCoordinate2D`.",
            ],
            [
                   "Gets the coordinate of the hot point.  @return A object of `LocationCoordinate2D`.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_getHotpoint_inline",
                   "",
            ],
            [
                   "setStartPoint",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_startPoint_inline",
                   "Set aircraft's initial point on the circular flight path when starting the hot point  mission.  @param startPoint An enum value of `HotpointStartPoint`.",
            ],
            [
                   "Set aircraft's initial point on the circular flight path when starting the hot point  mission.  @param startPoint An enum value of `HotpointStartPoint`.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_startPoint_inline",
                   "",
            ],
            [
                   "getStartPoint",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_getStartPoint_inline",
                   "Get aircraft's initial point on the circular flight path when starting the hot point  mission.  @return An enum value of `HotpointStartPoint`.",
            ],
            [
                   "Get aircraft's initial point on the circular flight path when starting the hot point  mission.  @return An enum value of `HotpointStartPoint`.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_getStartPoint_inline",
                   "",
            ],
            [
                   "setHeading",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_heading_inline",
                   "Aircraft's heading while flying around the hot point. It can be pointed toward or  away from the hot point, forward or backward along its flight route, or can be  manually controlled by the remote controller.  @param heading Aircraft heading.",
            ],
            [
                   "Aircraft's heading while flying around the hot point. It can be pointed toward or  away from the hot point, forward or backward along its flight route, or can be  manually controlled by the remote controller.  @param heading Aircraft heading.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_heading_inline",
                   "",
            ],
            [
                   "getHeading",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_getHeading_inline",
                   "Get the aircraft's heading while flying around the hot point. It can be pointed toward or  away from the hot point, forward or backward along its flight route, and can be  controlled by the remote controller.  @return Aircraft heading.",
            ],
            [
                   "Get the aircraft's heading while flying around the hot point. It can be pointed toward or  away from the hot point, forward or backward along its flight route, and can be  controlled by the remote controller.  @return Aircraft heading.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_getHeading_inline",
                   "",
            ],
            [
                   "setAltitude",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_altitude_inline",
                   "Sets the altitude of the hot point orbit with a range [5,500] meters.  The altitude is relative to the ground altitude from which the aircraft took off.  @param altitude A double value of altitude to set.",
            ],
            [
                   "Sets the altitude of the hot point orbit with a range [5,500] meters.  The altitude is relative to the ground altitude from which the aircraft took off.  @param altitude A double value of altitude to set.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_altitude_inline",
                   "",
            ],
            [
                   "getAltitude",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_getAltitude_inline",
                   "Gets the altitude of the hot point orbit with a range [5,500] meters.  The altitude is relative to the ground altitude from which the aircraft took off.  @return A double value of altitude.",
            ],
            [
                   "Gets the altitude of the hot point orbit with a range [5,500] meters.  The altitude is relative to the ground altitude from which the aircraft took off.  @return A double value of altitude.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_getAltitude_inline",
                   "",
            ],
            [
                   "setRadius",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_radius_inline",
                   "Sets the circular flight path radius with which the aircraft will fly around the hotpoint. The value of this property should be in the range  of [`MIN_RADIUS`, `MAX_RADIUS`] meters.  @param radius A double value of radius to set.",
            ],
            [
                   "Sets the circular flight path radius with which the aircraft will fly around the hotpoint. The value of this property should be in the range  of [`MIN_RADIUS`, `MAX_RADIUS`] meters.  @param radius A double value of radius to set.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_radius_inline",
                   "",
            ],
            [
                   "getRadius",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_getRadius_inline",
                   "Gets the circular flight path radius with which the aircraft will fly around the hotpoint. The value of this property should be in the range  of [`MIN_RADIUS`, `MAX_RADIUS`] meters.  @return A double value of radius.",
            ],
            [
                   "Gets the circular flight path radius with which the aircraft will fly around the hotpoint. The value of this property should be in the range  of [`MIN_RADIUS`, `MAX_RADIUS`] meters.  @return A double value of radius.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_getRadius_inline",
                   "",
            ],
            [
                   "setAngularVelocity",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_angularVelocity_inline",
                   "Sets the angular velocity in degrees/s of the aircraft as it orbits the hot point. The default value is 20 degrees/s. The maximum angular velocity allowed is relative to the orbit radius.  @param angularVelocity Angular velocity in degrees/s.",
            ],
            [
                   "Sets the angular velocity in degrees/s of the aircraft as it orbits the hot point. The default value is 20 degrees/s. The maximum angular velocity allowed is relative to the orbit radius.  @param angularVelocity Angular velocity in degrees/s.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_angularVelocity_inline",
                   "",
            ],
            [
                   "getAngularVelocity",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_getAngularVelocity_inline",
                   "Gets the angular velocity (in degrees/second) of the aircraft as it orbits the hot  point. The default value is 20 degrees/s. The angular velocity is relative to the  orbit radius.  @return A float value of angular velocity.",
            ],
            [
                   "Gets the angular velocity (in degrees/second) of the aircraft as it orbits the hot  point. The default value is 20 degrees/s. The angular velocity is relative to the  orbit radius.  @return A float value of angular velocity.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_getAngularVelocity_inline",
                   "",
            ],
            [
                   "isClockwise",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_isClockwise_inline",
                   "`true` if the aircraft will move in a clockwise direction around the hot point.  @return A boolean value to check if is clockwise.",
            ],
            [
                   "`true` if the aircraft will move in a clockwise direction around the hot point.  @return A boolean value to check if is clockwise.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_isClockwise_inline",
                   "",
            ],
            [
                   "setClockwise",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_setClockwise_inline",
                   "Set to `true` if the aircraft should move in a clockwise direction around the hot point.  @param clockwise `true` for clockwise direction.",
            ],
            [
                   "Set to `true` if the aircraft should move in a clockwise direction around the hot point.  @param clockwise `true` for clockwise direction.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_setClockwise_inline",
                   "",
            ],
            [
                   "HotpointMission",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_constructor_inline",
                   "Constructor method for the DJIHotPointMission.  @param hotpoint Location of the hot point. @param altitude Altitude of the orbit in meters @param radius Radius of the orbit in meters @param angularVelocity Angular velocity of the aircraft in degrees/s @param isClockwise `true` if the aircraft should move in a clockwise direction around the hot point. @param startPoint Initial location on the orbit to start @param heading Aircraft heading during the mission",
            ],
            [
                   "Constructor method for the DJIHotPointMission.  @param hotpoint Location of the hot point. @param altitude Altitude of the orbit in meters @param radius Radius of the orbit in meters @param angularVelocity Angular velocity of the aircraft in degrees/s @param isClockwise `true` if the aircraft should move in a clockwise direction around the hot point. @param startPoint Initial location on the orbit to start @param heading Aircraft heading during the mission",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_constructor_inline",
                   "",
            ],
            [
                   "resetMissionWithData",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_resetMissionWithData_inline",
                   "Reset Mission with Hotpoint Mission data.  @param data An object of `HotpointMission`.",
            ],
            [
                   "Reset Mission with Hotpoint Mission data.  @param data An object of `HotpointMission`.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_resetMissionWithData_inline",
                   "",
            ],
            [
                   "MAX_RADIUS",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointMaxRadius_inline",
                   "Maximum radius, in meters, of the circular path the aircraft will fly around the point of interest. Currently 500m.",
            ],
            [
                   "Maximum radius, in meters, of the circular path the aircraft will fly around the point of interest. Currently 500m.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointMaxRadius_inline",
                   "",
            ],
            [
                   "MIN_RADIUS",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointMinRadius_inline",
                   "Minimum radius, in meters, of the circular path the aircraft will fly around the point of interest.",
            ],
            [
                   "Minimum radius, in meters, of the circular path the aircraft will fly around the point of interest.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointMinRadius_inline",
                   "",
            ],
            [
                   "MAX_ALTITUDE",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointMaxAltitude_inline",
                   "Maximum altitude in meters for a Hotpoint mission.",
            ],
            [
                   "Maximum altitude in meters for a Hotpoint mission.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointMaxAltitude_inline",
                   "",
            ],
            [
                   "MIN_ALTITUDE",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointMinAltitude_inline",
                   "Minimum altitude in meters for a Hotpoint mission.",
            ],
            [
                   "Minimum altitude in meters for a Hotpoint mission.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointMinAltitude_inline",
                   "",
            ],
            [
                   "HotpointStartPoint",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointStartPoint_inline",
                   "Aircraft starting point relative to the hot point.",
            ],
            [
                   "Aircraft starting point relative to the hot point.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointStartPoint_inline",
                   "",
            ],
            [
                   "NORTH",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointStartPoint_North_inline",
                   "Start from the North.",
            ],
            [
                   "Start from the North.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointStartPoint_North_inline",
                   "",
            ],
            [
                   "SOUTH",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointStartPoint_South_inline",
                   "Start from the South.",
            ],
            [
                   "Start from the South.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointStartPoint_South_inline",
                   "",
            ],
            [
                   "WEST",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointStartPoint_West_inline",
                   "Start from the West.",
            ],
            [
                   "Start from the West.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointStartPoint_West_inline",
                   "",
            ],
            [
                   "EAST",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointStartPoint_East_inline",
                   "Start from the East.",
            ],
            [
                   "Start from the East.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointStartPoint_East_inline",
                   "",
            ],
            [
                   "NEAREST",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointStartPoint_Nearest_inline",
                   "Start the circle surrounding the hotpoint at the nearest point on the  circle to the aircraft's current location.",
            ],
            [
                   "Start the circle surrounding the hotpoint at the nearest point on the  circle to the aircraft's current location.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointStartPoint_Nearest_inline",
                   "",
            ],
            [
                   "HotpointHeading",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointHeading_inline",
                   "Heading of the aircraft while orbiting the hot point.",
            ],
            [
                   "Heading of the aircraft while orbiting the hot point.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointHeading_inline",
                   "",
            ],
            [
                   "ALONG_CIRCLE_LOOKING_FORWARDS",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointHeading_AlongCircleLookingForward_inline",
                   "Heading is in the forward direction of travel along the circular path.",
            ],
            [
                   "Heading is in the forward direction of travel along the circular path.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointHeading_AlongCircleLookingForward_inline",
                   "",
            ],
            [
                   "ALONG_CIRCLE_LOOKING_BACKWARDS",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointHeading_AlongCircleLookingBackward_inline",
                   "Heading is in the backward direction of travel along the circular path.",
            ],
            [
                   "Heading is in the backward direction of travel along the circular path.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointHeading_AlongCircleLookingBackward_inline",
                   "",
            ],
            [
                   "TOWARDS_HOT_POINT",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointHeading_TowardHotPoint_inline",
                   "Heading is toward the hot point.",
            ],
            [
                   "Heading is toward the hot point.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointHeading_TowardHotPoint_inline",
                   "",
            ],
            [
                   "AWAY_FROM_HOT_POINT",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointHeading_AwayFromHotPoint_inline",
                   "Heading of the aircraft is looking away from the hot point. It is in the direction of the vector defined from the hot point to the aircraft.",
            ],
            [
                   "Heading of the aircraft is looking away from the hot point. It is in the direction of the vector defined from the hot point to the aircraft.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointHeading_AwayFromHotPoint_inline",
                   "",
            ],
            [
                   "CONTROLLED_BY_REMOTE_CONTROLLER",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointHeading_ControlledByRemoteController_inline",
                   "Heading is controlled by the remote controller.",
            ],
            [
                   "Heading is controlled by the remote controller.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointHeading_ControlledByRemoteController_inline",
                   "",
            ],
            [
                   "USING_INITIAL_HEADING",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointHeading_UsingInitialHeading_inline",
                   "The heading remains the same as the heading of the aircraft when the mission started.",
            ],
            [
                   "The heading remains the same as the heading of the aircraft when the mission started.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "#DJIHotPointMission_DJIHotPointHeading_UsingInitialHeading_inline",
                   "",
            ],
            [
                   "getCurrentState",
                   2,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_currentState_inline",
                   "The current state of the executing Hotpoint mission executing.  @return The state of the Hotpoint mission.",
            ],
            [
                   "The current state of the executing Hotpoint mission executing.  @return The state of the Hotpoint mission.",
                   1,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_currentState_inline",
                   "",
            ],
            [
                   "addListener",
                   2,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_addListenerToEvents_inline",
                   "Adds listener to receive all of the Hotpoint mission operator events.  @param listener Listener that is interested in the Hotpoint mission operator.",
            ],
            [
                   "Adds listener to receive all of the Hotpoint mission operator events.  @param listener Listener that is interested in the Hotpoint mission operator.",
                   1,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_addListenerToEvents_inline",
                   "",
            ],
            [
                   "removeListener",
                   2,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_removeListener_inline",
                   "Removes listener.  @param targetListener Listener to be removed.",
            ],
            [
                   "Removes listener.  @param targetListener Listener to be removed.",
                   1,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_removeListener_inline",
                   "",
            ],
            [
                   "removeAllListeners",
                   2,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_removeAllListeners_inline",
                   "Remove all listeners from listener pool.",
            ],
            [
                   "Remove all listeners from listener pool.",
                   1,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_removeAllListeners_inline",
                   "",
            ],
            [
                   "startMission",
                   2,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_startMission_inline",
                   "Starts to execute a Hotpoint mission. This only be called when  the `getCurrentState`  is `READY_TO_EXECUTE`. After a mission is started successfully, the `getCurrentState` will  become `INITIAL_PHASE`  or `EXECUTING`.  @param mission An object of `HotpointMission`. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Starts to execute a Hotpoint mission. This only be called when  the `getCurrentState`  is `READY_TO_EXECUTE`. After a mission is started successfully, the `getCurrentState` will  become `INITIAL_PHASE`  or `EXECUTING`.  @param mission An object of `HotpointMission`. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_startMission_inline",
                   "",
            ],
            [
                   "pause",
                   2,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_pauseMission_inline",
                   "Pauses the executing mission. It can only be called when  the `getCurrentState` is  `INITIAL_PHASE` or `EXECUTING`.  If this method is called in the `INITIAL_PHASE` state, the aircraft will  continue flying to the start point but it will not continue to circle  around the  hotpoint until the user resumes the mission. After a mission is paused successfully, the `getCurrentState` will  become `EXECUTION_PAUSED`.  @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Pauses the executing mission. It can only be called when  the `getCurrentState` is  `INITIAL_PHASE` or `EXECUTING`.  If this method is called in the `INITIAL_PHASE` state, the aircraft will  continue flying to the start point but it will not continue to circle  around the  hotpoint until the user resumes the mission. After a mission is paused successfully, the `getCurrentState` will  become `EXECUTION_PAUSED`.  @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_pauseMission_inline",
                   "",
            ],
            [
                   "resume",
                   2,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_resumeMission_inline",
                   "Resumes the paused mission. It can only be called when  the `getCurrentState` is `EXECUTION_PAUSED`. After a mission is resumed  successfully, the `getCurrentState` will  become `INITIAL_PHASE`  or `EXECUTING`.  @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Resumes the paused mission. It can only be called when  the `getCurrentState` is `EXECUTION_PAUSED`. After a mission is resumed  successfully, the `getCurrentState` will  become `INITIAL_PHASE`  or `EXECUTING`.  @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_resumeMission_inline",
                   "",
            ],
            [
                   "stop",
                   2,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_stopMission_inline",
                   "Stops the executing or paused mission. It can only be called when `getCurrentState` is one of the following:  - `INITIAL_PHASE`  - `EXECUTING`  - `EXECUTION_PAUSED`  After a mission is stopped  successfully, `getCurrentState` will  become `READY_TO_EXECUTE`.  @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Stops the executing or paused mission. It can only be called when `getCurrentState` is one of the following:  - `INITIAL_PHASE`  - `EXECUTING`  - `EXECUTION_PAUSED`  After a mission is stopped  successfully, `getCurrentState` will  become `READY_TO_EXECUTE`.  @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_stopMission_inline",
                   "",
            ],
            [
                   "getExecutingMission",
                   2,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_getExecutingMission_inline",
                   "Gets the executing mission from the aircraft. It can only be called when `getCurrentState` is one of the following:  - `INITIAL_PHASE`  - `EXECUTING`  - `EXECUTION_PAUSED`  @param mission Detailed information of the mission being executed. `setAltitude`  and `setRadius` may be different from the initial settings when  starting the mission. It is `null` if there is an error encountered when trying to get  the mission. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Gets the executing mission from the aircraft. It can only be called when `getCurrentState` is one of the following:  - `INITIAL_PHASE`  - `EXECUTING`  - `EXECUTION_PAUSED`  @param mission Detailed information of the mission being executed. `setAltitude`  and `setRadius` may be different from the initial settings when  starting the mission. It is `null` if there is an error encountered when trying to get  the mission. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_getExecutingMission_inline",
                   "",
            ],
            [
                   "setAngularVelocity",
                   2,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_setAngularVelocity_inline",
                   "Sets angular velocity for the executing mission. It can only be called when `getCurrentState` is one of the following:  - `INITIAL_PHASE`  - `EXECUTING`  - `EXECUTION_PAUSED`  @param angularVelocity Angular velocity to set. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets angular velocity for the executing mission. It can only be called when `getCurrentState` is one of the following:  - `INITIAL_PHASE`  - `EXECUTING`  - `EXECUTION_PAUSED`  @param angularVelocity Angular velocity to set. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_setAngularVelocity_inline",
                   "",
            ],
            [
                   "setRadius",
                   2,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_setRadius_inline",
                   "Sets radius for the executing mission. It can only be called when  the `getCurrentState` is one of the following:  - `INITIAL_PHASE`  - `EXECUTING`  - `EXECUTION_PAUSED`  @param radius Radius to set. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets radius for the executing mission. It can only be called when  the `getCurrentState` is one of the following:  - `INITIAL_PHASE`  - `EXECUTING`  - `EXECUTION_PAUSED`  @param radius Radius to set. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_setRadius_inline",
                   "",
            ],
            [
                   "resetHeading",
                   2,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_resetMissionHeading_inline",
                   "Resets aircraft's heading to the direction defined  by `setHeading` of `HotpointMission`. It can only be called  when the `getCurrentState` is one of the following:  - `INITIAL_PHASE`  - `EXECUTING`  - `EXECUTION_PAUSED`  @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Resets aircraft's heading to the direction defined  by `setHeading` of `HotpointMission`. It can only be called  when the `getCurrentState` is one of the following:  - `INITIAL_PHASE`  - `EXECUTING`  - `EXECUTION_PAUSED`  @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_resetMissionHeading_inline",
                   "",
            ],
            [
                   "maxAngularVelocityForRadius",
                   2,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_maxAngularVelocityForRadius_inline",
                   "Returns the maximum supported angular velocity, in degrees/s, for a given Hotpoint  mission radius in meters. Returns 0 if an unsupported radius is specified.  @param radius Hotpoint radius with a range of [5,500] meters. This is used to calculate the  maximum angular velocity.  @return Angular velocity in degrees/s.",
            ],
            [
                   "Returns the maximum supported angular velocity, in degrees/s, for a given Hotpoint  mission radius in meters. Returns 0 if an unsupported radius is specified.  @param radius Hotpoint radius with a range of [5,500] meters. This is used to calculate the  maximum angular velocity.  @return Angular velocity in degrees/s.",
                   1,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperator_maxAngularVelocityForRadius_inline",
                   "",
            ],
            [
                   "HotpointMission",
                   2,
                   "/Components/Missions/DJIHotPointMission.html",
                   "",
                   "This class represents a Hotpoint mission. In a Hotpoint mission, the aircraft will  repeatedly fly circles of a  constant radius around a specified point called a Hot Point. The user can control  the aircraft to fly around the Hotpoint with a specific radius and altitude. During  execution, the user can also use the physical remote controller to modify its radius  and speed. It is not supported by Mavic Pro when using WiFi connection. It is not  supported by Spark.",
            ],
            [
                   "This class represents a Hotpoint mission. In a Hotpoint mission, the aircraft will  repeatedly fly circles of a  constant radius around a specified point called a Hot Point. The user can control  the aircraft to fly around the Hotpoint with a specific radius and altitude. During  execution, the user can also use the physical remote controller to modify its radius  and speed. It is not supported by Mavic Pro when using WiFi connection. It is not  supported by Spark.",
                   1,
                   "/Components/Missions/DJIHotPointMission.html",
                   "",
                   "",
            ],
            [
                   "HotpointMissionOperatorListener",
                   2,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperatorListener_inline",
                   "Listener interface for listening to Hotpoint mission events.",
            ],
            [
                   "Listener interface for listening to Hotpoint mission events.",
                   1,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperatorListener_inline",
                   "",
            ],
            [
                   "onExecutionUpdate",
                   2,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperatorListener_onExecutionUpdate_inline",
                   "Called when a new Hotpoint mission event occurs.  @param event Updated event.",
            ],
            [
                   "Called when a new Hotpoint mission event occurs.  @param event Updated event.",
                   1,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperatorListener_onExecutionUpdate_inline",
                   "",
            ],
            [
                   "onExecutionStart",
                   2,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperatorListener_onExecutionStart_inline",
                   "Called when the Hotpoint mission starts.",
            ],
            [
                   "Called when the Hotpoint mission starts.",
                   1,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperatorListener_onExecutionStart_inline",
                   "",
            ],
            [
                   "onExecutionFinish",
                   2,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperatorListener_onExecutionFinish_inline",
                   "Called when the Hotpoint mission ends.  @param error Used when mission is finishes in an unexpected way.",
            ],
            [
                   "Called when the Hotpoint mission ends.  @param error Used when mission is finishes in an unexpected way.",
                   1,
                   "/Components/Missions/DJIHotpointMissionOperator.html",
                   "#DJIHotpointMissionOperatorListener_onExecutionFinish_inline",
                   "",
            ],
            [
                   "HotpointMissionEvent",
                   2,
                   "/Components/Missions/DJIHotpointMissionEvent.html",
                   "",
                   "This class encapsulates all the state changes of the Hotpoint mission operator.",
            ],
            [
                   "This class encapsulates all the state changes of the Hotpoint mission operator.",
                   1,
                   "/Components/Missions/DJIHotpointMissionEvent.html",
                   "",
                   "",
            ],
            [
                   "getPreviousState",
                   2,
                   "/Components/Missions/DJIHotpointMissionEvent.html",
                   "#DJIHotpointMissionEvent_previousState_inline",
                   "The previous state of the operator.  @return An object of `HotpointMissionState`.",
            ],
            [
                   "The previous state of the operator.  @return An object of `HotpointMissionState`.",
                   1,
                   "/Components/Missions/DJIHotpointMissionEvent.html",
                   "#DJIHotpointMissionEvent_previousState_inline",
                   "",
            ],
            [
                   "getCurrentState",
                   2,
                   "/Components/Missions/DJIHotpointMissionEvent.html",
                   "#DJIHotpointMissionEvent_currentState_inline",
                   "The current state of the operator.  @return An object of `HotpointMissionState`.",
            ],
            [
                   "The current state of the operator.  @return An object of `HotpointMissionState`.",
                   1,
                   "/Components/Missions/DJIHotpointMissionEvent.html",
                   "#DJIHotpointMissionEvent_currentState_inline",
                   "",
            ],
            [
                   "getRadius",
                   2,
                   "/Components/Missions/DJIHotpointMissionEvent.html",
                   "#DJIHotpointMissionEvent_radius_inline",
                   "The Hotpoint radius in meters of the mission.  If there is no executing mission, it is 0.  @return A float value of radius.",
            ],
            [
                   "The Hotpoint radius in meters of the mission.  If there is no executing mission, it is 0.  @return A float value of radius.",
                   1,
                   "/Components/Missions/DJIHotpointMissionEvent.html",
                   "#DJIHotpointMissionEvent_radius_inline",
                   "",
            ],
            [
                   "getError",
                   2,
                   "/Components/Missions/DJIHotpointMissionEvent.html",
                   "#DJIHotpointMissionEvent_error_inline",
                   "The encountered error if there is any. Otherwise, it is `null`.  @return A object of `DJIError`.",
            ],
            [
                   "The encountered error if there is any. Otherwise, it is `null`.  @return A object of `DJIError`.",
                   1,
                   "/Components/Missions/DJIHotpointMissionEvent.html",
                   "#DJIHotpointMissionEvent_error_inline",
                   "",
            ],
            [
                   "HotpointMissionState",
                   2,
                   "/Components/Missions/DJIHotpointMissionState.html",
                   "",
                   "States of `HotpointMissionOperator`.",
            ],
            [
                   "States of `HotpointMissionOperator`.",
                   1,
                   "/Components/Missions/DJIHotpointMissionState.html",
                   "",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Missions/DJIHotpointMissionState.html",
                   "#DJIHotpointMissionState_Unknown_inline",
                   "The state of the operator is unknown. This is the initial state when the operator has just been created.",
            ],
            [
                   "The state of the operator is unknown. This is the initial state when the operator has just been created.",
                   1,
                   "/Components/Missions/DJIHotpointMissionState.html",
                   "#DJIHotpointMissionState_Unknown_inline",
                   "",
            ],
            [
                   "DISCONNECTED",
                   2,
                   "/Components/Missions/DJIHotpointMissionState.html",
                   "#DJIHotpointMissionState_Disconnected_inline",
                   "The connection between the mobile device and aircraft is broken.",
            ],
            [
                   "The connection between the mobile device and aircraft is broken.",
                   1,
                   "/Components/Missions/DJIHotpointMissionState.html",
                   "#DJIHotpointMissionState_Disconnected_inline",
                   "",
            ],
            [
                   "RECOVERING",
                   2,
                   "/Components/Missions/DJIHotpointMissionState.html",
                   "#DJIHotpointMissionState_Recovering_inline",
                   "The connection between the mobile device and aircraft is recovering.  At this time, the operator is synchronizing the state from the aircraft.",
            ],
            [
                   "The connection between the mobile device and aircraft is recovering.  At this time, the operator is synchronizing the state from the aircraft.",
                   1,
                   "/Components/Missions/DJIHotpointMissionState.html",
                   "#DJIHotpointMissionState_Recovering_inline",
                   "",
            ],
            [
                   "NOT_SUPPORTED",
                   2,
                   "/Components/Missions/DJIHotpointMissionState.html",
                   "#DJIHotpointMissionState_NotSupported_inline",
                   "The connected product does not support Hotpoint mission.",
            ],
            [
                   "The connected product does not support Hotpoint mission.",
                   1,
                   "/Components/Missions/DJIHotpointMissionState.html",
                   "#DJIHotpointMissionState_NotSupported_inline",
                   "",
            ],
            [
                   "READY_TO_EXECUTE",
                   2,
                   "/Components/Missions/DJIHotpointMissionState.html",
                   "#DJIHotpointMissionState_ReadyToExecute_inline",
                   "Mission is uploaded completely and the aircraft is ready to start the execution.",
            ],
            [
                   "Mission is uploaded completely and the aircraft is ready to start the execution.",
                   1,
                   "/Components/Missions/DJIHotpointMissionState.html",
                   "#DJIHotpointMissionState_ReadyToExecute_inline",
                   "",
            ],
            [
                   "INITIAL_PHASE",
                   2,
                   "/Components/Missions/DJIHotpointMissionState.html",
                   "#DJIHotpointMissionState_InitialPhase_inline",
                   "The aircraft is moving towards the start point of the Hotpoint mission.",
            ],
            [
                   "The aircraft is moving towards the start point of the Hotpoint mission.",
                   1,
                   "/Components/Missions/DJIHotpointMissionState.html",
                   "#DJIHotpointMissionState_InitialPhase_inline",
                   "",
            ],
            [
                   "EXECUTING",
                   2,
                   "/Components/Missions/DJIHotpointMissionState.html",
                   "#DJIHotpointMissionState_Executing_inline",
                   "The execution is started successfully.",
            ],
            [
                   "The execution is started successfully.",
                   1,
                   "/Components/Missions/DJIHotpointMissionState.html",
                   "#DJIHotpointMissionState_Executing_inline",
                   "",
            ],
            [
                   "EXECUTION_PAUSED",
                   2,
                   "/Components/Missions/DJIHotpointMissionState.html",
                   "#DJIHotpointMissionState_ExecutionPaused_inline",
                   "Hotpoint mission is paused successfully. User can call  `resume` to continue the execution.",
            ],
            [
                   "Hotpoint mission is paused successfully. User can call  `resume` to continue the execution.",
                   1,
                   "/Components/Missions/DJIHotpointMissionState.html",
                   "#DJIHotpointMissionState_ExecutionPaused_inline",
                   "",
            ],
            [
                   "isRunning",
                   2,
                   "/Components/Missions/DJIMissionAction.html",
                   "#DJIMissionAction_isRunning_inline",
                   "`true` if the action is running.  @return A boolean value.",
            ],
            [
                   "`true` if the action is running.  @return A boolean value.",
                   1,
                   "/Components/Missions/DJIMissionAction.html",
                   "#DJIMissionAction_isRunning_inline",
                   "",
            ],
            [
                   "TakeOffAction",
                   2,
                   "/Components/Missions/DJITakeOffAction.html",
                   "",
                   "This class represents a take-off action used as an element in a Timeline mission. By creating an object of this class and adding it to Mission Control's Timeline,  the aircraft will take-off when the Timeline reaches the action.",
            ],
            [
                   "This class represents a take-off action used as an element in a Timeline mission. By creating an object of this class and adding it to Mission Control's Timeline,  the aircraft will take-off when the Timeline reaches the action.",
                   1,
                   "/Components/Missions/DJITakeOffAction.html",
                   "",
                   "",
            ],
            [
                   "AircraftYawAction",
                   2,
                   "/Components/Missions/DJIAircraftYawAction.html",
                   "",
                   "This class represents an aircraft yaw rotation action to be scheduled on the Mission  Control timeline. By creating an object of this class and adding it to the timeline,  an aircraft will rotate around yaw by the specified angle with the specified speed  when the Timeline reaches the action.",
            ],
            [
                   "This class represents an aircraft yaw rotation action to be scheduled on the Mission  Control timeline. By creating an object of this class and adding it to the timeline,  an aircraft will rotate around yaw by the specified angle with the specified speed  when the Timeline reaches the action.",
                   1,
                   "/Components/Missions/DJIAircraftYawAction.html",
                   "",
                   "",
            ],
            [
                   "GoToAction",
                   2,
                   "/Components/Missions/DJIGoToAction.html",
                   "",
                   "This class represents a go-to action used as an element in a Timeline mission. By creating an object of this class and adding it to Mission Control's Timeline, the aircraft will go to a specified location when the Timeline reaches the action.",
            ],
            [
                   "This class represents a go-to action used as an element in a Timeline mission. By creating an object of this class and adding it to Mission Control's Timeline, the aircraft will go to a specified location when the Timeline reaches the action.",
                   1,
                   "/Components/Missions/DJIGoToAction.html",
                   "",
                   "",
            ],
            [
                   "GoHomeAction",
                   2,
                   "/Components/Missions/DJIGoHomeAction.html",
                   "",
                   "This class represents a go-home action used as an element in a Timeline mission. By creating an object of this class and adding it to Mission Control's Timeline, the aircraft will go home when the Timeline reaches the action.",
            ],
            [
                   "This class represents a go-home action used as an element in a Timeline mission. By creating an object of this class and adding it to Mission Control's Timeline, the aircraft will go home when the Timeline reaches the action.",
                   1,
                   "/Components/Missions/DJIGoHomeAction.html",
                   "",
                   "",
            ],
            [
                   "HotpointAction",
                   2,
                   "/Components/Missions/DJIHotpointAction.html",
                   "",
                   "This class represents a hotpoint action used as an element in a Timeline mission. By creating an object of this class and adding it to Mission Control's Timeline,  the aircraft will fly along a portion of a circle centered on a location of interest when the Timeline reaches the action.",
            ],
            [
                   "This class represents a hotpoint action used as an element in a Timeline mission. By creating an object of this class and adding it to Mission Control's Timeline,  the aircraft will fly along a portion of a circle centered on a location of interest when the Timeline reaches the action.",
                   1,
                   "/Components/Missions/DJIHotpointAction.html",
                   "",
                   "",
            ],
            [
                   "GimbalAttitudeAction",
                   2,
                   "/Components/Missions/DJIGimbalAttitudeAction.html",
                   "",
                   "This class represents a gimbal movement action used as an element in a Timeline mission. By creating an object of this class and adding it to Mission Control's Timeline,  the camera's gimbal will move to the specified attitude when the Timeline reaches the action.",
            ],
            [
                   "This class represents a gimbal movement action used as an element in a Timeline mission. By creating an object of this class and adding it to Mission Control's Timeline,  the camera's gimbal will move to the specified attitude when the Timeline reaches the action.",
                   1,
                   "/Components/Missions/DJIGimbalAttitudeAction.html",
                   "",
                   "",
            ],
            [
                   "RecordVideoAction",
                   2,
                   "/Components/Missions/DJIRecordVideoAction.html",
                   "",
                   "This class represents a video recording action used as an element in a Timeline mission. By creating an object of this class and adding it to Mission Control's Timeline,  the camera can start or stop video recording when the Timeline reaches the action.",
            ],
            [
                   "This class represents a video recording action used as an element in a Timeline mission. By creating an object of this class and adding it to Mission Control's Timeline,  the camera can start or stop video recording when the Timeline reaches the action.",
                   1,
                   "/Components/Missions/DJIRecordVideoAction.html",
                   "",
                   "",
            ],
            [
                   "ShootPhotoAction",
                   2,
                   "/Components/Missions/DJIShootPhotoAction.html",
                   "",
                   "This class represents a shoot photo action used as an element in a Timeline mission. By creating an object of this class and adding it to Mission Control's Timeline,  the camera can shoot a photo when the Timeline reaches the action.",
            ],
            [
                   "This class represents a shoot photo action used as an element in a Timeline mission. By creating an object of this class and adding it to Mission Control's Timeline,  the camera can shoot a photo when the Timeline reaches the action.",
                   1,
                   "/Components/Missions/DJIShootPhotoAction.html",
                   "",
                   "",
            ],
            [
                   "AircraftYawAction",
                   2,
                   "/Components/Missions/DJIAircraftYawAction.html",
                   "#DJIAircraftYawAction_initWithRelativeAngleAndAngularVelocity_inline",
                   "Initialize with a yaw angle relative to current heading and an angular velocity. The angular velocity has a range of [0, 100] degrees/s and a default value of 20 degrees/s.  @param angle Angle in degrees. @param velocity Velocity in degrees/s.",
            ],
            [
                   "Initialize with a yaw angle relative to current heading and an angular velocity. The angular velocity has a range of [0, 100] degrees/s and a default value of 20 degrees/s.  @param angle Angle in degrees. @param velocity Velocity in degrees/s.",
                   1,
                   "/Components/Missions/DJIAircraftYawAction.html",
                   "#DJIAircraftYawAction_initWithRelativeAngleAndAngularVelocity_inline",
                   "",
            ],
            [
                   "AircraftYawActionError",
                   2,
                   "/Components/Missions/DJIAircraftYawAction_DJIAircraftYawActionError.html",
                   "",
                   "The error domain used to describe errors produced by the `AircraftYawAction` object.",
            ],
            [
                   "The error domain used to describe errors produced by the `AircraftYawAction` object.",
                   1,
                   "/Components/Missions/DJIAircraftYawAction_DJIAircraftYawActionError.html",
                   "",
                   "",
            ],
            [
                   "INVALID_ROTATION_SPEED",
                   2,
                   "/Components/Missions/DJIAircraftYawAction_DJIAircraftYawActionError.html",
                   "#DJIAircraftYawAction_DJIAircraftYawActionError_InvalidRotationSpeed_inline",
                   "Set rotation speed is not within valid range [0, 100].",
            ],
            [
                   "Set rotation speed is not within valid range [0, 100].",
                   1,
                   "/Components/Missions/DJIAircraftYawAction_DJIAircraftYawActionError.html",
                   "#DJIAircraftYawAction_DJIAircraftYawActionError_InvalidRotationSpeed_inline",
                   "",
            ],
            [
                   "INVALID_ANGLE_VALUE",
                   2,
                   "/Components/Missions/DJIAircraftYawAction_DJIAircraftYawActionError.html",
                   "#DJIAircraftYawAction_DJIAircraftYawActionError_InvalidAngleValue_inline",
                   "Set angle value is not within valid range [-180, 180].",
            ],
            [
                   "Set angle value is not within valid range [-180, 180].",
                   1,
                   "/Components/Missions/DJIAircraftYawAction_DJIAircraftYawActionError.html",
                   "#DJIAircraftYawAction_DJIAircraftYawActionError_InvalidAngleValue_inline",
                   "",
            ],
            [
                   "CANNOT_RUN_VIRTUAL_STICK",
                   2,
                   "/Components/Missions/DJIAircraftYawAction_DJIAircraftYawActionError.html",
                   "#DJIAircraftYawAction_DJIAircraftYawActionError_CannotRunVirtualStick_inline",
                   "Aircraft currently in virtual sticks mode.",
            ],
            [
                   "Aircraft currently in virtual sticks mode.",
                   1,
                   "/Components/Missions/DJIAircraftYawAction_DJIAircraftYawActionError.html",
                   "#DJIAircraftYawAction_DJIAircraftYawActionError_CannotRunVirtualStick_inline",
                   "",
            ],
            [
                   "GimbalAttitudeAction",
                   2,
                   "/Components/Missions/DJIGimbalAttitudeAction.html",
                   "#DJIGimbalAttitudeAction_initWithAttitude_inline",
                   "Initialize instance with gimbal target attitude.  @param attitude Gimbal target attitude.",
            ],
            [
                   "Initialize instance with gimbal target attitude.  @param attitude Gimbal target attitude.",
                   1,
                   "/Components/Missions/DJIGimbalAttitudeAction.html",
                   "#DJIGimbalAttitudeAction_initWithAttitude_inline",
                   "",
            ],
            [
                   "setCompletionTime",
                   2,
                   "/Components/Missions/DJIGimbalAttitudeAction.html",
                   "#DJIGimbalAttitudeAction_setCompletionTime_inline",
                   "Completion time, in seconds, for the gimbal to go to the target attitude  from current attitude. Default is 1 second.  @param completionTime A double value of completion time.",
            ],
            [
                   "Completion time, in seconds, for the gimbal to go to the target attitude  from current attitude. Default is 1 second.  @param completionTime A double value of completion time.",
                   1,
                   "/Components/Missions/DJIGimbalAttitudeAction.html",
                   "#DJIGimbalAttitudeAction_setCompletionTime_inline",
                   "",
            ],
            [
                   "getCompletionTime",
                   2,
                   "/Components/Missions/DJIGimbalAttitudeAction.html",
                   "#DJIGimbalAttitudeAction_getCompletionTime_inline",
                   "Completion time, in seconds, for the gimbal to go to the target attitude  from current attitude. Default is 1 second.  @return Time in seconds.",
            ],
            [
                   "Completion time, in seconds, for the gimbal to go to the target attitude  from current attitude. Default is 1 second.  @return Time in seconds.",
                   1,
                   "/Components/Missions/DJIGimbalAttitudeAction.html",
                   "#DJIGimbalAttitudeAction_getCompletionTime_inline",
                   "",
            ],
            [
                   "getTargetAttitude",
                   2,
                   "/Components/Missions/DJIGimbalAttitudeAction.html",
                   "#DJIGimbalAttitudeAction_targetAttitude_inline",
                   "Target gimbal attitude.  @return A `Attitude` object.",
            ],
            [
                   "Target gimbal attitude.  @return A `Attitude` object.",
                   1,
                   "/Components/Missions/DJIGimbalAttitudeAction.html",
                   "#DJIGimbalAttitudeAction_targetAttitude_inline",
                   "",
            ],
            [
                   "GimbalAttitudeActionError",
                   2,
                   "/Components/Missions/DJIGimbalAttitudeAction_DJIGimbalAttitudeActionError.html",
                   "",
                   "A list of all errors relative to the gimbal attitude action.",
            ],
            [
                   "A list of all errors relative to the gimbal attitude action.",
                   1,
                   "/Components/Missions/DJIGimbalAttitudeAction_DJIGimbalAttitudeActionError.html",
                   "",
                   "",
            ],
            [
                   "YAW_OUTSIDE_MAX_CAPABILITIES",
                   2,
                   "/Components/Missions/DJIGimbalAttitudeAction_DJIGimbalAttitudeActionError.html",
                   "#DJIGimbalAttitudeAction_DJIGimbalAttitudeActionError_YawOutsideMaxCapabilities_inline",
                   "Yaw value passed is beyond the max capabilities of the gimbal.",
            ],
            [
                   "Yaw value passed is beyond the max capabilities of the gimbal.",
                   1,
                   "/Components/Missions/DJIGimbalAttitudeAction_DJIGimbalAttitudeActionError.html",
                   "#DJIGimbalAttitudeAction_DJIGimbalAttitudeActionError_YawOutsideMaxCapabilities_inline",
                   "",
            ],
            [
                   "PITCH_OUTSIDE_MAX_CAPABILITIES",
                   2,
                   "/Components/Missions/DJIGimbalAttitudeAction_DJIGimbalAttitudeActionError.html",
                   "#DJIGimbalAttitudeAction_DJIGimbalAttitudeActionError_PitchOutsideMaxCapabilities_inline",
                   "Pitch value passed is beyond the max capabilities of the gimbal.",
            ],
            [
                   "Pitch value passed is beyond the max capabilities of the gimbal.",
                   1,
                   "/Components/Missions/DJIGimbalAttitudeAction_DJIGimbalAttitudeActionError.html",
                   "#DJIGimbalAttitudeAction_DJIGimbalAttitudeActionError_PitchOutsideMaxCapabilities_inline",
                   "",
            ],
            [
                   "ROLL_OUTSIDE_MAX_CAPABILITIES",
                   2,
                   "/Components/Missions/DJIGimbalAttitudeAction_DJIGimbalAttitudeActionError.html",
                   "#DJIGimbalAttitudeAction_DJIGimbalAttitudeActionError_RollOutsideMaxCapabilities_inline",
                   "Roll value passed is beyond the max capabilities of the gimbal.",
            ],
            [
                   "Roll value passed is beyond the max capabilities of the gimbal.",
                   1,
                   "/Components/Missions/DJIGimbalAttitudeAction_DJIGimbalAttitudeActionError.html",
                   "#DJIGimbalAttitudeAction_DJIGimbalAttitudeActionError_RollOutsideMaxCapabilities_inline",
                   "",
            ],
            [
                   "COMPLETION_TIME_INVALID",
                   2,
                   "/Components/Missions/DJIGimbalAttitudeAction_DJIGimbalAttitudeActionError.html",
                   "#DJIGimbalAttitudeAction_DJIGimbalAttitudeActionError_CompletionTimeInvalid_inline",
                   "Completion Time value passed is invalid (less than 0).",
            ],
            [
                   "Completion Time value passed is invalid (less than 0).",
                   1,
                   "/Components/Missions/DJIGimbalAttitudeAction_DJIGimbalAttitudeActionError.html",
                   "#DJIGimbalAttitudeAction_DJIGimbalAttitudeActionError_CompletionTimeInvalid_inline",
                   "",
            ],
            [
                   "setAutoConfirmLandingEnabled",
                   2,
                   "/Components/Missions/DJIGoHomeAction.html",
                   "#DJIGoHomeAction_setAutoConfirmLandingEnabled_inline",
                   "`true` to enable automatic confirmation during landing. For flight controller firmware  version 3.2.0.0 or above, when the clearance between the aircraft and the ground is less  than 0.3m, the aircraft will pause landing and wait for the user's confirmation to continue.  Enabling the auto confirmation, allows the aircraft to continue landing without the user's  confirmation during the timeline execution. For firmware that does not require landing  confirmation, the value is ignored. The default value is `true`.  @param enable Enable automatic confirmation during landing.",
            ],
            [
                   "`true` to enable automatic confirmation during landing. For flight controller firmware  version 3.2.0.0 or above, when the clearance between the aircraft and the ground is less  than 0.3m, the aircraft will pause landing and wait for the user's confirmation to continue.  Enabling the auto confirmation, allows the aircraft to continue landing without the user's  confirmation during the timeline execution. For firmware that does not require landing  confirmation, the value is ignored. The default value is `true`.  @param enable Enable automatic confirmation during landing.",
                   1,
                   "/Components/Missions/DJIGoHomeAction.html",
                   "#DJIGoHomeAction_setAutoConfirmLandingEnabled_inline",
                   "",
            ],
            [
                   "getAutoConfirmLandingEnabled",
                   2,
                   "/Components/Missions/DJIGoHomeAction.html",
                   "#DJIGoHomeAction_getAutoConfirmLandingEnabled_inline",
                   "For flight controller firmware version 3.2.0.0 or above, when the clearance between the  aircraft and the ground is less than 0.3m, the aircraft will pause landing and wait for the  user's confirmation to continue. Enabling the auto confirmation, allows the aircraft to  continue landing without the user's confirmation during the timeline execution. For firmware that  does not require landing confirmation, the value is ignored. The default value  is `true`.  @return A boolean value.",
            ],
            [
                   "For flight controller firmware version 3.2.0.0 or above, when the clearance between the  aircraft and the ground is less than 0.3m, the aircraft will pause landing and wait for the  user's confirmation to continue. Enabling the auto confirmation, allows the aircraft to  continue landing without the user's confirmation during the timeline execution. For firmware that  does not require landing confirmation, the value is ignored. The default value  is `true`.  @return A boolean value.",
                   1,
                   "/Components/Missions/DJIGoHomeAction.html",
                   "#DJIGoHomeAction_getAutoConfirmLandingEnabled_inline",
                   "",
            ],
            [
                   "GoToAction",
                   2,
                   "/Components/Missions/DJIGoToAction.html",
                   "#DJIGoToAction_initWithCoordinate_inline",
                   "Go to the specified coordinate from the current aircraft position.  @param coordinate Target coordinate.",
            ],
            [
                   "Go to the specified coordinate from the current aircraft position.  @param coordinate Target coordinate.",
                   1,
                   "/Components/Missions/DJIGoToAction.html",
                   "#DJIGoToAction_initWithCoordinate_inline",
                   "",
            ],
            [
                   "GoToAction",
                   2,
                   "/Components/Missions/DJIGoToAction.html",
                   "#DJIGoToAction_initWithAltitude_inline",
                   "Go to the specified altitude (in meters) from the current aircraft position.  @param altitude Target altitude in meters.",
            ],
            [
                   "Go to the specified altitude (in meters) from the current aircraft position.  @param altitude Target altitude in meters.",
                   1,
                   "/Components/Missions/DJIGoToAction.html",
                   "#DJIGoToAction_initWithAltitude_inline",
                   "",
            ],
            [
                   "GoToAction",
                   2,
                   "/Components/Missions/DJIGoToAction.html",
                   "#DJIGoToAction_initWithCoordinateWithAltitude_inline",
                   "Go to the specified coordinate and altitude (in meters) from the current aircraft position.  @param coordinate Target coordinate. @param altitude Target altitude in meters.",
            ],
            [
                   "Go to the specified coordinate and altitude (in meters) from the current aircraft position.  @param coordinate Target coordinate. @param altitude Target altitude in meters.",
                   1,
                   "/Components/Missions/DJIGoToAction.html",
                   "#DJIGoToAction_initWithCoordinateWithAltitude_inline",
                   "",
            ],
            [
                   "setFlightSpeed",
                   2,
                   "/Components/Missions/DJIGoToAction.html",
                   "#DJIGoToAction_setFlightSpeed_inline",
                   "Flight speed of the aircraft when going to the target location. Default is 8 m/s.  @param flightSpeed A float value of the flight speed.",
            ],
            [
                   "Flight speed of the aircraft when going to the target location. Default is 8 m/s.  @param flightSpeed A float value of the flight speed.",
                   1,
                   "/Components/Missions/DJIGoToAction.html",
                   "#DJIGoToAction_setFlightSpeed_inline",
                   "",
            ],
            [
                   "getFlightSpeed",
                   2,
                   "/Components/Missions/DJIGoToAction.html",
                   "#DJIGoToAction_getFlightSpeed_inline",
                   "Flight speed of the aircraft when going to the target location. Default is 8 m/s.  @return A float value of flight speed.",
            ],
            [
                   "Flight speed of the aircraft when going to the target location. Default is 8 m/s.  @return A float value of flight speed.",
                   1,
                   "/Components/Missions/DJIGoToAction.html",
                   "#DJIGoToAction_getFlightSpeed_inline",
                   "",
            ],
            [
                   "GoToActionError",
                   2,
                   "/Components/Missions/DJIGoToAction_DJIGoToActionError.html",
                   "",
                   "The error codes for the `GoToAction`.",
            ],
            [
                   "The error codes for the `GoToAction`.",
                   1,
                   "/Components/Missions/DJIGoToAction_DJIGoToActionError.html",
                   "",
                   "",
            ],
            [
                   "INVALID_ALTITUDE",
                   2,
                   "/Components/Missions/DJIGoToAction_DJIGoToActionError.html",
                   "#DJIGoToAction_DJIGoToActionError_InvalidAltitude_inline",
                   "Altitude of the `GoToAction` Waypoint mission is not valid, its value should  be in the range [-200, 500].",
            ],
            [
                   "Altitude of the `GoToAction` Waypoint mission is not valid, its value should  be in the range [-200, 500].",
                   1,
                   "/Components/Missions/DJIGoToAction_DJIGoToActionError.html",
                   "#DJIGoToAction_DJIGoToActionError_InvalidAltitude_inline",
                   "",
            ],
            [
                   "INVALID_COORDINATE",
                   2,
                   "/Components/Missions/DJIGoToAction_DJIGoToActionError.html",
                   "#DJIGoToAction_DJIGoToActionError_InvalidCoordinates_inline",
                   "GPS Coordinates of the GoToAction Waypoint is not valid. Latitude value should be in  the range [-90f, 90f] and longitude value should be in the range [-180f, 180f].",
            ],
            [
                   "GPS Coordinates of the GoToAction Waypoint is not valid. Latitude value should be in  the range [-90f, 90f] and longitude value should be in the range [-180f, 180f].",
                   1,
                   "/Components/Missions/DJIGoToAction_DJIGoToActionError.html",
                   "#DJIGoToAction_DJIGoToActionError_InvalidCoordinates_inline",
                   "",
            ],
            [
                   "INVALID_FLIGHT_SPEED",
                   2,
                   "/Components/Missions/DJIGoToAction_DJIGoToActionError.html",
                   "#DJIGoToAction_DJIGoToActionError_InvalidFlightSpeed_inline",
                   "Flight speed of the GoToAction Waypoint is not valid. Value should be in range [2, 15] m/s.",
            ],
            [
                   "Flight speed of the GoToAction Waypoint is not valid. Value should be in range [2, 15] m/s.",
                   1,
                   "/Components/Missions/DJIGoToAction_DJIGoToActionError.html",
                   "#DJIGoToAction_DJIGoToActionError_InvalidFlightSpeed_inline",
                   "",
            ],
            [
                   "RecordVideoAction",
                   2,
                   "/Components/Missions/DJIRecordVideoAction.html",
                   "#DJIRecordVideoAction_initWithDuration_inline",
                   "Initialize instance with video recording duration in seconds.  @param duration Time in seconds.",
            ],
            [
                   "Initialize instance with video recording duration in seconds.  @param duration Time in seconds.",
                   1,
                   "/Components/Missions/DJIRecordVideoAction.html",
                   "#DJIRecordVideoAction_initWithDuration_inline",
                   "",
            ],
            [
                   "RecordVideoAction",
                   2,
                   "/Components/Missions/DJIRecordVideoAction.html",
                   "#DJIRecordVideoAction_initWithStartOrStopRecordVideo_inline",
                   "Initialize instance for start or stop video recording.  @param isStartOrStop true is start, false is stop.",
            ],
            [
                   "Initialize instance for start or stop video recording.  @param isStartOrStop true is start, false is stop.",
                   1,
                   "/Components/Missions/DJIRecordVideoAction.html",
                   "#DJIRecordVideoAction_initWithStartOrStopRecordVideo_inline",
                   "",
            ],
            [
                   "RecordVideoActionError",
                   2,
                   "/Components/Missions/DJIRecordVideoAction_DJIRecordVideoActionError.html",
                   "",
                   "Error codes for record video actions.",
            ],
            [
                   "Error codes for record video actions.",
                   1,
                   "/Components/Missions/DJIRecordVideoAction_DJIRecordVideoActionError.html",
                   "",
                   "",
            ],
            [
                   "INVALID_DURATION",
                   2,
                   "/Components/Missions/DJIRecordVideoAction_DJIRecordVideoActionError.html",
                   "#DJIRecordVideoAction_DJIRecordVideoActionError_InvalidDuration_inline",
                   "Duration value is invalid (less than 0).",
            ],
            [
                   "Duration value is invalid (less than 0).",
                   1,
                   "/Components/Missions/DJIRecordVideoAction_DJIRecordVideoActionError.html",
                   "#DJIRecordVideoAction_DJIRecordVideoActionError_InvalidDuration_inline",
                   "",
            ],
            [
                   "ShootPhotoAction",
                   2,
                   "/Components/Missions/DJIShootPhotoAction.html",
                   "#DJIShootPhotoAction_initWithSingleShootPhoto_inline",
                   "Initialize object to shoot a single photo.",
            ],
            [
                   "Initialize object to shoot a single photo.",
                   1,
                   "/Components/Missions/DJIShootPhotoAction.html",
                   "#DJIShootPhotoAction_initWithSingleShootPhoto_inline",
                   "",
            ],
            [
                   "ShootPhotoAction",
                   2,
                   "/Components/Missions/DJIShootPhotoAction.html",
                   "#DJIShootPhotoAction_initWithPhotoCountAndTimeInterval_inline",
                   "Initialize object to shoot multiple photos.  @param count Photo count. @param interval Time interval in seconds between shooting photos.",
            ],
            [
                   "Initialize object to shoot multiple photos.  @param count Photo count. @param interval Time interval in seconds between shooting photos.",
                   1,
                   "/Components/Missions/DJIShootPhotoAction.html",
                   "#DJIShootPhotoAction_initWithPhotoCountAndTimeInterval_inline",
                   "",
            ],
            [
                   "ShootPhotoActionError",
                   2,
                   "/Components/Missions/DJIShootPhotoAction_DJIShootPhotoActionError.html",
                   "",
                   "Error codes for `ShootPhotoAction` specific errors.",
            ],
            [
                   "Error codes for `ShootPhotoAction` specific errors.",
                   1,
                   "/Components/Missions/DJIShootPhotoAction_DJIShootPhotoActionError.html",
                   "",
                   "",
            ],
            [
                   "INVALID_PHOTO_COUNT",
                   2,
                   "/Components/Missions/DJIShootPhotoAction_DJIShootPhotoActionError.html",
                   "#DJIShootPhotoAction_DJIShootPhotoActionError_InvalidPhotoCount_inline",
                   "Invalid value for photo count.",
            ],
            [
                   "Invalid value for photo count.",
                   1,
                   "/Components/Missions/DJIShootPhotoAction_DJIShootPhotoActionError.html",
                   "#DJIShootPhotoAction_DJIShootPhotoActionError_InvalidPhotoCount_inline",
                   "",
            ],
            [
                   "INVALID_TIME_INTERVAL",
                   2,
                   "/Components/Missions/DJIShootPhotoAction_DJIShootPhotoActionError.html",
                   "#DJIShootPhotoAction_DJIShootPhotoActionError_InvalidTimeInterval_inline",
                   "Invalid value for time interval.",
            ],
            [
                   "Invalid value for time interval.",
                   1,
                   "/Components/Missions/DJIShootPhotoAction_DJIShootPhotoActionError.html",
                   "#DJIShootPhotoAction_DJIShootPhotoActionError_InvalidTimeInterval_inline",
                   "",
            ],
            [
                   "HotpointAction",
                   2,
                   "/Components/Missions/DJIHotpointAction.html",
                   "#DJIHotpointAction_initWithMission_inline",
                   "Initialize with hotpoint mission. The Hotpoint action  will automatically stop after one complete orbit (360 degrees).  @param hotpointMission An object of `HotpointMission`.",
            ],
            [
                   "Initialize with hotpoint mission. The Hotpoint action  will automatically stop after one complete orbit (360 degrees).  @param hotpointMission An object of `HotpointMission`.",
                   1,
                   "/Components/Missions/DJIHotpointAction.html",
                   "#DJIHotpointAction_initWithMission_inline",
                   "",
            ],
            [
                   "HotpointAction",
                   2,
                   "/Components/Missions/DJIHotpointAction.html",
                   "#DJIHotpointAction_initWithMissionSurroundingAngle_inline",
                   "Initialize with a hotpoint mission and the angular distance the  aircraft should travel within the orbit.  @param mission An object of `HotpointMission`. @param surroundingAngle Angle in degrees.",
            ],
            [
                   "Initialize with a hotpoint mission and the angular distance the  aircraft should travel within the orbit.  @param mission An object of `HotpointMission`. @param surroundingAngle Angle in degrees.",
                   1,
                   "/Components/Missions/DJIHotpointAction.html",
                   "#DJIHotpointAction_initWithMissionSurroundingAngle_inline",
                   "",
            ],
            [
                   "setSurroundingAngle",
                   2,
                   "/Components/Missions/DJIHotpointAction.html",
                   "#DJIHotpointAction_surroundingAngle_inline",
                   "The angular distance in degrees the aircraft will travel in the  orbit of the hotpoint. The default is 360 degrees.  @param surroundingAngle Angle in degrees",
            ],
            [
                   "The angular distance in degrees the aircraft will travel in the  orbit of the hotpoint. The default is 360 degrees.  @param surroundingAngle Angle in degrees",
                   1,
                   "/Components/Missions/DJIHotpointAction.html",
                   "#DJIHotpointAction_surroundingAngle_inline",
                   "",
            ],
            [
                   "getHotpointMission",
                   2,
                   "/Components/Missions/DJIHotpointAction.html",
                   "#DJIHotpointAction_mission_inline",
                   "The hotpoint mission which is associated with this action.  @return A `HotpointMission` object.",
            ],
            [
                   "The hotpoint mission which is associated with this action.  @return A `HotpointMission` object.",
                   1,
                   "/Components/Missions/DJIHotpointAction.html",
                   "#DJIHotpointAction_mission_inline",
                   "",
            ],
            [
                   "getSurroundingAngle",
                   2,
                   "/Components/Missions/DJIHotpointAction.html",
                   "#DJIHotpointAction_getSurroundingAngle_inline",
                   "The angular distance in degrees the aircraft will travel in the  orbit of the hotpoint. The default is 360 degrees.  @return Angle in degrees.",
            ],
            [
                   "The angular distance in degrees the aircraft will travel in the  orbit of the hotpoint. The default is 360 degrees.  @return Angle in degrees.",
                   1,
                   "/Components/Missions/DJIHotpointAction.html",
                   "#DJIHotpointAction_getSurroundingAngle_inline",
                   "",
            ],
            [
                   "getWaypointMissionOperator",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_waypointMissionOperator_inline",
                   "Returns the operator for waypoint missions.  @return A Waypoint mission operator object.",
            ],
            [
                   "Returns the operator for waypoint missions.  @return A Waypoint mission operator object.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_waypointMissionOperator_inline",
                   "",
            ],
            [
                   "getHotpointMissionOperator",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_hotpointMissionOperator_inline",
                   "Returns the operator for Hotpoint missions.  @return A Hotpoint mission operator object.",
            ],
            [
                   "Returns the operator for Hotpoint missions.  @return A Hotpoint mission operator object.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_hotpointMissionOperator_inline",
                   "",
            ],
            [
                   "getFollowMeMissionOperator",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_followMeMissionOperator_inline",
                   "Returns the operator for Follow Me missions.  @return A Follow Me mission operator object.",
            ],
            [
                   "Returns the operator for Follow Me missions.  @return A Follow Me mission operator object.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_followMeMissionOperator_inline",
                   "",
            ],
            [
                   "getActiveTrackOperator",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_activeTrackMissionOperator_inline",
                   "Returns the operator for ActiveTrack missions.  @return An ActiveTrack mission operator object.",
            ],
            [
                   "Returns the operator for ActiveTrack missions.  @return An ActiveTrack mission operator object.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_activeTrackMissionOperator_inline",
                   "",
            ],
            [
                   "getTapFlyMissionOperator",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_tapFlyMissionOperator_inline",
                   "Returns the operator for TapFly missions.  @return A TapFly mission operator object.",
            ],
            [
                   "Returns the operator for TapFly missions.  @return A TapFly mission operator object.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_tapFlyMissionOperator_inline",
                   "",
            ],
            [
                   "getPanoramaMissionOperator",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_panoramaMissionOperator_inline",
                   "Returns the operator for Panorama missions.  @return A Panorama mission operator object.",
            ],
            [
                   "Returns the operator for Panorama missions.  @return A Panorama mission operator object.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_panoramaMissionOperator_inline",
                   "",
            ],
            [
                   "scheduleElement",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_scheduleElement_inline",
                   "Adds an element to the end of the Timeline.  @param element A `TimelineElement` element.  @return The first error if one occurred.",
            ],
            [
                   "Adds an element to the end of the Timeline.  @param element A `TimelineElement` element.  @return The first error if one occurred.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_scheduleElement_inline",
                   "",
            ],
            [
                   "scheduleElements",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_scheduleElements_inline",
                   "Adds a list of elements to the end of the Timeline.  @param elements A list of `TimelineElement` elements.  @return The first error if one occurred. ",
            ],
            [
                   "Adds a list of elements to the end of the Timeline.  @param elements A list of `TimelineElement` elements.  @return The first error if one occurred. ",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_scheduleElements_inline",
                   "",
            ],
            [
                   "scheduleElementAtIndex",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_scheduleElementAtIndex_inline",
                   "Insert an element into the Timeline at an index.  @param element A `TimelineElement` element @param index The element index to insert the new element before.  @return The first error if one occurred.",
            ],
            [
                   "Insert an element into the Timeline at an index.  @param element A `TimelineElement` element @param index The element index to insert the new element before.  @return The first error if one occurred.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_scheduleElementAtIndex_inline",
                   "",
            ],
            [
                   "unscheduleElement",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_unscheduleElement_inline",
                   "Remove element from the Timeline. If the same element was used more than once in the  Timeline, then the first one will be removed.  @param element A `TimelineElement` element that is already in the Timeline.",
            ],
            [
                   "Remove element from the Timeline. If the same element was used more than once in the  Timeline, then the first one will be removed.  @param element A `TimelineElement` element that is already in the Timeline.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_unscheduleElement_inline",
                   "",
            ],
            [
                   "unscheduleElementAtIndex",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_unscheduleElementAtIndex_inline",
                   "Removes the Element at an index in the Timeline.  @param index Index of element to remove.",
            ],
            [
                   "Removes the Element at an index in the Timeline.  @param index Index of element to remove.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_unscheduleElementAtIndex_inline",
                   "",
            ],
            [
                   "scheduledElementAtIndex",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_scheduledElementAtIndex_inline",
                   "Returns the element at a given index in the Timeline.  @param index An element index in the Timeline.  @return Either a mission, an element or `null` if nothing was at the given index.",
            ],
            [
                   "Returns the element at a given index in the Timeline.  @param index An element index in the Timeline.  @return Either a mission, an element or `null` if nothing was at the given index.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_scheduledElementAtIndex_inline",
                   "",
            ],
            [
                   "scheduledCount",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_scheduledCount_inline",
                   "Returns the number of elements within the Timeline.  @return Element count.",
            ],
            [
                   "Returns the number of elements within the Timeline.  @return Element count.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_scheduledCount_inline",
                   "",
            ],
            [
                   "unscheduleEverything",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_unscheduleEverything_inline",
                   "Clears the Timeline, removing all elements.",
            ],
            [
                   "Clears the Timeline, removing all elements.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_unscheduleEverything_inline",
                   "",
            ],
            [
                   "startTimeline",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_startTimeline_inline",
                   "Start Timeline execution from the current element index `getCurrentTimelineMarker`.",
            ],
            [
                   "Start Timeline execution from the current element index `getCurrentTimelineMarker`.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_startTimeline_inline",
                   "",
            ],
            [
                   "pauseTimeline",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_pauseTimeline_inline",
                   "Pause execution of the Timeline, and current element (if pausible). If the current element is not pausible then this method will do nothing.",
            ],
            [
                   "Pause execution of the Timeline, and current element (if pausible). If the current element is not pausible then this method will do nothing.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_pauseTimeline_inline",
                   "",
            ],
            [
                   "resumeTimeline",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_resumeTimeline_inline",
                   "Resume element and Timeline execution.",
            ],
            [
                   "Resume element and Timeline execution.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_resumeTimeline_inline",
                   "",
            ],
            [
                   "stopTimeline",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_stopTimeline_inline",
                   "Stops the execution of the Timeline, resets the marker index to 0.",
            ],
            [
                   "Stops the execution of the Timeline, resets the marker index to 0.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_stopTimeline_inline",
                   "",
            ],
            [
                   "isTimelineRunning",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_isTimelineRunning_inline",
                   "`true` if the Timeline is running.  @return A boolean value that is `true` if Timeline is running.",
            ],
            [
                   "`true` if the Timeline is running.  @return A boolean value that is `true` if Timeline is running.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_isTimelineRunning_inline",
                   "",
            ],
            [
                   "getCurrentTimelineMarker",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_currentTimelineMarker_inline",
                   "Tells the index in the timeline array that marks where the timeline is currently at.  Changing this value will reposition where the timeline will resume/start work.  @return Timeline element index.",
            ],
            [
                   "Tells the index in the timeline array that marks where the timeline is currently at.  Changing this value will reposition where the timeline will resume/start work.  @return Timeline element index.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_currentTimelineMarker_inline",
                   "",
            ],
            [
                   "setCurrentTimelineMarker",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_setCurrentTimelineMarker_inline",
                   "Sets the element index within the Timeline to start execution.  This value can be set only when a Timeline is stopped (not executing or paused).  @param currentTimelineMaker Timeline element index.",
            ],
            [
                   "Sets the element index within the Timeline to start execution.  This value can be set only when a Timeline is stopped (not executing or paused).  @param currentTimelineMaker Timeline element index.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_setCurrentTimelineMarker_inline",
                   "",
            ],
            [
                   "isTimelinePaused",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_isTimelinePaused_inline",
                   "`true` if Timeline is paused.  @return `true` if Timeline is paused.",
            ],
            [
                   "`true` if Timeline is paused.  @return `true` if Timeline is paused.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_isTimelinePaused_inline",
                   "",
            ],
            [
                   "getRunningElement",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_runningElement_inline",
                   "The current element that is running in the Timeline. If the Timeline is not running, then this is `null`.  @return Timeline element",
            ],
            [
                   "The current element that is running in the Timeline. If the Timeline is not running, then this is `null`.  @return Timeline element",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_runningElement_inline",
                   "",
            ],
            [
                   "addListener",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_addListenerToTimelineProgressWithBlock_inline",
                   "Adds a listener to all Timeline events.  @param listener A listener object.",
            ],
            [
                   "Adds a listener to all Timeline events.  @param listener A listener object.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_addListenerToTimelineProgressWithBlock_inline",
                   "",
            ],
            [
                   "removeListener",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_removeListener_inline",
                   "Removes the listener from the Timeline events listeners pool.  @param listener A previously added listener object.",
            ],
            [
                   "Removes the listener from the Timeline events listeners pool.  @param listener A previously added listener object.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_removeListener_inline",
                   "",
            ],
            [
                   "removeAllListeners",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_removeAllListeners_inline",
                   "Removes all listeners from the Timeline events listeners pool.",
            ],
            [
                   "Removes all listeners from the Timeline events listeners pool.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_removeAllListeners_inline",
                   "",
            ],
            [
                   "TimelineElement",
                   2,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "",
                   "Required behavior of elements that run in a Timeline.  In addition to implementing this behavior, a Timeline element must communicate with Mission Control to let it know its state. Mission Control will wait for updates from the Timeline element before it itself progresses. Refer to `TimelineElementFeedback` for the methods Mission Control exposes for the Timeline element to use to communicate.",
            ],
            [
                   "Required behavior of elements that run in a Timeline.  In addition to implementing this behavior, a Timeline element must communicate with Mission Control to let it know its state. Mission Control will wait for updates from the Timeline element before it itself progresses. Refer to `TimelineElementFeedback` for the methods Mission Control exposes for the Timeline element to use to communicate.",
                   1,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "",
                   "",
            ],
            [
                   "onEvent",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEventBlock_inline",
                   "Listener used to process Timeline events.  @param element The Timeline element associated with the event, or `null` if the  event is global to the whole Timeline (e.g. start, finish the  Timeline). @param event Event. @param error The optional error if the event was error-related.",
            ],
            [
                   "Listener used to process Timeline events.  @param element The Timeline element associated with the event, or `null` if the  event is global to the whole Timeline (e.g. start, finish the  Timeline). @param event Event. @param error The optional error if the event was error-related.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEventBlock_inline",
                   "",
            ],
            [
                   "Listener",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEventBlockInterface_inline",
                   "Listener used to process Timeline events.",
            ],
            [
                   "Listener used to process Timeline events.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEventBlockInterface_inline",
                   "",
            ],
            [
                   "TimelineEvent",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_inline",
                   "Events that can initiate a call to the Mission Control listener.",
            ],
            [
                   "Events that can initiate a call to the Mission Control listener.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_inline",
                   "",
            ],
            [
                   "TimelineElementFeedback",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_inline",
                   "This protocol defines how the timeline element may contact mission control  to notify it of its own execution. This protocol is not intended to be  implemented by any other object and the use of a protocol is primarily  organizational.",
            ],
            [
                   "This protocol defines how the timeline element may contact mission control  to notify it of its own execution. This protocol is not intended to be  implemented by any other object and the use of a protocol is primarily  organizational.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_inline",
                   "",
            ],
            [
                   "MissionControlError",
                   2,
                   "/Components/Missions/DJIMissionControlError.html",
                   "",
                   "Defines all MissionControl related errors.",
            ],
            [
                   "Defines all MissionControl related errors.",
                   1,
                   "/Components/Missions/DJIMissionControlError.html",
                   "",
                   "",
            ],
            [
                   "triggers",
                   2,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "#DJIMissionControlTimelineElement_triggers_inline",
                   "If implemented, Mission Control loads and activates the triggers for the duration that the Timeline element is executing.  @return A List of `Trigger` object.",
            ],
            [
                   "If implemented, Mission Control loads and activates the triggers for the duration that the Timeline element is executing.  @return A List of `Trigger` object.",
                   1,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "#DJIMissionControlTimelineElement_triggers_inline",
                   "",
            ],
            [
                   "isPausable",
                   2,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "#DJIMissionControlTimelineElement_isPausable_inline",
                   "`true` if the element can be paused. If `false`, then when the Timeline is asked to pause when this element is running, nothing will happen.  @return `true` if the element can be paused.",
            ],
            [
                   "`true` if the element can be paused. If `false`, then when the Timeline is asked to pause when this element is running, nothing will happen.  @return `true` if the element can be paused.",
                   1,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "#DJIMissionControlTimelineElement_isPausable_inline",
                   "",
            ],
            [
                   "checkValidity",
                   2,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "#DJIMissionControlTimelineElement_checkValidity_inline",
                   "Returns an error if there is a configuration or parameter error in the element. Returns `null` if there is no issue.  @return A `DJIError` object.",
            ],
            [
                   "Returns an error if there is a configuration or parameter error in the element. Returns `null` if there is no issue.  @return A `DJIError` object.",
                   1,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "#DJIMissionControlTimelineElement_checkValidity_inline",
                   "",
            ],
            [
                   "willRun",
                   2,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "#DJIMissionControlTimelineElement_willRun_inline",
                   "If Implemented, this is called by Mission Control right before running the element.",
            ],
            [
                   "If Implemented, this is called by Mission Control right before running the element.",
                   1,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "#DJIMissionControlTimelineElement_willRun_inline",
                   "",
            ],
            [
                   "run",
                   2,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "#DJIMissionControlTimelineElement_run_inline",
                   "Starts execution of Timeline element. Missions adopting this behavior are being run with their respective operators.",
            ],
            [
                   "Starts execution of Timeline element. Missions adopting this behavior are being run with their respective operators.",
                   1,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "#DJIMissionControlTimelineElement_run_inline",
                   "",
            ],
            [
                   "pause",
                   2,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "#DJIMissionControlTimelineElement_pauseRun_inline",
                   "Pauses the execution of the element. Must be implemented if `isPausable` returns `true`.",
            ],
            [
                   "Pauses the execution of the element. Must be implemented if `isPausable` returns `true`.",
                   1,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "#DJIMissionControlTimelineElement_pauseRun_inline",
                   "",
            ],
            [
                   "resume",
                   2,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "#DJIMissionControlTimelineElement_resumeRun_inline",
                   "Resumes the execution of the element. Must be implemented if `isPausable` returns `true`.",
            ],
            [
                   "Resumes the execution of the element. Must be implemented if `isPausable` returns `true`.",
                   1,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "#DJIMissionControlTimelineElement_resumeRun_inline",
                   "",
            ],
            [
                   "stop",
                   2,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "#DJIMissionControlTimelineElement_stopRun_inline",
                   "Stops execution of the element.",
            ],
            [
                   "Stops execution of the element.",
                   1,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "#DJIMissionControlTimelineElement_stopRun_inline",
                   "",
            ],
            [
                   "didRun",
                   2,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "#DJIMissionControlTimelineElement_didRun_inline",
                   "Called after element execution, regardless of whether or not it was successful.",
            ],
            [
                   "Called after element execution, regardless of whether or not it was successful.",
                   1,
                   "/Components/Missions/DJIMissionControlTimelineElement.html",
                   "#DJIMissionControlTimelineElement_didRun_inline",
                   "",
            ],
            [
                   "onStart",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_elementDidStartRunning_inline",
                   "Used by elements to notify Mission Control of their successful start.  @param element A previously scheduled element. Should also be the element running.",
            ],
            [
                   "Used by elements to notify Mission Control of their successful start.  @param element A previously scheduled element. Should also be the element running.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_elementDidStartRunning_inline",
                   "",
            ],
            [
                   "onStartWithError",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_elementFailedStartingWithError_inline",
                   "Used by elements to notify Mission Control of a failure preventing to start.  @param element A previously scheduled element. Should also be the element running. @param error A valid error object.",
            ],
            [
                   "Used by elements to notify Mission Control of a failure preventing to start.  @param element A previously scheduled element. Should also be the element running. @param error A valid error object.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_elementFailedStartingWithError_inline",
                   "",
            ],
            [
                   "onProgressWithError",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_elementProgressedWithError_inline",
                   "Used by elements to notify Mission Control of a progress in the execution. Additional information may be pulled by mission control depending on the element. Calling this method with an error means the element is still running and the error did not cause it to stop.  @param element A previously scheduled element. Should also be the element running. @param error An optional error if something went wrong.",
            ],
            [
                   "Used by elements to notify Mission Control of a progress in the execution. Additional information may be pulled by mission control depending on the element. Calling this method with an error means the element is still running and the error did not cause it to stop.  @param element A previously scheduled element. Should also be the element running. @param error An optional error if something went wrong.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_elementProgressedWithError_inline",
                   "",
            ],
            [
                   "onPause",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_elementDidPause_inline",
                   "Used by elements to notify Mission Control of a successful pausing.  @param element A previously scheduled element. Should also be the element running.",
            ],
            [
                   "Used by elements to notify Mission Control of a successful pausing.  @param element A previously scheduled element. Should also be the element running.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_elementDidPause_inline",
                   "",
            ],
            [
                   "onPauseWithError",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_elementFailedPausingWithError_inline",
                   "Used by elements to notify Mission Control of a failure to pause. The element is expected to be still running.  @param element A previously scheduled element. Should also be the element running. @param error A valid error object.",
            ],
            [
                   "Used by elements to notify Mission Control of a failure to pause. The element is expected to be still running.  @param element A previously scheduled element. Should also be the element running. @param error A valid error object.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_elementFailedPausingWithError_inline",
                   "",
            ],
            [
                   "onResume",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_elementDidResume_inline",
                   "Used by elements to notify Mission Control of a successful resuming of a previously paused element.  @param element A previously scheduled element. Should also be the element running.",
            ],
            [
                   "Used by elements to notify Mission Control of a successful resuming of a previously paused element.  @param element A previously scheduled element. Should also be the element running.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_elementDidResume_inline",
                   "",
            ],
            [
                   "onResumeWithError",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_elementFailedResumingWithError_inline",
                   "Used by elements to notify Mission Control of a failure to resume. The element is expected to be still paused.  @param element A previously scheduled element. Should also be the element running. @param error A valid error object.",
            ],
            [
                   "Used by elements to notify Mission Control of a failure to resume. The element is expected to be still paused.  @param element A previously scheduled element. Should also be the element running. @param error A valid error object.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_elementFailedResumingWithError_inline",
                   "",
            ],
            [
                   "onFinishWithError",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_elementDidFinishRunningWithError_inline",
                   "Used by elements to notify Mission Control of the end of the execution of it.  @param element A previously scheduled element. Should also be the element running. @param error An optional error if the execution end was the result of it.",
            ],
            [
                   "Used by elements to notify Mission Control of the end of the execution of it.  @param element A previously scheduled element. Should also be the element running. @param error An optional error if the execution end was the result of it.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_elementDidFinishRunningWithError_inline",
                   "",
            ],
            [
                   "onStopWithError",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_elementFailedStoppingWithError_inline",
                   "Used by elements to notify Mission Control of a failure to stop the execution of the element. This should only be used to handle error after stopRun is called.  @param element A previously scheduled element. Should also be the element running. @param error A valid error object.",
            ],
            [
                   "Used by elements to notify Mission Control of a failure to stop the execution of the element. This should only be used to handle error after stopRun is called.  @param element A previously scheduled element. Should also be the element running. @param error A valid error object.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControlTimelineElementFeedback_elementFailedStoppingWithError_inline",
                   "",
            ],
            [
                   "NOT_PAUSABLE_OR_RESUMABLE",
                   2,
                   "/Components/Missions/DJIMissionControlError.html",
                   "#DJIMissionControlError_TimelineErrorNotPausableOrResumable_inline",
                   "Unsupported feature error. Where possible: This error will be returned by the function for a special feature interface when the feature is not supported by the device.",
            ],
            [
                   "Unsupported feature error. Where possible: This error will be returned by the function for a special feature interface when the feature is not supported by the device.",
                   1,
                   "/Components/Missions/DJIMissionControlError.html",
                   "#DJIMissionControlError_TimelineErrorNotPausableOrResumable_inline",
                   "",
            ],
            [
                   "CANNOT_SCHEDULE_WHILE_RUNNING",
                   2,
                   "/Components/Missions/DJIMissionControlError.html",
                   "#DJIMissionControlError_TimelineErrorCantScheduleWhileRunning_inline",
                   "Tried to schedule new element while the Timeline was running.",
            ],
            [
                   "Tried to schedule new element while the Timeline was running.",
                   1,
                   "/Components/Missions/DJIMissionControlError.html",
                   "#DJIMissionControlError_TimelineErrorCantScheduleWhileRunning_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_Unknown_inline",
                   "Unknown event type. This is a default value if no other event is matching.",
            ],
            [
                   "Unknown event type. This is a default value if no other event is matching.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_Unknown_inline",
                   "",
            ],
            [
                   "STARTED",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_Started_inline",
                   "Timeline successfully started.",
            ],
            [
                   "Timeline successfully started.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_Started_inline",
                   "",
            ],
            [
                   "START_ERROR",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_StartError_inline",
                   "Timeline failed to start.",
            ],
            [
                   "Timeline failed to start.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_StartError_inline",
                   "",
            ],
            [
                   "PROGRESSED",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_Progressed_inline",
                   "Timeline element progressed.",
            ],
            [
                   "Timeline element progressed.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_Progressed_inline",
                   "",
            ],
            [
                   "PAUSED",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_Paused_inline",
                   "Timeline successfully paused.",
            ],
            [
                   "Timeline successfully paused.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_Paused_inline",
                   "",
            ],
            [
                   "PAUSE_ERROR",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_PauseError_inline",
                   "Timeline failed to be paused.",
            ],
            [
                   "Timeline failed to be paused.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_PauseError_inline",
                   "",
            ],
            [
                   "RESUMED",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_Resumed_inline",
                   "Timeline successfully resumed.",
            ],
            [
                   "Timeline successfully resumed.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_Resumed_inline",
                   "",
            ],
            [
                   "RESUME_ERROR",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_ResumeError_inline",
                   "Timeline failed to resume.",
            ],
            [
                   "Timeline failed to resume.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_ResumeError_inline",
                   "",
            ],
            [
                   "STOPPED",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_Stopped_inline",
                   "Timeline Stopped successfully.",
            ],
            [
                   "Timeline Stopped successfully.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_Stopped_inline",
                   "",
            ],
            [
                   "STOP_ERROR",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_StopError_inline",
                   "Timeline failed to stop and is still continuing in its previous state.",
            ],
            [
                   "Timeline failed to stop and is still continuing in its previous state.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_StopError_inline",
                   "",
            ],
            [
                   "FINISHED",
                   2,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_Finished_inline",
                   "Timeline completed its execution normally.",
            ],
            [
                   "Timeline completed its execution normally.",
                   1,
                   "/Components/Missions/DJIMissionControl.html",
                   "#DJIMissionControl_DJIMissionControlTimelineEvent_Finished_inline",
                   "",
            ],
            [
                   "isActive",
                   2,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_isActive_inline",
                   "`true` if the trigger is currently active. The trigger is active when the Timeline element it is associated with is being executed in the Timeline.  @return `true` if active.",
            ],
            [
                   "`true` if the trigger is currently active. The trigger is active when the Timeline element it is associated with is being executed in the Timeline.  @return `true` if active.",
                   1,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_isActive_inline",
                   "",
            ],
            [
                   "setAction",
                   2,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_setAction_inline",
                   "The action to execute. It is up to the trigger's implementation to decide when to call this action. The action should never be called by anything but the trigger. Actions can be implemented without using this property, but in addition `notifyListenersOfEvent` needs to be used to notify any listeners of the Trigger that an action was executed.  In future subclasses of this property to be provided, this action  block will be used to give developers control of an action when a  set of criteria has been met. For example, a subclass of this may  be a battery threshold trigger. Once the battery passes some threshold developers will be able to define the action they want to trigger.  @param action Action to trigger.",
            ],
            [
                   "The action to execute. It is up to the trigger's implementation to decide when to call this action. The action should never be called by anything but the trigger. Actions can be implemented without using this property, but in addition `notifyListenersOfEvent` needs to be used to notify any listeners of the Trigger that an action was executed.  In future subclasses of this property to be provided, this action  block will be used to give developers control of an action when a  set of criteria has been met. For example, a subclass of this may  be a battery threshold trigger. Once the battery passes some threshold developers will be able to define the action they want to trigger.  @param action Action to trigger.",
                   1,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_setAction_inline",
                   "",
            ],
            [
                   "start",
                   2,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_start_inline",
                   "Begins trigger activity including monitoring the criteria required to  trigger the action. When subclassing,  the super class's start</code> method should be called on the first line.",
            ],
            [
                   "Begins trigger activity including monitoring the criteria required to  trigger the action. When subclassing,  the super class's start</code> method should be called on the first line.",
                   1,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_start_inline",
                   "",
            ],
            [
                   "stop",
                   2,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_stop_inline",
                   "Ends all trigger activity including monitoring the criteria required to  trigger the action. When subclassing,  the super class's stop</code> method should be called at the end.",
            ],
            [
                   "Ends all trigger activity including monitoring the criteria required to  trigger the action. When subclassing,  the super class's stop</code> method should be called at the end.",
                   1,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_stop_inline",
                   "",
            ],
            [
                   "addListener",
                   2,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_addListener_inline",
                   "Adds a listener to all trigger events  @param listener A listener object",
            ],
            [
                   "Adds a listener to all trigger events  @param listener A listener object",
                   1,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_addListener_inline",
                   "",
            ],
            [
                   "removeListener",
                   2,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_removeListener_inline",
                   "Removes the listener from the listeners pool of all trigger events.  @param listener A previously added listener object.",
            ],
            [
                   "Removes the listener from the listeners pool of all trigger events.  @param listener A previously added listener object.",
                   1,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_removeListener_inline",
                   "",
            ],
            [
                   "removeAllListeners",
                   2,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_removeAllListeners_inline",
                   "Removes all listeners from the listeners pool of all trigger events.",
            ],
            [
                   "Removes all listeners from the listeners pool of all trigger events.",
                   1,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_removeAllListeners_inline",
                   "",
            ],
            [
                   "notifyListenersOfEvent",
                   2,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_notifyListenersOfEventError_inline",
                   "Notifies listeners about a trigger event. Should be used in subclasses especially after calling the action.  @param event A valid DJIMissionTriggerEvent. @param error An optional error.",
            ],
            [
                   "Notifies listeners about a trigger event. Should be used in subclasses especially after calling the action.  @param event A valid DJIMissionTriggerEvent. @param error An optional error.",
                   1,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_notifyListenersOfEventError_inline",
                   "",
            ],
            [
                   "Action",
                   2,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_DJIMissionTriggerActionInterface_inline",
                   "The type for the block being called when the trigger is triggered.",
            ],
            [
                   "The type for the block being called when the trigger is triggered.",
                   1,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_DJIMissionTriggerActionInterface_inline",
                   "",
            ],
            [
                   "onCall",
                   2,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_DJIMissionTriggerActionCallback_inline",
                   "Call the action.",
            ],
            [
                   "Call the action.",
                   1,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_DJIMissionTriggerActionCallback_inline",
                   "",
            ],
            [
                   "Listener",
                   2,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_listenerInterface_inline",
                   "Listener interface for Trigger events.",
            ],
            [
                   "Listener interface for Trigger events.",
                   1,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_listenerInterface_inline",
                   "",
            ],
            [
                   "onEvent",
                   2,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_onEventCallback_inline",
                   "Called when a trigger event occurs.  @param trigger The instance of the trigger. @param event The event type which caused the call. @param error An optional error.",
            ],
            [
                   "Called when a trigger event occurs.  @param trigger The instance of the trigger. @param event The event type which caused the call. @param error An optional error.",
                   1,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_onEventCallback_inline",
                   "",
            ],
            [
                   "TriggerEvent",
                   2,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_DJIMissionTriggerEvent_inline",
                   "Events that may occur during the lifecycle of a mission trigger.",
            ],
            [
                   "Events that may occur during the lifecycle of a mission trigger.",
                   1,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_DJIMissionTriggerEvent_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_DJIMissionTriggerEventUnknown_inline",
                   "The default event if no other event matches the situation.",
            ],
            [
                   "The default event if no other event matches the situation.",
                   1,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_DJIMissionTriggerEventUnknown_inline",
                   "",
            ],
            [
                   "STARTED",
                   2,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_DJIMissionTriggerEventStarted_inline",
                   "The trigger has started to monitor for its triggering criteria",
            ],
            [
                   "The trigger has started to monitor for its triggering criteria",
                   1,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_DJIMissionTriggerEventStarted_inline",
                   "",
            ],
            [
                   "ACTION_TRIGGERED",
                   2,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_DJIMissionTriggerEventActionTriggered_inline",
                   "The action block has been called as a result of matching the triggers' criteria",
            ],
            [
                   "The action block has been called as a result of matching the triggers' criteria",
                   1,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_DJIMissionTriggerEventActionTriggered_inline",
                   "",
            ],
            [
                   "STOPPED",
                   2,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_DJIMissionTriggerEventStopped_inline",
                   "The trigger no longer monitors data for its triggering criteria",
            ],
            [
                   "The trigger no longer monitors data for its triggering criteria",
                   1,
                   "/Components/Missions/DJIMissionTrigger.html",
                   "#DJIMissionTrigger_DJIMissionTriggerEventStopped_inline",
                   "",
            ],
            [
                   "getCurrentState",
                   2,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMissionOperator_currentState_inline",
                   "The current state of the operator.  @return An object of `PanoramaMissionState`.",
            ],
            [
                   "The current state of the operator.  @return An object of `PanoramaMissionState`.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMissionOperator_currentState_inline",
                   "",
            ],
            [
                   "addListener",
                   2,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMissionOperator_addListenerToEvents_inline",
                   "Adds listener to receive all events of the Panorama mission operator.  @param listener An interface of `PanoramaMissionOperatorListener`.",
            ],
            [
                   "Adds listener to receive all events of the Panorama mission operator.  @param listener An interface of `PanoramaMissionOperatorListener`.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMissionOperator_addListenerToEvents_inline",
                   "",
            ],
            [
                   "removeListener",
                   2,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMissionOperator_removeListener_inline",
                   "Removes listener. The listener will not receive any update after calling this method.  @param listener Listener to be removed.",
            ],
            [
                   "Removes listener. The listener will not receive any update after calling this method.  @param listener Listener to be removed.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMissionOperator_removeListener_inline",
                   "",
            ],
            [
                   "removeAllListeners",
                   2,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMissionOperator_removeAllListeners_inline",
                   "Remove all listeners.",
            ],
            [
                   "Remove all listeners.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMissionOperator_removeAllListeners_inline",
                   "",
            ],
            [
                   "setup",
                   2,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMissionOperator_setupWithMode_inline",
                   "Sets up the Panorama mission with the specific mode. It can only be called  when the `getCurrentState` is one of the  following:  - `READY_TO_SETUP`  - `READY_TO_EXECUTE`  If the setup starts  successfully, `getCurrentState` will become  `SETTING_UP`. Normally, it will take seconds to  complete the setup. Once setup is completed successfully,  `getCurrentState` will become  `READY_TO_EXECUTE`.  @param mode An enum value of `PanoramaMode`. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets up the Panorama mission with the specific mode. It can only be called  when the `getCurrentState` is one of the  following:  - `READY_TO_SETUP`  - `READY_TO_EXECUTE`  If the setup starts  successfully, `getCurrentState` will become  `SETTING_UP`. Normally, it will take seconds to  complete the setup. Once setup is completed successfully,  `getCurrentState` will become  `READY_TO_EXECUTE`.  @param mode An enum value of `PanoramaMode`. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMissionOperator_setupWithMode_inline",
                   "",
            ],
            [
                   "startMission",
                   2,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMissionOperator_startMission_inline",
                   "Starts to execute the mission that has been setup.  It can only be called when  the `getCurrentState` is `READY_TO_EXECUTE`.  If the mission is started successfully, the  `getCurrentState` will become `EXECUTING`.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Starts to execute the mission that has been setup.  It can only be called when  the `getCurrentState` is `READY_TO_EXECUTE`.  If the mission is started successfully, the  `getCurrentState` will become `EXECUTING`.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMissionOperator_startMission_inline",
                   "",
            ],
            [
                   "stopMission",
                   2,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMissionOperator_stopMission_inline",
                   "Stops the executing mission. It can only be called when the  `getCurrentState` is  `EXECUTING`. After a mission is stopped successfully,  `getCurrentState` will become  `READY_TO_EXECUTE`.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Stops the executing mission. It can only be called when the  `getCurrentState` is  `EXECUTING`. After a mission is stopped successfully,  `getCurrentState` will become  `READY_TO_EXECUTE`.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMissionOperator_stopMission_inline",
                   "",
            ],
            [
                   "getRecentPanoramaMediaFile",
                   2,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMissionOperator_getPanoramaMediaFile_inline",
                   "Retrieves the `MediaFile` object for the recently finished panorama  mission.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Retrieves the `MediaFile` object for the recently finished panorama  mission.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMissionOperator_getPanoramaMediaFile_inline",
                   "",
            ],
            [
                   "PanoramaMissionOperatorListener",
                   2,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#PanoramaMissionOperatorListener_inline",
                   "Listener interface for Panorama mission events.",
            ],
            [
                   "Listener interface for Panorama mission events.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#PanoramaMissionOperatorListener_inline",
                   "",
            ],
            [
                   "onExecutionUpdate",
                   2,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#PanoramaMissionOperatorListener_onReceive_inline",
                   "Called when received a new Panorama mission event.  @param event An object of `PanoramaMissionEvent`.",
            ],
            [
                   "Called when received a new Panorama mission event.  @param event An object of `PanoramaMissionEvent`.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#PanoramaMissionOperatorListener_onReceive_inline",
                   "",
            ],
            [
                   "PanoramaMissionEvent",
                   2,
                   "/Components/Missions/DJIPanoramaMissionEvent.html",
                   "",
                   "This class encapsulates all the state changes of the Panorama mission operator.",
            ],
            [
                   "This class encapsulates all the state changes of the Panorama mission operator.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionEvent.html",
                   "",
                   "",
            ],
            [
                   "getPreviousState",
                   2,
                   "/Components/Missions/DJIPanoramaMissionEvent.html",
                   "#DJIPanoramaMissionEvent_previousState_inline",
                   "The previous state of the operator.  @return An object of `PanoramaMissionState`.",
            ],
            [
                   "The previous state of the operator.  @return An object of `PanoramaMissionState`.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionEvent.html",
                   "#DJIPanoramaMissionEvent_previousState_inline",
                   "",
            ],
            [
                   "getCurrentState",
                   2,
                   "/Components/Missions/DJIPanoramaMissionEvent.html",
                   "#DJIPanoramaMissionEvent_currentState_inline",
                   "The current state of the operator.  @return An object of `PanoramaMissionState`.",
            ],
            [
                   "The current state of the operator.  @return An object of `PanoramaMissionState`.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionEvent.html",
                   "#DJIPanoramaMissionEvent_currentState_inline",
                   "",
            ],
            [
                   "getExecutionState",
                   2,
                   "/Components/Missions/DJIPanoramaMissionEvent.html",
                   "#DJIPanoramaMissionEvent_status_inline",
                   "The detailed state of the executing Panorama mission. It is only valid when `getCurrentState` is  `EXECUTING`. For the other states, it is `null`.  @return An object of `PanoramaMissionExecutionState`.",
            ],
            [
                   "The detailed state of the executing Panorama mission. It is only valid when `getCurrentState` is  `EXECUTING`. For the other states, it is `null`.  @return An object of `PanoramaMissionExecutionState`.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionEvent.html",
                   "#DJIPanoramaMissionEvent_status_inline",
                   "",
            ],
            [
                   "getError",
                   2,
                   "/Components/Missions/DJIPanoramaMissionEvent.html",
                   "#DJIPanoramaMissionEvent_error_inline",
                   "The error of DJIPanoramaMissionEvent.  @return An object of `DJIError`.",
            ],
            [
                   "The error of DJIPanoramaMissionEvent.  @return An object of `DJIError`.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionEvent.html",
                   "#DJIPanoramaMissionEvent_error_inline",
                   "",
            ],
            [
                   "PanoramaMissionState",
                   2,
                   "/Components/Missions/DJIPanoramaMissionState.html",
                   "",
                   "Panorama Mission State.",
            ],
            [
                   "Panorama Mission State.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionState.html",
                   "",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Missions/DJIPanoramaMissionState.html",
                   "#DJIPanoramaMissionState_Unknown_inline",
                   "The state of the operator is unknown. This is the initial state when the operator  has just been created.",
            ],
            [
                   "The state of the operator is unknown. This is the initial state when the operator  has just been created.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionState.html",
                   "#DJIPanoramaMissionState_Unknown_inline",
                   "",
            ],
            [
                   "DISCONNECTED",
                   2,
                   "/Components/Missions/DJIPanoramaMissionState.html",
                   "#DJIPanoramaMissionState_Disconnected_inline",
                   "The connection between the mobile device and Osmo is broken.",
            ],
            [
                   "The connection between the mobile device and Osmo is broken.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionState.html",
                   "#DJIPanoramaMissionState_Disconnected_inline",
                   "",
            ],
            [
                   "NOT_SUPPORTED",
                   2,
                   "/Components/Missions/DJIPanoramaMissionState.html",
                   "#DJIPanoramaMissionState_NotSupported_inline",
                   "The connected product does not support Panorama mission.",
            ],
            [
                   "The connected product does not support Panorama mission.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionState.html",
                   "#DJIPanoramaMissionState_NotSupported_inline",
                   "",
            ],
            [
                   "READY_TO_SETUP",
                   2,
                   "/Components/Missions/DJIPanoramaMissionState.html",
                   "#DJIPanoramaMissionState_ReadyToSetup_inline",
                   "The operator is ready to setup a Panorama mission.",
            ],
            [
                   "The operator is ready to setup a Panorama mission.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionState.html",
                   "#DJIPanoramaMissionState_ReadyToSetup_inline",
                   "",
            ],
            [
                   "SETTING_UP",
                   2,
                   "/Components/Missions/DJIPanoramaMissionState.html",
                   "#DJIPanoramaMissionState_SettingUp_inline",
                   "The operator is setting up for a Panorama mission.",
            ],
            [
                   "The operator is setting up for a Panorama mission.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionState.html",
                   "#DJIPanoramaMissionState_SettingUp_inline",
                   "",
            ],
            [
                   "READY_TO_EXECUTE",
                   2,
                   "/Components/Missions/DJIPanoramaMissionState.html",
                   "#DJIPanoramaMissionState_ReadyToExecute_inline",
                   "The setup for the Panorama mission is complete. The operator is ready to  start the execution.",
            ],
            [
                   "The setup for the Panorama mission is complete. The operator is ready to  start the execution.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionState.html",
                   "#DJIPanoramaMissionState_ReadyToExecute_inline",
                   "",
            ],
            [
                   "EXECUTING",
                   2,
                   "/Components/Missions/DJIPanoramaMissionState.html",
                   "#DJIPanoramaMissionState_Executing_inline",
                   "The operator is executing a Panorama mission.",
            ],
            [
                   "The operator is executing a Panorama mission.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionState.html",
                   "#DJIPanoramaMissionState_Executing_inline",
                   "",
            ],
            [
                   "PanoramaMissionExecutionState",
                   2,
                   "/Components/Missions/DJIPanoramaMission_DJIPanoramaMissionStatus.html",
                   "",
                   "This class provides the real-time status of an executing Panorama mission.",
            ],
            [
                   "This class provides the real-time status of an executing Panorama mission.",
                   1,
                   "/Components/Missions/DJIPanoramaMission_DJIPanoramaMissionStatus.html",
                   "",
                   "",
            ],
            [
                   "getTotalNumber",
                   2,
                   "/Components/Missions/DJIPanoramaMission_DJIPanoramaMissionStatus.html",
                   "#DJIPanoramaMission_DJIPanoramaMissionStatus_totalNumber_inline",
                   "The total number of photos that will be shot during the mission. In full circle mode,  the number should be 8. In the half circle mode, the number should be 5.  @return An int value of total shot photo number.",
            ],
            [
                   "The total number of photos that will be shot during the mission. In full circle mode,  the number should be 8. In the half circle mode, the number should be 5.  @return An int value of total shot photo number.",
                   1,
                   "/Components/Missions/DJIPanoramaMission_DJIPanoramaMissionStatus.html",
                   "#DJIPanoramaMission_DJIPanoramaMissionStatus_totalNumber_inline",
                   "",
            ],
            [
                   "getCurrentShotNumber",
                   2,
                   "/Components/Missions/DJIPanoramaMission_DJIPanoramaMissionStatus.html",
                   "#DJIPanoramaMission_DJIPanoramaMissionStatus_currentShotNumber_inline",
                   "The number of photos that have been shot.  @return An int value of current shot photo number.",
            ],
            [
                   "The number of photos that have been shot.  @return An int value of current shot photo number.",
                   1,
                   "/Components/Missions/DJIPanoramaMission_DJIPanoramaMissionStatus.html",
                   "#DJIPanoramaMission_DJIPanoramaMissionStatus_currentShotNumber_inline",
                   "",
            ],
            [
                   "getCurrentSavedNumber",
                   2,
                   "/Components/Missions/DJIPanoramaMission_DJIPanoramaMissionStatus.html",
                   "#DJIPanoramaMission_DJIPanoramaMissionStatus_currentSavedNumber_inline",
                   "The number of photos that have been saved to SD card.  @return An int value of current saved photo number.",
            ],
            [
                   "The number of photos that have been saved to SD card.  @return An int value of current saved photo number.",
                   1,
                   "/Components/Missions/DJIPanoramaMission_DJIPanoramaMissionStatus.html",
                   "#DJIPanoramaMission_DJIPanoramaMissionStatus_currentSavedNumber_inline",
                   "",
            ],
            [
                   "PanoramaMode",
                   2,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMission_DJIPanoramaMode_inline",
                   "Defines options for different types of modes for Panorama mission.",
            ],
            [
                   "Defines options for different types of modes for Panorama mission.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMission_DJIPanoramaMode_inline",
                   "",
            ],
            [
                   "FULL_CIRCLE",
                   2,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMission_DJIPanoramaMode_FullCircle_inline",
                   "360 Degree Panorama mode.",
            ],
            [
                   "360 Degree Panorama mode.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMission_DJIPanoramaMode_FullCircle_inline",
                   "",
            ],
            [
                   "HALF_CIRCLE",
                   2,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMission_DJIPanoramaMode_HalfCircle_inline",
                   "180 Degree Panorama mode. Also known as selfie mode.",
            ],
            [
                   "180 Degree Panorama mode. Also known as selfie mode.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMission_DJIPanoramaMode_HalfCircle_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMission_DJIPanoramaMode_Unknown_inline",
                   "Unknown mode.",
            ],
            [
                   "Unknown mode.",
                   1,
                   "/Components/Missions/DJIPanoramaMissionOperator.html",
                   "#DJIPanoramaMission_DJIPanoramaMode_Unknown_inline",
                   "",
            ],
            [
                   "target",
                   2,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_imageLocationToCalculateDirection_inline",
                   "The image point from the video feed where the vision system should calculate the flight direction from. The image point is normalized to [0,1] where (0,0) is the top left corner and (1,1) is the bottom right.",
            ],
            [
                   "The image point from the video feed where the vision system should calculate the flight direction from. The image point is normalized to [0,1] where (0,0) is the top left corner and (1,1) is the bottom right.",
                   1,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_imageLocationToCalculateDirection_inline",
                   "",
            ],
            [
                   "tapFlyMode",
                   2,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_tapFlyMode_inline",
                   "TapFly Mission mode. Defaults to `FORWARD`.  Additional modes only supported by the Phantom 4 Pro.",
            ],
            [
                   "TapFly Mission mode. Defaults to `FORWARD`.  Additional modes only supported by the Phantom 4 Pro.",
                   1,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_tapFlyMode_inline",
                   "",
            ],
            [
                   "isHorizontalObstacleAvoidanceEnabled",
                   2,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_isHorizontalObstacleAvoidanceEnabled_inline",
                   "`true` to enable horizontal obstacle avoidance.",
            ],
            [
                   "`true` to enable horizontal obstacle avoidance.",
                   1,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_isHorizontalObstacleAvoidanceEnabled_inline",
                   "",
            ],
            [
                   "speed",
                   2,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_speed_inline",
                   "Speed in m/s during tap fly mission.",
            ],
            [
                   "Speed in m/s during tap fly mission.",
                   1,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_speed_inline",
                   "",
            ],
            [
                   "TapFlyExecutionState",
                   2,
                   "/Components/Missions/DJITapFlyMission_DJITapFlyExecutionState.html",
                   "",
                   "This class provides the detailed state of a TapFly Mission that is executing.",
            ],
            [
                   "This class provides the detailed state of a TapFly Mission that is executing.",
                   1,
                   "/Components/Missions/DJITapFlyMission_DJITapFlyExecutionState.html",
                   "",
                   "",
            ],
            [
                   "getDirection",
                   2,
                   "/Components/Missions/DJITapFlyMission_DJITapFlyExecutionState.html",
                   "#DJITapFlyMission_DJITapFlyExecutionState_direction_inline",
                   "The direction vector the aircraft is traveling in using the N-E-D  (North-East- Down) coordinate system.  @return A Vector object.",
            ],
            [
                   "The direction vector the aircraft is traveling in using the N-E-D  (North-East- Down) coordinate system.  @return A Vector object.",
                   1,
                   "/Components/Missions/DJITapFlyMission_DJITapFlyExecutionState.html",
                   "#DJITapFlyMission_DJITapFlyExecutionState_direction_inline",
                   "",
            ],
            [
                   "getImageLocation",
                   2,
                   "/Components/Missions/DJITapFlyMission_DJITapFlyExecutionState.html",
                   "#DJITapFlyMission_DJITapFlyExecutionState_imageLocation_inline",
                   "The image point from the video feed where the vision system should calculate the flight direction from. The image point is normalized to [0,1] where (0,0) is the top left corner and (1,1) is the bottom right.  @return A PointF object.",
            ],
            [
                   "The image point from the video feed where the vision system should calculate the flight direction from. The image point is normalized to [0,1] where (0,0) is the top left corner and (1,1) is the bottom right.  @return A PointF object.",
                   1,
                   "/Components/Missions/DJITapFlyMission_DJITapFlyExecutionState.html",
                   "#DJITapFlyMission_DJITapFlyExecutionState_imageLocation_inline",
                   "",
            ],
            [
                   "getSpeed",
                   2,
                   "/Components/Missions/DJITapFlyMission_DJITapFlyExecutionState.html",
                   "#DJITapFlyMission_DJITapFlyExecutionState_speed_inline",
                   "The real-time speed of the aircraft in m/s.  @return A float value of speed.",
            ],
            [
                   "The real-time speed of the aircraft in m/s.  @return A float value of speed.",
                   1,
                   "/Components/Missions/DJITapFlyMission_DJITapFlyExecutionState.html",
                   "#DJITapFlyMission_DJITapFlyExecutionState_speed_inline",
                   "",
            ],
            [
                   "getBypassDirection",
                   2,
                   "/Components/Missions/DJITapFlyMission_DJITapFlyExecutionState.html",
                   "#DJITapFlyMission_DJITapFlyExecutionState_bypassDirection_inline",
                   "The direction the aircraft is moving around or bypassing an obstacle in. Will be `NONE` if the aircraft is not executing  an avoidance maneuver.  @return An enum value of `BypassDirection`",
            ],
            [
                   "The direction the aircraft is moving around or bypassing an obstacle in. Will be `NONE` if the aircraft is not executing  an avoidance maneuver.  @return An enum value of `BypassDirection`",
                   1,
                   "/Components/Missions/DJITapFlyMission_DJITapFlyExecutionState.html",
                   "#DJITapFlyMission_DJITapFlyExecutionState_bypassDirection_inline",
                   "",
            ],
            [
                   "getRelativeHeading",
                   2,
                   "/Components/Missions/DJITapFlyMission_DJITapFlyExecutionState.html",
                   "#DJITapFlyMission_DJITapFlyExecutionState_relativeHeading_inline",
                   "Aircraft's heading relative to the flight direction.  @return A float value of relative heading.",
            ],
            [
                   "Aircraft's heading relative to the flight direction.  @return A float value of relative heading.",
                   1,
                   "/Components/Missions/DJITapFlyMission_DJITapFlyExecutionState.html",
                   "#DJITapFlyMission_DJITapFlyExecutionState_relativeHeading_inline",
                   "",
            ],
            [
                   "Vector",
                   2,
                   "/Components/Missions/DJITapFlyMission_DJIVector.html",
                   "",
                   "A cartesian vector in 3D space.",
            ],
            [
                   "A cartesian vector in 3D space.",
                   1,
                   "/Components/Missions/DJITapFlyMission_DJIVector.html",
                   "",
                   "",
            ],
            [
                   "getX",
                   2,
                   "/Components/Missions/DJITapFlyMission_DJIVector.html",
                   "#DJITapFlyMission_DJIVector_x_inline",
                   "X-value of the cartesian vector.  @return A float value of X value.",
            ],
            [
                   "X-value of the cartesian vector.  @return A float value of X value.",
                   1,
                   "/Components/Missions/DJITapFlyMission_DJIVector.html",
                   "#DJITapFlyMission_DJIVector_x_inline",
                   "",
            ],
            [
                   "getY",
                   2,
                   "/Components/Missions/DJITapFlyMission_DJIVector.html",
                   "#DJITapFlyMission_DJIVector_y_inline",
                   "Y-value of the cartesian vector.  @return A float value of Y value.",
            ],
            [
                   "Y-value of the cartesian vector.  @return A float value of Y value.",
                   1,
                   "/Components/Missions/DJITapFlyMission_DJIVector.html",
                   "#DJITapFlyMission_DJIVector_y_inline",
                   "",
            ],
            [
                   "getZ",
                   2,
                   "/Components/Missions/DJITapFlyMission_DJIVector.html",
                   "#DJITapFlyMission_DJIVector_z_inline",
                   "Z-value of the cartesian vector.  @return A float value of Z value.",
            ],
            [
                   "Z-value of the cartesian vector.  @return A float value of Z value.",
                   1,
                   "/Components/Missions/DJITapFlyMission_DJIVector.html",
                   "#DJITapFlyMission_DJIVector_z_inline",
                   "",
            ],
            [
                   "BypassDirection",
                   2,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJIBypassDirection_inline",
                   "Direction aircraft is moving around or bypassing an obstacle in.",
            ],
            [
                   "Direction aircraft is moving around or bypassing an obstacle in.",
                   1,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJIBypassDirection_inline",
                   "",
            ],
            [
                   "NONE",
                   2,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJIBypassDirection_None_inline",
                   "Flying normally, no obstacle to be avoided.",
            ],
            [
                   "Flying normally, no obstacle to be avoided.",
                   1,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJIBypassDirection_None_inline",
                   "",
            ],
            [
                   "OVER",
                   2,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJIBypassDirection_Over_inline",
                   "Avoiding the obstacle by going over the top of it.",
            ],
            [
                   "Avoiding the obstacle by going over the top of it.",
                   1,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJIBypassDirection_Over_inline",
                   "",
            ],
            [
                   "LEFT",
                   2,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJIBypassDirection_Left_inline",
                   "Avoiding the obstacle by going to the left of it.",
            ],
            [
                   "Avoiding the obstacle by going to the left of it.",
                   1,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJIBypassDirection_Left_inline",
                   "",
            ],
            [
                   "RIGHT",
                   2,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJIBypassDirection_Right_inline",
                   "Avoiding the obstacle by going to the right of it.",
            ],
            [
                   "Avoiding the obstacle by going to the right of it.",
                   1,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJIBypassDirection_Right_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJIBypassDirection_Unknown_inline",
                   "Unknown obstacle avoidance direction",
            ],
            [
                   "Unknown obstacle avoidance direction",
                   1,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJIBypassDirection_Unknown_inline",
                   "",
            ],
            [
                   "TapFlyMode",
                   2,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJITapFlyMode_inline",
                   "Different modes of the TapFly Mission. Defaults to  `FORWARD`, set to others to enable  the feature.",
            ],
            [
                   "Different modes of the TapFly Mission. Defaults to  `FORWARD`, set to others to enable  the feature.",
                   1,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJITapFlyMode_inline",
                   "",
            ],
            [
                   "FORWARD",
                   2,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJITapFlyMode_Forward_inline",
                   "Aircraft will fly towards the target. Forward Obstacle  Sensing System is active.",
            ],
            [
                   "Aircraft will fly towards the target. Forward Obstacle  Sensing System is active.",
                   1,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJITapFlyMode_Forward_inline",
                   "",
            ],
            [
                   "BACKWARD",
                   2,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJITapFlyMode_Backward_inline",
                   "Aircraft will fly in the opposite direction from the target.  Backward Obstacle Sensing System is active.",
            ],
            [
                   "Aircraft will fly in the opposite direction from the target.  Backward Obstacle Sensing System is active.",
                   1,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJITapFlyMode_Backward_inline",
                   "",
            ],
            [
                   "FREE",
                   2,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJITapFlyMode_Free_inline",
                   "Aircraft will fly towards the target. User can control the heading  by remote controller's stick. Obstacle Sensing Systems may fail to  work when aircraft is flying sideward.",
            ],
            [
                   "Aircraft will fly towards the target. User can control the heading  by remote controller's stick. Obstacle Sensing Systems may fail to  work when aircraft is flying sideward.",
                   1,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJITapFlyMode_Free_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJITapFlyMode_Unknown_inline",
                   "The TapFly mode is unknown.",
            ],
            [
                   "The TapFly mode is unknown.",
                   1,
                   "/Components/Missions/DJITapFlyMission.html",
                   "#DJITapFlyMission_DJITapFlyMode_Unknown_inline",
                   "",
            ],
            [
                   "addListener",
                   2,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_addListener_inline",
                   "Add a listener to listen for all events in the TapFly mission operator.  @param listener Listener that is interested in the TapFly mission operator.",
            ],
            [
                   "Add a listener to listen for all events in the TapFly mission operator.  @param listener Listener that is interested in the TapFly mission operator.",
                   1,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_addListener_inline",
                   "",
            ],
            [
                   "removeListener",
                   2,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_removeListener_inline",
                   "Removes listener. The listener will not receive any updates after calling this method.  @param targetListener Listener to be removed.",
            ],
            [
                   "Removes listener. The listener will not receive any updates after calling this method.  @param targetListener Listener to be removed.",
                   1,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_removeListener_inline",
                   "",
            ],
            [
                   "removeAllListeners",
                   2,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_removeAllListeners_inline",
                   "Remove all listeners.",
            ],
            [
                   "Remove all listeners.",
                   1,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_removeAllListeners_inline",
                   "",
            ],
            [
                   "setupEnvironment",
                   2,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_setupEnvironment_inline",
                   "Setup environment and provide result in callback  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Setup environment and provide result in callback  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_setupEnvironment_inline",
                   "",
            ],
            [
                   "startMission",
                   2,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_startMission_inline",
                   "Starts to execute a TapFly mission. It can only be called when  the `getCurrentState`   is `EXECUTION_STARTING`. If the mission is started successfully,  the `getCurrentState` will  become `EXECUTING`.  @param mission An object of `TapFlyMission`. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Starts to execute a TapFly mission. It can only be called when  the `getCurrentState`   is `EXECUTION_STARTING`. If the mission is started successfully,  the `getCurrentState` will  become `EXECUTING`.  @param mission An object of `TapFlyMission`. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_startMission_inline",
                   "",
            ],
            [
                   "stopMission",
                   2,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_stopMission_inline",
                   "Stops the executing mission. It can only be called when  the `getCurrentState` is one of the following:  - `EXECUTING`  - `EXECUTION_PAUSED`  - `EXECUTION_RESETTING`  After a mission is stopped  successfully, `getCurrentState` will  become `EXECUTION_STARTING`.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Stops the executing mission. It can only be called when  the `getCurrentState` is one of the following:  - `EXECUTING`  - `EXECUTION_PAUSED`  - `EXECUTION_RESETTING`  After a mission is stopped  successfully, `getCurrentState` will  become `EXECUTION_STARTING`.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_stopMission_inline",
                   "",
            ],
            [
                   "resetHeading",
                   2,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_resetHeading_inline",
                   "Resets aircraft heading to the flight direction. It can only be used  when `tapFlyMode` is `FREE`.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Resets aircraft heading to the flight direction. It can only be used  when `tapFlyMode` is `FREE`.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_resetHeading_inline",
                   "",
            ],
            [
                   "setAutoFlightSpeed",
                   2,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_setAutoFlightSpeed_inline",
                   "Sets auto flight speed for TapFly mission. It can be changed before or during the  execution of a TapFly mission.  @param speed Auto flight speed. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets auto flight speed for TapFly mission. It can be changed before or during the  execution of a TapFly mission.  @param speed Auto flight speed. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_setAutoFlightSpeed_inline",
                   "",
            ],
            [
                   "getAutoFlightSpeed",
                   2,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_getAutoFlightSpeed_inline",
                   "Gets the auto flight speed for TapFly mission in m/s.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Gets the auto flight speed for TapFly mission in m/s.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_getAutoFlightSpeed_inline",
                   "",
            ],
            [
                   "setHorizontalObstacleBypassEnabled",
                   2,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_setHorizontalObstacleBypassEnabled_inline",
                   "`true` allows the aircraft to bypass or move around an obstacle by going to  the left or right of the obstacle. If `false`, the aircraft will only  go over an obstacle to avoid it. It can be changed before or during the execution  of a TapFly mission.  @param enabled `true` allows aircraft to bypass or move around an obstacle by going to the left or right. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "`true` allows the aircraft to bypass or move around an obstacle by going to  the left or right of the obstacle. If `false`, the aircraft will only  go over an obstacle to avoid it. It can be changed before or during the execution  of a TapFly mission.  @param enabled `true` allows aircraft to bypass or move around an obstacle by going to the left or right. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_setHorizontalObstacleBypassEnabled_inline",
                   "",
            ],
            [
                   "getHorizontalObstacleBypassEnabled",
                   2,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_getHorizontalObstacleBypassEnabled_inline",
                   "`true` allows the aircraft to bypass or move around an obstacle by going to  the left or right of the obstacle. If `false`, the aircraft will only  go over an obstacle to avoid it. It can be changed before or during the execution  of a TapFly mission.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "`true` allows the aircraft to bypass or move around an obstacle by going to  the left or right of the obstacle. If `false`, the aircraft will only  go over an obstacle to avoid it. It can be changed before or during the execution  of a TapFly mission.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#DJITapFlyMissionOperator_getHorizontalObstacleBypassEnabled_inline",
                   "",
            ],
            [
                   "TapFlyMissionOperatorListener",
                   2,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#TapFlyMissionOperatorListener_inline",
                   "Listener interface to receive events from the TapFly mission operator.",
            ],
            [
                   "Listener interface to receive events from the TapFly mission operator.",
                   1,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#TapFlyMissionOperatorListener_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#TapFlyMissionOperatorListener_onUpdate_inline",
                   "Called when a new event has been updated.  @param aggregation An object of `TapFlyMissionEvent`.",
            ],
            [
                   "Called when a new event has been updated.  @param aggregation An object of `TapFlyMissionEvent`.",
                   1,
                   "/Components/Missions/DJITapFlyMissionOperator.html",
                   "#TapFlyMissionOperatorListener_onUpdate_inline",
                   "",
            ],
            [
                   "TapFlyMission",
                   2,
                   "/Components/Missions/DJITapFlyMission.html",
                   "",
                   "A TapFly Mission is initialized with a position target from the live video stream. The 3D direction of the coordinate is calculated, and the aircraft  will proceed to fly in that direction. The aircraft can automatically avoid obstacles when the scene is sufficiently illuminated (more than 300 lux but less than 10,000 lux). The aircraft will stop flying in the direction if it reaches its radius limitation, the mission is stopped, the user pulls back on the pitch stick or if it comes to an obstacle it cannot bypass. The Remote Controller yaw stick can be used to adjust the heading of the aircraft during mission execution, which also adjusts the direction of flight to the new yaw. Using any other stick controls will cancel the mission.",
            ],
            [
                   "A TapFly Mission is initialized with a position target from the live video stream. The 3D direction of the coordinate is calculated, and the aircraft  will proceed to fly in that direction. The aircraft can automatically avoid obstacles when the scene is sufficiently illuminated (more than 300 lux but less than 10,000 lux). The aircraft will stop flying in the direction if it reaches its radius limitation, the mission is stopped, the user pulls back on the pitch stick or if it comes to an obstacle it cannot bypass. The Remote Controller yaw stick can be used to adjust the heading of the aircraft during mission execution, which also adjusts the direction of flight to the new yaw. Using any other stick controls will cancel the mission.",
                   1,
                   "/Components/Missions/DJITapFlyMission.html",
                   "",
                   "",
            ],
            [
                   "TapFlyMissionEvent",
                   2,
                   "/Components/Missions/DJITapFlyMissionEvent.html",
                   "",
                   "This class encapsulates all the state changes of the TapFly mission operator.",
            ],
            [
                   "This class encapsulates all the state changes of the TapFly mission operator.",
                   1,
                   "/Components/Missions/DJITapFlyMissionEvent.html",
                   "",
                   "",
            ],
            [
                   "getPreviousState",
                   2,
                   "/Components/Missions/DJITapFlyMissionEvent.html",
                   "#DJITapFlyMissionEvent_previousState_inline",
                   "The previous state of the operator.  @return A object of `TapFlyMissionState`.",
            ],
            [
                   "The previous state of the operator.  @return A object of `TapFlyMissionState`.",
                   1,
                   "/Components/Missions/DJITapFlyMissionEvent.html",
                   "#DJITapFlyMissionEvent_previousState_inline",
                   "",
            ],
            [
                   "getCurrentState",
                   2,
                   "/Components/Missions/DJITapFlyMissionEvent.html",
                   "#DJITapFlyMissionEvent_currentState_inline",
                   "The current state of the operator.  @return A object of `TapFlyMissionState`.",
            ],
            [
                   "The current state of the operator.  @return A object of `TapFlyMissionState`.",
                   1,
                   "/Components/Missions/DJITapFlyMissionEvent.html",
                   "#DJITapFlyMissionEvent_currentState_inline",
                   "",
            ],
            [
                   "getProgressState",
                   2,
                   "/Components/Missions/DJITapFlyMissionEvent.html",
                   "#DJITapFlyMissionEvent_executionState_inline",
                   "The detailed state of the executing TapFly mission. It is only valid  when `getCurrentState` is one of the following:  - `EXECUTING`  - `EXECUTION_PAUSED`  For the other states, it is `null`.  @return A object of `TapFlyExecutionState`.",
            ],
            [
                   "The detailed state of the executing TapFly mission. It is only valid  when `getCurrentState` is one of the following:  - `EXECUTING`  - `EXECUTION_PAUSED`  For the other states, it is `null`.  @return A object of `TapFlyExecutionState`.",
                   1,
                   "/Components/Missions/DJITapFlyMissionEvent.html",
                   "#DJITapFlyMissionEvent_executionState_inline",
                   "",
            ],
            [
                   "getError",
                   2,
                   "/Components/Missions/DJITapFlyMissionEvent.html",
                   "#DJITapFlyMissionEvent_error_inline",
                   "The encountered error if any. Otherwise, it is `null`.  @return A object of `DJIError`.",
            ],
            [
                   "The encountered error if any. Otherwise, it is `null`.  @return A object of `DJIError`.",
                   1,
                   "/Components/Missions/DJITapFlyMissionEvent.html",
                   "#DJITapFlyMissionEvent_error_inline",
                   "",
            ],
            [
                   "TapFlyMissionState",
                   2,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "",
                   "All the possible states of `TapFlyMissionOperator`.",
            ],
            [
                   "All the possible states of `TapFlyMissionOperator`.",
                   1,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_Unknown_inline",
                   "The state of the operator is unknown. This is the initial state when the operator is  first created.",
            ],
            [
                   "The state of the operator is unknown. This is the initial state when the operator is  first created.",
                   1,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_Unknown_inline",
                   "",
            ],
            [
                   "IDLE",
                   2,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_IDLE_inline",
                   "The operator is in idle state",
            ],
            [
                   "The operator is in idle state",
                   1,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_IDLE_inline",
                   "",
            ],
            [
                   "EXECUTION_STARTING",
                   2,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_ExecutionStarting_inline",
                   "The start execution command has been called but the aircraft hasn't yet acknowledged it has started. No other commands should be  called when in this state. The next state is either disconnected,  executing or readyToExecute.",
            ],
            [
                   "The start execution command has been called but the aircraft hasn't yet acknowledged it has started. No other commands should be  called when in this state. The next state is either disconnected,  executing or readyToExecute.",
                   1,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_ExecutionStarting_inline",
                   "",
            ],
            [
                   "DISCONNECTED",
                   2,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_Disconnected_inline",
                   "The connection between the mobile device and aircraft is broken.",
            ],
            [
                   "The connection between the mobile device and aircraft is broken.",
                   1,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_Disconnected_inline",
                   "",
            ],
            [
                   "RECOVERING",
                   2,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_Recovering_inline",
                   "The connection between the mobile device and aircraft is recovering.  In this state, the operator is synchronizing the state from the aircraft.",
            ],
            [
                   "The connection between the mobile device and aircraft is recovering.  In this state, the operator is synchronizing the state from the aircraft.",
                   1,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_Recovering_inline",
                   "",
            ],
            [
                   "NOT_SUPPORT",
                   2,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_NotSupported_inline",
                   "The connected product does not support TapFly mission.",
            ],
            [
                   "The connected product does not support TapFly mission.",
                   1,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_NotSupported_inline",
                   "",
            ],
            [
                   "CAN_NOT_START",
                   2,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_CannotStart_inline",
                   "There is an existing error stopping the TapFly mission to start.",
            ],
            [
                   "There is an existing error stopping the TapFly mission to start.",
                   1,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_CannotStart_inline",
                   "",
            ],
            [
                   "EXECUTING",
                   2,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_Executing_inline",
                   "The operator is executing a TapFly mission.",
            ],
            [
                   "The operator is executing a TapFly mission.",
                   1,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_Executing_inline",
                   "",
            ],
            [
                   "EXECUTION_PAUSED",
                   2,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_ExecutionPaused_inline",
                   "The execution of the TapFly mission is paused. User can pause or resume a TapFly mission by pressing the pause button on the physical remote controller.",
            ],
            [
                   "The execution of the TapFly mission is paused. User can pause or resume a TapFly mission by pressing the pause button on the physical remote controller.",
                   1,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_ExecutionPaused_inline",
                   "",
            ],
            [
                   "EXECUTION_RESETTING",
                   2,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_ExecutionResetting_inline",
                   "The TapFly mission cannot continue the execution. The execution is being stopped automatically.",
            ],
            [
                   "The TapFly mission cannot continue the execution. The execution is being stopped automatically.",
                   1,
                   "/Components/Missions/DJITapFlyMissionState.html",
                   "#DJITapFlyMissionState_ExecutionResetting_inline",
                   "",
            ],
            [
                   "Waypoint",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_initWithCoordinate_inline",
                   "Initiate instance with specific waypoint.  @param latitude The latitude of the waypoint. @param longitude The longitude of the waypoint. @param altitude The altitude of the waypoint.",
            ],
            [
                   "Initiate instance with specific waypoint.  @param latitude The latitude of the waypoint. @param longitude The longitude of the waypoint. @param altitude The altitude of the waypoint.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_initWithCoordinate_inline",
                   "",
            ],
            [
                   "coordinate",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_coordinate_inline",
                   "Waypoint coordinate latitude and longitude in degrees.",
            ],
            [
                   "Waypoint coordinate latitude and longitude in degrees.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_coordinate_inline",
                   "",
            ],
            [
                   "altitude",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_altitude_inline",
                   "Altitude of the aircraft in meters when it reaches waypoint. The altitude of the aircraft is relative to  the ground at the take-off location, has a range of [-200,500], and should not be larger than the  aircraft's maximum altitude. If two adjacent waypoints have different altitudes, the altitude will  gradually change as the aircraft flys between waypoints.",
            ],
            [
                   "Altitude of the aircraft in meters when it reaches waypoint. The altitude of the aircraft is relative to  the ground at the take-off location, has a range of [-200,500], and should not be larger than the  aircraft's maximum altitude. If two adjacent waypoints have different altitudes, the altitude will  gradually change as the aircraft flys between waypoints.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_altitude_inline",
                   "",
            ],
            [
                   "heading",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_heading_inline",
                   "The heading to which the aircraft will rotate by the time it reaches the waypoint. The aircraft heading  will gradually change between two waypoints with different headings if the waypoint  mission's `getHeadingMode` is set  to `USING_WAYPOINT_HEADING`. A heading has a range of  [-180, 180] degrees, where 0 represents True North.",
            ],
            [
                   "The heading to which the aircraft will rotate by the time it reaches the waypoint. The aircraft heading  will gradually change between two waypoints with different headings if the waypoint  mission's `getHeadingMode` is set  to `USING_WAYPOINT_HEADING`. A heading has a range of  [-180, 180] degrees, where 0 represents True North.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_heading_inline",
                   "",
            ],
            [
                   "cornerRadiusInMeters",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_cornerRadiusInMeters_inline",
                   "Corner radius of the waypoint. When the flight path mode  is `CURVED` the flight path near a waypoint will be  a curve (rounded corner) with radius [0.2,1000]. When there is a corner radius, the aircraft will never  go through the waypoint. By default, the radius is 0.2 m. If the corner is made of three adjacent waypoints (Short for A,B,C)  . Then the radius of A(short for Ra) plus radius of B(short for Rb) must be smaller than the distance between  A and B. Radius of the first and the last waypoint in a mission does not affect the flight path and it should keep the default value (0.2m).",
            ],
            [
                   "Corner radius of the waypoint. When the flight path mode  is `CURVED` the flight path near a waypoint will be  a curve (rounded corner) with radius [0.2,1000]. When there is a corner radius, the aircraft will never  go through the waypoint. By default, the radius is 0.2 m. If the corner is made of three adjacent waypoints (Short for A,B,C)  . Then the radius of A(short for Ra) plus radius of B(short for Rb) must be smaller than the distance between  A and B. Radius of the first and the last waypoint in a mission does not affect the flight path and it should keep the default value (0.2m).",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_cornerRadiusInMeters_inline",
                   "",
            ],
            [
                   "turnMode",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_turnMode_inline",
                   "Determines whether the aircraft will turn clockwise or anticlockwise when changing its heading.",
            ],
            [
                   "Determines whether the aircraft will turn clockwise or anticlockwise when changing its heading.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_turnMode_inline",
                   "",
            ],
            [
                   "gimbalPitch",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_gimbalPitch_inline",
                   "Gimbal pitch angle when reached this waypoint. This property is used when the `isGimbalPitchRotationEnabled` is TRUE. Value should in range [-90, 0] degree.",
            ],
            [
                   "Gimbal pitch angle when reached this waypoint. This property is used when the `isGimbalPitchRotationEnabled` is TRUE. Value should in range [-90, 0] degree.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_gimbalPitch_inline",
                   "",
            ],
            [
                   "speed",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_speed_inline",
                   "The base automatic speed of the aircraft as it moves between this waypoint and the next waypoint with range  [0, 15] m/s. By default, it is 0.0 and the aircraft will fly with `getAutoFlightSpeed` of  the waypoint mission. If greater than 0, 'speed' will override `getAutoFlightSpeed`.  This 'speed' can only define movement forward through the waypoint mission in comparison  to `getAutoFlightSpeed` which can be both forward and backwards through a waypoint mission.  Waypoint mission speed priority from highest to lowest is:  1) manual speed adjustment  with remote controller joy sticks  2) 'speed'  3) `setAutoFlightSpeed`   4) `getAutoFlightSpeed`  Warning: 'speed', `shootPhotoTimeInterval`  and `shootPhotoDistanceInterval` relate to behavior between this waypoint and the next  waypoint in the mission. In comparison, `turnMode`, `altitude`  and `heading` relate to behavior between the last waypoint and this waypoint in the waypoint  mission. Only supported by flight controller firmware 3.2.10.0 or above.",
            ],
            [
                   "The base automatic speed of the aircraft as it moves between this waypoint and the next waypoint with range  [0, 15] m/s. By default, it is 0.0 and the aircraft will fly with `getAutoFlightSpeed` of  the waypoint mission. If greater than 0, 'speed' will override `getAutoFlightSpeed`.  This 'speed' can only define movement forward through the waypoint mission in comparison  to `getAutoFlightSpeed` which can be both forward and backwards through a waypoint mission.  Waypoint mission speed priority from highest to lowest is:  1) manual speed adjustment  with remote controller joy sticks  2) 'speed'  3) `setAutoFlightSpeed`   4) `getAutoFlightSpeed`  Warning: 'speed', `shootPhotoTimeInterval`  and `shootPhotoDistanceInterval` relate to behavior between this waypoint and the next  waypoint in the mission. In comparison, `turnMode`, `altitude`  and `heading` relate to behavior between the last waypoint and this waypoint in the waypoint  mission. Only supported by flight controller firmware 3.2.10.0 or above.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_speed_inline",
                   "",
            ],
            [
                   "shootPhotoTimeInterval",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_shootPhotoTimeInterval_inline",
                   "The time interval in seconds when two photos are taken as the aircraft moves between the current waypoint  and the next waypoint. The first photo will be taken as the aircraft leaves the current waypoint. The  maximum value is 6,000.0. The minimum value is above 0.0 and depends on the camera type and the camera  parameters. When the photo file format is JPEG, the recommended minimum value is 2.0. When the photo file  format is RAW, the minimum value is 10.0. If the input exceeds the camera's capability, the pictures will  be taken at the maximum possible speed. The default value is 0.0 and no photo will be taken. For a  waypoint, either `shootPhotoTimeInterval` or `shootPhotoDistanceInterval`  is 0.0. Input with precision of greater than 1 decimal places, will be rounded to 1. Warning: 'speed', `shootPhotoTimeInterval`  and `shootPhotoDistanceInterval` relate to behavior between this waypoint and the next waypoint  in the mission. In comparison, `turnMode`, `altitude` and `heading`  relate to behavior between the last waypoint and this waypoint in the waypoint mission. Only supported by flight  controller firmware 3.2.10.0 or above.",
            ],
            [
                   "The time interval in seconds when two photos are taken as the aircraft moves between the current waypoint  and the next waypoint. The first photo will be taken as the aircraft leaves the current waypoint. The  maximum value is 6,000.0. The minimum value is above 0.0 and depends on the camera type and the camera  parameters. When the photo file format is JPEG, the recommended minimum value is 2.0. When the photo file  format is RAW, the minimum value is 10.0. If the input exceeds the camera's capability, the pictures will  be taken at the maximum possible speed. The default value is 0.0 and no photo will be taken. For a  waypoint, either `shootPhotoTimeInterval` or `shootPhotoDistanceInterval`  is 0.0. Input with precision of greater than 1 decimal places, will be rounded to 1. Warning: 'speed', `shootPhotoTimeInterval`  and `shootPhotoDistanceInterval` relate to behavior between this waypoint and the next waypoint  in the mission. In comparison, `turnMode`, `altitude` and `heading`  relate to behavior between the last waypoint and this waypoint in the waypoint mission. Only supported by flight  controller firmware 3.2.10.0 or above.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_shootPhotoTimeInterval_inline",
                   "",
            ],
            [
                   "shootPhotoDistanceInterval",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_shootPhotoDistanceInterval_inline",
                   "The distance interval in meters when two photos are taken as the aircraft moves between the current  waypoint and the next waypoint. The maximum value is 6,000.0. The minimum value is above 0.0 and depends  on the camera type, the camera parameters and the flight speed. When the photo file format is JPEG, the time interval between two photos cannot smaller than 2 seconds. When the photo file format is RAW, the  time interval between two photos cannot smaller than 10 seconds. If the input exceeds the camera's  capability, the taken photos may be less than expectation. The default value is 0.0 and no photo will be  taken. For a waypoint, either `shootPhotoTimeInterval`  or `shootPhotoDistanceInterval` is 0.0. Input with precision of greater than 1 decimal  places, will be rounded to 1. Warning: 'speed', `shootPhotoTimeInterval`  and `shootPhotoDistanceInterval` relate to behavior between this waypoint and the next  waypoint in the mission. In comparison, `turnMode`, `altitude`  and `heading` relate to behavior between the last waypoint and this waypoint in the waypoint  mission. Only supported by flight controller firmware 3.2.10.0 or above.",
            ],
            [
                   "The distance interval in meters when two photos are taken as the aircraft moves between the current  waypoint and the next waypoint. The maximum value is 6,000.0. The minimum value is above 0.0 and depends  on the camera type, the camera parameters and the flight speed. When the photo file format is JPEG, the time interval between two photos cannot smaller than 2 seconds. When the photo file format is RAW, the  time interval between two photos cannot smaller than 10 seconds. If the input exceeds the camera's  capability, the taken photos may be less than expectation. The default value is 0.0 and no photo will be  taken. For a waypoint, either `shootPhotoTimeInterval`  or `shootPhotoDistanceInterval` is 0.0. Input with precision of greater than 1 decimal  places, will be rounded to 1. Warning: 'speed', `shootPhotoTimeInterval`  and `shootPhotoDistanceInterval` relate to behavior between this waypoint and the next  waypoint in the mission. In comparison, `turnMode`, `altitude`  and `heading` relate to behavior between the last waypoint and this waypoint in the waypoint  mission. Only supported by flight controller firmware 3.2.10.0 or above.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_shootPhotoDistanceInterval_inline",
                   "",
            ],
            [
                   "hasAction",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_hasAction_inline",
                   "A flag to indicate whether there are any actions to be carried out at the waypoint.",
            ],
            [
                   "A flag to indicate whether there are any actions to be carried out at the waypoint.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_hasAction_inline",
                   "",
            ],
            [
                   "waypointActions",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_waypointActions_inline",
                   "Array of all waypoint actions for the respective waypoint. The waypoint actions will be executed  consecutively from the start of the array once the aircraft reaches the waypoint.",
            ],
            [
                   "Array of all waypoint actions for the respective waypoint. The waypoint actions will be executed  consecutively from the start of the array once the aircraft reaches the waypoint.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_waypointActions_inline",
                   "",
            ],
            [
                   "getActionAtIndex",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_getActionAtIndex_inline",
                   "Gets the action at the specified index.  @param index The specified index.  @return An instance of `WaypointAction`.",
            ],
            [
                   "Gets the action at the specified index.  @param index The specified index.  @return An instance of `WaypointAction`.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_getActionAtIndex_inline",
                   "",
            ],
            [
                   "adjustActionAtIndex",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_adjustActionAtIndex_inline",
                   "Switches the action at the specified index.  @param index The specified index. @param action A DJIWaypointAction object.  @return A boolean value.",
            ],
            [
                   "Switches the action at the specified index.  @param index The specified index. @param action A DJIWaypointAction object.  @return A boolean value.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_adjustActionAtIndex_inline",
                   "",
            ],
            [
                   "actionRepeatTimes",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_actionRepeatTimes_inline",
                   "Determines how many times the set of waypoint actions are repeated. The default value is one time, and  the maximum is `MAX_ACTION_REPEAT_TIMES`.",
            ],
            [
                   "Determines how many times the set of waypoint actions are repeated. The default value is one time, and  the maximum is `MAX_ACTION_REPEAT_TIMES`.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_actionRepeatTimes_inline",
                   "",
            ],
            [
                   "actionTimeoutInSeconds",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_actionTimeoutInSeconds_inline",
                   "The maximum time set to execute all the waypoint actions for a waypoint. If the time while executing the  waypoint actions goes above the time set, the aircraft will stop executing the waypoint actions for the  current waypoint and will move on to the next waypoint. The value of this property must be in the range  of [0, 999] seconds. The default value is 60 seconds.",
            ],
            [
                   "The maximum time set to execute all the waypoint actions for a waypoint. If the time while executing the  waypoint actions goes above the time set, the aircraft will stop executing the waypoint actions for the  current waypoint and will move on to the next waypoint. The value of this property must be in the range  of [0, 999] seconds. The default value is 60 seconds.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_actionTimeoutInSeconds_inline",
                   "",
            ],
            [
                   "addAction",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_addAction_inline",
                   "Adds a waypoint action to a waypoint. The number of waypoint actions should not be larger  than `MAX_ACTION_COUNT`. The action will only be executed when the mission's `getFlightPathMode` property is set  to `NORMAL` and will not be executed when the  mission's `getFlightPathMode` property is set  to `CURVED`. The maximum number of waypoint  actions you can add is 15.  @param action Waypoint action to be added to the waypoint.  @return `true` if the waypoint action has been added to the waypoint. `false`  if the waypoint action count is too high, or if the waypoint action was incorrectly setup.",
            ],
            [
                   "Adds a waypoint action to a waypoint. The number of waypoint actions should not be larger  than `MAX_ACTION_COUNT`. The action will only be executed when the mission's `getFlightPathMode` property is set  to `NORMAL` and will not be executed when the  mission's `getFlightPathMode` property is set  to `CURVED`. The maximum number of waypoint  actions you can add is 15.  @param action Waypoint action to be added to the waypoint.  @return `true` if the waypoint action has been added to the waypoint. `false`  if the waypoint action count is too high, or if the waypoint action was incorrectly setup.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_addAction_inline",
                   "",
            ],
            [
                   "insertAction",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_insertAction_inline",
                   "Insert a waypoint action at index. @return `true`, if the waypoint action has been  inserted. `false` if the waypoint action count is too high or the index is invalid.  @param action Waypoint action to be inserted to the waypoint. @param index Index of the inserted action.  @return A boolean value.",
            ],
            [
                   "Insert a waypoint action at index. @return `true`, if the waypoint action has been  inserted. `false` if the waypoint action count is too high or the index is invalid.  @param action Waypoint action to be inserted to the waypoint. @param index Index of the inserted action.  @return A boolean value.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_insertAction_inline",
                   "",
            ],
            [
                   "removeAction",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_removeAction_inline",
                   "Removes a waypoint action from the waypoint. @return `true` if the waypoint action  has been removed from the waypoint.  @param action Waypoint action to be removed from the waypoint.  @return A boolean value.",
            ],
            [
                   "Removes a waypoint action from the waypoint. @return `true` if the waypoint action  has been removed from the waypoint.  @param action Waypoint action to be removed from the waypoint.  @return A boolean value.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_removeAction_inline",
                   "",
            ],
            [
                   "removeActionAtIndex",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_removeActionAtIndex_inline",
                   "Removes a waypoint action from the waypoint by index. After removal, all actions higher than the index will  be shifted down by one.  @param index The index of the waypoint action to be removed.  @return `true` if waypoint action has been removed from the waypoint.",
            ],
            [
                   "Removes a waypoint action from the waypoint by index. After removal, all actions higher than the index will  be shifted down by one.  @param index The index of the waypoint action to be removed.  @return `true` if waypoint action has been removed from the waypoint.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_removeActionAtIndex_inline",
                   "",
            ],
            [
                   "removeAllAction",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_removeAllActions_inline",
                   "Remove all the actions.",
            ],
            [
                   "Remove all the actions.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_removeAllActions_inline",
                   "",
            ],
            [
                   "WaypointAction",
                   2,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "",
                   "This class represents a waypoint action for `Waypoint`. It determines what action is performed when  the aircraft reaches the corresponding waypoint.",
            ],
            [
                   "This class represents a waypoint action for `Waypoint`. It determines what action is performed when  the aircraft reaches the corresponding waypoint.",
                   1,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "",
                   "",
            ],
            [
                   "WaypointTurnMode",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_DJIWaypointTurnMode_inline",
                   "How the aircraft will turn at a waypoint to transition between headings.",
            ],
            [
                   "How the aircraft will turn at a waypoint to transition between headings.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_DJIWaypointTurnMode_inline",
                   "",
            ],
            [
                   "MAX_ACTION_COUNT",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_DJIMaxActionCount_inline",
                   "Maximum number of actions a single waypoint can have. The maximum supported number is 15.",
            ],
            [
                   "Maximum number of actions a single waypoint can have. The maximum supported number is 15.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_DJIMaxActionCount_inline",
                   "",
            ],
            [
                   "MAX_ACTION_REPEAT_TIMES",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_DJIMaxActionRepeatTimes_inline",
                   "Maximum number of times a single waypoint action can be repeated. The maximum supported number is 15.",
            ],
            [
                   "Maximum number of times a single waypoint action can be repeated. The maximum supported number is 15.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_DJIMaxActionRepeatTimes_inline",
                   "",
            ],
            [
                   "actionType",
                   2,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointAction_actionType_inline",
                   "Waypoint action of type `WaypointActionType` the aircraft will execute this action once  the aircraft reaches the waypoint. All possible actions are defined in the `WaypointActionType` enum.",
            ],
            [
                   "Waypoint action of type `WaypointActionType` the aircraft will execute this action once  the aircraft reaches the waypoint. All possible actions are defined in the `WaypointActionType` enum.",
                   1,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointAction_actionType_inline",
                   "",
            ],
            [
                   "actionParam",
                   2,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointAction_actionParam_inline",
                   "Action parameter for a waypoint action. See enum `WaypointAction` for details on which  actions use `actionParam`.",
            ],
            [
                   "Action parameter for a waypoint action. See enum `WaypointAction` for details on which  actions use `actionParam`.",
                   1,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointAction_actionParam_inline",
                   "",
            ],
            [
                   "WaypointAction",
                   2,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointAction_initWithActionType_inline",
                   "Initialize the class with a specific action type and corresponding parameter.  @param actionType A DJIWaypointActionType object. @param actionParam Action parameter of a waypoint action.",
            ],
            [
                   "Initialize the class with a specific action type and corresponding parameter.  @param actionType A DJIWaypointActionType object. @param actionParam Action parameter of a waypoint action.",
                   1,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointAction_initWithActionType_inline",
                   "",
            ],
            [
                   "WaypointActionType",
                   2,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointActionType_inline",
                   "Waypoint action types.",
            ],
            [
                   "Waypoint action types.",
                   1,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointActionType_inline",
                   "",
            ],
            [
                   "STAY",
                   2,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointActionType_Stay_inline",
                   "Keeps the aircraft at the waypoint's location. The `actionParam`  parameter will determine how much time in milliseconds the aircraft will stay at the location with  range of [0, 32767] milliseconds.",
            ],
            [
                   "Keeps the aircraft at the waypoint's location. The `actionParam`  parameter will determine how much time in milliseconds the aircraft will stay at the location with  range of [0, 32767] milliseconds.",
                   1,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointActionType_Stay_inline",
                   "",
            ],
            [
                   "START_TAKE_PHOTO",
                   2,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointActionType_ShootPhoto_inline",
                   "Starts to shoot a photo. The `actionParam` for the waypoint action will  be ignored. The maximum time set to execute this waypoint action is 6 seconds. If the time while executing  the waypoint action goes above 6 seconds, the aircraft will stop executing the waypoint action and will  move on to the next waypoint action, if one exists.",
            ],
            [
                   "Starts to shoot a photo. The `actionParam` for the waypoint action will  be ignored. The maximum time set to execute this waypoint action is 6 seconds. If the time while executing  the waypoint action goes above 6 seconds, the aircraft will stop executing the waypoint action and will  move on to the next waypoint action, if one exists.",
                   1,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointActionType_ShootPhoto_inline",
                   "",
            ],
            [
                   "START_RECORD",
                   2,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointActionType_StartRecord_inline",
                   "Starts recording. The `actionParam` for the waypoint action will be  ignored. The maximum time set to execute this waypoint action is 6 seconds. If the time while executing  the waypoint action goes above 6 seconds (e.g. the camera is not present) the aircraft will stop executing  the waypoint action and will move on to the next waypoint action, if one exists.",
            ],
            [
                   "Starts recording. The `actionParam` for the waypoint action will be  ignored. The maximum time set to execute this waypoint action is 6 seconds. If the time while executing  the waypoint action goes above 6 seconds (e.g. the camera is not present) the aircraft will stop executing  the waypoint action and will move on to the next waypoint action, if one exists.",
                   1,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointActionType_StartRecord_inline",
                   "",
            ],
            [
                   "STOP_RECORD",
                   2,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointActionType_StopRecord_inline",
                   "Stops recording. The `actionParam` for the waypoint action will be ignored.  The maximum time set to execute this waypoint action is 6 seconds. If the time while executing the waypoint  action goes above 6 seconds (e.g. the camera is not present) the aircraft will stop executing the waypoint  action and will move on to the next waypoint action, if one exists.",
            ],
            [
                   "Stops recording. The `actionParam` for the waypoint action will be ignored.  The maximum time set to execute this waypoint action is 6 seconds. If the time while executing the waypoint  action goes above 6 seconds (e.g. the camera is not present) the aircraft will stop executing the waypoint  action and will move on to the next waypoint action, if one exists.",
                   1,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointActionType_StopRecord_inline",
                   "",
            ],
            [
                   "ROTATE_AIRCRAFT",
                   2,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointActionType_RotateAircraft_inline",
                   "Rotates the aircraft's yaw. The rotation direction is determined by the waypoint's `turnMode` property.  The `actionParam` value must be in the range of [-180, 180] degrees.",
            ],
            [
                   "Rotates the aircraft's yaw. The rotation direction is determined by the waypoint's `turnMode` property.  The `actionParam` value must be in the range of [-180, 180] degrees.",
                   1,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointActionType_RotateAircraft_inline",
                   "",
            ],
            [
                   "GIMBAL_PITCH",
                   2,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointActionType_RotateGimbalPitch_inline",
                   "Rotates the gimbal's pitch. The actionParam value should be in range [-90, 0] degrees.",
            ],
            [
                   "Rotates the gimbal's pitch. The actionParam value should be in range [-90, 0] degrees.",
                   1,
                   "/Components/Missions/DJIWaypoint_DJIWaypointAction.html",
                   "#DJIWaypoint_DJIWaypointActionType_RotateGimbalPitch_inline",
                   "",
            ],
            [
                   "CLOCKWISE",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_DJIWaypointTurnMode_Clockwise_inline",
                   "Changes the heading of the aircraft by rotating the aircraft clockwise.",
            ],
            [
                   "Changes the heading of the aircraft by rotating the aircraft clockwise.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_DJIWaypointTurnMode_Clockwise_inline",
                   "",
            ],
            [
                   "COUNTER_CLOCKWISE",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_DJIWaypointTurnMode_CounterClockwise_inline",
                   "Changes the heading of the aircraft by rotating the aircraft anti-clockwise.",
            ],
            [
                   "Changes the heading of the aircraft by rotating the aircraft anti-clockwise.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "#DJIWaypoint_DJIWaypointTurnMode_CounterClockwise_inline",
                   "",
            ],
            [
                   "Builder",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "",
                   "Class builder.",
            ],
            [
                   "Class builder.",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "",
                   "",
            ],
            [
                   "checkParameters",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_checkParameters_inline",
                   "Checks if the configuration for the mission is valid before loading it into `WaypointMissionOperator`.  @return Error found when checking parameters of the waypoint. `null` if all the parameters are valid.",
            ],
            [
                   "Checks if the configuration for the mission is valid before loading it into `WaypointMissionOperator`.  @return Error found when checking parameters of the waypoint. `null` if all the parameters are valid.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_checkParameters_inline",
                   "",
            ],
            [
                   "getWaypointCount",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_waypointCount_inline",
                   "Number of waypoints in the waypoint mission.  @return Waypoint count.",
            ],
            [
                   "Number of waypoints in the waypoint mission.  @return Waypoint count.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_waypointCount_inline",
                   "",
            ],
            [
                   "getWaypointList",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_allWaypoints_inline",
                   "Returns an list of all waypoints in the mission.  @return A List of `Waypoint` instances contained in the mission.",
            ],
            [
                   "Returns an list of all waypoints in the mission.  @return A List of `Waypoint` instances contained in the mission.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_allWaypoints_inline",
                   "",
            ],
            [
                   "getMaxFlightSpeed",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_maxFlightSpeed_inline",
                   "While the aircraft is traveling between waypoints, you can offset its speed by using the throttle joystick  on the remote controller. `getMaxFlightSpeed` is this offset when the joystick is pushed  to maximum deflection. For example, If maxFlightSpeed is 10 m/s, then pushing the throttle joystick all the  way up will add 10 m/s to the aircraft speed, while pushing down will subtract 10 m/s from the aircraft  speed. If the remote controller stick is not at maximum deflection, then the offset speed will be  interpolated between [0, `getMaxFlightSpeed`] with a resolution of 1000 steps. If the  offset speed is negative, then the aircraft will fly backwards to previous waypoints. When it reaches the  first waypoint, it will then hover in place until a positive speed is  applied. `getMaxFlightSpeed` has a range of [2,15] m/s.  @return Flight speed in m/s",
            ],
            [
                   "While the aircraft is traveling between waypoints, you can offset its speed by using the throttle joystick  on the remote controller. `getMaxFlightSpeed` is this offset when the joystick is pushed  to maximum deflection. For example, If maxFlightSpeed is 10 m/s, then pushing the throttle joystick all the  way up will add 10 m/s to the aircraft speed, while pushing down will subtract 10 m/s from the aircraft  speed. If the remote controller stick is not at maximum deflection, then the offset speed will be  interpolated between [0, `getMaxFlightSpeed`] with a resolution of 1000 steps. If the  offset speed is negative, then the aircraft will fly backwards to previous waypoints. When it reaches the  first waypoint, it will then hover in place until a positive speed is  applied. `getMaxFlightSpeed` has a range of [2,15] m/s.  @return Flight speed in m/s",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_maxFlightSpeed_inline",
                   "",
            ],
            [
                   "getAutoFlightSpeed",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_autoFlightSpeed_inline",
                   "The base automatic speed of the aircraft as it moves between waypoints with range [-15, 15] m/s. The  aircraft's actual speed is a combination of the base automatic speed, and the speed control given by  the throttle joystick on the remote controller. If `getAutoFlightSpeed` >0: Actual  speed is `getAutoFlightSpeed` + Joystick Speed (with combined max  of `getMaxFlightSpeed`) If `getAutoFlightSpeed` =0: Actual speed is  controlled only by the remote controller joystick. If `getAutoFlightSpeed` <0 and the aircraft is at the first waypoint, the aircraft will hover in place until the speed is made positive by  the remote controller joystick.  @return Flight speed in m/s",
            ],
            [
                   "The base automatic speed of the aircraft as it moves between waypoints with range [-15, 15] m/s. The  aircraft's actual speed is a combination of the base automatic speed, and the speed control given by  the throttle joystick on the remote controller. If `getAutoFlightSpeed` >0: Actual  speed is `getAutoFlightSpeed` + Joystick Speed (with combined max  of `getMaxFlightSpeed`) If `getAutoFlightSpeed` =0: Actual speed is  controlled only by the remote controller joystick. If `getAutoFlightSpeed` <0 and the aircraft is at the first waypoint, the aircraft will hover in place until the speed is made positive by  the remote controller joystick.  @return Flight speed in m/s",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_autoFlightSpeed_inline",
                   "",
            ],
            [
                   "getGotoFirstWaypointMode",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_gotoFirstWaypointMode_inline",
                   "Defines how the aircraft will go to the first waypoint from its current position. Default  is `SAFELY`.  @return The behavior of the aircraft at the begining of the mission",
            ],
            [
                   "Defines how the aircraft will go to the first waypoint from its current position. Default  is `SAFELY`.  @return The behavior of the aircraft at the begining of the mission",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_gotoFirstWaypointMode_inline",
                   "",
            ],
            [
                   "getFinishedAction",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_finishedAction_inline",
                   "Action the aircraft will take when the waypoint mission is complete.  @return The action to execute when the waypoint mission finishes",
            ],
            [
                   "Action the aircraft will take when the waypoint mission is complete.  @return The action to execute when the waypoint mission finishes",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_finishedAction_inline",
                   "",
            ],
            [
                   "getHeadingMode",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_headingMode_inline",
                   "Heading of the aircraft as it moves between waypoints. Default  is `AUTO`.  @return Heading mode.",
            ],
            [
                   "Heading of the aircraft as it moves between waypoints. Default  is `AUTO`.  @return Heading mode.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_headingMode_inline",
                   "",
            ],
            [
                   "getPointOfInterest",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_pointOfInterest_inline",
                   "Aircraft heading will be fixed to the point of interest location during the waypoint mission. Used when `getHeadingMode`  is `TOWARD_POINT_OF_INTEREST`.  @return Point of interest location.",
            ],
            [
                   "Aircraft heading will be fixed to the point of interest location during the waypoint mission. Used when `getHeadingMode`  is `TOWARD_POINT_OF_INTEREST`.  @return Point of interest location.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_pointOfInterest_inline",
                   "",
            ],
            [
                   "getFlightPathMode",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_flightPathMode_inline",
                   "The path the aircraft follows between waypoints. The aircraft can either fly directly between waypoints in a straight line, or turn near a waypoint in the curve where the waypoint location defines a part of the curve.  @return The flight path mode.",
            ],
            [
                   "The path the aircraft follows between waypoints. The aircraft can either fly directly between waypoints in a straight line, or turn near a waypoint in the curve where the waypoint location defines a part of the curve.  @return The flight path mode.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_flightPathMode_inline",
                   "",
            ],
            [
                   "isExitMissionOnRCSignalLostEnabled",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_exitMissionOnRCSignalLost_inline",
                   "Determines whether the mission should stop when connection between the  aircraft and remote controller is lost. Default is `false`.  @return `true` if mission should stop when connection is lost.",
            ],
            [
                   "Determines whether the mission should stop when connection between the  aircraft and remote controller is lost. Default is `false`.  @return `true` if mission should stop when connection is lost.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_exitMissionOnRCSignalLost_inline",
                   "",
            ],
            [
                   "isGimbalPitchRotationEnabled",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_rotateGimbalPitch_inline",
                   "`true` if the gimbal pitch rotation can be controlled during the waypoint mission. When `true`, `gimbalPitch` in `Waypoint` is used to control gimbal pitch.  @return `true` if gimbal pitch can be controlled.",
            ],
            [
                   "`true` if the gimbal pitch rotation can be controlled during the waypoint mission. When `true`, `gimbalPitch` in `Waypoint` is used to control gimbal pitch.  @return `true` if gimbal pitch can be controlled.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_rotateGimbalPitch_inline",
                   "",
            ],
            [
                   "getRepeatTimes",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_repeatTimes_inline",
                   "Mission execution can be repeated more than once. A value of 0 means the mission only executes once, and does not repeat. A value of 1 means the mission will execute a total of two times.  @return Number of times to repeat mission",
            ],
            [
                   "Mission execution can be repeated more than once. A value of 0 means the mission only executes once, and does not repeat. A value of 1 means the mission will execute a total of two times.  @return Number of times to repeat mission",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_repeatTimes_inline",
                   "",
            ],
            [
                   "Waypoint",
                   2,
                   "/Components/Missions/DJIWaypoint.html",
                   "",
                   "The class represents a target point in the waypoint mission. For a waypoint mission, a flight route  consists of multiple `Waypoint` objects. The user can also define the actions to perform for  each `Waypoint`.",
            ],
            [
                   "The class represents a target point in the waypoint mission. For a waypoint mission, a flight route  consists of multiple `Waypoint` objects. The user can also define the actions to perform for  each `Waypoint`.",
                   1,
                   "/Components/Missions/DJIWaypoint.html",
                   "",
                   "",
            ],
            [
                   "WaypointMissionFinishedAction",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionFinishedAction_inline",
                   "Actions taken when the waypoint mission has finished.",
            ],
            [
                   "Actions taken when the waypoint mission has finished.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionFinishedAction_inline",
                   "",
            ],
            [
                   "WaypointMissionHeadingMode",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionHeadingMode_inline",
                   "Current waypoint mission heading mode.",
            ],
            [
                   "Current waypoint mission heading mode.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionHeadingMode_inline",
                   "",
            ],
            [
                   "WaypointMissionFlightPathMode",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionFlightPathMode_inline",
                   "Waypoint mission flight path mode.",
            ],
            [
                   "Waypoint mission flight path mode.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionFlightPathMode_inline",
                   "",
            ],
            [
                   "WaypointMissionGotoWaypointMode",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionGotoWaypointMode_inline",
                   "This enum will determine the goto point mode while the drone executes the flight.",
            ],
            [
                   "This enum will determine the goto point mode while the drone executes the flight.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionGotoWaypointMode_inline",
                   "",
            ],
            [
                   "Builder",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_Auto_inline",
                   "Default constructor of waypoint mission with 0 waypoints.",
            ],
            [
                   "Default constructor of waypoint mission with 0 waypoints.",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_Auto_inline",
                   "",
            ],
            [
                   "Builder",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_WaypointMission_inline",
                   "Waypoint mission constructor that clones this waypoint mission from another.  @param waypointMissionToClone Waypoint mission to clone",
            ],
            [
                   "Waypoint mission constructor that clones this waypoint mission from another.  @param waypointMissionToClone Waypoint mission to clone",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_WaypointMission_inline",
                   "",
            ],
            [
                   "addWaypoint",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_addWaypoint_inline",
                   "Add a waypoint to the waypoint mission.  @param waypoint Waypoint to add.  @return A `Builder` object",
            ],
            [
                   "Add a waypoint to the waypoint mission.  @param waypoint Waypoint to add.  @return A `Builder` object",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_addWaypoint_inline",
                   "",
            ],
            [
                   "waypointList",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_waypointList_inline",
                   "List of waypoints that will define this mission  @param waypointList List of waypoints  @return A `Builder` object",
            ],
            [
                   "List of waypoints that will define this mission  @param waypointList List of waypoints  @return A `Builder` object",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_waypointList_inline",
                   "",
            ],
            [
                   "getWaypointList",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getWaypointList_inline",
                   "List of waypoints that will define this mission  @return List of waypoints",
            ],
            [
                   "List of waypoints that will define this mission  @return List of waypoints",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getWaypointList_inline",
                   "",
            ],
            [
                   "waypointCount",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_waypointCount_inline",
                   "Number of waypoints in the waypoint mission. This must be set to the correct number of waypoints added to the mission.  @param waypointCount Waypoint count.  @return A `Builder` object",
            ],
            [
                   "Number of waypoints in the waypoint mission. This must be set to the correct number of waypoints added to the mission.  @param waypointCount Waypoint count.  @return A `Builder` object",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_waypointCount_inline",
                   "",
            ],
            [
                   "getWaypointCount",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getWaypointCount_inline",
                   "Number of waypoints in the waypoint mission.  @return Waypoint count.",
            ],
            [
                   "Number of waypoints in the waypoint mission.  @return Waypoint count.",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getWaypointCount_inline",
                   "",
            ],
            [
                   "maxFlightSpeed",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_maxFlightSpeed_inline",
                   "While the aircraft is traveling between waypoints, you can offset its speed by using the throttle joystick  on the remote controller. `getMaxFlightSpeed` is this offset when the joystick is pushed  to maximum deflection. For example, If maxFlightSpeed is 10 m/s, then pushing the throttle joystick all the  way up will add 10 m/s to the aircraft speed, while pushing down will subtract 10 m/s from the aircraft  speed. If the remote controller stick is not at maximum deflection, then the offset speed will be  interpolated between [0, `getMaxFlightSpeed`] with a resolution of 1000 steps. If the  offset speed is negative, then the aircraft will fly backwards to previous waypoints. When it reaches the  first waypoint, it will then hover in place until a positive speed is  applied. `getMaxFlightSpeed` has a range of [2,15] m/s.  @param maxFlightSpeed Flight speed in m/s  @return A `Builder` object",
            ],
            [
                   "While the aircraft is traveling between waypoints, you can offset its speed by using the throttle joystick  on the remote controller. `getMaxFlightSpeed` is this offset when the joystick is pushed  to maximum deflection. For example, If maxFlightSpeed is 10 m/s, then pushing the throttle joystick all the  way up will add 10 m/s to the aircraft speed, while pushing down will subtract 10 m/s from the aircraft  speed. If the remote controller stick is not at maximum deflection, then the offset speed will be  interpolated between [0, `getMaxFlightSpeed`] with a resolution of 1000 steps. If the  offset speed is negative, then the aircraft will fly backwards to previous waypoints. When it reaches the  first waypoint, it will then hover in place until a positive speed is  applied. `getMaxFlightSpeed` has a range of [2,15] m/s.  @param maxFlightSpeed Flight speed in m/s  @return A `Builder` object",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_maxFlightSpeed_inline",
                   "",
            ],
            [
                   "getMaxFlightSpeed",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getMaxFlightSpeed_inline",
                   "While the aircraft is traveling between waypoints, you can offset its speed by using the throttle joystick  on the remote controller. `getMaxFlightSpeed` is this offset when the joystick is pushed  to maximum deflection. For example, If maxFlightSpeed is 10 m/s, then pushing the throttle joystick all the  way up will add 10 m/s to the aircraft speed, while pushing down will subtract 10 m/s from the aircraft  speed. If the remote controller stick is not at maximum deflection, then the offset speed will be  interpolated between [0, `getMaxFlightSpeed`] with a resolution of 1000 steps. If the  offset speed is negative, then the aircraft will fly backwards to previous waypoints. When it reaches the  first waypoint, it will then hover in place until a positive speed is  applied. `getMaxFlightSpeed` has a range of [2,15] m/s.  @return Flight speed in m/s",
            ],
            [
                   "While the aircraft is traveling between waypoints, you can offset its speed by using the throttle joystick  on the remote controller. `getMaxFlightSpeed` is this offset when the joystick is pushed  to maximum deflection. For example, If maxFlightSpeed is 10 m/s, then pushing the throttle joystick all the  way up will add 10 m/s to the aircraft speed, while pushing down will subtract 10 m/s from the aircraft  speed. If the remote controller stick is not at maximum deflection, then the offset speed will be  interpolated between [0, `getMaxFlightSpeed`] with a resolution of 1000 steps. If the  offset speed is negative, then the aircraft will fly backwards to previous waypoints. When it reaches the  first waypoint, it will then hover in place until a positive speed is  applied. `getMaxFlightSpeed` has a range of [2,15] m/s.  @return Flight speed in m/s",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getMaxFlightSpeed_inline",
                   "",
            ],
            [
                   "autoFlightSpeed",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_autoFlightSpeed_inline",
                   "The base automatic speed of the aircraft as it moves between waypoints with range [-15, 15] m/s. The  aircraft's actual speed is a combination of the base automatic speed, and the speed control given by  the throttle joystick on the remote controller. If `getAutoFlightSpeed` >0: Actual  speed is `getAutoFlightSpeed` + Joystick Speed (with combined max  of `getMaxFlightSpeed`) If `getAutoFlightSpeed` =0: Actual speed is  controlled only by the remote controller joystick. If `getAutoFlightSpeed` <0 and the aircraft is at the first waypoint, the aircraft will hover in place until the speed is made positive by  the remote controller joystick.  @param autoFlightSpeed Flight speed in m/s  @return A `Builder` object",
            ],
            [
                   "The base automatic speed of the aircraft as it moves between waypoints with range [-15, 15] m/s. The  aircraft's actual speed is a combination of the base automatic speed, and the speed control given by  the throttle joystick on the remote controller. If `getAutoFlightSpeed` >0: Actual  speed is `getAutoFlightSpeed` + Joystick Speed (with combined max  of `getMaxFlightSpeed`) If `getAutoFlightSpeed` =0: Actual speed is  controlled only by the remote controller joystick. If `getAutoFlightSpeed` <0 and the aircraft is at the first waypoint, the aircraft will hover in place until the speed is made positive by  the remote controller joystick.  @param autoFlightSpeed Flight speed in m/s  @return A `Builder` object",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_autoFlightSpeed_inline",
                   "",
            ],
            [
                   "getAutoFlightSpeed",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getAutoFlightSpeed_inline",
                   "The base automatic speed of the aircraft as it moves between waypoints with range [-15, 15] m/s. The  aircraft's actual speed is a combination of the base automatic speed, and the speed control given by  the throttle joystick on the remote controller. If `getAutoFlightSpeed` >0: Actual  speed is `getAutoFlightSpeed` + Joystick Speed (with combined max  of `getMaxFlightSpeed`) If `getAutoFlightSpeed` =0: Actual speed is  controlled only by the remote controller joystick. If `getAutoFlightSpeed` <0 and the aircraft is at the first waypoint, the aircraft will hover in place until the speed is made positive by  the remote controller joystick.  @return Flight speed in m/s",
            ],
            [
                   "The base automatic speed of the aircraft as it moves between waypoints with range [-15, 15] m/s. The  aircraft's actual speed is a combination of the base automatic speed, and the speed control given by  the throttle joystick on the remote controller. If `getAutoFlightSpeed` >0: Actual  speed is `getAutoFlightSpeed` + Joystick Speed (with combined max  of `getMaxFlightSpeed`) If `getAutoFlightSpeed` =0: Actual speed is  controlled only by the remote controller joystick. If `getAutoFlightSpeed` <0 and the aircraft is at the first waypoint, the aircraft will hover in place until the speed is made positive by  the remote controller joystick.  @return Flight speed in m/s",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getAutoFlightSpeed_inline",
                   "",
            ],
            [
                   "gotoFirstWaypointMode",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_gotoFirstWaypointMode_inline",
                   "Defines how the aircraft will go to the first waypoint from its current position. Default  is `SAFELY`.  @param gotoFirstWaypointMode Behavior prior to mission start.  @return A `Builder` object",
            ],
            [
                   "Defines how the aircraft will go to the first waypoint from its current position. Default  is `SAFELY`.  @param gotoFirstWaypointMode Behavior prior to mission start.  @return A `Builder` object",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_gotoFirstWaypointMode_inline",
                   "",
            ],
            [
                   "getGotoFirstWaypointMode",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getGotoFirstWaypointMode_inline",
                   "Defines how the aircraft will go to the first waypoint from its current position. Default  is `SAFELY`.  @return The behavior of the aircraft at the begining of the mission",
            ],
            [
                   "Defines how the aircraft will go to the first waypoint from its current position. Default  is `SAFELY`.  @return The behavior of the aircraft at the begining of the mission",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getGotoFirstWaypointMode_inline",
                   "",
            ],
            [
                   "finishedAction",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_finishedAction_inline",
                   "Action the aircraft will take when the waypoint mission is complete.  @param finishedAction Behavior of aircraft when mission is complete.  @return A `Builder` object",
            ],
            [
                   "Action the aircraft will take when the waypoint mission is complete.  @param finishedAction Behavior of aircraft when mission is complete.  @return A `Builder` object",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_finishedAction_inline",
                   "",
            ],
            [
                   "getFinishedAction",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getFinishedAction_inline",
                   "Action the aircraft will take when the waypoint mission is complete.  @return The action to execute when the waypoint mission finishes",
            ],
            [
                   "Action the aircraft will take when the waypoint mission is complete.  @return The action to execute when the waypoint mission finishes",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getFinishedAction_inline",
                   "",
            ],
            [
                   "headingMode",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_headingMode_inline",
                   "Heading of the aircraft as it moves between waypoints. Default  is `AUTO`.  @param headingMode The heading mode.  @return A `Builder` object",
            ],
            [
                   "Heading of the aircraft as it moves between waypoints. Default  is `AUTO`.  @param headingMode The heading mode.  @return A `Builder` object",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_headingMode_inline",
                   "",
            ],
            [
                   "getHeadingMode",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getHeadingMode_inline",
                   "Heading of the aircraft as it moves between waypoints. Default  is `AUTO`.  @return Heading mode.",
            ],
            [
                   "Heading of the aircraft as it moves between waypoints. Default  is `AUTO`.  @return Heading mode.",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getHeadingMode_inline",
                   "",
            ],
            [
                   "setPointOfInterest",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_setPointOfInterest_inline",
                   "Aircraft heading will be fixed to the point of interest location during the waypoint mission. Used when `getHeadingMode`  is `TOWARD_POINT_OF_INTEREST`.  @param pointOfInterest Point of interest location.  @return A `Builder` object",
            ],
            [
                   "Aircraft heading will be fixed to the point of interest location during the waypoint mission. Used when `getHeadingMode`  is `TOWARD_POINT_OF_INTEREST`.  @param pointOfInterest Point of interest location.  @return A `Builder` object",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_setPointOfInterest_inline",
                   "",
            ],
            [
                   "getPointOfInterest",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getPointOfInterest_inline",
                   "Aircraft heading will be fixed to the point of interest location during the waypoint mission. Used when `getHeadingMode`  is `TOWARD_POINT_OF_INTEREST`.  @return Point of interest location.",
            ],
            [
                   "Aircraft heading will be fixed to the point of interest location during the waypoint mission. Used when `getHeadingMode`  is `TOWARD_POINT_OF_INTEREST`.  @return Point of interest location.",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getPointOfInterest_inline",
                   "",
            ],
            [
                   "flightPathMode",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_flightPathMode_inline",
                   "The path the aircraft follows between waypoints. The aircraft can either fly directly between waypoints in a straight line, or turn near a waypoint in the curve where the waypoint location defines a part of the curve.  @param flightPathMode The flight path mode.  @return A `Builder` object",
            ],
            [
                   "The path the aircraft follows between waypoints. The aircraft can either fly directly between waypoints in a straight line, or turn near a waypoint in the curve where the waypoint location defines a part of the curve.  @param flightPathMode The flight path mode.  @return A `Builder` object",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_flightPathMode_inline",
                   "",
            ],
            [
                   "getFlightPathMode",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getFlightPathMode_inline",
                   "The path the aircraft follows between waypoints. The aircraft can either fly directly between waypoints in a straight line, or turn near a waypoint in the curve where the waypoint location defines a part of the curve.  @return The flight path mode.",
            ],
            [
                   "The path the aircraft follows between waypoints. The aircraft can either fly directly between waypoints in a straight line, or turn near a waypoint in the curve where the waypoint location defines a part of the curve.  @return The flight path mode.",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getFlightPathMode_inline",
                   "",
            ],
            [
                   "setExitMissionOnRCSignalLostEnabled",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_setExitMissionOnRCSignalLostEnabled_inline",
                   "Determines whether the mission should stop when connection between the  aircraft and remote controller is lost. Default is `false`.  @param enabled `true` if mission should stop when connection is lost.  @return A `Builder` object",
            ],
            [
                   "Determines whether the mission should stop when connection between the  aircraft and remote controller is lost. Default is `false`.  @param enabled `true` if mission should stop when connection is lost.  @return A `Builder` object",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_setExitMissionOnRCSignalLostEnabled_inline",
                   "",
            ],
            [
                   "isExitMissionOnRCSignalLostEnabled",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_isExitMissionOnRCSignalLostEnabled_inline",
                   "Determines whether the mission should stop when connection between the  aircraft and remote controller is lost. Default is `false`.  @return `true` if mission should stop when connection is lost.",
            ],
            [
                   "Determines whether the mission should stop when connection between the  aircraft and remote controller is lost. Default is `false`.  @return `true` if mission should stop when connection is lost.",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_isExitMissionOnRCSignalLostEnabled_inline",
                   "",
            ],
            [
                   "setGimbalPitchRotationEnabled",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_setGimbalPitchRotationEnabled_inline",
                   "`true` if the gimbal pitch rotation can be controlled during the waypoint mission. When `true`, `gimbalPitch` in `Waypoint` is used to control gimbal pitch.  @param gimbalPitchRotationEnabled `true` if gimbal pitch can be controlled.  @return A `Builder` object",
            ],
            [
                   "`true` if the gimbal pitch rotation can be controlled during the waypoint mission. When `true`, `gimbalPitch` in `Waypoint` is used to control gimbal pitch.  @param gimbalPitchRotationEnabled `true` if gimbal pitch can be controlled.  @return A `Builder` object",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_setGimbalPitchRotationEnabled_inline",
                   "",
            ],
            [
                   "isGimbalPitchRotationEnabled",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_isGimbalPitchRotationEnabled_inline",
                   "`true` if the gimbal pitch rotation can be controlled during the waypoint mission. When `true`, `gimbalPitch` in `Waypoint` is used to control gimbal pitch.  @return `true` if gimbal pitch can be controlled.",
            ],
            [
                   "`true` if the gimbal pitch rotation can be controlled during the waypoint mission. When `true`, `gimbalPitch` in `Waypoint` is used to control gimbal pitch.  @return `true` if gimbal pitch can be controlled.",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_isGimbalPitchRotationEnabled_inline",
                   "",
            ],
            [
                   "repeatTimes",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_repeatTimes_inline",
                   "Mission execution can be repeated more than once. A value of 0 means the mission only executes once, and does not repeat. A value of 1 means the mission will execute a total of two times.  @param repeatTimes Number of times to repeat mission  @return A `Builder` object",
            ],
            [
                   "Mission execution can be repeated more than once. A value of 0 means the mission only executes once, and does not repeat. A value of 1 means the mission will execute a total of two times.  @param repeatTimes Number of times to repeat mission  @return A `Builder` object",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_repeatTimes_inline",
                   "",
            ],
            [
                   "getRepeatTimes",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getRepeatTimes_inline",
                   "Mission execution can be repeated more than once. A value of 0 means the mission only executes once, and does not repeat. A value of 1 means the mission will execute a total of two times.  @return Number of times to repeat mission",
            ],
            [
                   "Mission execution can be repeated more than once. A value of 0 means the mission only executes once, and does not repeat. A value of 1 means the mission will execute a total of two times.  @return Number of times to repeat mission",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_getRepeatTimes_inline",
                   "",
            ],
            [
                   "isMissionComplete",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_isMissionComplete_inline",
                   "When downloading a waypoint mission, the number of waypoints in `getWaypointList` will be less than  `getWaypointCount` until the download is complete. This property is `true` when all the information in the waypoint mission is downloaded, and complete in this object.  @return `true` if mission information is complete.",
            ],
            [
                   "When downloading a waypoint mission, the number of waypoints in `getWaypointList` will be less than  `getWaypointCount` until the download is complete. This property is `true` when all the information in the waypoint mission is downloaded, and complete in this object.  @return `true` if mission information is complete.",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_isMissionComplete_inline",
                   "",
            ],
            [
                   "build",
                   2,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_build_inline",
                   "Build the object into a `WaypointMission` object.  @return Waypoint mission.",
            ],
            [
                   "Build the object into a `WaypointMission` object.  @return Waypoint mission.",
                   1,
                   "/Components/Missions/DJIWaypointMission_Builder.html",
                   "#DJIWaypointMission_Builder_build_inline",
                   "",
            ],
            [
                   "NO_ACTION",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionFinishedAction_NoAction_inline",
                   "No further action will be taken on completion of mission. At this point, the aircraft can be  controlled by the remote controller.",
            ],
            [
                   "No further action will be taken on completion of mission. At this point, the aircraft can be  controlled by the remote controller.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionFinishedAction_NoAction_inline",
                   "",
            ],
            [
                   "GO_HOME",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionFinishedAction_GoHome_inline",
                   "The aircraft will go home when the mission is complete. If the aircraft is more than 20m away from  the home point it will go home and land. Otherwise, it will land directly at the current location.",
            ],
            [
                   "The aircraft will go home when the mission is complete. If the aircraft is more than 20m away from  the home point it will go home and land. Otherwise, it will land directly at the current location.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionFinishedAction_GoHome_inline",
                   "",
            ],
            [
                   "AUTO_LAND",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionFinishedAction_AutoLand_inline",
                   "The aircraft will land automatically at the last waypoint.",
            ],
            [
                   "The aircraft will land automatically at the last waypoint.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionFinishedAction_AutoLand_inline",
                   "",
            ],
            [
                   "GO_FIRST_WAYPOINT",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionFinishedAction_GoFirstWaypoint_inline",
                   "The aircraft will go back to its first waypoint and hover in position.",
            ],
            [
                   "The aircraft will go back to its first waypoint and hover in position.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionFinishedAction_GoFirstWaypoint_inline",
                   "",
            ],
            [
                   "CONTINUE_UNTIL_END",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionFinishedAction_ContinueUntilStop_inline",
                   "When the aircraft reaches its final waypoint, it will hover without ending the mission. The joystick  can still be used to pull the aircraft back along its previous waypoints. The only way this mission  can end is if stopMission is called.",
            ],
            [
                   "When the aircraft reaches its final waypoint, it will hover without ending the mission. The joystick  can still be used to pull the aircraft back along its previous waypoints. The only way this mission  can end is if stopMission is called.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionFinishedAction_ContinueUntilStop_inline",
                   "",
            ],
            [
                   "AUTO",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionHeadingMode_Auto_inline",
                   "Aircraft's heading will always be in the direction of flight.",
            ],
            [
                   "Aircraft's heading will always be in the direction of flight.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionHeadingMode_Auto_inline",
                   "",
            ],
            [
                   "USING_INITIAL_DIRECTION",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionHeadingMode_UsingInitialDirection_inline",
                   "Aircraft's heading will be set to the heading when reaching the first waypoint. Before reaching the  first waypoint, the aircraft's heading can be controlled by the remote controller. When the aircraft  reaches the first waypoint, its heading will be fixed.",
            ],
            [
                   "Aircraft's heading will be set to the heading when reaching the first waypoint. Before reaching the  first waypoint, the aircraft's heading can be controlled by the remote controller. When the aircraft  reaches the first waypoint, its heading will be fixed.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionHeadingMode_UsingInitialDirection_inline",
                   "",
            ],
            [
                   "CONTROL_BY_REMOTE_CONTROLLER",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionHeadingMode_ControledByRemoteController_inline",
                   "Aircraft's heading will be controlled by the remote controller.",
            ],
            [
                   "Aircraft's heading will be controlled by the remote controller.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionHeadingMode_ControledByRemoteController_inline",
                   "",
            ],
            [
                   "USING_WAYPOINT_HEADING",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionHeadingMode_UsingWaypointHeading_inline",
                   "Aircraft's heading will be gradually set to the next waypoint heading while traveling between two adjacent waypoints.",
            ],
            [
                   "Aircraft's heading will be gradually set to the next waypoint heading while traveling between two adjacent waypoints.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionHeadingMode_UsingWaypointHeading_inline",
                   "",
            ],
            [
                   "TOWARD_POINT_OF_INTEREST",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionHeadingMode_TowardPointOfInterest_inline",
                   "Aircraft's heading will always toward point of interest.",
            ],
            [
                   "Aircraft's heading will always toward point of interest.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionHeadingMode_TowardPointOfInterest_inline",
                   "",
            ],
            [
                   "NORMAL",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionFlightPathMode_Normal_inline",
                   "The flight path will be normal and the aircraft will move from one waypoint to the next in straight lines.",
            ],
            [
                   "The flight path will be normal and the aircraft will move from one waypoint to the next in straight lines.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionFlightPathMode_Normal_inline",
                   "",
            ],
            [
                   "CURVED",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionFlightPathMode_Curved_inline",
                   "The flight path will be curved and the aircraft will move from one waypoint to the next in a curved motion,  adhering to the `cornerRadiusInMeters`, which is set in `Waypoint`.",
            ],
            [
                   "The flight path will be curved and the aircraft will move from one waypoint to the next in a curved motion,  adhering to the `cornerRadiusInMeters`, which is set in `Waypoint`.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionFlightPathMode_Curved_inline",
                   "",
            ],
            [
                   "SAFELY",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionGotoWaypointMode_Safely_inline",
                   "Go to the waypoint safely. The aircraft will rise to the same altitude of the waypoint if the current  altitude is lower then the waypoint altitude. It then goes to the waypoint coordinate from the current  altitude, and proceeds to the altitude of the waypoint.",
            ],
            [
                   "Go to the waypoint safely. The aircraft will rise to the same altitude of the waypoint if the current  altitude is lower then the waypoint altitude. It then goes to the waypoint coordinate from the current  altitude, and proceeds to the altitude of the waypoint.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionGotoWaypointMode_Safely_inline",
                   "",
            ],
            [
                   "POINT_TO_POINT",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionGotoWaypointMode_PointToPoint_inline",
                   "Go to the waypoint from the current aircraft point to the waypoint directly.",
            ],
            [
                   "Go to the waypoint from the current aircraft point to the waypoint directly.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionGotoWaypointMode_PointToPoint_inline",
                   "",
            ],
            [
                   "loadMission",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_loadMission_inline",
                   "Loads the WaypointMission into device memory. This also verifies all the information of `mission`. If something is incorrect, callback.result() will be called with an Error. Otherwise, callback.result() will be called with a `null` value. The `mission` object will remain in device memory even after the WaypointMission execution has finished.  @param mission Waypoint mission to load.  @return Returns an error when mission data is invalid or the mission cannot be loaded in the current state.",
            ],
            [
                   "Loads the WaypointMission into device memory. This also verifies all the information of `mission`. If something is incorrect, callback.result() will be called with an Error. Otherwise, callback.result() will be called with a `null` value. The `mission` object will remain in device memory even after the WaypointMission execution has finished.  @param mission Waypoint mission to load.  @return Returns an error when mission data is invalid or the mission cannot be loaded in the current state.",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_loadMission_inline",
                   "",
            ],
            [
                   "getLoadedMission",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_loadedMission_inline",
                   "Gets the currently loaded mission of the operator. There are two ways to load a mission. 1. A mission can be loaded by user through `loadMission`. 2. If the aircraft is already executing a waypoint mission when SDK is re-connected, the operator will download part of the mission's information from the aircraft and load it automatically. In that case, the loaded mission will only contain the summary of the executing mission but information for each waypoint is absent. User can call `downloadMission` to get all the information for the loaded mission. The `getLoadedMission` will be reset to `null` when the execution of the loadedMission is stopped, finished or interrupted.  @return A object of `WaypointMission`.",
            ],
            [
                   "Gets the currently loaded mission of the operator. There are two ways to load a mission. 1. A mission can be loaded by user through `loadMission`. 2. If the aircraft is already executing a waypoint mission when SDK is re-connected, the operator will download part of the mission's information from the aircraft and load it automatically. In that case, the loaded mission will only contain the summary of the executing mission but information for each waypoint is absent. User can call `downloadMission` to get all the information for the loaded mission. The `getLoadedMission` will be reset to `null` when the execution of the loadedMission is stopped, finished or interrupted.  @return A object of `WaypointMission`.",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_loadedMission_inline",
                   "",
            ],
            [
                   "uploadMission",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_uploadMission_inline",
                   "Starts to upload the `getLoadedMission` to the aircraft. It can only be called when the `getLoadedMission` is complete and the `getCurrentState` is `READY_TO_UPLOAD`. If a timeout error occurs during the previous upload, the upload operation will resume from the previous break-point. After a mission is uploaded successfully, the `WaypointMissionState` will become `READY_TO_EXECUTE`.  @param callback Completion block that will be called when the upload operation succeeds or fails to start. ",
            ],
            [
                   "Starts to upload the `getLoadedMission` to the aircraft. It can only be called when the `getLoadedMission` is complete and the `getCurrentState` is `READY_TO_UPLOAD`. If a timeout error occurs during the previous upload, the upload operation will resume from the previous break-point. After a mission is uploaded successfully, the `WaypointMissionState` will become `READY_TO_EXECUTE`.  @param callback Completion block that will be called when the upload operation succeeds or fails to start. ",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_uploadMission_inline",
                   "",
            ],
            [
                   "retryUploadMission",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_retryUploadMission_inline",
                   "Retry upload waypoint mission.  @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Retry upload waypoint mission.  @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_retryUploadMission_inline",
                   "",
            ],
            [
                   "downloadMission",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_downloadMission_inline",
                   "Downloads information of each waypoint from aircraft and save it to `getLoadedMission`. If a download operation is started, the operator will download the information of waypoints missing in `getLoadedMission` one-by-one in ascending order. If `getLoadedMission` is already complete (containing all the waypoints), this method will call `completion` immediately without error. It can only be called when the `getCurrentState` is one of the following: - `EXECUTING` - `EXECUTION_PAUSED`  @param callback Completion block that will be called when the download operation succeeds or fails to start. ",
            ],
            [
                   "Downloads information of each waypoint from aircraft and save it to `getLoadedMission`. If a download operation is started, the operator will download the information of waypoints missing in `getLoadedMission` one-by-one in ascending order. If `getLoadedMission` is already complete (containing all the waypoints), this method will call `completion` immediately without error. It can only be called when the `getCurrentState` is one of the following: - `EXECUTING` - `EXECUTION_PAUSED`  @param callback Completion block that will be called when the download operation succeeds or fails to start. ",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_downloadMission_inline",
                   "",
            ],
            [
                   "startMission",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_startMission_inline",
                   "Starts the execution of the uploaded mission. It can only be called when the `getCurrentState` is `READY_TO_EXECUTE`. After a mission is started successfully, the `getCurrentState` will become `EXECUTING`.  @param callback Completion block that will be called when the operator succeeds or fails to start the execution. If it fails, an error will be returned.",
            ],
            [
                   "Starts the execution of the uploaded mission. It can only be called when the `getCurrentState` is `READY_TO_EXECUTE`. After a mission is started successfully, the `getCurrentState` will become `EXECUTING`.  @param callback Completion block that will be called when the operator succeeds or fails to start the execution. If it fails, an error will be returned.",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_startMission_inline",
                   "",
            ],
            [
                   "resumeMission",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_resumeMission_inline",
                   "Resumes the paused mission. It can only be called when the `getCurrentState` is `EXECUTION_PAUSED`. After a mission is resumed successfully, the `getCurrentState` will become `EXECUTING`.  @param callback Completion block that will be called when the operator succeeds or fails to resume the mission. If it fails, an error will be returned.",
            ],
            [
                   "Resumes the paused mission. It can only be called when the `getCurrentState` is `EXECUTION_PAUSED`. After a mission is resumed successfully, the `getCurrentState` will become `EXECUTING`.  @param callback Completion block that will be called when the operator succeeds or fails to resume the mission. If it fails, an error will be returned.",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_resumeMission_inline",
                   "",
            ],
            [
                   "pauseMission",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_pauseMission_inline",
                   "Pauses the executing mission. It can only be called when the `WaypointMissionState` is `EXECUTING`. After a mission is paused successfully, the `getCurrentState` will become `EXECUTION_PAUSED`.  @param callback Completion block that will be called when the operator succeeds or fails to pause the mission. If it fails, an error will be returned.",
            ],
            [
                   "Pauses the executing mission. It can only be called when the `WaypointMissionState` is `EXECUTING`. After a mission is paused successfully, the `getCurrentState` will become `EXECUTION_PAUSED`.  @param callback Completion block that will be called when the operator succeeds or fails to pause the mission. If it fails, an error will be returned.",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_pauseMission_inline",
                   "",
            ],
            [
                   "stopMission",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_stopMission_inline",
                   "Stops the executing or paused mission. It can only be called when the `getCurrentState` is one of the following: - `EXECUTING` - `EXECUTION_PAUSED` After a mission is stopped successfully, `getCurrentState` will become `READY_TO_UPLOAD`.  @param callback Completion block that will be called when the operator succeeds or fails to stop the mission. If it fails, an error will be returned.",
            ],
            [
                   "Stops the executing or paused mission. It can only be called when the `getCurrentState` is one of the following: - `EXECUTING` - `EXECUTION_PAUSED` After a mission is stopped successfully, `getCurrentState` will become `READY_TO_UPLOAD`.  @param callback Completion block that will be called when the operator succeeds or fails to stop the mission. If it fails, an error will be returned.",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_stopMission_inline",
                   "",
            ],
            [
                   "setAutoFlightSpeed",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_setAutoFlightSpeed_inline",
                   "Set the flight speed while the mission is executing automatically (without manual joystick speed input). This is the only property or method in this class that can communicate with the aircraft during a mission. All other properties and methods are used offline to prepare the mission which is then uploaded to the aircraft.  @param speed Auto flight speed to be set. The absolute value of the auto flight speed should be less than or equal to the `getMaxFlightSpeed`. Its range is [-`getMaxFlightSpeed`, `getMaxFlightSpeed`] m/s. @param callback Completion callback.",
            ],
            [
                   "Set the flight speed while the mission is executing automatically (without manual joystick speed input). This is the only property or method in this class that can communicate with the aircraft during a mission. All other properties and methods are used offline to prepare the mission which is then uploaded to the aircraft.  @param speed Auto flight speed to be set. The absolute value of the auto flight speed should be less than or equal to the `getMaxFlightSpeed`. Its range is [-`getMaxFlightSpeed`, `getMaxFlightSpeed`] m/s. @param callback Completion callback.",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_setAutoFlightSpeed_inline",
                   "",
            ],
            [
                   "getCurrentState",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_currentState_inline",
                   "The current state of the operator.  @return A object of `WaypointMissionState`.",
            ],
            [
                   "The current state of the operator.  @return A object of `WaypointMissionState`.",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_currentState_inline",
                   "",
            ],
            [
                   "addListener",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_addListener_inline",
                   "Add listener to listen for events.  @param listener An object of `WaypointMissionOperatorListener`.",
            ],
            [
                   "Add listener to listen for events.  @param listener An object of `WaypointMissionOperatorListener`.",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_addListener_inline",
                   "",
            ],
            [
                   "removeListener",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_removeListener_inline",
                   "Removes listener. If the same listener is listening to multiple events and notifications (e.g. upload event and download event), it will not receive any update of them.  @param listener Listener to be removed.",
            ],
            [
                   "Removes listener. If the same listener is listening to multiple events and notifications (e.g. upload event and download event), it will not receive any update of them.  @param listener Listener to be removed.",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_removeListener_inline",
                   "",
            ],
            [
                   "WaypointMission",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "",
                   "In the waypoint mission, the aircraft will travel between waypoints, execute actions at waypoints, and  adjust heading and altitude between waypoints. Waypoints are physical locations to which the aircraft  will fly. Creating a series of waypoints, in effect, will program a flight route for the aircraft to follow. Actions can also be added to waypoints, which will be carried out when the aircraft reaches the  waypoint. The aircraft travels between waypoints automatically at a base speed. However, the user can  change the speed by using the pitch joystick. If the stick is pushed up, the speed will increase. If  the stick is pushed down, the speed will slow down. The stick can be pushed down to stop the aircraft  and further pushed to start making the aircraft travel back along the path it came. When the aircraft  is traveling through waypoints in the reverse order, it will not execute waypoint actions at each  waypoint. If the stick is released, the aircraft will again travel through the waypoints in the original  order, and continue to execute waypoint actions (even if executed previously). If the aircraft is pulled  back along the waypoint mission all the way to the first waypoint, then it will hover in place until the  stick is released enough for it to again progress through the mission from start to finish. It is not  supported by Mavic Pro when using WiFi connection. It is not supported by Spark.",
            ],
            [
                   "In the waypoint mission, the aircraft will travel between waypoints, execute actions at waypoints, and  adjust heading and altitude between waypoints. Waypoints are physical locations to which the aircraft  will fly. Creating a series of waypoints, in effect, will program a flight route for the aircraft to follow. Actions can also be added to waypoints, which will be carried out when the aircraft reaches the  waypoint. The aircraft travels between waypoints automatically at a base speed. However, the user can  change the speed by using the pitch joystick. If the stick is pushed up, the speed will increase. If  the stick is pushed down, the speed will slow down. The stick can be pushed down to stop the aircraft  and further pushed to start making the aircraft travel back along the path it came. When the aircraft  is traveling through waypoints in the reverse order, it will not execute waypoint actions at each  waypoint. If the stick is released, the aircraft will again travel through the waypoints in the original  order, and continue to execute waypoint actions (even if executed previously). If the aircraft is pulled  back along the waypoint mission all the way to the first waypoint, then it will hover in place until the  stick is released enough for it to again progress through the mission from start to finish. It is not  supported by Mavic Pro when using WiFi connection. It is not supported by Spark.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "",
                   "",
            ],
            [
                   "WaypointMissionEvent",
                   2,
                   "/Components/Missions/DJIWaypointMissionEvent.html",
                   "",
                   "Waypoint event base class.",
            ],
            [
                   "Waypoint event base class.",
                   1,
                   "/Components/Missions/DJIWaypointMissionEvent.html",
                   "",
                   "",
            ],
            [
                   "WaypointMissionUploadEvent",
                   2,
                   "/Components/Missions/DJIWaypointMissionUploadEvent.html",
                   "",
                   "The upload event of a waypoint mission.",
            ],
            [
                   "The upload event of a waypoint mission.",
                   1,
                   "/Components/Missions/DJIWaypointMissionUploadEvent.html",
                   "",
                   "",
            ],
            [
                   "WaypointMissionDownloadEvent",
                   2,
                   "/Components/Missions/DJIWaypointMissionDownloadEvent.html",
                   "",
                   "The download event of a waypoint mission.",
            ],
            [
                   "The download event of a waypoint mission.",
                   1,
                   "/Components/Missions/DJIWaypointMissionDownloadEvent.html",
                   "",
                   "",
            ],
            [
                   "WaypointMissionExecutionEvent",
                   2,
                   "/Components/Missions/DJIWaypointMissionExecutionEvent.html",
                   "",
                   "The execution event of a waypoint mission.",
            ],
            [
                   "The execution event of a waypoint mission.",
                   1,
                   "/Components/Missions/DJIWaypointMissionExecutionEvent.html",
                   "",
                   "",
            ],
            [
                   "WaypointMissionState",
                   2,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "",
                   "All the possible state of `WaypointMissionOperator`.",
            ],
            [
                   "All the possible state of `WaypointMissionOperator`.",
                   1,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "",
                   "",
            ],
            [
                   "NOT_SUPPORTED",
                   2,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "#DJIWaypointMissionState_NotSupported_inline",
                   "The connected product does not support waypoint mission.",
            ],
            [
                   "The connected product does not support waypoint mission.",
                   1,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "#DJIWaypointMissionState_NotSupported_inline",
                   "",
            ],
            [
                   "READY_TO_UPLOAD",
                   2,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "#DJIWaypointMissionState_ReadyToUpload_inline",
                   "The aircraft is ready to upload a mission.",
            ],
            [
                   "The aircraft is ready to upload a mission.",
                   1,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "#DJIWaypointMissionState_ReadyToUpload_inline",
                   "",
            ],
            [
                   "UPLOADING",
                   2,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "#DJIWaypointMissionState_Uploading_inline",
                   "The uploading is started successfully. Detail information for each waypoint is being uploaded one by one.",
            ],
            [
                   "The uploading is started successfully. Detail information for each waypoint is being uploaded one by one.",
                   1,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "#DJIWaypointMissionState_Uploading_inline",
                   "",
            ],
            [
                   "READY_TO_EXECUTE",
                   2,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "#DJIWaypointMissionState_ReadyToExecute_inline",
                   "Waypoint mission is uploaded completely and the aircraft is ready to start the execution.",
            ],
            [
                   "Waypoint mission is uploaded completely and the aircraft is ready to start the execution.",
                   1,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "#DJIWaypointMissionState_ReadyToExecute_inline",
                   "",
            ],
            [
                   "EXECUTING",
                   2,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "#DJIWaypointMissionState_Executing_inline",
                   "The execution is started successfully.",
            ],
            [
                   "The execution is started successfully.",
                   1,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "#DJIWaypointMissionState_Executing_inline",
                   "",
            ],
            [
                   "EXECUTION_PAUSED",
                   2,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "#DJIWaypointMissionState_ExecutionPaused_inline",
                   "Waypoint mission is paused successfully. User can call `resumeMission` to continue the execution.",
            ],
            [
                   "Waypoint mission is paused successfully. User can call `resumeMission` to continue the execution.",
                   1,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "#DJIWaypointMissionState_ExecutionPaused_inline",
                   "",
            ],
            [
                   "DISCONNECTED",
                   2,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "#DJIWaypointMissionState_Disconnected_inline",
                   "The connection between the mobile device, remote controller and aircraft is broken.",
            ],
            [
                   "The connection between the mobile device, remote controller and aircraft is broken.",
                   1,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "#DJIWaypointMissionState_Disconnected_inline",
                   "",
            ],
            [
                   "RECOVERING",
                   2,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "#DJIWaypointMissionState_Recovering_inline",
                   "The connection between the mobile device, remote controller and aircraft is built-up. The operator is synchronizing the state from the aircraft.",
            ],
            [
                   "The connection between the mobile device, remote controller and aircraft is built-up. The operator is synchronizing the state from the aircraft.",
                   1,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "#DJIWaypointMissionState_Recovering_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "#DJIWaypointMissionState_Unknown_inline",
                   "The state of the operator is unknown. It is the initial state when the operator is just created.",
            ],
            [
                   "The state of the operator is unknown. It is the initial state when the operator is just created.",
                   1,
                   "/Components/Missions/DJIWaypointMissionState.html",
                   "#DJIWaypointMissionState_Unknown_inline",
                   "",
            ],
            [
                   "getError",
                   2,
                   "/Components/Missions/DJIWaypointMissionEvent.html",
                   "#DJIWaypointMissionEvent_getError_inline",
                   "Error for Waypoint mission event.  @return An object of `DJIError`.",
            ],
            [
                   "Error for Waypoint mission event.  @return An object of `DJIError`.",
                   1,
                   "/Components/Missions/DJIWaypointMissionEvent.html",
                   "#DJIWaypointMissionEvent_getError_inline",
                   "",
            ],
            [
                   "getProgress",
                   2,
                   "/Components/Missions/DJIWaypointMissionUploadEvent.html",
                   "#DJIWaypointMissionUploadEvent_progress_inline",
                   "The upload progress of the mission. It is `null` if there is an error during upload.  @return An object of `WaypointUploadProgress`.",
            ],
            [
                   "The upload progress of the mission. It is `null` if there is an error during upload.  @return An object of `WaypointUploadProgress`.",
                   1,
                   "/Components/Missions/DJIWaypointMissionUploadEvent.html",
                   "#DJIWaypointMissionUploadEvent_progress_inline",
                   "",
            ],
            [
                   "getPreviousState",
                   2,
                   "/Components/Missions/DJIWaypointMissionUploadEvent.html",
                   "#DJIWaypointMissionUploadEvent_previousState_inline",
                   "The previous state of the operator.  @return An object of `WaypointMissionState`.",
            ],
            [
                   "The previous state of the operator.  @return An object of `WaypointMissionState`.",
                   1,
                   "/Components/Missions/DJIWaypointMissionUploadEvent.html",
                   "#DJIWaypointMissionUploadEvent_previousState_inline",
                   "",
            ],
            [
                   "getCurrentState",
                   2,
                   "/Components/Missions/DJIWaypointMissionUploadEvent.html",
                   "#DJIWaypointMissionUploadEvent_currentState_inline",
                   "The current state of the operator.  @return An object of `WaypointMissionState`.",
            ],
            [
                   "The current state of the operator.  @return An object of `WaypointMissionState`.",
                   1,
                   "/Components/Missions/DJIWaypointMissionUploadEvent.html",
                   "#DJIWaypointMissionUploadEvent_currentState_inline",
                   "",
            ],
            [
                   "WaypointUploadProgress",
                   2,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointUploadProgress.html",
                   "",
                   "The upload progress of the waypoint mission operator.",
            ],
            [
                   "The upload progress of the waypoint mission operator.",
                   1,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointUploadProgress.html",
                   "",
                   "",
            ],
            [
                   "getProgress",
                   2,
                   "/Components/Missions/DJIWaypointMissionDownloadEvent.html",
                   "#DJIWaypointMissionDownloadEvent_progress_inline",
                   "The download progress of the mission. It is `null` if there is an error during download.  @return A object of `WaypointDownloadProgress`.",
            ],
            [
                   "The download progress of the mission. It is `null` if there is an error during download.  @return A object of `WaypointDownloadProgress`.",
                   1,
                   "/Components/Missions/DJIWaypointMissionDownloadEvent.html",
                   "#DJIWaypointMissionDownloadEvent_progress_inline",
                   "",
            ],
            [
                   "WaypointDownloadProgress",
                   2,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointDownloadProgress.html",
                   "",
                   "The download progress of the waypoint mission operator.",
            ],
            [
                   "The download progress of the waypoint mission operator.",
                   1,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointDownloadProgress.html",
                   "",
                   "",
            ],
            [
                   "getProgress",
                   2,
                   "/Components/Missions/DJIWaypointMissionExecutionEvent.html",
                   "#DJIWaypointMissionExecutionEvent_progress_inline",
                   "The execution progress of the mission. It is `null` if there is an error during the execution.  @return An object of `WaypointExecutionProgress`.",
            ],
            [
                   "The execution progress of the mission. It is `null` if there is an error during the execution.  @return An object of `WaypointExecutionProgress`.",
                   1,
                   "/Components/Missions/DJIWaypointMissionExecutionEvent.html",
                   "#DJIWaypointMissionExecutionEvent_progress_inline",
                   "",
            ],
            [
                   "getPreviousState",
                   2,
                   "/Components/Missions/DJIWaypointMissionExecutionEvent.html",
                   "#DJIWaypointMissionExecutionEvent_previousState_inline",
                   "The previous state of the operator.  @return An object of `WaypointMissionState`.",
            ],
            [
                   "The previous state of the operator.  @return An object of `WaypointMissionState`.",
                   1,
                   "/Components/Missions/DJIWaypointMissionExecutionEvent.html",
                   "#DJIWaypointMissionExecutionEvent_previousState_inline",
                   "",
            ],
            [
                   "getCurrentState",
                   2,
                   "/Components/Missions/DJIWaypointMissionExecutionEvent.html",
                   "#DJIWaypointMissionExecutionEvent_currentState_inline",
                   "The current state of the operator.  @return An object of `WaypointMissionState`.",
            ],
            [
                   "The current state of the operator.  @return An object of `WaypointMissionState`.",
                   1,
                   "/Components/Missions/DJIWaypointMissionExecutionEvent.html",
                   "#DJIWaypointMissionExecutionEvent_currentState_inline",
                   "",
            ],
            [
                   "WaypointExecutionProgress",
                   2,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointExecutionProgress.html",
                   "",
                   "The mission execution progress of the waypoint mission operator.",
            ],
            [
                   "The mission execution progress of the waypoint mission operator.",
                   1,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointExecutionProgress.html",
                   "",
                   "",
            ],
            [
                   "WaypointMissionExecuteState",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_inline",
                   "Current waypoint mission state.",
            ],
            [
                   "Current waypoint mission state.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_inline",
                   "",
            ],
            [
                   "WaypointMissionOperatorListener",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_Listener_inline",
                   "Listener interface for Waypoint mission operator events.",
            ],
            [
                   "Listener interface for Waypoint mission operator events.",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_Listener_inline",
                   "",
            ],
            [
                   "onUploadUpdate",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_Listener_onUploadUpdate_inline",
                   "Called when an upload event happens.  @param uploadEvent Upload event",
            ],
            [
                   "Called when an upload event happens.  @param uploadEvent Upload event",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_Listener_onUploadUpdate_inline",
                   "",
            ],
            [
                   "onDownloadUpdate",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_Listener_onDownloadUpdate_inline",
                   "Called when an download event happens.  @param downloadEvent Download event",
            ],
            [
                   "Called when an download event happens.  @param downloadEvent Download event",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_Listener_onDownloadUpdate_inline",
                   "",
            ],
            [
                   "onExecutionStart",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_Listener_onStart_inline",
                   "Called when the waypoint mission starts.",
            ],
            [
                   "Called when the waypoint mission starts.",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_Listener_onStart_inline",
                   "",
            ],
            [
                   "onExecutionUpdate",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_Listener_onExecutionUpdate_inline",
                   "Called when there is an execution update for the waypoint mission operator.  @param executionEvent Execution event.",
            ],
            [
                   "Called when there is an execution update for the waypoint mission operator.  @param executionEvent Execution event.",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_Listener_onExecutionUpdate_inline",
                   "",
            ],
            [
                   "onExecutionFinish",
                   2,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_Listener_onFinish_inline",
                   "Called when the waypoint mission ends.  @param error Error if the waypoint mission didn't end as expected.",
            ],
            [
                   "Called when the waypoint mission ends.  @param error Error if the waypoint mission didn't end as expected.",
                   1,
                   "/Components/Missions/DJIWaypointMissionOperator.html",
                   "#DJIWaypointMissionOperator_Listener_onFinish_inline",
                   "",
            ],
            [
                   "uploadedWaypointIndex",
                   2,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointUploadProgress.html",
                   "#DJIWaypointMission_DJIWaypointUploadProgress_uploadedWaypointIndex_inline",
                   "The index of the last uploaded waypoint. Information for each waypoint is uploaded one by one in ascending order. If no waypoint has been uploaded, the value will be -1.",
            ],
            [
                   "The index of the last uploaded waypoint. Information for each waypoint is uploaded one by one in ascending order. If no waypoint has been uploaded, the value will be -1.",
                   1,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointUploadProgress.html",
                   "#DJIWaypointMission_DJIWaypointUploadProgress_uploadedWaypointIndex_inline",
                   "",
            ],
            [
                   "totalWaypointCount",
                   2,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointUploadProgress.html",
                   "#DJIWaypointMission_DJIWaypointUploadProgress_totalWaypointCount_inline",
                   "The total count of waypoints in the waypoint mission.",
            ],
            [
                   "The total count of waypoints in the waypoint mission.",
                   1,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointUploadProgress.html",
                   "#DJIWaypointMission_DJIWaypointUploadProgress_totalWaypointCount_inline",
                   "",
            ],
            [
                   "isSummaryUploaded",
                   2,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointUploadProgress.html",
                   "#DJIWaypointMission_DJIWaypointUploadProgress_isWaypointSummaryUploaded_inline",
                   "The waypoint mission operator has uploaded the the mission's summary (information except waypoints).",
            ],
            [
                   "The waypoint mission operator has uploaded the the mission's summary (information except waypoints).",
                   1,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointUploadProgress.html",
                   "#DJIWaypointMission_DJIWaypointUploadProgress_isWaypointSummaryUploaded_inline",
                   "",
            ],
            [
                   "isSummaryDownloaded",
                   2,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointDownloadProgress.html",
                   "#DJIWaypointMission_DJIWaypointDownloadProgress_isSummaryDownloaded_inline",
                   "`true` if Waypoint summary is downloaded.",
            ],
            [
                   "`true` if Waypoint summary is downloaded.",
                   1,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointDownloadProgress.html",
                   "#DJIWaypointMission_DJIWaypointDownloadProgress_isSummaryDownloaded_inline",
                   "",
            ],
            [
                   "totalWaypointCount",
                   2,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointDownloadProgress.html",
                   "#DJIWaypointMission_DJIWaypointDownloadProgress_totalWaypointCount_inline",
                   "The total count of waypoints in the waypoint mission.",
            ],
            [
                   "The total count of waypoints in the waypoint mission.",
                   1,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointDownloadProgress.html",
                   "#DJIWaypointMission_DJIWaypointDownloadProgress_totalWaypointCount_inline",
                   "",
            ],
            [
                   "downloadedWaypointIndex",
                   2,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointDownloadProgress.html",
                   "#DJIWaypointMission_DJIWaypointDownloadProgress_downloadedWaypointIndex_inline",
                   "The index of the last downloaded waypoint. Information for each waypoint is downloaded one by one in ascending order. If no waypoint has been downloaded, the value will be -1.",
            ],
            [
                   "The index of the last downloaded waypoint. Information for each waypoint is downloaded one by one in ascending order. If no waypoint has been downloaded, the value will be -1.",
                   1,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointDownloadProgress.html",
                   "#DJIWaypointMission_DJIWaypointDownloadProgress_downloadedWaypointIndex_inline",
                   "",
            ],
            [
                   "targetWaypointIndex",
                   2,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointExecutionProgress.html",
                   "#DJIWaypointMission_DJIWaypointExecutionProgress_targetWaypointIndex_inline",
                   "Index of the waypoint for the next mission to which the aircraft will proceed.",
            ],
            [
                   "Index of the waypoint for the next mission to which the aircraft will proceed.",
                   1,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointExecutionProgress.html",
                   "#DJIWaypointMission_DJIWaypointExecutionProgress_targetWaypointIndex_inline",
                   "",
            ],
            [
                   "isWaypointReached",
                   2,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointExecutionProgress.html",
                   "#DJIWaypointMission_DJIWaypointExecutionProgress_isWaypointReached_inline",
                   "YES when the aircraft reaches a waypoint. After the waypoint actions and heading change is complete,  the `targetWaypointIndex` will increment and this  property will become NO.",
            ],
            [
                   "YES when the aircraft reaches a waypoint. After the waypoint actions and heading change is complete,  the `targetWaypointIndex` will increment and this  property will become NO.",
                   1,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointExecutionProgress.html",
                   "#DJIWaypointMission_DJIWaypointExecutionProgress_isWaypointReached_inline",
                   "",
            ],
            [
                   "executeState",
                   2,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointExecutionProgress.html",
                   "#DJIWaypointMission_DJIWaypointExecutionProgress_execState_inline",
                   "Current execution state of the aircraft.",
            ],
            [
                   "Current execution state of the aircraft.",
                   1,
                   "/Components/Missions/DJIWaypointMission_DJIWaypointExecutionProgress.html",
                   "#DJIWaypointMission_DJIWaypointExecutionProgress_execState_inline",
                   "",
            ],
            [
                   "INITIALIZING",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_Initializing_inline",
                   "Waypoint mission is initializing, which means the mission has started and the aircraft is going to the first waypoint.",
            ],
            [
                   "Waypoint mission is initializing, which means the mission has started and the aircraft is going to the first waypoint.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_Initializing_inline",
                   "",
            ],
            [
                   "MOVING",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_Moving_inline",
                   "Aircraft is currently moving toward the mission's next waypoint. This happens when  the `WaypointMissionFlightPathMode` is set  to `NORMAL`.",
            ],
            [
                   "Aircraft is currently moving toward the mission's next waypoint. This happens when  the `WaypointMissionFlightPathMode` is set  to `NORMAL`.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_Moving_inline",
                   "",
            ],
            [
                   "CURVE_MODE_MOVING",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_CurveModeMoving_inline",
                   "Aircraft is currently moving. This happens when the `WaypointMissionFlightPathMode` is set  to `CURVED`.",
            ],
            [
                   "Aircraft is currently moving. This happens when the `WaypointMissionFlightPathMode` is set  to `CURVED`.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_CurveModeMoving_inline",
                   "",
            ],
            [
                   "CURVE_MODE_TURNING",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_CurveModeTurning_inline",
                   "Aircraft is currently turning. This happens when the `WaypointMissionFlightPathMode`  is set to `CURVED`.",
            ],
            [
                   "Aircraft is currently turning. This happens when the `WaypointMissionFlightPathMode`  is set to `CURVED`.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_CurveModeTurning_inline",
                   "",
            ],
            [
                   "BEGIN_ACTION",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_BeginAction_inline",
                   "Aircraft has reached a waypoint, has rotated to the new heading and is now processing actions. This state  will be called before the waypoint actions starts executing and will occur for each waypoint action.",
            ],
            [
                   "Aircraft has reached a waypoint, has rotated to the new heading and is now processing actions. This state  will be called before the waypoint actions starts executing and will occur for each waypoint action.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_BeginAction_inline",
                   "",
            ],
            [
                   "DOING_ACTION",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_DoingAction_inline",
                   "Aircraft is at a waypoint and is executing an action.",
            ],
            [
                   "Aircraft is at a waypoint and is executing an action.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_DoingAction_inline",
                   "",
            ],
            [
                   "FINISHED_ACTION",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_FinishedAction_inline",
                   "Aircraft is at a waypoint and has finished executing the current waypoint action. This state occurs once  for each waypoint action.",
            ],
            [
                   "Aircraft is at a waypoint and has finished executing the current waypoint action. This state occurs once  for each waypoint action.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_FinishedAction_inline",
                   "",
            ],
            [
                   "RETURN_TO_FIRST_WAYPOINT",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_ReturnToFirstWaypoint_inline",
                   "Aircraft has returned to the first waypoint. This happens when the `getFinishedAction`  is set to `RETURN_TO_FIRST_WAYPOINT`.",
            ],
            [
                   "Aircraft has returned to the first waypoint. This happens when the `getFinishedAction`  is set to `RETURN_TO_FIRST_WAYPOINT`.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_ReturnToFirstWaypoint_inline",
                   "",
            ],
            [
                   "PAUSED",
                   2,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_Paused_inline",
                   "The mission is currently paused by the user.",
            ],
            [
                   "The mission is currently paused by the user.",
                   1,
                   "/Components/Missions/DJIWaypointMission.html",
                   "#DJIWaypointMission_DJIWaypointMissionExecuteState_Paused_inline",
                   "",
            ],
            [
                   "setHardwareStateCallback",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setHardwareStateUpdateCallback_inline",
                   "Set the HardwareStateUpdateCallback  @param hardwareStateCallback RCHardwareState.HardwareStateCallback callback.",
            ],
            [
                   "Set the HardwareStateUpdateCallback  @param hardwareStateCallback RCHardwareState.HardwareStateCallback callback.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setHardwareStateUpdateCallback_inline",
                   "",
            ],
            [
                   "setChargeRemainingCallback",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setBatteryStateUpdateCallback_inline",
                   "Sets the BatteryStateUpdateCallback.  @param callback ChargeRemaining.BatteryStateCallback callback.",
            ],
            [
                   "Sets the BatteryStateUpdateCallback.  @param callback ChargeRemaining.BatteryStateCallback callback.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setBatteryStateUpdateCallback_inline",
                   "",
            ],
            [
                   "setGPSDataCallback",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_updateGpsDataCallback_inline",
                   "Set the GPSDataUpdateCallback.  @param callback GPSDataCallback callback.",
            ],
            [
                   "Set the GPSDataUpdateCallback.  @param callback GPSDataCallback callback.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_updateGpsDataCallback_inline",
                   "",
            ],
            [
                   "setMasterSlaveStateCallback",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_didUpdateMasterSlaveStateCallback_inline",
                   "Callback that updates the remote controller's state related to the master and slave mode. Only supported by Inspire 2.  @param callback RCMasterSlaveStateUpdateCallback callback.",
            ],
            [
                   "Callback that updates the remote controller's state related to the master and slave mode. Only supported by Inspire 2.  @param callback RCMasterSlaveStateUpdateCallback callback.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_didUpdateMasterSlaveStateCallback_inline",
                   "",
            ],
            [
                   "setGimbalControlRequestFromSlaveCallback",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setGimbalControlRequestFromSlaveReceivedCallback_inline",
                   "Sets GimbalControlRequestFromSlaveReceivedCallback.  @param controlRequestCallback Information.ControlRequestCallback callback.",
            ],
            [
                   "Sets GimbalControlRequestFromSlaveReceivedCallback.  @param controlRequestCallback Information.ControlRequestCallback callback.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setGimbalControlRequestFromSlaveReceivedCallback_inline",
                   "",
            ],
            [
                   "setFocusControllerStateCallback",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setRCRemoteFocusStateUpdateCallback_inline",
                   "Sets RCRemoteFocusStateUpdateCallback.  @param focusStateUpdateCallback FocusControllerState.FocusControllerStateCallback callback.",
            ],
            [
                   "Sets RCRemoteFocusStateUpdateCallback.  @param focusStateUpdateCallback FocusControllerState.FocusControllerStateCallback callback.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setRCRemoteFocusStateUpdateCallback_inline",
                   "",
            ],
            [
                   "startPairing",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_enterPairingMode_inline",
                   "Enters pairing mode, in which the Remote Controller starts  pairing with the aircraft. This method is used when the Remote  Controller no longer recognizes which aircraft it is paired with.  @param callback The execution callback with the execution result returned.  See DJIBaseComponent for more information about the callback    and what is recommended be done with it.",
            ],
            [
                   "Enters pairing mode, in which the Remote Controller starts  pairing with the aircraft. This method is used when the Remote  Controller no longer recognizes which aircraft it is paired with.  @param callback The execution callback with the execution result returned.  See DJIBaseComponent for more information about the callback    and what is recommended be done with it.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_enterPairingMode_inline",
                   "",
            ],
            [
                   "stopPairing",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_exitPairingMode_inline",
                   "Exits pairing mode.  @param callback The execution callback with the execution result returned.  See DJIBaseComponent for more information about the callback  and what is recommended be done with it.",
            ],
            [
                   "Exits pairing mode.  @param callback The execution callback with the execution result returned.  See DJIBaseComponent for more information about the callback  and what is recommended be done with it.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_exitPairingMode_inline",
                   "",
            ],
            [
                   "getPairingState",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getPairingState_inline",
                   "Gets the pairing status as the Remote Controller is pairing with  the aircraft.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the pairing status as the Remote Controller is pairing with  the aircraft.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getPairingState_inline",
                   "",
            ],
            [
                   "setCustomAircraftMapping",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setCustomAircraftMapping_inline",
                   "Set the mapping of custom style. It will change the current mapping style  to `STYLE_CUSTOM`. The setting will only take effect when  the remote controller is in master mode.  @param mapping The remote controller aircraft mapping. @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Set the mapping of custom style. It will change the current mapping style  to `STYLE_CUSTOM`. The setting will only take effect when  the remote controller is in master mode.  @param mapping The remote controller aircraft mapping. @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setCustomAircraftMapping_inline",
                   "",
            ],
            [
                   "getCustomAircraftMapping",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getCustomAircraftMapping_inline",
                   "Retrieves the stick mapping associated with the custom style.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Retrieves the stick mapping associated with the custom style.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getCustomAircraftMapping_inline",
                   "",
            ],
            [
                   "setAircraftMappingStyle",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setRCControlMode_inline",
                   "Sets the Remote Controller's control mode.  @param style Remote controller control mode to be set. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the Remote Controller's control mode.  @param style Remote controller control mode to be set. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setRCControlMode_inline",
                   "",
            ],
            [
                   "getAircraftMappingStyle",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getRCControlMode_inline",
                   "Gets the Remote Controller's control mode.  @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Gets the Remote Controller's control mode.  @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getRCControlMode_inline",
                   "",
            ],
            [
                   "setLeftWheelGimbalControlAxis",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setControlGimbalDirection_inline",
                   "Sets which of the gimbal directions the top left wheel (Gimbal  Dial) on the Remote Controller will control. The three options  (pitch, roll, and yaw) are outlined in the enum named  `GimbalAxis`.  @param axis Gimbal direction to be set that the top left wheel on the Remote  Controller will control. @param callback Remote execution result error callback. See DJIBaseComponent  for more information about the callback and what is  recommended be done with it.",
            ],
            [
                   "Sets which of the gimbal directions the top left wheel (Gimbal  Dial) on the Remote Controller will control. The three options  (pitch, roll, and yaw) are outlined in the enum named  `GimbalAxis`.  @param axis Gimbal direction to be set that the top left wheel on the Remote  Controller will control. @param callback Remote execution result error callback. See DJIBaseComponent  for more information about the callback and what is  recommended be done with it.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setControlGimbalDirection_inline",
                   "",
            ],
            [
                   "getLeftWheelGimbalControlAxis",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getControlGimbalDirection_inline",
                   "Gets which of the gimbal directions the top left wheel (Gimbal  Dial) on the Remote Controller will control.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets which of the gimbal directions the top left wheel (Gimbal  Dial) on the Remote Controller will control.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getControlGimbalDirection_inline",
                   "",
            ],
            [
                   "setCustomButtonTags",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setRCCustomButtonTag_inline",
                   "Sets custom button tags, which can be used by the user to record  user settings. Moreover, this method will make it easier for  developers to set custom tags for buttons in the user interface,  will make it easier to use the C1 and C2 buttons on the Remote  Controller.  @param tags Back buttons' custom tags, the value should in the range of [0,  255]. @param callback Remote execution result error callback.",
            ],
            [
                   "Sets custom button tags, which can be used by the user to record  user settings. Moreover, this method will make it easier for  developers to set custom tags for buttons in the user interface,  will make it easier to use the C1 and C2 buttons on the Remote  Controller.  @param tags Back buttons' custom tags, the value should in the range of [0,  255]. @param callback Remote execution result error callback.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setRCCustomButtonTag_inline",
                   "",
            ],
            [
                   "getCustomButtonTags",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getRCCustomButtonTag_inline",
                   "Gets the custom button's (Back Button's) tags.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the custom button's (Back Button's) tags.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getRCCustomButtonTag_inline",
                   "",
            ],
            [
                   "setChargeMobileMode",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setChargeMobileMode_inline",
                   "Sets the charge mode of a connected iOS device.  Note: Android devices are always charging when connected to the remote  controller. It is only supported by Inspire 2.  @param mode Charge Mobile mode. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the charge mode of a connected iOS device.  Note: Android devices are always charging when connected to the remote  controller. It is only supported by Inspire 2.  @param mode Charge Mobile mode. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setChargeMobileMode_inline",
                   "",
            ],
            [
                   "getChargeMobileMode",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getChargeMobileMode_inline",
                   "Gets the mode to charge the connected iOS device. Note that Android  devices are always charging when connected to the remote controller.  It is only supported by Inspire 2.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the mode to charge the connected iOS device. Note that Android  devices are always charging when connected to the remote controller.  It is only supported by Inspire 2.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getChargeMobileMode_inline",
                   "",
            ],
            [
                   "isMasterSlaveModeSupported",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_isMasterSlaveModeSupported_inline",
                   "Query method to check if the Remote Controller supports master/slave  mode. Master-slave mode is supported by the Inspire 1, Inspire 1  Pro, Matrice 100, Lightbridge 2 (including Matrice 600, Matrice 600  Pro, A3 and N3) and Inspire 2. Inspire 2 is using a new set of  interfaces to control the master and slave connection.  -  Similar to other products, Inspire 2's remote controller also use  set/get `RCMode` to change  the mode. - A slave remote controller can use  `getMasters` and  `connectToMaster` to join a master remote controller. - A master remote controller  can use `setMasterAuthorizationCode` to  change the authentication code.  @return A boolean value.",
            ],
            [
                   "Query method to check if the Remote Controller supports master/slave  mode. Master-slave mode is supported by the Inspire 1, Inspire 1  Pro, Matrice 100, Lightbridge 2 (including Matrice 600, Matrice 600  Pro, A3 and N3) and Inspire 2. Inspire 2 is using a new set of  interfaces to control the master and slave connection.  -  Similar to other products, Inspire 2's remote controller also use  set/get `RCMode` to change  the mode. - A slave remote controller can use  `getMasters` and  `connectToMaster` to join a master remote controller. - A master remote controller  can use `setMasterAuthorizationCode` to  change the authentication code.  @return A boolean value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_isMasterSlaveModeSupported_inline",
                   "",
            ],
            [
                   "setMode",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setRemoteControllerMode_inline",
                   "Sets the Remote Controller's mode. See the  `RCMode` enum for all possible Remote Controller modes. The master and slave modes are only supported  for the Inspire 1, Inspire 1 Pro, M100, Lightbridge 2 (including  Matrice 600, Matrice 600 Pro, A3 and N3) and Inspire 2.  @param mode Mode of type `RCMode` to be set for the Remote Controller. @param callback The execution callback with the returned execution result.",
            ],
            [
                   "Sets the Remote Controller's mode. See the  `RCMode` enum for all possible Remote Controller modes. The master and slave modes are only supported  for the Inspire 1, Inspire 1 Pro, M100, Lightbridge 2 (including  Matrice 600, Matrice 600 Pro, A3 and N3) and Inspire 2.  @param mode Mode of type `RCMode` to be set for the Remote Controller. @param callback The execution callback with the returned execution result.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setRemoteControllerMode_inline",
                   "",
            ],
            [
                   "getMode",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getRemoteControllerMode_inline",
                   "Gets the Remote Controller's work mode. It  is supported by the Inspire 1, Inspire 1 Pro, Matrice 100,  Lightbridge 2 (including Matrice 600, Matrice 600 Pro, A3 and N3)  and Inspire 2.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the Remote Controller's work mode. It  is supported by the Inspire 1, Inspire 1 Pro, Matrice 100,  Lightbridge 2 (including Matrice 600, Matrice 600 Pro, A3 and N3)  and Inspire 2.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getRemoteControllerMode_inline",
                   "",
            ],
            [
                   "setName",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setRCName_inline",
                   "Sets the Remote Controller's name.  @param name Remote controller name to be set. Six characters at most. @param callback The execution callback with the execution result returned.",
            ],
            [
                   "Sets the Remote Controller's name.  @param name Remote controller name to be set. Six characters at most. @param callback The execution callback with the execution result returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setRCName_inline",
                   "",
            ],
            [
                   "getName",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getRCName_inline",
                   "Gets the Remote Controller's name.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the Remote Controller's name.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getRCName_inline",
                   "",
            ],
            [
                   "setPassword",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setRCPassword_inline",
                   "Sets the Remote Controller's password.  @param password Remote controller password to be set, using a string consisted by  4 digits. @param callback The execution callback with the value(s) returned. See  DJIBaseComponent for more information about the callback and  what is recommended to be done with it.",
            ],
            [
                   "Sets the Remote Controller's password.  @param password Remote controller password to be set, using a string consisted by  4 digits. @param callback The execution callback with the value(s) returned. See  DJIBaseComponent for more information about the callback and  what is recommended to be done with it.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setRCPassword_inline",
                   "",
            ],
            [
                   "getPassword",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getRCPassword_inline",
                   "Gets the Remote Controller's password.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the Remote Controller's password.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getRCPassword_inline",
                   "",
            ],
            [
                   "getSlaveList",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getSlaveRCList_inline",
                   "Used by the current master Remote Controller to get all the slaves  connected to it.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Used by the current master Remote Controller to get all the slaves  connected to it.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getSlaveRCList_inline",
                   "",
            ],
            [
                   "startMasterSearching",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_startMasterRCSearch_inline",
                   "Starts a search by slave Remote Controller for nearby master  Remote Controllers. To get the list of master Remote  Controllers, first call `getAvailableMasters`, then call  `stopMasterSearching` to end the search.  @param callback Remote execution result error callback. Please refer to  `BaseComponent` for more information about the callback  and what is recommended be done with it.",
            ],
            [
                   "Starts a search by slave Remote Controller for nearby master  Remote Controllers. To get the list of master Remote  Controllers, first call `getAvailableMasters`, then call  `stopMasterSearching` to end the search.  @param callback Remote execution result error callback. Please refer to  `BaseComponent` for more information about the callback  and what is recommended be done with it.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_startMasterRCSearch_inline",
                   "",
            ],
            [
                   "stopMasterSearching",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_stopMasterRCSearch_inline",
                   "Used by a slave Remote Controller to stop the search for  nearby master Remote Controllers.  @param callback Remote execution result error callback. Please refer to  DJIBaseComponent for more information about the callback and  what is recommended be done with it.",
            ],
            [
                   "Used by a slave Remote Controller to stop the search for  nearby master Remote Controllers.  @param callback Remote execution result error callback. Please refer to  DJIBaseComponent for more information about the callback and  what is recommended be done with it.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_stopMasterRCSearch_inline",
                   "",
            ],
            [
                   "getAvailableMasters",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getAvailableMastersRCs_inline",
                   "Starts search by slave Remote Controller for nearby master  Remote Controllers. To get the list of master Remote Controllers  use getAvailableMastersWithCallbackBlock then call  stopMasterRCSearch to end th search.  @param callback The execution callback with the value(s) returned. The array of  masters contains objects of type Information.",
            ],
            [
                   "Starts search by slave Remote Controller for nearby master  Remote Controllers. To get the list of master Remote Controllers  use getAvailableMastersWithCallbackBlock then call  stopMasterRCSearch to end th search.  @param callback The execution callback with the value(s) returned. The array of  masters contains objects of type Information.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getAvailableMastersRCs_inline",
                   "",
            ],
            [
                   "getMasterSearchingState",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getMasterRCSearchState_inline",
                   "Returns the state of the master Remote Controller search. The  search is initiated by the Mobile Device, but performed by the  Remote Controller. Therefore, if the Mobile Device's application  crashes while a search is ongoing, this method can be used to  let the new instance of the application understand the Remote  Controller state.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Returns the state of the master Remote Controller search. The  search is initiated by the Mobile Device, but performed by the  Remote Controller. Therefore, if the Mobile Device's application  crashes while a search is ongoing, this method can be used to  let the new instance of the application understand the Remote  Controller state.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getMasterRCSearchState_inline",
                   "",
            ],
            [
                   "connectToMaster",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_joinMasterRC_inline",
                   "Used by a slave Remote Controller to request to join a master  Remote Controller and be able to control the gimbal. If the master  Remote Controller accepts the request, the master Remote  Controller will control the aircraft and the slave Remote  Controller will control the gimbal.  @param credentials Include master's name and master's password. @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Used by a slave Remote Controller to request to join a master  Remote Controller and be able to control the gimbal. If the master  Remote Controller accepts the request, the master Remote  Controller will control the aircraft and the slave Remote  Controller will control the gimbal.  @param credentials Include master's name and master's password. @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_joinMasterRC_inline",
                   "",
            ],
            [
                   "getConnectedMasterCredentials",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getJoinedMasterRCInfos_inline",
                   "Returns the master Remote Controller's information, which includes  the unique identifier, name, and password.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Returns the master Remote Controller's information, which includes  the unique identifier, name, and password.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getJoinedMasterRCInfos_inline",
                   "",
            ],
            [
                   "setMasterAuthorizationCode",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setMasterAuthorizationCode_inline",
                   "Sets the authorization code of a master remote controller. The  slave remote controller needs to know the authorization code in order to join the master. A valid input is a string with 6 digits.  The default value is 888888. It can only be called when the  remote controller is in master mode.  @param authorizationCode Authorization code to set. @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Sets the authorization code of a master remote controller. The  slave remote controller needs to know the authorization code in order to join the master. A valid input is a string with 6 digits.  The default value is 888888. It can only be called when the  remote controller is in master mode.  @param authorizationCode Authorization code to set. @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setMasterAuthorizationCode_inline",
                   "",
            ],
            [
                   "getMasters",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getMasters_inline",
                   "Gets a list of the nearby remote controllers in master mode.  It can only be called when the remote controller is in slave mode.  @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Gets a list of the nearby remote controllers in master mode.  It can only be called when the remote controller is in slave mode.  @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getMasters_inline",
                   "",
            ],
            [
                   "connectToMaster",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_joinMasterWithIDAndAuthenticationCode_inline",
                   "Joins the master remote controller with the specific ID. If the remote controller has joined the same master before, the authorization code is not required until the master remote  controller changes its authorization code. In this case,  code</code> can be `null`. It can only be called when the remote controller is in slave mode.  @param info JoinMasterData object. @param callback The execution callback with the returned value(s).",
            ],
            [
                   "Joins the master remote controller with the specific ID. If the remote controller has joined the same master before, the authorization code is not required until the master remote  controller changes its authorization code. In this case,  code</code> can be `null`. It can only be called when the remote controller is in slave mode.  @param info JoinMasterData object. @param callback The execution callback with the returned value(s).",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_joinMasterWithIDAndAuthenticationCode_inline",
                   "",
            ],
            [
                   "respondToRequestForGimbalControl",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_responseRequester_inline",
                   "When a slave Remote Controller requests a master Remote Controller to  control the gimbal, this method is used by a master Remote Controller  to respond to the slave Remote Controller's request.  @param response The response object of ResponseForGimbalControl to the slave Remote Controller.",
            ],
            [
                   "When a slave Remote Controller requests a master Remote Controller to  control the gimbal, this method is used by a master Remote Controller  to respond to the slave Remote Controller's request.  @param response The response object of ResponseForGimbalControl to the slave Remote Controller.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_responseRequester_inline",
                   "",
            ],
            [
                   "requestGimbalControl",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_requestGimbalControlRight_inline",
                   "Even after a Remote Controller becomes a slave Remote Controller,  this method must be called by the slave Remote Controller to request  the master Remote Controller to control the gimbal.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Even after a Remote Controller becomes a slave Remote Controller,  this method must be called by the slave Remote Controller to request  the master Remote Controller to control the gimbal.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_requestGimbalControlRight_inline",
                   "",
            ],
            [
                   "setCustomGimbalMapping",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setCustomGimbalMapping_inline",
                   "Sets the Remote Controller's slave control mode.  @param mapping The DJIRCGimbalMapping object. @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Sets the Remote Controller's slave control mode.  @param mapping The DJIRCGimbalMapping object. @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setCustomGimbalMapping_inline",
                   "",
            ],
            [
                   "getCustomGimbalMapping",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getCustomGimbalMapping_inline",
                   "Gets the Remote Controller's slave control mode.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the Remote Controller's slave control mode.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getCustomGimbalMapping_inline",
                   "",
            ],
            [
                   "setGimbalMappingStyle",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setSlaveControlMode_inline",
                   "Sets the Remote Controller's slave control mode.  @param style Control mode to be set. @param callback Remote execution result error callback.",
            ],
            [
                   "Sets the Remote Controller's slave control mode.  @param style Control mode to be set. @param callback Remote execution result error callback.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setSlaveControlMode_inline",
                   "",
            ],
            [
                   "getGimbalMappingStyle",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getSlaveControlMode_inline",
                   "Gets the Remote Controller's slave control mode.  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the Remote Controller's slave control mode.  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getSlaveControlMode_inline",
                   "",
            ],
            [
                   "setGimbalControlSpeedCoefficient",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setSlaveJoystickControlGimbalSpeed_inline",
                   "Called by the slave Remote Controller to set the gimbal's pitch, roll, and yaw speed with a range of [0, 100].  @param speedCoefficient Speed to be set for gimal's pitch, roll, and yaw, which should be  in the range of [0, 100]. @param callback Remote execution result error callback. See DJIBaseComponent for  more information about the callback and what is recommended be  done with it.",
            ],
            [
                   "Called by the slave Remote Controller to set the gimbal's pitch, roll, and yaw speed with a range of [0, 100].  @param speedCoefficient Speed to be set for gimal's pitch, roll, and yaw, which should be  in the range of [0, 100]. @param callback Remote execution result error callback. See DJIBaseComponent for  more information about the callback and what is recommended be  done with it.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_setSlaveJoystickControlGimbalSpeed_inline",
                   "",
            ],
            [
                   "getGimbalControlSpeedCoefficient",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getSlaveJoystickControlGimbalSpeed_inline",
                   "Gets the current slave's gimbal's pitch, roll, and yaw speed with a  range of [0, 100].  @param callback The execution callback with the value(s) returned.",
            ],
            [
                   "Gets the current slave's gimbal's pitch, roll, and yaw speed with a  range of [0, 100].  @param callback The execution callback with the value(s) returned.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_getSlaveJoystickControlGimbalSpeed_inline",
                   "",
            ],
            [
                   "isFocusControllerSupported",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_remoteFocusSupportChecking_inline",
                   "Query method to check if the Remote Controller supports Remote  Focus State Checking.  @return A boolean value.",
            ],
            [
                   "Query method to check if the Remote Controller supports Remote  Focus State Checking.  @return A boolean value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_remoteFocusSupportChecking_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_updateGpsDataCallbackInterface_inline",
                   "Callback function that updates the Remote Controller's current  GPS data.",
            ],
            [
                   "Callback function that updates the Remote Controller's current  GPS data.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_updateGpsDataCallbackInterface_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_updateHardwareState_inline",
                   "Callback function that updates the Remote Controller's current  hardware state (e.g. the state of the physical buttons and  joysticks).  @param hardwareState Current state of the Remote Controller's hardware state.",
            ],
            [
                   "Callback function that updates the Remote Controller's current  hardware state (e.g. the state of the physical buttons and  joysticks).  @param hardwareState Current state of the Remote Controller's hardware state.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_updateHardwareState_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_updateGpsData_inline",
                   "Callback function that updates the Remote Controller's current GPS data.  @param gpsData Current state of the Remote Controller's GPS data.",
            ],
            [
                   "Callback function that updates the Remote Controller's current GPS data.  @param gpsData Current state of the Remote Controller's GPS data.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_updateGpsData_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCBatteryInfo.html",
                   "#DJIRemoteController_updateBatteryState_inline",
                   "Callback function that updates the Remote Controller's current  battery state.  @param chargeRemaining Current state of the Remote Controller's battery state.",
            ],
            [
                   "Callback function that updates the Remote Controller's current  battery state.  @param chargeRemaining Current state of the Remote Controller's battery state.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCBatteryInfo.html",
                   "#DJIRemoteController_updateBatteryState_inline",
                   "",
            ],
            [
                   "onReceive",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCInfo.html",
                   "#DJIRemoteController_receiveGimbalControlRequestFromSlave_inline",
                   "Callback function that gets called when a slave Remote Controller  makes a request to a master Remote Controller to control the  gimbal using the method requestGimbalControlRightWithCallbackBlock.  @param information Information of the slave making the request to the master Remote  Controller.",
            ],
            [
                   "Callback function that gets called when a slave Remote Controller  makes a request to a master Remote Controller to control the  gimbal using the method requestGimbalControlRightWithCallbackBlock.  @param information Information of the slave making the request to the master Remote  Controller.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCInfo.html",
                   "#DJIRemoteController_receiveGimbalControlRequestFromSlave_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_updateRemoteFocusState_inline",
                   "Callback function that updates the Remote Focus State, only support  Focus product. If the isRCRemoteFocusCheckingSupported is  `true`, this  callback function will be called.  @param remoteFocusState Current state of the Remote Focus state.",
            ],
            [
                   "Callback function that updates the Remote Focus State, only support  Focus product. If the isRCRemoteFocusCheckingSupported is  `true`, this  callback function will be called.  @param remoteFocusState Current state of the Remote Focus state.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_updateRemoteFocusState_inline",
                   "",
            ],
            [
                   "onUpdate",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCMasterSlaveState.html",
                   "#DJIRemoteController_didUpdateMasterSlaveState_inline",
                   "Callback function that updates the remote controller's state  related to the master and slave mode. Only supported by Inspire 2.  @param masterSlaveState The remote controller's state related to the master and slave  mode.",
            ],
            [
                   "Callback function that updates the remote controller's state  related to the master and slave mode. Only supported by Inspire 2.  @param masterSlaveState The remote controller's state related to the master and slave  mode.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCMasterSlaveState.html",
                   "#DJIRemoteController_didUpdateMasterSlaveState_inline",
                   "",
            ],
            [
                   "HardwareState",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "",
                   "Remote Controller's current state.",
            ],
            [
                   "Remote Controller's current state.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "",
                   "",
            ],
            [
                   "GPSData",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGPSData.html",
                   "",
                   "Remote Controller's GPS data. Only Inspire and M100 Remote Controllers have GPS.",
            ],
            [
                   "Remote Controller's GPS data. Only Inspire and M100 Remote Controllers have GPS.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGPSData.html",
                   "",
                   "",
            ],
            [
                   "ChargeRemaining",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCBatteryInfo.html",
                   "",
                   "Remote Controller's battery info.",
            ],
            [
                   "Remote Controller's battery info.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCBatteryInfo.html",
                   "",
                   "",
            ],
            [
                   "FocusControllerState",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "",
                   "Remote Controller's Remote Focus State. The focus product has one dial (focus control) that controls two  separate parts of the camera: focal length and aperture. However it can only control one of these at any  one time and is an absolute dial, meaning that a specific rotational position of the dial corresponds to  a specific focal length or aperture. This means that whenever the dial control mode is changed, the dial  first has to be reset to the new mode's previous dial position before the dial can be used to adjust the  setting of the new mode. Example workflow:<br/><ol> - Use dial to set an Aperture of f2.2  - Change  dial control mode to focal length (set `ControlType`) - Use the  dial to change the focal length - Change dial control mode back to aperture -  set `ControlType`  - `isWorking` will now be NO -  Adjust dial back to f2.2 - `Direction` is the direction  the dial should be rotated - `isWorking` will  become YES when set back to f2.2 - Now the dial can be used to adjust the aperture.</ol>",
            ],
            [
                   "Remote Controller's Remote Focus State. The focus product has one dial (focus control) that controls two  separate parts of the camera: focal length and aperture. However it can only control one of these at any  one time and is an absolute dial, meaning that a specific rotational position of the dial corresponds to  a specific focal length or aperture. This means that whenever the dial control mode is changed, the dial  first has to be reset to the new mode's previous dial position before the dial can be used to adjust the  setting of the new mode. Example workflow:<br/><ol> - Use dial to set an Aperture of f2.2  - Change  dial control mode to focal length (set `ControlType`) - Use the  dial to change the focal length - Change dial control mode back to aperture -  set `ControlType`  - `isWorking` will now be NO -  Adjust dial back to f2.2 - `Direction` is the direction  the dial should be rotated - `isWorking` will  become YES when set back to f2.2 - Now the dial can be used to adjust the aperture.</ol>",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "",
                   "",
            ],
            [
                   "PairingState",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCToAircraftPairingState_inline",
                   "Remote Controller pairing state.",
            ],
            [
                   "Remote Controller pairing state.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCToAircraftPairingState_inline",
                   "",
            ],
            [
                   "AircraftMapping",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "",
                   "The object representing the stick mapping configuration of the remote controller.",
            ],
            [
                   "The object representing the stick mapping configuration of the remote controller.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "",
                   "",
            ],
            [
                   "GimbalAxis",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCGimbalControlDirection_inline",
                   "Defines what the Gimbal Dial (upper left wheel on the Remote Controller) will control.",
            ],
            [
                   "Defines what the Gimbal Dial (upper left wheel on the Remote Controller) will control.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCGimbalControlDirection_inline",
                   "",
            ],
            [
                   "CustomButtonTags",
                   2,
                   "/Components/RemoteController/DJIRemoteController_RCCustomButtonTagParam.html",
                   "",
                   "Tags for C1 and C2 buttons on the remote controller",
            ],
            [
                   "Tags for C1 and C2 buttons on the remote controller",
                   1,
                   "/Components/RemoteController/DJIRemoteController_RCCustomButtonTagParam.html",
                   "",
                   "",
            ],
            [
                   "ChargeMobileMode",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerChargeMobileMode_inline",
                   "Modes to charge an iOS mobile device. Only supported by Inspire 2.",
            ],
            [
                   "Modes to charge an iOS mobile device. Only supported by Inspire 2.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerChargeMobileMode_inline",
                   "",
            ],
            [
                   "RCMode",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerMode_inline",
                   "Remote Controller mode of operation can be normal (single RC connected to aircraft), master, slave, or unknown.",
            ],
            [
                   "Remote Controller mode of operation can be normal (single RC connected to aircraft), master, slave, or unknown.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerMode_inline",
                   "",
            ],
            [
                   "Information",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCInfo.html",
                   "",
                   "This class contains the information for a remote controller.",
            ],
            [
                   "This class contains the information for a remote controller.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCInfo.html",
                   "",
                   "",
            ],
            [
                   "ConnectToMasterResult",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCJoinMasterResult_inline",
                   "Result when a slave Remote Controller tries to join a master Remote Controller.",
            ],
            [
                   "Result when a slave Remote Controller tries to join a master Remote Controller.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCJoinMasterResult_inline",
                   "",
            ],
            [
                   "MasterSlaveState",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCMasterSlaveState.html",
                   "",
                   "State of the remote controller related to the master and slave mode.",
            ],
            [
                   "State of the remote controller related to the master and slave mode.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCMasterSlaveState.html",
                   "",
                   "",
            ],
            [
                   "GimbalControlSpeedCoefficient",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalControlSpeed.html",
                   "",
                   "Remote Controller's gimbal control speed.",
            ],
            [
                   "Remote Controller's gimbal control speed.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalControlSpeed.html",
                   "",
                   "",
            ],
            [
                   "RequestGimbalControlResult",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCRequestGimbalControlResult_inline",
                   "Result when a slave Remote Controller requests permission to control the gimbal.",
            ],
            [
                   "Result when a slave Remote Controller requests permission to control the gimbal.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCRequestGimbalControlResult_inline",
                   "",
            ],
            [
                   "ResponseForGimbalControl",
                   2,
                   "/Components/RemoteController/DJIRemoteController_ResponseForGimbalControl.html",
                   "",
                   "Data object that master Remote Controller to respond to the slave Remote Controller's request.",
            ],
            [
                   "Data object that master Remote Controller to respond to the slave Remote Controller's request.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_ResponseForGimbalControl.html",
                   "",
                   "",
            ],
            [
                   "AuthorizationInfo",
                   2,
                   "/Components/RemoteController/DJIRemoteController_JoinMasterAuthorizationInfo.html",
                   "",
                   "Joins the master remote controller with the specific ID. If the remote controller has joined the same  master before, the authentication code is not required until the master remote controller changes its  authentication code. In this case, `code` can be `null`. It can only be called when the remote controller  is in slave mode. It is only supported by Inspire 2.",
            ],
            [
                   "Joins the master remote controller with the specific ID. If the remote controller has joined the same  master before, the authentication code is not required until the master remote controller changes its  authentication code. In this case, `code` can be `null`. It can only be called when the remote controller  is in slave mode. It is only supported by Inspire 2.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_JoinMasterAuthorizationInfo.html",
                   "",
                   "",
            ],
            [
                   "Credentials",
                   2,
                   "/Components/RemoteController/DJIRemoteController_JoinedMasterNameAndPasswordResult.html",
                   "",
                   "Remote controller credentials.",
            ],
            [
                   "Remote controller credentials.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_JoinedMasterNameAndPasswordResult.html",
                   "",
                   "",
            ],
            [
                   "getID",
                   2,
                   "/Components/RemoteController/DJIRemoteController_JoinedMasterNameAndPasswordResult.html",
                   "#DJIRemoteController_JoinedMasterNameAndPasswordResult_id_inline",
                   "Remote controller ID.  @return An int value.",
            ],
            [
                   "Remote controller ID.  @return An int value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_JoinedMasterNameAndPasswordResult.html",
                   "#DJIRemoteController_JoinedMasterNameAndPasswordResult_id_inline",
                   "",
            ],
            [
                   "getName",
                   2,
                   "/Components/RemoteController/DJIRemoteController_JoinedMasterNameAndPasswordResult.html",
                   "#DJIRemoteController_JoinedMasterNameAndPasswordResult_name_inline",
                   "Remote controller Name.  @return An instance of String.",
            ],
            [
                   "Remote controller Name.  @return An instance of String.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_JoinedMasterNameAndPasswordResult.html",
                   "#DJIRemoteController_JoinedMasterNameAndPasswordResult_name_inline",
                   "",
            ],
            [
                   "getPassword",
                   2,
                   "/Components/RemoteController/DJIRemoteController_JoinedMasterNameAndPasswordResult.html",
                   "#DJIRemoteController_JoinedMasterNameAndPasswordResult_password_inline",
                   "Remote controller Password.  @return An instance of String.",
            ],
            [
                   "Remote controller Password.  @return An instance of String.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_JoinedMasterNameAndPasswordResult.html",
                   "#DJIRemoteController_JoinedMasterNameAndPasswordResult_password_inline",
                   "",
            ],
            [
                   "Stick",
                   2,
                   "/Components/Stick/DJIStick.html",
                   "",
                   "DJI hardware stick. For example, the joystick on a remote controller, or the gimbal control stick on a handheld controller.",
            ],
            [
                   "DJI hardware stick. For example, the joystick on a remote controller, or the gimbal control stick on a handheld controller.",
                   1,
                   "/Components/Stick/DJIStick.html",
                   "",
                   "",
            ],
            [
                   "getMasterId",
                   2,
                   "/Components/RemoteController/DJIRemoteController_JoinMasterAuthorizationInfo.html",
                   "#DJIRemoteController_JoinMasterAuthorizationInfo_getMasterId_inline",
                   "Get ID of the master remote controller to join.  @return An instance of String.",
            ],
            [
                   "Get ID of the master remote controller to join.  @return An instance of String.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_JoinMasterAuthorizationInfo.html",
                   "#DJIRemoteController_JoinMasterAuthorizationInfo_getMasterId_inline",
                   "",
            ],
            [
                   "setMasterId",
                   2,
                   "/Components/RemoteController/DJIRemoteController_JoinMasterAuthorizationInfo.html",
                   "#DJIRemoteController_JoinMasterAuthorizationInfo_setMasterId_inline",
                   "Set the id of the master remote controller to join.  @param masterId ID of the master remote controller to join.",
            ],
            [
                   "Set the id of the master remote controller to join.  @param masterId ID of the master remote controller to join.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_JoinMasterAuthorizationInfo.html",
                   "#DJIRemoteController_JoinMasterAuthorizationInfo_setMasterId_inline",
                   "",
            ],
            [
                   "getAuthCode",
                   2,
                   "/Components/RemoteController/DJIRemoteController_JoinMasterAuthorizationInfo.html",
                   "#DJIRemoteController_JoinMasterAuthorizationInfo_getAuthCode_inline",
                   "Authentication code to join the master remote controller.  @return An instance of String.",
            ],
            [
                   "Authentication code to join the master remote controller.  @return An instance of String.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_JoinMasterAuthorizationInfo.html",
                   "#DJIRemoteController_JoinMasterAuthorizationInfo_getAuthCode_inline",
                   "",
            ],
            [
                   "setAuthCode",
                   2,
                   "/Components/RemoteController/DJIRemoteController_JoinMasterAuthorizationInfo.html",
                   "#DJIRemoteController_JoinMasterAuthorizationInfo_setAuthCode_inline",
                   "The mobile device connected to the slave remote controller must know the authorization code of the master remote controller. The master remote controller code is set by using the `setMasterAuthorizationCode` method.  @param authCode Authentication code to join the master remote controller.",
            ],
            [
                   "The mobile device connected to the slave remote controller must know the authorization code of the master remote controller. The master remote controller code is set by using the `setMasterAuthorizationCode` method.  @param authCode Authentication code to join the master remote controller.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_JoinMasterAuthorizationInfo.html",
                   "#DJIRemoteController_JoinMasterAuthorizationInfo_setAuthCode_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCBatteryInfo.html",
                   "#DJIRemoteController_RCBatteryStateUpdateCallbackInterface_inline",
                   "Callback function that updates the Remote Controller's current battery state.",
            ],
            [
                   "Callback function that updates the Remote Controller's current battery state.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCBatteryInfo.html",
                   "#DJIRemoteController_RCBatteryStateUpdateCallbackInterface_inline",
                   "",
            ],
            [
                   "getRemainingChargeInmAh",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCBatteryInfo.html",
                   "#DJIRemoteController_DJIRCBatteryInfo_remainingEnergyInMAh_inline",
                   "The remaining power in the Remote Controller's battery in milliamp hours (mAh).  @return An int value.",
            ],
            [
                   "The remaining power in the Remote Controller's battery in milliamp hours (mAh).  @return An int value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCBatteryInfo.html",
                   "#DJIRemoteController_DJIRCBatteryInfo_remainingEnergyInMAh_inline",
                   "",
            ],
            [
                   "getRemainingChargeInPercent",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCBatteryInfo.html",
                   "#DJIRemoteController_DJIRCBatteryInfo_remainingEnergyInPercent_inline",
                   "The remaining power in the Remote Controller's battery as a percentage in the range of [0, 100].  @return An int value.",
            ],
            [
                   "The remaining power in the Remote Controller's battery as a percentage in the range of [0, 100].  @return An int value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCBatteryInfo.html",
                   "#DJIRemoteController_DJIRCBatteryInfo_remainingEnergyInPercent_inline",
                   "",
            ],
            [
                   "FocusControllerStateCallback",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_RCRemoteFocusStateUpdateCallbackInterface_inline",
                   "Callback function that updates the Remote Focus State.",
            ],
            [
                   "Callback function that updates the Remote Focus State.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_RCRemoteFocusStateUpdateCallbackInterface_inline",
                   "",
            ],
            [
                   "isWorking",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusState_isFocusControlWorks_inline",
                   "`true` if the focus control works. The control can be either changing the Aperture or  Focal Length. If it is `false`, follow  the `Direction` to rotate the Remote Focus Device until it  turns to `true` again.  @return A boolean value.",
            ],
            [
                   "`true` if the focus control works. The control can be either changing the Aperture or  Focal Length. If it is `false`, follow  the `Direction` to rotate the Remote Focus Device until it  turns to `true` again.  @return A boolean value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusState_isFocusControlWorks_inline",
                   "",
            ],
            [
                   "getControlType",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusState_controlType_inline",
                   "Remote Focus Control Type.  @return An enum value of `ControlType`",
            ],
            [
                   "Remote Focus Control Type.  @return An enum value of `ControlType`",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusState_controlType_inline",
                   "",
            ],
            [
                   "getDirection",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusState_direction_inline",
                   "Remote Focus Control Direction. Use this with  the `isWorking` value. It will give you the correct  rotation direction when `isWorking` is  `false`.  @return An enum value of `Direction`",
            ],
            [
                   "Remote Focus Control Direction. Use this with  the `isWorking` value. It will give you the correct  rotation direction when `isWorking` is  `false`.  @return An enum value of `Direction`",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusState_direction_inline",
                   "",
            ],
            [
                   "ControlType",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusControlType_inline",
                   "Remote Focus Control Type.",
            ],
            [
                   "Remote Focus Control Type.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusControlType_inline",
                   "",
            ],
            [
                   "APERTURE",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusControlType_Aperture_inline",
                   "Control Aperture.",
            ],
            [
                   "Control Aperture.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusControlType_Aperture_inline",
                   "",
            ],
            [
                   "FOCAL_LENGTH",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusControlType_FocalLength_inline",
                   "Control Focal Length.",
            ],
            [
                   "Control Focal Length.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusControlType_FocalLength_inline",
                   "",
            ],
            [
                   "FOCUS_DISTANCE",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusControlType_FocusDistance_inline",
                   "Adjust focus distance.",
            ],
            [
                   "Adjust focus distance.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusControlType_FocusDistance_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusControlType_Unknown_inline",
                   "Unknown types.",
            ],
            [
                   "Unknown types.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusControlType_Unknown_inline",
                   "",
            ],
            [
                   "Direction",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusControlDirection_inline",
                   "Remote Focus Control Direction.",
            ],
            [
                   "Remote Focus Control Direction.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusControlDirection_inline",
                   "",
            ],
            [
                   "CLOCKWISE",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusControlDirection_Clockwise_inline",
                   "Clockwise.",
            ],
            [
                   "Clockwise.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusControlDirection_Clockwise_inline",
                   "",
            ],
            [
                   "COUNTER_CLOCKWISE",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusControlDirection_CounterClockwise_inline",
                   "CounterClockwise.",
            ],
            [
                   "CounterClockwise.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusControlDirection_CounterClockwise_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusControlDirection_Unknown_inline",
                   "Unknown.",
            ],
            [
                   "Unknown.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCRemoteFocusState.html",
                   "#DJIRemoteController_DJIRCRemoteFocusControlDirection_Unknown_inline",
                   "",
            ],
            [
                   "getTime",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGPSData.html",
                   "#DJIRemoteController_DJIRCGPSData_time_inline",
                   "The Remote Controller's GPS time.  @return An instance of `getTime`.",
            ],
            [
                   "The Remote Controller's GPS time.  @return An instance of `getTime`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGPSData.html",
                   "#DJIRemoteController_DJIRCGPSData_time_inline",
                   "",
            ],
            [
                   "getLocation",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGPSData.html",
                   "#DJIRemoteController_DJIRCGPSData_location_inline",
                   "The Remote Controller's location.  @return An instance of `GPSLocation`.",
            ],
            [
                   "The Remote Controller's location.  @return An instance of `GPSLocation`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGPSData.html",
                   "#DJIRemoteController_DJIRCGPSData_location_inline",
                   "",
            ],
            [
                   "getEastSpeed",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGPSData.html",
                   "#DJIRemoteController_DJIRCGPSData_speedEast_inline",
                   "The Remote Controller's speed in the East direction in meters/second. A negative speed means the Remote  Controller is moving in the West direction.  @return A float value.",
            ],
            [
                   "The Remote Controller's speed in the East direction in meters/second. A negative speed means the Remote  Controller is moving in the West direction.  @return A float value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGPSData.html",
                   "#DJIRemoteController_DJIRCGPSData_speedEast_inline",
                   "",
            ],
            [
                   "getNorthSpeed",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGPSData.html",
                   "#DJIRemoteController_DJIRCGPSData_speedNorth_inline",
                   "The Remote Controller's speed in the North direction in meters/second. A negative speed means the Remote  Controller is moving in the South direction.  @return A float value.",
            ],
            [
                   "The Remote Controller's speed in the North direction in meters/second. A negative speed means the Remote  Controller is moving in the South direction.  @return A float value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGPSData.html",
                   "#DJIRemoteController_DJIRCGPSData_speedNorth_inline",
                   "",
            ],
            [
                   "getSatelliteCount",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGPSData.html",
                   "#DJIRemoteController_DJIRCGPSData_satelliteCount_inline",
                   "The number of GPS satellites the Remote Controller detects.  @return An int value.",
            ],
            [
                   "The number of GPS satellites the Remote Controller detects.  @return An int value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGPSData.html",
                   "#DJIRemoteController_DJIRCGPSData_satelliteCount_inline",
                   "",
            ],
            [
                   "getLocationAccuracy",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGPSData.html",
                   "#DJIRemoteController_DJIRCGPSData_accuracy_inline",
                   "The the margin of error, in meters, for the GPS location.  @return A float value.",
            ],
            [
                   "The the margin of error, in meters, for the GPS location.  @return A float value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGPSData.html",
                   "#DJIRemoteController_DJIRCGPSData_accuracy_inline",
                   "",
            ],
            [
                   "isValid",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGPSData.html",
                   "#DJIRemoteController_DJIRCGPSData_isValid_inline",
                   "`true` if the GPS data is valid. The data is not valid if there are too few satellites  or the signal strength is too low.  @return A boolean value.",
            ],
            [
                   "`true` if the GPS data is valid. The data is not valid if there are too few satellites  or the signal strength is too low.  @return A boolean value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGPSData.html",
                   "#DJIRemoteController_DJIRCGPSData_isValid_inline",
                   "",
            ],
            [
                   "Time",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGpsTime.html",
                   "",
                   "Remote Controller's GPS time.",
            ],
            [
                   "Remote Controller's GPS time.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGpsTime.html",
                   "",
                   "",
            ],
            [
                   "getHour",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGpsTime.html",
                   "#DJIRemoteController_DJIRCGpsTime_hour_inline",
                   "Hour value of Remote Controller's GPS time.  @return A byte value.",
            ],
            [
                   "Hour value of Remote Controller's GPS time.  @return A byte value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGpsTime.html",
                   "#DJIRemoteController_DJIRCGpsTime_hour_inline",
                   "",
            ],
            [
                   "getMinute",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGpsTime.html",
                   "#DJIRemoteController_DJIRCGpsTime_minute_inline",
                   "Minute value of Remote Controller's GPS time.  @return A byte value.",
            ],
            [
                   "Minute value of Remote Controller's GPS time.  @return A byte value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGpsTime.html",
                   "#DJIRemoteController_DJIRCGpsTime_minute_inline",
                   "",
            ],
            [
                   "getSecond",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGpsTime.html",
                   "#DJIRemoteController_DJIRCGpsTime_second_inline",
                   "Second value of Remote Controller's GPS time.  @return A byte value.",
            ],
            [
                   "Second value of Remote Controller's GPS time.  @return A byte value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGpsTime.html",
                   "#DJIRemoteController_DJIRCGpsTime_second_inline",
                   "",
            ],
            [
                   "getYear",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGpsTime.html",
                   "#DJIRemoteController_DJIRCGpsTime_year_inline",
                   "Year value of Remote Controller's GPS time.  @return An int value.",
            ],
            [
                   "Year value of Remote Controller's GPS time.  @return An int value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGpsTime.html",
                   "#DJIRemoteController_DJIRCGpsTime_year_inline",
                   "",
            ],
            [
                   "getMonth",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGpsTime.html",
                   "#DJIRemoteController_DJIRCGpsTime_month_inline",
                   "Month value of Remote Controller's GPS time.  @return A byte value.",
            ],
            [
                   "Month value of Remote Controller's GPS time.  @return A byte value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGpsTime.html",
                   "#DJIRemoteController_DJIRCGpsTime_month_inline",
                   "",
            ],
            [
                   "getDay",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGpsTime.html",
                   "#DJIRemoteController_DJIRCGpsTime_day_inline",
                   "Day value of Remote Controller's GPS time.  @return A byte value.",
            ],
            [
                   "Day value of Remote Controller's GPS time.  @return A byte value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGpsTime.html",
                   "#DJIRemoteController_DJIRCGpsTime_day_inline",
                   "",
            ],
            [
                   "GPSLocation",
                   2,
                   "/Components/RemoteController/DJIRemoteController_GPSLocation.html",
                   "",
                   "Location defined by latitude and longitude.",
            ],
            [
                   "Location defined by latitude and longitude.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_GPSLocation.html",
                   "",
                   "",
            ],
            [
                   "getLongitude",
                   2,
                   "/Components/RemoteController/DJIRemoteController_GPSLocation.html",
                   "#DJIRemoteController_GPSLocation_getLongitude_inline",
                   "Longitude component of a location.  @return A double value.",
            ],
            [
                   "Longitude component of a location.  @return A double value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_GPSLocation.html",
                   "#DJIRemoteController_GPSLocation_getLongitude_inline",
                   "",
            ],
            [
                   "getLatitude",
                   2,
                   "/Components/RemoteController/DJIRemoteController_GPSLocation.html",
                   "#DJIRemoteController_GPSLocation_getLatitude_inline",
                   "Latitude component of a location.  @return A double value.",
            ],
            [
                   "Latitude component of a location.  @return A double value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_GPSLocation.html",
                   "#DJIRemoteController_GPSLocation_getLatitude_inline",
                   "",
            ],
            [
                   "getLeftStick",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_left_inline",
                   "Get left stick.  @return An instance of `Stick`.",
            ],
            [
                   "Get left stick.  @return An instance of `Stick`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_left_inline",
                   "",
            ],
            [
                   "getRightStick",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_right_inline",
                   "Get right stick.  @return An instance of `Stick`.",
            ],
            [
                   "Get right stick.  @return An instance of `Stick`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_right_inline",
                   "",
            ],
            [
                   "getLeftWheel",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_leftWheel_inline",
                   "Gimbal Dial's (upper left wheel) value in the range of [-660,660], where 0 is untouched and positive is turned in the clockwise direction.  @return Gimbal wheel value.",
            ],
            [
                   "Gimbal Dial's (upper left wheel) value in the range of [-660,660], where 0 is untouched and positive is turned in the clockwise direction.  @return Gimbal wheel value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_leftWheel_inline",
                   "",
            ],
            [
                   "getRightWheel",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_rightWheel_inline",
                   "Current state of the upper right wheel on the Remote Controller (Camera Settings Dial).  @return An instance of `RightWheel`.",
            ],
            [
                   "Current state of the upper right wheel on the Remote Controller (Camera Settings Dial).  @return An instance of `RightWheel`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_rightWheel_inline",
                   "",
            ],
            [
                   "getTransformationSwitch",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_transformationSwitch_inline",
                   "Current state of the Transformation Switch on the Remote Controller.  @return An instance of `TransformationSwitch`.",
            ],
            [
                   "Current state of the Transformation Switch on the Remote Controller.  @return An instance of `TransformationSwitch`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_transformationSwitch_inline",
                   "",
            ],
            [
                   "getFlightModeSwitch",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_flightModeSwitch_inline",
                   "Current position of the Flight Mode Switch on the Remote Controller.  @return An enum value of `FlightModeSwitch`",
            ],
            [
                   "Current position of the Flight Mode Switch on the Remote Controller.  @return An enum value of `FlightModeSwitch`",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_flightModeSwitch_inline",
                   "",
            ],
            [
                   "getGoHomeButton",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_goHomeButton_inline",
                   "Current state of the Return To Home Button.  @return An instance of `Button`.",
            ],
            [
                   "Current state of the Return To Home Button.  @return An instance of `Button`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_goHomeButton_inline",
                   "",
            ],
            [
                   "getRecordButton",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_recordButton_inline",
                   "Current state of the Video Recording Button.  @return An instance of `Button`.",
            ],
            [
                   "Current state of the Video Recording Button.  @return An instance of `Button`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_recordButton_inline",
                   "",
            ],
            [
                   "getShutterButton",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_shutterButton_inline",
                   "Current state of the Shutter Button.  @return An instance of `Button`.",
            ],
            [
                   "Current state of the Shutter Button.  @return An instance of `Button`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_shutterButton_inline",
                   "",
            ],
            [
                   "getPlaybackButton",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_playbackButton_inline",
                   "Current state of the Playback Button. The Playback Button is not supported on Phantom 4 remote controllers.  @return An instance of `Button`.",
            ],
            [
                   "Current state of the Playback Button. The Playback Button is not supported on Phantom 4 remote controllers.  @return An instance of `Button`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_playbackButton_inline",
                   "",
            ],
            [
                   "getPauseButton",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_pauseButton_inline",
                   "Current state of the Pause Button. The Pause button is only supported on Phantom 4 remote controllers.  @return An instance of `Button`.",
            ],
            [
                   "Current state of the Pause Button. The Pause button is only supported on Phantom 4 remote controllers.  @return An instance of `Button`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_pauseButton_inline",
                   "",
            ],
            [
                   "getC1Button",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_customButton1_inline",
                   "Current state of custom button 1 (left Back Button).  @return An instance of `Button`.",
            ],
            [
                   "Current state of custom button 1 (left Back Button).  @return An instance of `Button`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_customButton1_inline",
                   "",
            ],
            [
                   "getC2Button",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_customButton2_inline",
                   "Current state of custom button 2 (right Back Button).  @return An instance of `Button`.",
            ],
            [
                   "Current state of custom button 2 (right Back Button).  @return An instance of `Button`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_customButton2_inline",
                   "",
            ],
            [
                   "getFiveDButton",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_fiveDButton_inline",
                   "Current state of the 5D button. The button can be moved up, down, left and right and can be pressed. The 5D  button is only supported on Mavic Pro remote controllers.  @return An instance of `FiveDButton`.",
            ],
            [
                   "Current state of the 5D button. The button can be moved up, down, left and right and can be pressed. The 5D  button is only supported on Mavic Pro remote controllers.  @return An instance of `FiveDButton`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRCHardwareState_fiveDButton_inline",
                   "",
            ],
            [
                   "HardwareStateCallback",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_RCHardwareStateUpdateCallbackInterface_inline",
                   "Callback function that updates the Remote Controller's  current hardware state.",
            ],
            [
                   "Callback function that updates the Remote Controller's  current hardware state.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_RCHardwareStateUpdateCallbackInterface_inline",
                   "",
            ],
            [
                   "RightWheel",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareRightWheel.html",
                   "",
                   "Current state of the Camera Settings Dial (upper right wheel on the Remote Controller).",
            ],
            [
                   "Current state of the Camera Settings Dial (upper right wheel on the Remote Controller).",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareRightWheel.html",
                   "",
                   "",
            ],
            [
                   "TransformationSwitch",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareTransformationSwitch.html",
                   "",
                   "Transformation Switch position. The Transformation Switch is around the Return To Home Button on Inspire,  Inspire 1 and M100 Remote Controllers, and controls the state of the aircraft's landing gear.",
            ],
            [
                   "Transformation Switch position. The Transformation Switch is around the Return To Home Button on Inspire,  Inspire 1 and M100 Remote Controllers, and controls the state of the aircraft's landing gear.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareTransformationSwitch.html",
                   "",
                   "",
            ],
            [
                   "FlightModeSwitch",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRemoteControllerFlightModeSwitchPosition_inline",
                   "Remote Controller Flight Mode switch position.",
            ],
            [
                   "Remote Controller Flight Mode switch position.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRemoteControllerFlightModeSwitchPosition_inline",
                   "",
            ],
            [
                   "Button",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState_Button.html",
                   "",
                   "Remote Controller has numerous momentary push buttons, which will use this state.",
            ],
            [
                   "Remote Controller has numerous momentary push buttons, which will use this state.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState_Button.html",
                   "",
                   "",
            ],
            [
                   "FiveDButton",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCFiveDButton.html",
                   "",
                   "State of the 5D button on the remote controller. Vertical movement, horizontal movement and if it is pressed are  not exclusive.",
            ],
            [
                   "State of the 5D button on the remote controller. Vertical movement, horizontal movement and if it is pressed are  not exclusive.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCFiveDButton.html",
                   "",
                   "",
            ],
            [
                   "isPresent",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState_Button.html",
                   "#DJIRemoteController_DJIRCHardwareState_Button_isPresent_inline",
                   "`true` if the hardware button is present.  @return A boolean value.",
            ],
            [
                   "`true` if the hardware button is present.  @return A boolean value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState_Button.html",
                   "#DJIRemoteController_DJIRCHardwareState_Button_isPresent_inline",
                   "",
            ],
            [
                   "isClicked",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState_Button.html",
                   "#DJIRemoteController_DJIRCHardwareState_Button_buttonDown_inline",
                   "`true` if button is pressed down.  @return A boolean value.",
            ],
            [
                   "`true` if button is pressed down.  @return A boolean value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState_Button.html",
                   "#DJIRemoteController_DJIRCHardwareState_Button_buttonDown_inline",
                   "",
            ],
            [
                   "isTurned",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareRightWheel.html",
                   "#DJIRemoteController_DJIRCHardwareRightWheel_wheelChanged_inline",
                   "`true` if wheel value has changed.  @return A boolean value.",
            ],
            [
                   "`true` if wheel value has changed.  @return A boolean value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareRightWheel.html",
                   "#DJIRemoteController_DJIRCHardwareRightWheel_wheelChanged_inline",
                   "",
            ],
            [
                   "getValue",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareRightWheel.html",
                   "#DJIRemoteController_DJIRCHardwareRightWheel_value_inline",
                   "Wheel value in the range of [0, 1320]. The value represents the difference in an operation.  @return An int value.",
            ],
            [
                   "Wheel value in the range of [0, 1320]. The value represents the difference in an operation.  @return An int value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareRightWheel.html",
                   "#DJIRemoteController_DJIRCHardwareRightWheel_value_inline",
                   "",
            ],
            [
                   "isPresent",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareTransformationSwitch.html",
                   "#DJIRemoteController_DJIRCHardwareTransformationSwitch_isPresent_inline",
                   "`true` if the Transformation Switch present.  @return A boolean value.",
            ],
            [
                   "`true` if the Transformation Switch present.  @return A boolean value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareTransformationSwitch.html",
                   "#DJIRemoteController_DJIRCHardwareTransformationSwitch_isPresent_inline",
                   "",
            ],
            [
                   "getState",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareTransformationSwitch.html",
                   "#DJIRemoteController_DJIRCHardwareTransformationSwitch_transformationSwitchState_inline",
                   "Current transformation switch state.  @return An enum value of `State`",
            ],
            [
                   "Current transformation switch state.  @return An enum value of `State`",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareTransformationSwitch.html",
                   "#DJIRemoteController_DJIRCHardwareTransformationSwitch_transformationSwitchState_inline",
                   "",
            ],
            [
                   "State",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareTransformationSwitch.html",
                   "#DJIRemoteController_DJIRCHardwareTransformationSwitchState_inline",
                   "Transformation Switch position states.",
            ],
            [
                   "Transformation Switch position states.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareTransformationSwitch.html",
                   "#DJIRemoteController_DJIRCHardwareTransformationSwitchState_inline",
                   "",
            ],
            [
                   "POSITION_ONE",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRemoteControllerFlightModeSwitchPositionOne_inline",
                   "Position One. For all products except Mavic Pro, this is the left most position of the flight mode switch on a remote controller from the perspective of the pilot. For example, on a Phantom 4 remote controller, Position One is labeled A. For the Mavic Pro, this is the position that is furthest away from the pilot and labeled Sport.",
            ],
            [
                   "Position One. For all products except Mavic Pro, this is the left most position of the flight mode switch on a remote controller from the perspective of the pilot. For example, on a Phantom 4 remote controller, Position One is labeled A. For the Mavic Pro, this is the position that is furthest away from the pilot and labeled Sport.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRemoteControllerFlightModeSwitchPositionOne_inline",
                   "",
            ],
            [
                   "POSITION_TWO",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRemoteControllerFlightModeSwitchPositionTwo_inline",
                   "Position Two. For all products except Mavic Pro, this is the middle position of the flight mode switch on a remote controller from the perspective of the pilot. For example, on a Phantom 4 remote controller, Position Two is labeled S. For the Mavic Pro, this is the position that is closest to the pilot (the P position).",
            ],
            [
                   "Position Two. For all products except Mavic Pro, this is the middle position of the flight mode switch on a remote controller from the perspective of the pilot. For example, on a Phantom 4 remote controller, Position Two is labeled S. For the Mavic Pro, this is the position that is closest to the pilot (the P position).",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRemoteControllerFlightModeSwitchPositionTwo_inline",
                   "",
            ],
            [
                   "POSITION_THREE",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRemoteControllerFlightModeSwitchPositionThree_inline",
                   "Position Three. For all products except Mavic Pro, this is the right most position of the flight mode switch on a remote controller from the perspective of the pilot. For example, on a Phantom 4 remote controller, Position Two is labeled P. The Mavic Pro does not have a third position for the flight mode switch.",
            ],
            [
                   "Position Three. For all products except Mavic Pro, this is the right most position of the flight mode switch on a remote controller from the perspective of the pilot. For example, on a Phantom 4 remote controller, Position Two is labeled P. The Mavic Pro does not have a third position for the flight mode switch.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareState.html",
                   "#DJIRemoteController_DJIRemoteControllerFlightModeSwitchPositionThree_inline",
                   "",
            ],
            [
                   "RETRACT",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareTransformationSwitch.html",
                   "#DJIRemoteController_DJIRCHardwareTransformationSwitchState_Retract_inline",
                   "Retract landing gear switch state.",
            ],
            [
                   "Retract landing gear switch state.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareTransformationSwitch.html",
                   "#DJIRemoteController_DJIRCHardwareTransformationSwitchState_Retract_inline",
                   "",
            ],
            [
                   "DEPLOY",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareTransformationSwitch.html",
                   "#DJIRemoteController_DJIRCHardwareTransformationSwitchState_Deploy_inline",
                   "Deploy landing gear switch state.",
            ],
            [
                   "Deploy landing gear switch state.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCHardwareTransformationSwitch.html",
                   "#DJIRemoteController_DJIRCHardwareTransformationSwitchState_Deploy_inline",
                   "",
            ],
            [
                   "getVerticalDirection",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCFiveDButton.html",
                   "#DJIRemoteController_DJIRCFiveDButton_verticalMovement_inline",
                   "Get the movement in the vertical direction of the 5D button. Up is the positive direction and down is the  negative direction.  @return An enum value of `FiveDButtonDirection`",
            ],
            [
                   "Get the movement in the vertical direction of the 5D button. Up is the positive direction and down is the  negative direction.  @return An enum value of `FiveDButtonDirection`",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCFiveDButton.html",
                   "#DJIRemoteController_DJIRCFiveDButton_verticalMovement_inline",
                   "",
            ],
            [
                   "getHorizontalDirection",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCFiveDButton.html",
                   "#DJIRemoteController_DJIRCFiveDButton_horizontalMovement_inline",
                   "Get the movement in the horizontal direction of the 5D button. Right is the positive direction and left is the  negative direction.  @return An enum value of `FiveDButtonDirection`",
            ],
            [
                   "Get the movement in the horizontal direction of the 5D button. Right is the positive direction and left is the  negative direction.  @return An enum value of `FiveDButtonDirection`",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCFiveDButton.html",
                   "#DJIRemoteController_DJIRCFiveDButton_horizontalMovement_inline",
                   "",
            ],
            [
                   "FiveDButtonDirection",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCFiveDButton.html",
                   "#DJIRemoteController_DJIRCFiveDButtonDirection_inline",
                   "Movement direction of the remote controller's 5D button.",
            ],
            [
                   "Movement direction of the remote controller's 5D button.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCFiveDButton.html",
                   "#DJIRemoteController_DJIRCFiveDButtonDirection_inline",
                   "",
            ],
            [
                   "MIDDLE",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCFiveDButton.html",
                   "#DJIRemoteController_DJIRCFiveDButtonDirection_Middle_inline",
                   "Button has no movement in either the vertical direction or the horizontal direction.",
            ],
            [
                   "Button has no movement in either the vertical direction or the horizontal direction.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCFiveDButton.html",
                   "#DJIRemoteController_DJIRCFiveDButtonDirection_Middle_inline",
                   "",
            ],
            [
                   "POSITIVE",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCFiveDButton.html",
                   "#DJIRemoteController_DJIRCFiveDButtonDirection_Positive_inline",
                   "Button is moved in the positive direction which is up or right.",
            ],
            [
                   "Button is moved in the positive direction which is up or right.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCFiveDButton.html",
                   "#DJIRemoteController_DJIRCFiveDButtonDirection_Positive_inline",
                   "",
            ],
            [
                   "NEGATIVE",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCFiveDButton.html",
                   "#DJIRemoteController_DJIRCFiveDButtonDirection_Negative_inline",
                   "Button is moved in the negative direction which is down or left.",
            ],
            [
                   "Button is moved in the negative direction which is down or left.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCFiveDButton.html",
                   "#DJIRemoteController_DJIRCFiveDButtonDirection_Negative_inline",
                   "",
            ],
            [
                   "getId",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCInfo.html",
                   "#DJIRemoteController_DJIRCInfo_Identifier_inline",
                   "Remote Controller's unique identifier.  @return An int value.",
            ],
            [
                   "Remote Controller's unique identifier.  @return An int value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCInfo.html",
                   "#DJIRemoteController_DJIRCInfo_Identifier_inline",
                   "",
            ],
            [
                   "getName",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCInfo.html",
                   "#DJIRemoteController_DJIRCInfo_name_inline",
                   "Remote Controller's name.  @return An instance of String.",
            ],
            [
                   "Remote Controller's name.  @return An instance of String.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCInfo.html",
                   "#DJIRemoteController_DJIRCInfo_name_inline",
                   "",
            ],
            [
                   "getPassword",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCInfo.html",
                   "#DJIRemoteController_DJIRCInfo_password_inline",
                   "Remote Controller's password.  @return An instance of String.",
            ],
            [
                   "Remote Controller's password.  @return An instance of String.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCInfo.html",
                   "#DJIRemoteController_DJIRCInfo_password_inline",
                   "",
            ],
            [
                   "getSignalQuality",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCInfo.html",
                   "#DJIRemoteController_DJIRCInfo_signalQuality_inline",
                   "Signal quality of a connected master or slave Remote Controller in percent [0, 100].  @return A short value.",
            ],
            [
                   "Signal quality of a connected master or slave Remote Controller in percent [0, 100].  @return A short value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCInfo.html",
                   "#DJIRemoteController_DJIRCInfo_signalQuality_inline",
                   "",
            ],
            [
                   "hasGimbalControlPermission",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCInfo.html",
                   "#DJIRemoteController_DJIRCInfo_hasGimbalControlPermission_inline",
                   "`true` if the slave remote controller can control the aircraft's gimbal.  Always `true` for a master remote controller.  @return A boolean value to check if the slave remote controller can control the aircraft's gimbal.",
            ],
            [
                   "`true` if the slave remote controller can control the aircraft's gimbal.  Always `true` for a master remote controller.  @return A boolean value to check if the slave remote controller can control the aircraft's gimbal.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCInfo.html",
                   "#DJIRemoteController_DJIRCInfo_hasGimbalControlPermission_inline",
                   "",
            ],
            [
                   "ControlRequestCallback",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCInfo.html",
                   "#DJIRemoteController_RCReceiveGimbalControlRequestFromSlaveCallbackInterface_inline",
                   "The callback will handle the gimbal control request.",
            ],
            [
                   "The callback will handle the gimbal control request.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCInfo.html",
                   "#DJIRemoteController_RCReceiveGimbalControlRequestFromSlaveCallbackInterface_inline",
                   "",
            ],
            [
                   "getRcMode",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCMasterSlaveState.html",
                   "#DJIRemoteController_DJIRCMasterSlaveState_mode_inline",
                   "The master/slave mode of the remote controller.  @return An enum value of `RCMode`",
            ],
            [
                   "The master/slave mode of the remote controller.  @return An enum value of `RCMode`",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCMasterSlaveState.html",
                   "#DJIRemoteController_DJIRCMasterSlaveState_mode_inline",
                   "",
            ],
            [
                   "isConnected",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCMasterSlaveState.html",
                   "#DJIRemoteController_DJIRCMasterSlaveState_isConnected_inline",
                   "`true` if a slave remote controller joins a master remote controller.  @return A boolean value.",
            ],
            [
                   "`true` if a slave remote controller joins a master remote controller.  @return A boolean value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCMasterSlaveState.html",
                   "#DJIRemoteController_DJIRCMasterSlaveState_isConnected_inline",
                   "",
            ],
            [
                   "getMasterId",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCMasterSlaveState.html",
                   "#DJIRemoteController_DJIRCMasterSlaveState_masterID_inline",
                   "ID of the master remote controller.  @return An instance of String.",
            ],
            [
                   "ID of the master remote controller.  @return An instance of String.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCMasterSlaveState.html",
                   "#DJIRemoteController_DJIRCMasterSlaveState_masterID_inline",
                   "",
            ],
            [
                   "getSlaveId",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCMasterSlaveState.html",
                   "#DJIRemoteController_DJIRCMasterSlaveState_slaveID_inline",
                   "ID of the slave remote controller.  @return An instance of String.",
            ],
            [
                   "ID of the slave remote controller.  @return An instance of String.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCMasterSlaveState.html",
                   "#DJIRemoteController_DJIRCMasterSlaveState_slaveID_inline",
                   "",
            ],
            [
                   "getAuthorizationCode",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCMasterSlaveState.html",
                   "#DJIRemoteController_DJIRCMasterSlaveState_authorizationCode_inline",
                   "Authorization code of the master remote controller that is a 6 element string of numbers.  @return An instance of String.",
            ],
            [
                   "Authorization code of the master remote controller that is a 6 element string of numbers.  @return An instance of String.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCMasterSlaveState.html",
                   "#DJIRemoteController_DJIRCMasterSlaveState_authorizationCode_inline",
                   "",
            ],
            [
                   "Callback",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCMasterSlaveState.html",
                   "#DJIRemoteController_didUpdateMasterSlaveStateCallbackInterface_inline",
                   "Callback function that updates the Remote Controller's master and slave state.",
            ],
            [
                   "Callback function that updates the Remote Controller's master and slave state.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCMasterSlaveState.html",
                   "#DJIRemoteController_didUpdateMasterSlaveStateCallbackInterface_inline",
                   "",
            ],
            [
                   "aircraftMappingStyle",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMapping_aircraftMappingStyle_inline",
                   "The mapping style to which the Remote Controller is set.  @return An enum value of `AircraftMappingStyle`.",
            ],
            [
                   "The mapping style to which the Remote Controller is set.  @return An enum value of `AircraftMappingStyle`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMapping_aircraftMappingStyle_inline",
                   "",
            ],
            [
                   "leftVertical",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMapping_leftVertical_inline",
                   "The mapping configuration for the left stick on the vertical axis.  @return An instance of `AircraftStickMapping`.",
            ],
            [
                   "The mapping configuration for the left stick on the vertical axis.  @return An instance of `AircraftStickMapping`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMapping_leftVertical_inline",
                   "",
            ],
            [
                   "leftHorizontal",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMapping_leftHorizontal_inline",
                   "The mapping configuration for the left stick on the horizontal axis.  @return An instance of `AircraftStickMapping`.",
            ],
            [
                   "The mapping configuration for the left stick on the horizontal axis.  @return An instance of `AircraftStickMapping`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMapping_leftHorizontal_inline",
                   "",
            ],
            [
                   "rightVertical",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMapping_rightVertical_inline",
                   "The mapping configuration for the right stick on the vertical axis.  @return An instance of `AircraftStickMapping`.",
            ],
            [
                   "The mapping configuration for the right stick on the vertical axis.  @return An instance of `AircraftStickMapping`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMapping_rightVertical_inline",
                   "",
            ],
            [
                   "rightHorizontal",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMapping_rightHorizontal_inline",
                   "The mapping configuration for the right stick on the horizontal axis.  @return An instance of `AircraftStickMapping`.",
            ],
            [
                   "The mapping configuration for the right stick on the horizontal axis.  @return An instance of `AircraftStickMapping`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMapping_rightHorizontal_inline",
                   "",
            ],
            [
                   "AircraftMapping",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMapping_constructor1_inline",
                   "Constructor with a defined mapping style.  @param style The `AircraftMappingStyle` object.",
            ],
            [
                   "Constructor with a defined mapping style.  @param style The `AircraftMappingStyle` object.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMapping_constructor1_inline",
                   "",
            ],
            [
                   "AircraftMapping",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMapping_constructor2_inline",
                   "Constructor with defined mappings.  @param leftVertical The `AircraftMappingStyle` object. @param leftHorizontal The `AircraftMappingStyle` object. @param rightVertical The `AircraftMappingStyle` object. @param rightHorizontal The `AircraftMappingStyle` object.",
            ],
            [
                   "Constructor with defined mappings.  @param leftVertical The `AircraftMappingStyle` object. @param leftHorizontal The `AircraftMappingStyle` object. @param rightVertical The `AircraftMappingStyle` object. @param rightHorizontal The `AircraftMappingStyle` object.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMapping_constructor2_inline",
                   "",
            ],
            [
                   "AircraftStickMappingTarget",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftStickMappingTarget_inline",
                   "The list of controls that may be mapped on a stick.",
            ],
            [
                   "The list of controls that may be mapped on a stick.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftStickMappingTarget_inline",
                   "",
            ],
            [
                   "NONE",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftStickMappingTarget_None_inline",
                   "None",
            ],
            [
                   "None",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftStickMappingTarget_None_inline",
                   "",
            ],
            [
                   "THROTTLE",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftStickMappingTarget_Throttle_inline",
                   "Controls Throttle",
            ],
            [
                   "Controls Throttle",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftStickMappingTarget_Throttle_inline",
                   "",
            ],
            [
                   "PITCH",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftStickMappingTarget_Pitch_inline",
                   "Controls Pitch",
            ],
            [
                   "Controls Pitch",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftStickMappingTarget_Pitch_inline",
                   "",
            ],
            [
                   "ROLL",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftStickMappingTarget_Roll_inline",
                   "Controls Roll",
            ],
            [
                   "Controls Roll",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftStickMappingTarget_Roll_inline",
                   "",
            ],
            [
                   "YAW",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftStickMappingTarget_Yaw_inline",
                   "Controls Yaw",
            ],
            [
                   "Controls Yaw",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftStickMappingTarget_Yaw_inline",
                   "",
            ],
            [
                   "AircraftStickMapping",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftStickMapping.html",
                   "",
                   "A struct representing a mapping configuration which includes the particular control and whether or not it is reversed.",
            ],
            [
                   "A struct representing a mapping configuration which includes the particular control and whether or not it is reversed.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftStickMapping.html",
                   "",
                   "",
            ],
            [
                   "getMappingTarget",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftStickMapping.html",
                   "#DJIRemoteController_DJIRCAircraftStickMapping_target_inline",
                   "The defined control to be mapped.  @return An enum value of `AircraftStickMappingTarget`",
            ],
            [
                   "The defined control to be mapped.  @return An enum value of `AircraftStickMappingTarget`",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftStickMapping.html",
                   "#DJIRemoteController_DJIRCAircraftStickMapping_target_inline",
                   "",
            ],
            [
                   "isReversed",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftStickMapping.html",
                   "#DJIRemoteController_DJIRCAircraftStickMapping_isReversed_inline",
                   "whether or not the control is to be reversed.  @return A boolean value.",
            ],
            [
                   "whether or not the control is to be reversed.  @return A boolean value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftStickMapping.html",
                   "#DJIRemoteController_DJIRCAircraftStickMapping_isReversed_inline",
                   "",
            ],
            [
                   "AircraftMappingStyle",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMappingStyle_inline",
                   "The predefined mapping styles available to use. Custom allow to specify all mapping configurations.",
            ],
            [
                   "The predefined mapping styles available to use. Custom allow to specify all mapping configurations.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMappingStyle_inline",
                   "",
            ],
            [
                   "STYLE_1",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMappingStyle_1_inline",
                   "Style 1.",
            ],
            [
                   "Style 1.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMappingStyle_1_inline",
                   "",
            ],
            [
                   "STYLE_2",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMappingStyle_2_inline",
                   "Style 2.",
            ],
            [
                   "Style 2.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMappingStyle_2_inline",
                   "",
            ],
            [
                   "STYLE_3",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMappingStyle_3_inline",
                   "Style 3.",
            ],
            [
                   "Style 3.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMappingStyle_3_inline",
                   "",
            ],
            [
                   "STYLE_CUSTOM",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMappingStyle_Custom_inline",
                   "Custom Style. Requires all mapping configurations.",
            ],
            [
                   "Custom Style. Requires all mapping configurations.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMappingStyle_Custom_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMappingStyle_Unknown_inline",
                   "Unknown style.",
            ],
            [
                   "Unknown style.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCAircraftMapping.html",
                   "#DJIRemoteController_DJIRCAircraftMappingStyle_Unknown_inline",
                   "",
            ],
            [
                   "GimbalMapping",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "",
                   "The mapping styles to control the Gimbal.",
            ],
            [
                   "The mapping styles to control the Gimbal.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "",
                   "",
            ],
            [
                   "leftVertical",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalMapping_leftVertical_inline",
                   "The mapping configuration for the left stick on the vertical axis.  @return An instance of `GimbalStickMapping`.",
            ],
            [
                   "The mapping configuration for the left stick on the vertical axis.  @return An instance of `GimbalStickMapping`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalMapping_leftVertical_inline",
                   "",
            ],
            [
                   "leftHorizontal",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalMapping_leftHorizontal_inline",
                   "The mapping configuration for the left stick on the horizontal axis.  @return An instance of `GimbalStickMapping`.",
            ],
            [
                   "The mapping configuration for the left stick on the horizontal axis.  @return An instance of `GimbalStickMapping`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalMapping_leftHorizontal_inline",
                   "",
            ],
            [
                   "rightVertical",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalMapping_rightVertical_inline",
                   "The mapping configuration for the right stick on the vertical axis.  @return An instance of `GimbalStickMapping`.",
            ],
            [
                   "The mapping configuration for the right stick on the vertical axis.  @return An instance of `GimbalStickMapping`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalMapping_rightVertical_inline",
                   "",
            ],
            [
                   "rightHorizontal",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalMapping_rightHorizontal_inline",
                   "The mapping configuration for the right stick on the horizontal axis.  @return An instance of `GimbalStickMapping`.",
            ],
            [
                   "The mapping configuration for the right stick on the horizontal axis.  @return An instance of `GimbalStickMapping`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalMapping_rightHorizontal_inline",
                   "",
            ],
            [
                   "gimbalMappingStyle",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalMapping_gimbalMappingStyle_inline",
                   "The control style to which the Remote Controller is set.  @return An enum value of `GimbalMappingStyle`.",
            ],
            [
                   "The control style to which the Remote Controller is set.  @return An enum value of `GimbalMappingStyle`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalMapping_gimbalMappingStyle_inline",
                   "",
            ],
            [
                   "GimbalMappingStyle",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCGimbalMappingStyle_inline",
                   "The gimbal control stick mapping styles.",
            ],
            [
                   "The gimbal control stick mapping styles.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCGimbalMappingStyle_inline",
                   "",
            ],
            [
                   "DEFAULT",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCGimbalMappingStyle_Default_inline",
                   "Default",
            ],
            [
                   "Default",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCGimbalMappingStyle_Default_inline",
                   "",
            ],
            [
                   "CUSTOM",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCGimbalMappingStyle_Custom_inline",
                   "Custom",
            ],
            [
                   "Custom",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCGimbalMappingStyle_Custom_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCGimbalMappingStyle_Unknown_inline",
                   "Unknown",
            ],
            [
                   "Unknown",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCGimbalMappingStyle_Unknown_inline",
                   "",
            ],
            [
                   "GimbalStickMappingTarget",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalStickMappingTarget_inline",
                   "The list of available control to be used when creating custom mapping configurations",
            ],
            [
                   "The list of available control to be used when creating custom mapping configurations",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalStickMappingTarget_inline",
                   "",
            ],
            [
                   "NONE",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalStickMappingTarget_None_inline",
                   "None",
            ],
            [
                   "None",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalStickMappingTarget_None_inline",
                   "",
            ],
            [
                   "PITCH",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalStickMappingTarget_Pitch_inline",
                   "Pitch",
            ],
            [
                   "Pitch",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalStickMappingTarget_Pitch_inline",
                   "",
            ],
            [
                   "ROLL",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalStickMappingTarget_Roll_inline",
                   "Roll",
            ],
            [
                   "Roll",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalStickMappingTarget_Roll_inline",
                   "",
            ],
            [
                   "YAW",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalStickMappingTarget_Yaw_inline",
                   "Yaw",
            ],
            [
                   "Yaw",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalMapping.html",
                   "#DJIRemoteController_DJIRCGimbalStickMappingTarget_Yaw_inline",
                   "",
            ],
            [
                   "GimbalStickMapping",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalStickMapping.html",
                   "",
                   "A struct representing a custom mapping configuration.",
            ],
            [
                   "A struct representing a custom mapping configuration.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalStickMapping.html",
                   "",
                   "",
            ],
            [
                   "getMappingTarget",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalStickMapping.html",
                   "#DJIRemoteController_DJIRCGimbalStickMapping_target_inline",
                   "The specific control to be mapped.  @return The enum value of `GimbalStickMappingTarget`.",
            ],
            [
                   "The specific control to be mapped.  @return The enum value of `GimbalStickMappingTarget`.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalStickMapping.html",
                   "#DJIRemoteController_DJIRCGimbalStickMapping_target_inline",
                   "",
            ],
            [
                   "isReversed",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalStickMapping.html",
                   "#DJIRemoteController_DJIRCGimbalStickMapping_isReversed_inline",
                   "whether or not the control is to be reversed.  @return A boolean value.",
            ],
            [
                   "whether or not the control is to be reversed.  @return A boolean value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalStickMapping.html",
                   "#DJIRemoteController_DJIRCGimbalStickMapping_isReversed_inline",
                   "",
            ],
            [
                   "UNPAIRED",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCToAircraftPairingState_NotParing_inline",
                   "The Remote Controller is not pairing.",
            ],
            [
                   "The Remote Controller is not pairing.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCToAircraftPairingState_NotParing_inline",
                   "",
            ],
            [
                   "PAIRING",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCToAircraftPairingState_Paring_inline",
                   "The Remote Controller is currently pairing.",
            ],
            [
                   "The Remote Controller is currently pairing.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCToAircraftPairingState_Paring_inline",
                   "",
            ],
            [
                   "PAIRED",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCToAircraftPairingState_Completed_inline",
                   "The Remote Controller's pairing was completed.",
            ],
            [
                   "The Remote Controller's pairing was completed.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCToAircraftPairingState_Completed_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCToAircraftPairingState_Unknown_inline",
                   "The Remote Controller's pairing state is unknown.",
            ],
            [
                   "The Remote Controller's pairing state is unknown.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCToAircraftPairingState_Unknown_inline",
                   "",
            ],
            [
                   "PITCH",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCGimbalControlDirection_Pitch_inline",
                   "The upper left wheel will control the gimbal's pitch.",
            ],
            [
                   "The upper left wheel will control the gimbal's pitch.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCGimbalControlDirection_Pitch_inline",
                   "",
            ],
            [
                   "ROLL",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCGimbalControlDirection_Roll_inline",
                   "The upper left wheel will control the gimbal's roll.",
            ],
            [
                   "The upper left wheel will control the gimbal's roll.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCGimbalControlDirection_Roll_inline",
                   "",
            ],
            [
                   "YAW",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCGimbalControlDirection_Yaw_inline",
                   "The upper left wheel will control the gimbal's yaw.",
            ],
            [
                   "The upper left wheel will control the gimbal's yaw.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCGimbalControlDirection_Yaw_inline",
                   "",
            ],
            [
                   "getC1ButtonTag",
                   2,
                   "/Components/RemoteController/DJIRemoteController_RCCustomButtonTagParam.html",
                   "#DJIRemoteController_RCCustomButtonTagParam_tag1_inline",
                   "Button tag for custom button 2.  @return Value that is the tag",
            ],
            [
                   "Button tag for custom button 2.  @return Value that is the tag",
                   1,
                   "/Components/RemoteController/DJIRemoteController_RCCustomButtonTagParam.html",
                   "#DJIRemoteController_RCCustomButtonTagParam_tag1_inline",
                   "",
            ],
            [
                   "getC2ButtonTag",
                   2,
                   "/Components/RemoteController/DJIRemoteController_RCCustomButtonTagParam.html",
                   "#DJIRemoteController_RCCustomButtonTagParam_tag2_inline",
                   "Button tag for custom button 2  @return Value that is the tag",
            ],
            [
                   "Button tag for custom button 2  @return Value that is the tag",
                   1,
                   "/Components/RemoteController/DJIRemoteController_RCCustomButtonTagParam.html",
                   "#DJIRemoteController_RCCustomButtonTagParam_tag2_inline",
                   "",
            ],
            [
                   "Builder",
                   2,
                   "/Components/RemoteController/DJIRemoteController_RCCustomButtonTagParam_Constructor.html",
                   "",
                   "Create a `CustomButtonTags` instance with  values for C1 and C2. A valid tag is an integer in range [0, 255].",
            ],
            [
                   "Create a `CustomButtonTags` instance with  values for C1 and C2. A valid tag is an integer in range [0, 255].",
                   1,
                   "/Components/RemoteController/DJIRemoteController_RCCustomButtonTagParam_Constructor.html",
                   "",
                   "",
            ],
            [
                   "c1ButtonTag",
                   2,
                   "/Components/RemoteController/DJIRemoteController_RCCustomButtonTagParam_Constructor.html",
                   "#DJIRemoteController_RCCustomButtonTagParam_Constructor_c1_inline",
                   "Button tag for custom button 2  @param c1ButtonTag Button tag for custom button 1  @return Builder object.",
            ],
            [
                   "Button tag for custom button 2  @param c1ButtonTag Button tag for custom button 1  @return Builder object.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_RCCustomButtonTagParam_Constructor.html",
                   "#DJIRemoteController_RCCustomButtonTagParam_Constructor_c1_inline",
                   "",
            ],
            [
                   "c2ButtonTag",
                   2,
                   "/Components/RemoteController/DJIRemoteController_RCCustomButtonTagParam_Constructor.html",
                   "#DJIRemoteController_RCCustomButtonTagParam_Constructor_c2_inline",
                   "Button tag for custom button 2  @param c2ButtonTag Button tag for custom button 2  @return Builder object.",
            ],
            [
                   "Button tag for custom button 2  @param c2ButtonTag Button tag for custom button 2  @return Builder object.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_RCCustomButtonTagParam_Constructor.html",
                   "#DJIRemoteController_RCCustomButtonTagParam_Constructor_c2_inline",
                   "",
            ],
            [
                   "build",
                   2,
                   "/Components/RemoteController/DJIRemoteController_RCCustomButtonTagParam_Constructor.html",
                   "#DJIRemoteController_RCCustomButtonTagParam_Constructor_build_inline",
                   "Button tag for custom button  @return `CustomButtonTags` object.",
            ],
            [
                   "Button tag for custom button  @return `CustomButtonTags` object.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_RCCustomButtonTagParam_Constructor.html",
                   "#DJIRemoteController_RCCustomButtonTagParam_Constructor_build_inline",
                   "",
            ],
            [
                   "NEVER",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerChargeMobileMode_Never_inline",
                   "The remote controller does not charge the mobile device.",
            ],
            [
                   "The remote controller does not charge the mobile device.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerChargeMobileMode_Never_inline",
                   "",
            ],
            [
                   "ALWAYS",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerChargeMobileMode_Always_inline",
                   "The remote controller charges the mobile device until the the mobile device is fully charged.",
            ],
            [
                   "The remote controller charges the mobile device until the the mobile device is fully charged.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerChargeMobileMode_Always_inline",
                   "",
            ],
            [
                   "INTELLIGENT",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerChargeMobileMode_Intelligent_inline",
                   "The remote controller charges the mobile device in an intelligent mode: The remote controller starts charging  when the mobile device's battery is lowered then 20% and stops charging when the mobile device's battery is above 50%.",
            ],
            [
                   "The remote controller charges the mobile device in an intelligent mode: The remote controller starts charging  when the mobile device's battery is lowered then 20% and stops charging when the mobile device's battery is above 50%.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerChargeMobileMode_Intelligent_inline",
                   "",
            ],
            [
                   "Unknown",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerChargeMobileMode_Unknown_inline",
                   "The Remote Controller's charging mode is unknown.",
            ],
            [
                   "The Remote Controller's charging mode is unknown.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerChargeMobileMode_Unknown_inline",
                   "",
            ],
            [
                   "MASTER",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerMode_Master_inline",
                   "Remote Controller is a master (will route a connected slave Remote  Controller's commands to the aircraft).",
            ],
            [
                   "Remote Controller is a master (will route a connected slave Remote  Controller's commands to the aircraft).",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerMode_Master_inline",
                   "",
            ],
            [
                   "SLAVE",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerMode_Slave_inline",
                   "Remote Controller is currently a slave Remote Controller (sends commands to aircraft through a master Remote Controller).",
            ],
            [
                   "Remote Controller is currently a slave Remote Controller (sends commands to aircraft through a master Remote Controller).",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerMode_Slave_inline",
                   "",
            ],
            [
                   "NORMAL",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerMode_Normal_inline",
                   "Remote Controller is not connected to another Remote Controller.",
            ],
            [
                   "Remote Controller is not connected to another Remote Controller.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerMode_Normal_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerMode_Unknown_inline",
                   "The Remote Controller's mode is unknown.",
            ],
            [
                   "The Remote Controller's mode is unknown.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRemoteControllerMode_Unknown_inline",
                   "",
            ],
            [
                   "ACCEPTED",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCJoinMasterResult_Successful_inline",
                   "The slave Remote Controller's attempt to join the master Remote Controller was successful.",
            ],
            [
                   "The slave Remote Controller's attempt to join the master Remote Controller was successful.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCJoinMasterResult_Successful_inline",
                   "",
            ],
            [
                   "PASSWORD_ERROR",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCJoinMasterResult_PasswordError_inline",
                   "The slave Remote Controller's attempt to join the master Remote Controller was unsuccessful due to a password error.",
            ],
            [
                   "The slave Remote Controller's attempt to join the master Remote Controller was unsuccessful due to a password error.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCJoinMasterResult_PasswordError_inline",
                   "",
            ],
            [
                   "REJECTED",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCJoinMasterResult_Rejected_inline",
                   "The slave Remote Controller's attempt to join the master Remote Controller was rejected.",
            ],
            [
                   "The slave Remote Controller's attempt to join the master Remote Controller was rejected.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCJoinMasterResult_Rejected_inline",
                   "",
            ],
            [
                   "MAXIMUM_CAPACITY",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCJoinMasterResult_ReachMaximum_inline",
                   "The slave Remote Controller's attempt to join the master Remote Controller was unsuccessful because the master  Remote Controller is at the maximum number of slaves it can have.",
            ],
            [
                   "The slave Remote Controller's attempt to join the master Remote Controller was unsuccessful because the master  Remote Controller is at the maximum number of slaves it can have.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCJoinMasterResult_ReachMaximum_inline",
                   "",
            ],
            [
                   "TIMEOUT",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCJoinMasterResult_Timeout_inline",
                   "The slave Remote Controller's attempt to join the master Remote Controller was unsuccessful because the request timed out.",
            ],
            [
                   "The slave Remote Controller's attempt to join the master Remote Controller was unsuccessful because the request timed out.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCJoinMasterResult_Timeout_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCJoinMasterResult_Unknown_inline",
                   "The result of the slave Remote Controller's attempt to join the master Remote Controller is unknown.",
            ],
            [
                   "The result of the slave Remote Controller's attempt to join the master Remote Controller is unknown.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCJoinMasterResult_Unknown_inline",
                   "",
            ],
            [
                   "getPitchSpeedCoefficient",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalControlSpeed.html",
                   "#DJIRemoteController_DJIRCGimbalControlSpeed_pitchSpeed_inline",
                   "Gimbal's pitch speed with range [0, 100].  @return An int value.",
            ],
            [
                   "Gimbal's pitch speed with range [0, 100].  @return An int value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalControlSpeed.html",
                   "#DJIRemoteController_DJIRCGimbalControlSpeed_pitchSpeed_inline",
                   "",
            ],
            [
                   "getRollSpeedCoefficient",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalControlSpeed.html",
                   "#DJIRemoteController_DJIRCGimbalControlSpeed_rollSpeed_inline",
                   "Gimbal's roll speed with range [0, 100].  @return An int value.",
            ],
            [
                   "Gimbal's roll speed with range [0, 100].  @return An int value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalControlSpeed.html",
                   "#DJIRemoteController_DJIRCGimbalControlSpeed_rollSpeed_inline",
                   "",
            ],
            [
                   "getYawSpeedCoefficient",
                   2,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalControlSpeed.html",
                   "#DJIRemoteController_DJIRCGimbalControlSpeed_yawSpeed_inline",
                   "Gimbal's yaw speed with range [0, 100].  @return An int value.",
            ],
            [
                   "Gimbal's yaw speed with range [0, 100].  @return An int value.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_DJIRCGimbalControlSpeed.html",
                   "#DJIRemoteController_DJIRCGimbalControlSpeed_yawSpeed_inline",
                   "",
            ],
            [
                   "ACCEPTED",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCRequestGimbalControlResult_Agree_inline",
                   "The master Remote Controller agrees to the slave's request.",
            ],
            [
                   "The master Remote Controller agrees to the slave's request.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCRequestGimbalControlResult_Agree_inline",
                   "",
            ],
            [
                   "REJECTED",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCRequestGimbalControlResult_Deny_inline",
                   "The master Remote Controller denies the slave's request. If the slave Remote Controller wants to control the gimbal, it must send a request to the master Remote Controller first. Then the master Remote Controller can decide to approve or deny the request.",
            ],
            [
                   "The master Remote Controller denies the slave's request. If the slave Remote Controller wants to control the gimbal, it must send a request to the master Remote Controller first. Then the master Remote Controller can decide to approve or deny the request.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCRequestGimbalControlResult_Deny_inline",
                   "",
            ],
            [
                   "TIMEOUT",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCRequestGimbalControlResult_Timeout_inline",
                   "The slave Remote Controller's request timed out.",
            ],
            [
                   "The slave Remote Controller's request timed out.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCRequestGimbalControlResult_Timeout_inline",
                   "",
            ],
            [
                   "UNKNOWN",
                   2,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCRequestGimbalControlResult_Unknown_inline",
                   "The slave Remote Controller's request is unknown.",
            ],
            [
                   "The slave Remote Controller's request is unknown.",
                   1,
                   "/Components/RemoteController/DJIRemoteController.html",
                   "#DJIRemoteController_DJIRCRequestGimbalControlResult_Unknown_inline",
                   "",
            ],
            [
                   "ResponseForGimbalControl",
                   2,
                   "/Components/RemoteController/DJIRemoteController_ResponseForGimbalControl.html",
                   "#DJIRemoteController_ResponseForGimbalControl_Constructor_inline",
                   "Constructor of the class.  @param requesterId Slave Remote Controller's identifier. @param isAgree true</code> if the master Remote Controller agrees to give the slave Remote Controller the right to control the gimbal.",
            ],
            [
                   "Constructor of the class.  @param requesterId Slave Remote Controller's identifier. @param isAgree true</code> if the master Remote Controller agrees to give the slave Remote Controller the right to control the gimbal.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_ResponseForGimbalControl.html",
                   "#DJIRemoteController_ResponseForGimbalControl_Constructor_inline",
                   "",
            ],
            [
                   "getRequesterId",
                   2,
                   "/Components/RemoteController/DJIRemoteController_ResponseForGimbalControl.html",
                   "#DJIRemoteController_ResponseForGimbalControl_getRequesterId_inline",
                   "Get the slave Remote Controller's identifier.  @return The int value of the slave Remote Controller ID.",
            ],
            [
                   "Get the slave Remote Controller's identifier.  @return The int value of the slave Remote Controller ID.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_ResponseForGimbalControl.html",
                   "#DJIRemoteController_ResponseForGimbalControl_getRequesterId_inline",
                   "",
            ],
            [
                   "isAgree",
                   2,
                   "/Components/RemoteController/DJIRemoteController_ResponseForGimbalControl.html",
                   "#DJIRemoteController_ResponseForGimbalControl_isAgree_inline",
                   "true</code> if the master Remote Controller agrees to give the slave Remote Controller the right to control the gimbal.  @return Agree or disagree to control the gimbal.",
            ],
            [
                   "true</code> if the master Remote Controller agrees to give the slave Remote Controller the right to control the gimbal.  @return Agree or disagree to control the gimbal.",
                   1,
                   "/Components/RemoteController/DJIRemoteController_ResponseForGimbalControl.html",
                   "#DJIRemoteController_ResponseForGimbalControl_isAgree_inline",
                   "",
            ],
            [
                   "CompletionCallback",
                   2,
                   "/Utils/DJICommonCallbacks.html",
                   "#DJICommonCallbacks_CompletionCallback_Interface_inline",
                   "Completion callback for asynchronous operations when no information needs to be returned from the operation.",
            ],
            [
                   "Completion callback for asynchronous operations when no information needs to be returned from the operation.",
                   1,
                   "/Utils/DJICommonCallbacks.html",
                   "#DJICommonCallbacks_CompletionCallback_Interface_inline",
                   "",
            ],
            [
                   "onResult",
                   2,
                   "/Utils/DJICommonCallbacks.html",
                   "#DJICommonCallbacks_CompletionCallback_Interface_onResult_inline",
                   "Invoked when the asynchronous operation completes. If the operation  completes successfully, `error` will be `null`. Override to handle in your own code.  @param error The DJI error result",
            ],
            [
                   "Invoked when the asynchronous operation completes. If the operation  completes successfully, `error` will be `null`. Override to handle in your own code.  @param error The DJI error result",
                   1,
                   "/Utils/DJICommonCallbacks.html",
                   "#DJICommonCallbacks_CompletionCallback_Interface_onResult_inline",
                   "",
            ],
            [
                   "CompletionCallbackWith",
                   2,
                   "/Utils/DJICommonCallbacks.html",
                   "#DJICommonCallbacks_CompletionCallbackWith_Interface_inline",
                   "Completion callback for asynchronous operations when information that requires one parameter (T) needs to be returned from the operation. The parameter T will be defined where the operation called.",
            ],
            [
                   "Completion callback for asynchronous operations when information that requires one parameter (T) needs to be returned from the operation. The parameter T will be defined where the operation called.",
                   1,
                   "/Utils/DJICommonCallbacks.html",
                   "#DJICommonCallbacks_CompletionCallbackWith_Interface_inline",
                   "",
            ],
            [
                   "onSuccess",
                   2,
                   "/Utils/DJICommonCallbacks.html",
                   "#DJICommonCallbacks_CompletionCallbackWith_Interface_onSuccess_inline",
                   "Invoked when the asynchronous operation completes successfully. Override to handle in your own code.  @param t The parameter being returned.",
            ],
            [
                   "Invoked when the asynchronous operation completes successfully. Override to handle in your own code.  @param t The parameter being returned.",
                   1,
                   "/Utils/DJICommonCallbacks.html",
                   "#DJICommonCallbacks_CompletionCallbackWith_Interface_onSuccess_inline",
                   "",
            ],
            [
                   "onFailure",
                   2,
                   "/Utils/DJICommonCallbacks.html",
                   "#DJICommonCallbacks_CompletionCallbackWith_Interface_onFailure_inline",
                   "Invoked when the asynchronous operation fails to complete normally. Override to handle in your own code.  @param error The DJI error result",
            ],
            [
                   "Invoked when the asynchronous operation fails to complete normally. Override to handle in your own code.  @param error The DJI error result",
                   1,
                   "/Utils/DJICommonCallbacks.html",
                   "#DJICommonCallbacks_CompletionCallbackWith_Interface_onFailure_inline",
                   "",
            ],
            [
                   "CompletionCallbackWithTwoParam",
                   2,
                   "/Utils/DJICommonCallbacks.html",
                   "#DJICommonCallbacks_CompletionCallbackWithTwoParam_Interface_inline",
                   "Completion callback for asynchronous operations when information that requires two parameters (X, Y) needs to be returned from the  operation. The parameters X and Y will be defined where the operation is called.",
            ],
            [
                   "Completion callback for asynchronous operations when information that requires two parameters (X, Y) needs to be returned from the  operation. The parameters X and Y will be defined where the operation is called.",
                   1,
                   "/Utils/DJICommonCallbacks.html",
                   "#DJICommonCallbacks_CompletionCallbackWithTwoParam_Interface_inline",
                   "",
            ],
            [
                   "onSuccess",
                   2,
                   "/Utils/DJICommonCallbacks.html",
                   "#DJICommonCallbacks_CompletionCallbackWithTwoParam_Interface_onSuccess_inline",
                   "Invoked when the asynchronous operation completes successfully. Override to handle in your own code.  @param x The first parameter being returned. @param y The second parameter being returned.",
            ],
            [
                   "Invoked when the asynchronous operation completes successfully. Override to handle in your own code.  @param x The first parameter being returned. @param y The second parameter being returned.",
                   1,
                   "/Utils/DJICommonCallbacks.html",
                   "#DJICommonCallbacks_CompletionCallbackWithTwoParam_Interface_onSuccess_inline",
                   "",
            ],
            [
                   "onFailure",
                   2,
                   "/Utils/DJICommonCallbacks.html",
                   "#DJICommonCallbacks_CompletionCallbackWithTwoParam_Interface_onFailure_inline",
                   "Invoked when the asynchronous operation fails to complete normally. Override to handle in your own code.  @param error The DJI error result",
            ],
            [
                   "Invoked when the asynchronous operation fails to complete normally. Override to handle in your own code.  @param error The DJI error result",
                   1,
                   "/Utils/DJICommonCallbacks.html",
                   "#DJICommonCallbacks_CompletionCallbackWithTwoParam_Interface_onFailure_inline",
                   "",
            ],
        ]
    }
}
